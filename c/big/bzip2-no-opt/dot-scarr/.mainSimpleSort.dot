digraph "CFG for 'mainSimpleSort' function" {
	label="CFG for 'mainSimpleSort' function";

	Node0x558afc33ae40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{entry:\l  %ptr.addr = alloca i32*, align 8\l  %block.addr = alloca i8*, align 8\l  %quadrant.addr = alloca i16*, align 8\l  %nblock.addr = alloca i32, align 4\l  %lo.addr = alloca i32, align 4\l  %hi.addr = alloca i32, align 4\l  %d.addr = alloca i32, align 4\l  %budget.addr = alloca i32*, align 8\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %h = alloca i32, align 4\l  %bigN = alloca i32, align 4\l  %hp = alloca i32, align 4\l  %v = alloca i32, align 4\l  store i32* %ptr, i32** %ptr.addr, align 8\l  store i8* %block, i8** %block.addr, align 8\l  store i16* %quadrant, i16** %quadrant.addr, align 8\l  store i32 %nblock, i32* %nblock.addr, align 4\l  store i32 %lo, i32* %lo.addr, align 4\l  store i32 %hi, i32* %hi.addr, align 4\l  store i32 %d, i32* %d.addr, align 4\l  store i32* %budget, i32** %budget.addr, align 8\l  %0 = load i32, i32* %hi.addr, align 4\l  %1 = load i32, i32* %lo.addr, align 4\l  %sub = sub nsw i32 %0, %1\l  %add = add nsw i32 %sub, 1\l  store i32 %add, i32* %bigN, align 4\l  %2 = load i32, i32* %bigN, align 4\l  %cmp = icmp slt i32 %2, 2\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x558afc33ae40:s0 -> Node0x558afc34a5c0;
	Node0x558afc33ae40:s1 -> Node0x558afc34b500;
	Node0x558afc34a5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{if.then:                                          \l  br label %for.end\l}"];
	Node0x558afc34a5c0 -> Node0x558afc34b620;
	Node0x558afc34b500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{if.end:                                           \l  store i32 0, i32* %hp, align 4\l  br label %while.cond\l}"];
	Node0x558afc34b500 -> Node0x558afc34b790;
	Node0x558afc34b790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{while.cond:                                       \l  %3 = load i32, i32* %hp, align 4\l  %idxprom = sext i32 %3 to i64\l  %arrayidx = getelementptr inbounds [14 x i32], [14 x i32]* @incs, i64 0, i64\l... %idxprom\l  %4 = load i32, i32* %arrayidx, align 4\l  %5 = load i32, i32* %bigN, align 4\l  %cmp1 = icmp slt i32 %4, %5\l  br i1 %cmp1, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x558afc34b790:s0 -> Node0x558afc34bc50;
	Node0x558afc34b790:s1 -> Node0x558afc34bca0;
	Node0x558afc34bc50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{while.body:                                       \l  %6 = load i32, i32* %hp, align 4\l  %inc = add nsw i32 %6, 1\l  store i32 %inc, i32* %hp, align 4\l  br label %while.cond\l}"];
	Node0x558afc34bc50 -> Node0x558afc34b790;
	Node0x558afc34bca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{while.end:                                        \l  %7 = load i32, i32* %hp, align 4\l  %dec = add nsw i32 %7, -1\l  store i32 %dec, i32* %hp, align 4\l  br label %for.cond\l}"];
	Node0x558afc34bca0 -> Node0x558afc34c1a0;
	Node0x558afc34c1a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.cond:                                         \l  %8 = load i32, i32* %hp, align 4\l  %cmp2 = icmp sge i32 %8, 0\l  br i1 %cmp2, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x558afc34c1a0:s0 -> Node0x558afc34bae0;
	Node0x558afc34c1a0:s1 -> Node0x558afc34b620;
	Node0x558afc34bae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{for.body:                                         \l  %9 = load i32, i32* %hp, align 4\l  %idxprom3 = sext i32 %9 to i64\l  %arrayidx4 = getelementptr inbounds [14 x i32], [14 x i32]* @incs, i64 0,\l... i64 %idxprom3\l  %10 = load i32, i32* %arrayidx4, align 4\l  store i32 %10, i32* %h, align 4\l  %11 = load i32, i32* %lo.addr, align 4\l  %12 = load i32, i32* %h, align 4\l  %add5 = add nsw i32 %11, %12\l  store i32 %add5, i32* %i, align 4\l  br label %while.body7\l}"];
	Node0x558afc34bae0 -> Node0x558afc34ca40;
	Node0x558afc34ca40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{while.body7:                                      \l  %13 = load i32, i32* %i, align 4\l  %14 = load i32, i32* %hi.addr, align 4\l  %cmp8 = icmp sgt i32 %13, %14\l  br i1 %cmp8, label %if.then9, label %if.end10\l|{<s0>T|<s1>F}}"];
	Node0x558afc34ca40:s0 -> Node0x558afc34ccc0;
	Node0x558afc34ca40:s1 -> Node0x558afc34cd40;
	Node0x558afc34ccc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{if.then9:                                         \l  br label %while.end96\l}"];
	Node0x558afc34ccc0 -> Node0x558afc34ce70;
	Node0x558afc34cd40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{if.end10:                                         \l  %15 = load i32*, i32** %ptr.addr, align 8\l  %16 = load i32, i32* %i, align 4\l  %idxprom11 = sext i32 %16 to i64\l  %arrayidx12 = getelementptr inbounds i32, i32* %15, i64 %idxprom11\l  %17 = load i32, i32* %arrayidx12, align 4\l  store i32 %17, i32* %v, align 4\l  %18 = load i32, i32* %i, align 4\l  store i32 %18, i32* %j, align 4\l  br label %while.cond13\l}"];
	Node0x558afc34cd40 -> Node0x558afc34b390;
	Node0x558afc34b390 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.cond13:                                     \l  %19 = load i32*, i32** %ptr.addr, align 8\l  %20 = load i32, i32* %j, align 4\l  %21 = load i32, i32* %h, align 4\l  %sub14 = sub nsw i32 %20, %21\l  %idxprom15 = sext i32 %sub14 to i64\l  %arrayidx16 = getelementptr inbounds i32, i32* %19, i64 %idxprom15\l  %22 = load i32, i32* %arrayidx16, align 4\l  %23 = load i32, i32* %d.addr, align 4\l  %add17 = add i32 %22, %23\l  %24 = load i32, i32* %v, align 4\l  %25 = load i32, i32* %d.addr, align 4\l  %add18 = add i32 %24, %25\l  %26 = load i8*, i8** %block.addr, align 8\l  %27 = load i16*, i16** %quadrant.addr, align 8\l  %28 = load i32, i32* %nblock.addr, align 4\l  %29 = load i32*, i32** %budget.addr, align 8\l  %call = call zeroext i8 @mainGtU(i32 %add17, i32 %add18, i8* %26, i16* %27,\l... i32 %28, i32* %29)\l  %tobool = icmp ne i8 %call, 0\l  br i1 %tobool, label %while.body19, label %while.end31\l|{<s0>T|<s1>F}}"];
	Node0x558afc34b390:s0 -> Node0x558afbf2e010;
	Node0x558afc34b390:s1 -> Node0x558afbf2e090;
	Node0x558afbf2e010 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.body19:                                     \l  %30 = load i32*, i32** %ptr.addr, align 8\l  %31 = load i32, i32* %j, align 4\l  %32 = load i32, i32* %h, align 4\l  %sub20 = sub nsw i32 %31, %32\l  %idxprom21 = sext i32 %sub20 to i64\l  %arrayidx22 = getelementptr inbounds i32, i32* %30, i64 %idxprom21\l  %33 = load i32, i32* %arrayidx22, align 4\l  %34 = load i32*, i32** %ptr.addr, align 8\l  %35 = load i32, i32* %j, align 4\l  %idxprom23 = sext i32 %35 to i64\l  %arrayidx24 = getelementptr inbounds i32, i32* %34, i64 %idxprom23\l  store i32 %33, i32* %arrayidx24, align 4\l  %36 = load i32, i32* %j, align 4\l  %37 = load i32, i32* %h, align 4\l  %sub25 = sub nsw i32 %36, %37\l  store i32 %sub25, i32* %j, align 4\l  %38 = load i32, i32* %j, align 4\l  %39 = load i32, i32* %lo.addr, align 4\l  %40 = load i32, i32* %h, align 4\l  %add26 = add nsw i32 %39, %40\l  %sub27 = sub nsw i32 %add26, 1\l  %cmp28 = icmp sle i32 %38, %sub27\l  br i1 %cmp28, label %if.then29, label %if.end30\l|{<s0>T|<s1>F}}"];
	Node0x558afbf2e010:s0 -> Node0x558afc350110;
	Node0x558afbf2e010:s1 -> Node0x558afc350190;
	Node0x558afc350110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{if.then29:                                        \l  br label %while.end31\l}"];
	Node0x558afc350110 -> Node0x558afbf2e090;
	Node0x558afc350190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{if.end30:                                         \l  br label %while.cond13\l}"];
	Node0x558afc350190 -> Node0x558afc34b390;
	Node0x558afbf2e090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{while.end31:                                      \l  %41 = load i32, i32* %v, align 4\l  %42 = load i32*, i32** %ptr.addr, align 8\l  %43 = load i32, i32* %j, align 4\l  %idxprom32 = sext i32 %43 to i64\l  %arrayidx33 = getelementptr inbounds i32, i32* %42, i64 %idxprom32\l  store i32 %41, i32* %arrayidx33, align 4\l  %44 = load i32, i32* %i, align 4\l  %inc34 = add nsw i32 %44, 1\l  store i32 %inc34, i32* %i, align 4\l  %45 = load i32, i32* %i, align 4\l  %46 = load i32, i32* %hi.addr, align 4\l  %cmp35 = icmp sgt i32 %45, %46\l  br i1 %cmp35, label %if.then36, label %if.end37\l|{<s0>T|<s1>F}}"];
	Node0x558afbf2e090:s0 -> Node0x558afc350a90;
	Node0x558afbf2e090:s1 -> Node0x558afc350b10;
	Node0x558afc350a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{if.then36:                                        \l  br label %while.end96\l}"];
	Node0x558afc350a90 -> Node0x558afc34ce70;
	Node0x558afc350b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{if.end37:                                         \l  %47 = load i32*, i32** %ptr.addr, align 8\l  %48 = load i32, i32* %i, align 4\l  %idxprom38 = sext i32 %48 to i64\l  %arrayidx39 = getelementptr inbounds i32, i32* %47, i64 %idxprom38\l  %49 = load i32, i32* %arrayidx39, align 4\l  store i32 %49, i32* %v, align 4\l  %50 = load i32, i32* %i, align 4\l  store i32 %50, i32* %j, align 4\l  br label %while.cond40\l}"];
	Node0x558afc350b10 -> Node0x558afc351100;
	Node0x558afc351100 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.cond40:                                     \l  %51 = load i32*, i32** %ptr.addr, align 8\l  %52 = load i32, i32* %j, align 4\l  %53 = load i32, i32* %h, align 4\l  %sub41 = sub nsw i32 %52, %53\l  %idxprom42 = sext i32 %sub41 to i64\l  %arrayidx43 = getelementptr inbounds i32, i32* %51, i64 %idxprom42\l  %54 = load i32, i32* %arrayidx43, align 4\l  %55 = load i32, i32* %d.addr, align 4\l  %add44 = add i32 %54, %55\l  %56 = load i32, i32* %v, align 4\l  %57 = load i32, i32* %d.addr, align 4\l  %add45 = add i32 %56, %57\l  %58 = load i8*, i8** %block.addr, align 8\l  %59 = load i16*, i16** %quadrant.addr, align 8\l  %60 = load i32, i32* %nblock.addr, align 4\l  %61 = load i32*, i32** %budget.addr, align 8\l  %call46 = call zeroext i8 @mainGtU(i32 %add44, i32 %add45, i8* %58, i16*\l... %59, i32 %60, i32* %61)\l  %tobool47 = icmp ne i8 %call46, 0\l  br i1 %tobool47, label %while.body48, label %while.end60\l|{<s0>T|<s1>F}}"];
	Node0x558afc351100:s0 -> Node0x558afc351cd0;
	Node0x558afc351100:s1 -> Node0x558afc351d50;
	Node0x558afc351cd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{while.body48:                                     \l  %62 = load i32*, i32** %ptr.addr, align 8\l  %63 = load i32, i32* %j, align 4\l  %64 = load i32, i32* %h, align 4\l  %sub49 = sub nsw i32 %63, %64\l  %idxprom50 = sext i32 %sub49 to i64\l  %arrayidx51 = getelementptr inbounds i32, i32* %62, i64 %idxprom50\l  %65 = load i32, i32* %arrayidx51, align 4\l  %66 = load i32*, i32** %ptr.addr, align 8\l  %67 = load i32, i32* %j, align 4\l  %idxprom52 = sext i32 %67 to i64\l  %arrayidx53 = getelementptr inbounds i32, i32* %66, i64 %idxprom52\l  store i32 %65, i32* %arrayidx53, align 4\l  %68 = load i32, i32* %j, align 4\l  %69 = load i32, i32* %h, align 4\l  %sub54 = sub nsw i32 %68, %69\l  store i32 %sub54, i32* %j, align 4\l  %70 = load i32, i32* %j, align 4\l  %71 = load i32, i32* %lo.addr, align 4\l  %72 = load i32, i32* %h, align 4\l  %add55 = add nsw i32 %71, %72\l  %sub56 = sub nsw i32 %add55, 1\l  %cmp57 = icmp sle i32 %70, %sub56\l  br i1 %cmp57, label %if.then58, label %if.end59\l|{<s0>T|<s1>F}}"];
	Node0x558afc351cd0:s0 -> Node0x558afc34d190;
	Node0x558afc351cd0:s1 -> Node0x558afc34d210;
	Node0x558afc34d190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{if.then58:                                        \l  br label %while.end60\l}"];
	Node0x558afc34d190 -> Node0x558afc351d50;
	Node0x558afc34d210 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{if.end59:                                         \l  br label %while.cond40\l}"];
	Node0x558afc34d210 -> Node0x558afc351100;
	Node0x558afc351d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{while.end60:                                      \l  %73 = load i32, i32* %v, align 4\l  %74 = load i32*, i32** %ptr.addr, align 8\l  %75 = load i32, i32* %j, align 4\l  %idxprom61 = sext i32 %75 to i64\l  %arrayidx62 = getelementptr inbounds i32, i32* %74, i64 %idxprom61\l  store i32 %73, i32* %arrayidx62, align 4\l  %76 = load i32, i32* %i, align 4\l  %inc63 = add nsw i32 %76, 1\l  store i32 %inc63, i32* %i, align 4\l  %77 = load i32, i32* %i, align 4\l  %78 = load i32, i32* %hi.addr, align 4\l  %cmp64 = icmp sgt i32 %77, %78\l  br i1 %cmp64, label %if.then65, label %if.end66\l|{<s0>T|<s1>F}}"];
	Node0x558afc351d50:s0 -> Node0x558afc3539c0;
	Node0x558afc351d50:s1 -> Node0x558afc353a40;
	Node0x558afc3539c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{if.then65:                                        \l  br label %while.end96\l}"];
	Node0x558afc3539c0 -> Node0x558afc34ce70;
	Node0x558afc353a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{if.end66:                                         \l  %79 = load i32*, i32** %ptr.addr, align 8\l  %80 = load i32, i32* %i, align 4\l  %idxprom67 = sext i32 %80 to i64\l  %arrayidx68 = getelementptr inbounds i32, i32* %79, i64 %idxprom67\l  %81 = load i32, i32* %arrayidx68, align 4\l  store i32 %81, i32* %v, align 4\l  %82 = load i32, i32* %i, align 4\l  store i32 %82, i32* %j, align 4\l  br label %while.cond69\l}"];
	Node0x558afc353a40 -> Node0x558afc354030;
	Node0x558afc354030 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{while.cond69:                                     \l  %83 = load i32*, i32** %ptr.addr, align 8\l  %84 = load i32, i32* %j, align 4\l  %85 = load i32, i32* %h, align 4\l  %sub70 = sub nsw i32 %84, %85\l  %idxprom71 = sext i32 %sub70 to i64\l  %arrayidx72 = getelementptr inbounds i32, i32* %83, i64 %idxprom71\l  %86 = load i32, i32* %arrayidx72, align 4\l  %87 = load i32, i32* %d.addr, align 4\l  %add73 = add i32 %86, %87\l  %88 = load i32, i32* %v, align 4\l  %89 = load i32, i32* %d.addr, align 4\l  %add74 = add i32 %88, %89\l  %90 = load i8*, i8** %block.addr, align 8\l  %91 = load i16*, i16** %quadrant.addr, align 8\l  %92 = load i32, i32* %nblock.addr, align 4\l  %93 = load i32*, i32** %budget.addr, align 8\l  %call75 = call zeroext i8 @mainGtU(i32 %add73, i32 %add74, i8* %90, i16*\l... %91, i32 %92, i32* %93)\l  %tobool76 = icmp ne i8 %call75, 0\l  br i1 %tobool76, label %while.body77, label %while.end89\l|{<s0>T|<s1>F}}"];
	Node0x558afc354030:s0 -> Node0x558afc354c00;
	Node0x558afc354030:s1 -> Node0x558afc354c80;
	Node0x558afc354c00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{while.body77:                                     \l  %94 = load i32*, i32** %ptr.addr, align 8\l  %95 = load i32, i32* %j, align 4\l  %96 = load i32, i32* %h, align 4\l  %sub78 = sub nsw i32 %95, %96\l  %idxprom79 = sext i32 %sub78 to i64\l  %arrayidx80 = getelementptr inbounds i32, i32* %94, i64 %idxprom79\l  %97 = load i32, i32* %arrayidx80, align 4\l  %98 = load i32*, i32** %ptr.addr, align 8\l  %99 = load i32, i32* %j, align 4\l  %idxprom81 = sext i32 %99 to i64\l  %arrayidx82 = getelementptr inbounds i32, i32* %98, i64 %idxprom81\l  store i32 %97, i32* %arrayidx82, align 4\l  %100 = load i32, i32* %j, align 4\l  %101 = load i32, i32* %h, align 4\l  %sub83 = sub nsw i32 %100, %101\l  store i32 %sub83, i32* %j, align 4\l  %102 = load i32, i32* %j, align 4\l  %103 = load i32, i32* %lo.addr, align 4\l  %104 = load i32, i32* %h, align 4\l  %add84 = add nsw i32 %103, %104\l  %sub85 = sub nsw i32 %add84, 1\l  %cmp86 = icmp sle i32 %102, %sub85\l  br i1 %cmp86, label %if.then87, label %if.end88\l|{<s0>T|<s1>F}}"];
	Node0x558afc354c00:s0 -> Node0x558afc3559d0;
	Node0x558afc354c00:s1 -> Node0x558afc355a50;
	Node0x558afc3559d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{if.then87:                                        \l  br label %while.end89\l}"];
	Node0x558afc3559d0 -> Node0x558afc354c80;
	Node0x558afc355a50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{if.end88:                                         \l  br label %while.cond69\l}"];
	Node0x558afc355a50 -> Node0x558afc354030;
	Node0x558afc354c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{while.end89:                                      \l  %105 = load i32, i32* %v, align 4\l  %106 = load i32*, i32** %ptr.addr, align 8\l  %107 = load i32, i32* %j, align 4\l  %idxprom90 = sext i32 %107 to i64\l  %arrayidx91 = getelementptr inbounds i32, i32* %106, i64 %idxprom90\l  store i32 %105, i32* %arrayidx91, align 4\l  %108 = load i32, i32* %i, align 4\l  %inc92 = add nsw i32 %108, 1\l  store i32 %inc92, i32* %i, align 4\l  %109 = load i32*, i32** %budget.addr, align 8\l  %110 = load i32, i32* %109, align 4\l  %cmp93 = icmp slt i32 %110, 0\l  br i1 %cmp93, label %if.then94, label %if.end95\l|{<s0>T|<s1>F}}"];
	Node0x558afc354c80:s0 -> Node0x558afc3562f0;
	Node0x558afc354c80:s1 -> Node0x558afc356370;
	Node0x558afc3562f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{if.then94:                                        \l  br label %for.end\l}"];
	Node0x558afc3562f0 -> Node0x558afc34b620;
	Node0x558afc356370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{if.end95:                                         \l  br label %while.body7\l}"];
	Node0x558afc356370 -> Node0x558afc34ca40;
	Node0x558afc34ce70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{while.end96:                                      \l  br label %for.inc\l}"];
	Node0x558afc34ce70 -> Node0x558afc356580;
	Node0x558afc356580 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{for.inc:                                          \l  %111 = load i32, i32* %hp, align 4\l  %dec97 = add nsw i32 %111, -1\l  store i32 %dec97, i32* %hp, align 4\l  br label %for.cond\l}"];
	Node0x558afc356580 -> Node0x558afc34c1a0;
	Node0x558afc34b620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{for.end:                                          \l  ret void\l}"];
}
