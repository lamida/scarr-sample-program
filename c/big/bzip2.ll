; ModuleID = 'bzip2.c'
source_filename = "bzip2.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.EState = type { %struct.bz_stream*, i32, i32, i32, i32*, i32*, i32*, i32, i32*, i8*, i16*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [258 x i32], [18002 x i8], [18002 x i8], [6 x [258 x i8]], [6 x [258 x i32]], [6 x [258 x i32]], [258 x [4 x i32]] }
%struct.bz_stream = type { i8*, i32, i32, i32, i8*, i32, i32, i32, i8*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8* }
%struct.DState = type { %struct.bz_stream*, i32, i8, i32, i8, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, [256 x i32], i32, [257 x i32], [257 x i32], i32*, i16*, i8*, i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [256 x i8], [4096 x i8], [16 x i32], [18002 x i8], [18002 x i8], [6 x [258 x i8]], [6 x [258 x i32]], [6 x [258 x i32]], [6 x [258 x i32]], [6 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32* }
%struct.bzFile = type { %struct._IO_FILE*, [5000 x i8], i32, i8, %struct.bz_stream, i32, i8 }
%struct.zzzz = type { i8*, %struct.zzzz* }
%struct.UInt64 = type { [8 x i8] }
%struct.utimbuf = type { i64, i64 }

@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [38 x i8] c"      %d work, %d block, ratio %5.2f\0A\00", align 1
@.str.1 = private unnamed_addr constant [54 x i8] c"    too repetitive; using fallback sorting algorithm\0A\00", align 1
@BZ2_crc32Table = dso_local global [256 x i32] [i32 0, i32 79764919, i32 159529838, i32 222504665, i32 319059676, i32 398814059, i32 445009330, i32 507990021, i32 638119352, i32 583659535, i32 797628118, i32 726387553, i32 890018660, i32 835552979, i32 1015980042, i32 944750013, i32 1276238704, i32 1221641927, i32 1167319070, i32 1095957929, i32 1595256236, i32 1540665371, i32 1452775106, i32 1381403509, i32 1780037320, i32 1859660671, i32 1671105958, i32 1733955601, i32 2031960084, i32 2111593891, i32 1889500026, i32 1952343757, i32 -1742489888, i32 -1662866601, i32 -1851683442, i32 -1788833735, i32 -1960329156, i32 -1880695413, i32 -2103051438, i32 -2040207643, i32 -1104454824, i32 -1159051537, i32 -1213636554, i32 -1284997759, i32 -1389417084, i32 -1444007885, i32 -1532160278, i32 -1603531939, i32 -734892656, i32 -789352409, i32 -575645954, i32 -646886583, i32 -952755380, i32 -1007220997, i32 -827056094, i32 -898286187, i32 -231047128, i32 -151282273, i32 -71779514, i32 -8804623, i32 -515967244, i32 -436212925, i32 -390279782, i32 -327299027, i32 881225847, i32 809987520, i32 1023691545, i32 969234094, i32 662832811, i32 591600412, i32 771767749, i32 717299826, i32 311336399, i32 374308984, i32 453813921, i32 533576470, i32 25881363, i32 88864420, i32 134795389, i32 214552010, i32 2023205639, i32 2086057648, i32 1897238633, i32 1976864222, i32 1804852699, i32 1867694188, i32 1645340341, i32 1724971778, i32 1587496639, i32 1516133128, i32 1461550545, i32 1406951526, i32 1302016099, i32 1230646740, i32 1142491917, i32 1087903418, i32 -1398421865, i32 -1469785312, i32 -1524105735, i32 -1578704818, i32 -1079922613, i32 -1151291908, i32 -1239184603, i32 -1293773166, i32 -1968362705, i32 -1905510760, i32 -2094067647, i32 -2014441994, i32 -1716953613, i32 -1654112188, i32 -1876203875, i32 -1796572374, i32 -525066777, i32 -462094256, i32 -382327159, i32 -302564546, i32 -206542021, i32 -143559028, i32 -97365931, i32 -17609246, i32 -960696225, i32 -1031934488, i32 -817968335, i32 -872425850, i32 -709327229, i32 -780559564, i32 -600130067, i32 -654598054, i32 1762451694, i32 1842216281, i32 1619975040, i32 1682949687, i32 2047383090, i32 2127137669, i32 1938468188, i32 2001449195, i32 1325665622, i32 1271206113, i32 1183200824, i32 1111960463, i32 1543535498, i32 1489069629, i32 1434599652, i32 1363369299, i32 622672798, i32 568075817, i32 748617968, i32 677256519, i32 907627842, i32 853037301, i32 1067152940, i32 995781531, i32 51762726, i32 131386257, i32 177728840, i32 240578815, i32 269590778, i32 349224269, i32 429104020, i32 491947555, i32 -248556018, i32 -168932423, i32 -122852000, i32 -60002089, i32 -500490030, i32 -420856475, i32 -341238852, i32 -278395381, i32 -685261898, i32 -739858943, i32 -559578920, i32 -630940305, i32 -1004286614, i32 -1058877219, i32 -845023740, i32 -916395085, i32 -1119974018, i32 -1174433591, i32 -1262701040, i32 -1333941337, i32 -1371866206, i32 -1426332139, i32 -1481064244, i32 -1552294533, i32 -1690935098, i32 -1611170447, i32 -1833673816, i32 -1770699233, i32 -2009983462, i32 -1930228819, i32 -2119160460, i32 -2056179517, i32 1569362073, i32 1498123566, i32 1409854455, i32 1355396672, i32 1317987909, i32 1246755826, i32 1192025387, i32 1137557660, i32 2072149281, i32 2135122070, i32 1912620623, i32 1992383480, i32 1753615357, i32 1816598090, i32 1627664531, i32 1707420964, i32 295390185, i32 358241886, i32 404320391, i32 483945776, i32 43990325, i32 106832002, i32 186451547, i32 266083308, i32 932423249, i32 861060070, i32 1041341759, i32 986742920, i32 613929101, i32 542559546, i32 756411363, i32 701822548, i32 -978770311, i32 -1050133554, i32 -869589737, i32 -924188512, i32 -693284699, i32 -764654318, i32 -550540341, i32 -605129092, i32 -475935807, i32 -413084042, i32 -366743377, i32 -287118056, i32 -257573603, i32 -194731862, i32 -114850189, i32 -35218492, i32 -1984365303, i32 -1921392450, i32 -2143631769, i32 -2063868976, i32 -1698919467, i32 -1635936670, i32 -1824608069, i32 -1744851700, i32 -1347415887, i32 -1418654458, i32 -1506661409, i32 -1561119128, i32 -1129027987, i32 -1200260134, i32 -1254728445, i32 -1309196108], align 16
@BZ2_rNums = dso_local global [512 x i32] [i32 619, i32 720, i32 127, i32 481, i32 931, i32 816, i32 813, i32 233, i32 566, i32 247, i32 985, i32 724, i32 205, i32 454, i32 863, i32 491, i32 741, i32 242, i32 949, i32 214, i32 733, i32 859, i32 335, i32 708, i32 621, i32 574, i32 73, i32 654, i32 730, i32 472, i32 419, i32 436, i32 278, i32 496, i32 867, i32 210, i32 399, i32 680, i32 480, i32 51, i32 878, i32 465, i32 811, i32 169, i32 869, i32 675, i32 611, i32 697, i32 867, i32 561, i32 862, i32 687, i32 507, i32 283, i32 482, i32 129, i32 807, i32 591, i32 733, i32 623, i32 150, i32 238, i32 59, i32 379, i32 684, i32 877, i32 625, i32 169, i32 643, i32 105, i32 170, i32 607, i32 520, i32 932, i32 727, i32 476, i32 693, i32 425, i32 174, i32 647, i32 73, i32 122, i32 335, i32 530, i32 442, i32 853, i32 695, i32 249, i32 445, i32 515, i32 909, i32 545, i32 703, i32 919, i32 874, i32 474, i32 882, i32 500, i32 594, i32 612, i32 641, i32 801, i32 220, i32 162, i32 819, i32 984, i32 589, i32 513, i32 495, i32 799, i32 161, i32 604, i32 958, i32 533, i32 221, i32 400, i32 386, i32 867, i32 600, i32 782, i32 382, i32 596, i32 414, i32 171, i32 516, i32 375, i32 682, i32 485, i32 911, i32 276, i32 98, i32 553, i32 163, i32 354, i32 666, i32 933, i32 424, i32 341, i32 533, i32 870, i32 227, i32 730, i32 475, i32 186, i32 263, i32 647, i32 537, i32 686, i32 600, i32 224, i32 469, i32 68, i32 770, i32 919, i32 190, i32 373, i32 294, i32 822, i32 808, i32 206, i32 184, i32 943, i32 795, i32 384, i32 383, i32 461, i32 404, i32 758, i32 839, i32 887, i32 715, i32 67, i32 618, i32 276, i32 204, i32 918, i32 873, i32 777, i32 604, i32 560, i32 951, i32 160, i32 578, i32 722, i32 79, i32 804, i32 96, i32 409, i32 713, i32 940, i32 652, i32 934, i32 970, i32 447, i32 318, i32 353, i32 859, i32 672, i32 112, i32 785, i32 645, i32 863, i32 803, i32 350, i32 139, i32 93, i32 354, i32 99, i32 820, i32 908, i32 609, i32 772, i32 154, i32 274, i32 580, i32 184, i32 79, i32 626, i32 630, i32 742, i32 653, i32 282, i32 762, i32 623, i32 680, i32 81, i32 927, i32 626, i32 789, i32 125, i32 411, i32 521, i32 938, i32 300, i32 821, i32 78, i32 343, i32 175, i32 128, i32 250, i32 170, i32 774, i32 972, i32 275, i32 999, i32 639, i32 495, i32 78, i32 352, i32 126, i32 857, i32 956, i32 358, i32 619, i32 580, i32 124, i32 737, i32 594, i32 701, i32 612, i32 669, i32 112, i32 134, i32 694, i32 363, i32 992, i32 809, i32 743, i32 168, i32 974, i32 944, i32 375, i32 748, i32 52, i32 600, i32 747, i32 642, i32 182, i32 862, i32 81, i32 344, i32 805, i32 988, i32 739, i32 511, i32 655, i32 814, i32 334, i32 249, i32 515, i32 897, i32 955, i32 664, i32 981, i32 649, i32 113, i32 974, i32 459, i32 893, i32 228, i32 433, i32 837, i32 553, i32 268, i32 926, i32 240, i32 102, i32 654, i32 459, i32 51, i32 686, i32 754, i32 806, i32 760, i32 493, i32 403, i32 415, i32 394, i32 687, i32 700, i32 946, i32 670, i32 656, i32 610, i32 738, i32 392, i32 760, i32 799, i32 887, i32 653, i32 978, i32 321, i32 576, i32 617, i32 626, i32 502, i32 894, i32 679, i32 243, i32 440, i32 680, i32 879, i32 194, i32 572, i32 640, i32 724, i32 926, i32 56, i32 204, i32 700, i32 707, i32 151, i32 457, i32 449, i32 797, i32 195, i32 791, i32 558, i32 945, i32 679, i32 297, i32 59, i32 87, i32 824, i32 713, i32 663, i32 412, i32 693, i32 342, i32 606, i32 134, i32 108, i32 571, i32 364, i32 631, i32 212, i32 174, i32 643, i32 304, i32 329, i32 343, i32 97, i32 430, i32 751, i32 497, i32 314, i32 983, i32 374, i32 822, i32 928, i32 140, i32 206, i32 73, i32 263, i32 980, i32 736, i32 876, i32 478, i32 430, i32 305, i32 170, i32 514, i32 364, i32 692, i32 829, i32 82, i32 855, i32 953, i32 676, i32 246, i32 369, i32 970, i32 294, i32 750, i32 807, i32 827, i32 150, i32 790, i32 288, i32 923, i32 804, i32 378, i32 215, i32 828, i32 592, i32 281, i32 565, i32 555, i32 710, i32 82, i32 896, i32 831, i32 547, i32 261, i32 524, i32 462, i32 293, i32 465, i32 502, i32 56, i32 661, i32 821, i32 976, i32 991, i32 658, i32 869, i32 905, i32 758, i32 745, i32 193, i32 768, i32 550, i32 608, i32 933, i32 378, i32 286, i32 215, i32 979, i32 792, i32 961, i32 61, i32 688, i32 793, i32 644, i32 986, i32 403, i32 106, i32 366, i32 905, i32 644, i32 372, i32 567, i32 466, i32 434, i32 645, i32 210, i32 389, i32 550, i32 919, i32 135, i32 780, i32 773, i32 635, i32 389, i32 707, i32 100, i32 626, i32 958, i32 165, i32 504, i32 920, i32 176, i32 193, i32 713, i32 857, i32 265, i32 203, i32 50, i32 668, i32 108, i32 645, i32 990, i32 626, i32 197, i32 510, i32 357, i32 358, i32 850, i32 858, i32 364, i32 936, i32 638], align 16
@.str.2 = private unnamed_addr constant [60 x i8] c"    block %d: crc = 0x%8x, combined CRC = 0x%8x, size = %d\0A\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"    final combined CRC = 0x%x\0A   \00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"\0A    [%d: huff+mtf \00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"rt+rld\00", align 1
@.str.6 = private unnamed_addr constant [442 x i8] c"\0A\0Abzip2/libbzip2: internal error number %d.\0AThis is a bug in bzip2/libbzip2, %s.\0APlease report it to me at: jseward@acm.org.  If this happened\0Awhen you were using some program which uses libbzip2 as a\0Acomponent, you should also report this bug to the author(s)\0Aof that program.  Please make an effort to report this bug;\0Atimely and accurate bug reports eventually lead to higher\0Aquality software.  Thanks.  Julian Seward, 30 December 2001.\0A\0A\00", align 1
@.str.7 = private unnamed_addr constant [1057 x i8] c"\0A*** A special note about internal error number 1007 ***\0A\0AExperience suggests that a common cause of i.e. 1007\0Ais unreliable memory or other hardware.  The 1007 assertion\0Ajust happens to cross-check the results of huge numbers of\0Amemory reads/writes, and so acts (unintendedly) as a stress\0Atest of your memory system.\0A\0AI suggest the following: try compressing the file again,\0Apossibly monitoring progress in detail with the -vv flag.\0A\0A* If the error cannot be reproduced, and/or happens at different\0A  points in compression, you may have a flaky memory system.\0A  Try a memory-test program.  I have used Memtest86\0A  (www.memtest86.com).  At the time of writing it is free (GPLd).\0A  Memtest86 tests memory much more thorougly than your BIOSs\0A  power-on test, and may find failures that the BIOS doesn't.\0A\0A* If the error can be repeatably reproduced, this is a bug in\0A  bzip2, and I would very much like to hear about it.  Please\0A  let me know, and, ideally, save a copy of the file causing the\0A  problem -- without which I will be unable to investigate it.\0A\0A\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c" {0x%x, 0x%x}\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.10 = private unnamed_addr constant [51 x i8] c"\0A    combined CRCs: stored = 0x%x, computed = 0x%x\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"1.0.2, 30-Dec-2001\00", align 1
@stdin = external dso_local global %struct._IO_FILE*, align 8
@stdout = external dso_local global %struct._IO_FILE*, align 8
@bzerrorstrings = internal global [16 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i32 0, i32 0)], align 16
@.str.12 = private unnamed_addr constant [5 x i8] c".bz2\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c".bz\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c".tbz2\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c".tbz\00", align 1
@zSuffix = dso_local global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i32 0, i32 0)], align 16
@.str.16 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.17 = private unnamed_addr constant [5 x i8] c".tar\00", align 1
@unzSuffix = dso_local global [4 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i32 0, i32 0)], align 16
@outputHandleJustInCase = common dso_local global %struct._IO_FILE* null, align 8
@smallMode = common dso_local global i8 0, align 1
@keepInputFiles = common dso_local global i8 0, align 1
@forceOverwrite = common dso_local global i8 0, align 1
@noisy = common dso_local global i8 0, align 1
@verbosity = common dso_local global i32 0, align 4
@blockSize100k = common dso_local global i32 0, align 4
@testFailsExist = common dso_local global i8 0, align 1
@unzFailsExist = common dso_local global i8 0, align 1
@numFileNames = common dso_local global i32 0, align 4
@numFilesProcessed = common dso_local global i32 0, align 4
@workFactor = common dso_local global i32 0, align 4
@deleteOutputOnInterrupt = common dso_local global i8 0, align 1
@exitValue = common dso_local global i32 0, align 4
@inName = common dso_local global [1034 x i8] zeroinitializer, align 16
@.str.18 = private unnamed_addr constant [7 x i8] c"(none)\00", align 1
@outName = common dso_local global [1034 x i8] zeroinitializer, align 16
@progNameReally = common dso_local global [1034 x i8] zeroinitializer, align 16
@progName = common dso_local global i8* null, align 8
@.str.19 = private unnamed_addr constant [6 x i8] c"BZIP2\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"BZIP\00", align 1
@longestFileName = common dso_local global i32 0, align 4
@.str.21 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@srcMode = common dso_local global i32 0, align 4
@opMode = common dso_local global i32 0, align 4
@.str.22 = private unnamed_addr constant [6 x i8] c"unzip\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"UNZIP\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"z2cat\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"Z2CAT\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"zcat\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"ZCAT\00", align 1
@.str.28 = private unnamed_addr constant [19 x i8] c"%s: Bad flag `%s'\0A\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"--stdout\00", align 1
@.str.30 = private unnamed_addr constant [13 x i8] c"--decompress\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"--compress\00", align 1
@.str.32 = private unnamed_addr constant [8 x i8] c"--force\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"--test\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"--keep\00", align 1
@.str.35 = private unnamed_addr constant [8 x i8] c"--small\00", align 1
@.str.36 = private unnamed_addr constant [8 x i8] c"--quiet\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"--version\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"--license\00", align 1
@.str.39 = private unnamed_addr constant [14 x i8] c"--exponential\00", align 1
@.str.40 = private unnamed_addr constant [18 x i8] c"--repetitive-best\00", align 1
@.str.41 = private unnamed_addr constant [18 x i8] c"--repetitive-fast\00", align 1
@.str.42 = private unnamed_addr constant [7 x i8] c"--fast\00", align 1
@.str.43 = private unnamed_addr constant [7 x i8] c"--best\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c"--verbose\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c"--help\00", align 1
@.str.46 = private unnamed_addr constant [40 x i8] c"%s: -c and -t cannot be used together.\0A\00", align 1
@.str.47 = private unnamed_addr constant [113 x i8] c"\0AYou can use the `bzip2recover' program to attempt to recover\0Adata from undamaged sections of corrupted files.\0A\0A\00", align 1
@tmpName = common dso_local global [1034 x i8] zeroinitializer, align 16
@.str.48 = private unnamed_addr constant [28 x i8] c"        bucket sorting ...\0A\00", align 1
@.str.49 = private unnamed_addr constant [23 x i8] c"        depth %6d has \00", align 1
@.str.50 = private unnamed_addr constant [24 x i8] c"%6d unresolved strings\0A\00", align 1
@.str.51 = private unnamed_addr constant [34 x i8] c"        reconstructing block ...\0A\00", align 1
@.str.52 = private unnamed_addr constant [34 x i8] c"        main sort initialise ...\0A\00", align 1
@.str.53 = private unnamed_addr constant [48 x i8] c"        qsort [0x%x, 0x%x]   done %d   this %d\0A\00", align 1
@.str.54 = private unnamed_addr constant [44 x i8] c"        %d pointers, %d sorted, %d scanned\0A\00", align 1
@incs = internal global [14 x i32] [i32 1, i32 4, i32 13, i32 40, i32 121, i32 364, i32 1093, i32 3280, i32 9841, i32 29524, i32 88573, i32 265720, i32 797161, i32 2391484], align 16
@.str.55 = private unnamed_addr constant [64 x i8] c"      %d in block, %d after MTF & 1-2 coding, %d+2 syms in use\0A\00", align 1
@.str.56 = private unnamed_addr constant [59 x i8] c"      initial group %d, [%d .. %d], has %d syms (%4.1f%%)\0A\00", align 1
@.str.57 = private unnamed_addr constant [41 x i8] c"      pass %d: size is %d, grp uses are \00", align 1
@.str.58 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.59 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.60 = private unnamed_addr constant [26 x i8] c"      bytes: mapping %d, \00", align 1
@.str.61 = private unnamed_addr constant [15 x i8] c"selectors %d, \00", align 1
@.str.62 = private unnamed_addr constant [18 x i8] c"code lengths %d, \00", align 1
@.str.63 = private unnamed_addr constant [10 x i8] c"codes %d\0A\00", align 1
@.str.64 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.65 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.66 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.67 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.68 = private unnamed_addr constant [15 x i8] c"SEQUENCE_ERROR\00", align 1
@.str.69 = private unnamed_addr constant [12 x i8] c"PARAM_ERROR\00", align 1
@.str.70 = private unnamed_addr constant [10 x i8] c"MEM_ERROR\00", align 1
@.str.71 = private unnamed_addr constant [11 x i8] c"DATA_ERROR\00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c"DATA_ERROR_MAGIC\00", align 1
@.str.73 = private unnamed_addr constant [9 x i8] c"IO_ERROR\00", align 1
@.str.74 = private unnamed_addr constant [15 x i8] c"UNEXPECTED_EOF\00", align 1
@.str.75 = private unnamed_addr constant [13 x i8] c"OUTBUFF_FULL\00", align 1
@.str.76 = private unnamed_addr constant [13 x i8] c"CONFIG_ERROR\00", align 1
@.str.77 = private unnamed_addr constant [4 x i8] c"???\00", align 1
@.str.78 = private unnamed_addr constant [868 x i8] c"\0A%s: Caught a SIGSEGV or SIGBUS whilst compressing.\0A\0A   Possible causes are (most likely first):\0A   (1) This computer has unreliable memory or cache hardware\0A       (a surprisingly common problem; try a different machine.)\0A   (2) A bug in the compiler used to create this executable\0A       (unlikely, if you didn't compile bzip2 yourself.)\0A   (3) A real bug in bzip2 -- I hope this should never be the case.\0A   The user's manual, Section 4.3, has more info on (1) and (2).\0A   \0A   If you suspect this is a bug in bzip2, or are unsure about (1)\0A   or (2), feel free to report it to me at: jseward@acm.org.\0A   Section 4.3 of the user's manual describes the info a useful\0A   bug report should have.  If the manual is available on your\0A   system, please try and read it before mailing me.  If you don't\0A   have the manual or can't be bothered to read it, mail me anyway.\0A\0A\00", align 1
@.str.79 = private unnamed_addr constant [995 x i8] c"\0A%s: Caught a SIGSEGV or SIGBUS whilst decompressing.\0A\0A   Possible causes are (most likely first):\0A   (1) The compressed data is corrupted, and bzip2's usual checks\0A       failed to detect this.  Try bzip2 -tvv my_file.bz2.\0A   (2) This computer has unreliable memory or cache hardware\0A       (a surprisingly common problem; try a different machine.)\0A   (3) A bug in the compiler used to create this executable\0A       (unlikely, if you didn't compile bzip2 yourself.)\0A   (4) A real bug in bzip2 -- I hope this should never be the case.\0A   The user's manual, Section 4.3, has more info on (2) and (3).\0A   \0A   If you suspect this is a bug in bzip2, or are unsure about (2)\0A   or (3), feel free to report it to me at: jseward@acm.org.\0A   Section 4.3 of the user's manual describes the info a useful\0A   bug report should have.  If the manual is available on your\0A   system, please try and read it before mailing me.  If you don't\0A   have the manual or can't be bothered to read it, mail me anyway.\0A\0A\00", align 1
@.str.80 = private unnamed_addr constant [36 x i8] c"\09Input file = %s, output file = %s\0A\00", align 1
@.str.81 = private unnamed_addr constant [44 x i8] c"%s: Deleting output file %s, if it exists.\0A\00", align 1
@.str.82 = private unnamed_addr constant [59 x i8] c"%s: WARNING: deletion of output file (apparently) failed.\0A\00", align 1
@.str.83 = private unnamed_addr constant [49 x i8] c"%s: WARNING: deletion of output file suppressed\0A\00", align 1
@.str.84 = private unnamed_addr constant [56 x i8] c"%s:    since input file no longer exists.  Output file\0A\00", align 1
@.str.85 = private unnamed_addr constant [32 x i8] c"%s:    `%s' may be incomplete.\0A\00", align 1
@.str.86 = private unnamed_addr constant [61 x i8] c"%s:    I suggest doing an integrity test (bzip2 -tv) of it.\0A\00", align 1
@.str.87 = private unnamed_addr constant [110 x i8] c"%s: WARNING: some files have not been processed:\0A%s:    %d specified on command line, %d not processed yet.\0A\0A\00", align 1
@.str.88 = private unnamed_addr constant [241 x i8] c"\0AIt is possible that the compressed file(s) have become corrupted.\0AYou can use the -tvv option to test integrity of such files.\0A\0AYou can use the `bzip2recover' program to attempt to recover\0Adata from undamaged sections of corrupted files.\0A\0A\00", align 1
@.str.89 = private unnamed_addr constant [120 x i8] c"bzip2: file name\0A`%s'\0Ais suspiciously (more than %d chars) long.\0ATry using a reasonable file name instead.  Sorry! :-)\0A\00", align 1
@.str.90 = private unnamed_addr constant [38 x i8] c"\0A%s: couldn't allocate enough memory\0A\00", align 1
@.str.91 = private unnamed_addr constant [529 x i8] c"bzip2, a block-sorting file compressor.  Version %s.\0A   \0A   Copyright (C) 1996-2002 by Julian Seward.\0A   \0A   This program is free software; you can redistribute it and/or modify\0A   it under the terms set out in the LICENSE file, which is included\0A   in the bzip2-1.0 source distribution.\0A   \0A   This program is distributed in the hope that it will be useful,\0A   but WITHOUT ANY WARRANTY; without even the implied warranty of\0A   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\0A   LICENSE file for more details.\0A   \0A\00", align 1
@.str.92 = private unnamed_addr constant [1230 x i8] c"bzip2, a block-sorting file compressor.  Version %s.\0A\0A   usage: %s [flags and input files in any order]\0A\0A   -h --help           print this message\0A   -d --decompress     force decompression\0A   -z --compress       force compression\0A   -k --keep           keep (don't delete) input files\0A   -f --force          overwrite existing output files\0A   -t --test           test compressed file integrity\0A   -c --stdout         output to standard out\0A   -q --quiet          suppress noncritical error messages\0A   -v --verbose        be verbose (a 2nd -v gives more)\0A   -L --license        display software version & license\0A   -V --version        display software version & license\0A   -s --small          use less memory (at most 2500k)\0A   -1 .. -9            set block size to 100k .. 900k\0A   --fast              alias for -1\0A   --best              alias for -9\0A\0A   If invoked as `bzip2', default action is to compress.\0A              as `bunzip2',  default action is to decompress.\0A              as `bzcat', default action is to decompress to stdout.\0A\0A   If no file names are given, bzip2 compresses or decompresses\0A   from standard input to standard output.  You can combine\0A   short flags, so `-v -4' means the same as -v4 or -4v, &c.\0A\0A\00", align 1
@.str.93 = private unnamed_addr constant [49 x i8] c"%s: %s is redundant in versions 0.9.5 and above\0A\00", align 1
@.str.94 = private unnamed_addr constant [45 x i8] c"\0A%s: Control-C or similar caught, quitting.\0A\00", align 1
@.str.95 = private unnamed_addr constant [21 x i8] c"compress: bad modes\0A\00", align 1
@.str.96 = private unnamed_addr constant [8 x i8] c"(stdin)\00", align 1
@.str.97 = private unnamed_addr constant [9 x i8] c"(stdout)\00", align 1
@.str.98 = private unnamed_addr constant [39 x i8] c"%s: There are no files matching `%s'.\0A\00", align 1
@.str.99 = private unnamed_addr constant [35 x i8] c"%s: Can't open input file %s: %s.\0A\00", align 1
@.str.100 = private unnamed_addr constant [42 x i8] c"%s: Input file %s already has %s suffix.\0A\00", align 1
@.str.101 = private unnamed_addr constant [35 x i8] c"%s: Input file %s is a directory.\0A\00", align 1
@.str.102 = private unnamed_addr constant [41 x i8] c"%s: Input file %s is not a normal file.\0A\00", align 1
@.str.103 = private unnamed_addr constant [36 x i8] c"%s: Output file %s already exists.\0A\00", align 1
@.str.104 = private unnamed_addr constant [40 x i8] c"%s: Input file %s has %d other link%s.\0A\00", align 1
@.str.105 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.106 = private unnamed_addr constant [50 x i8] c"%s: I won't write compressed data to a terminal.\0A\00", align 1
@.str.107 = private unnamed_addr constant [34 x i8] c"%s: For help, type: `%s --help'.\0A\00", align 1
@.str.108 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.109 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.110 = private unnamed_addr constant [38 x i8] c"%s: Can't create output file %s: %s.\0A\00", align 1
@.str.111 = private unnamed_addr constant [22 x i8] c"compress: bad srcMode\00", align 1
@.str.112 = private unnamed_addr constant [7 x i8] c"  %s: \00", align 1
@.str.113 = private unnamed_addr constant [108 x i8] c"\0A%s: PANIC -- internal consistency error:\0A\09%s\0A\09This is a BUG.  Please report it to me at:\0A\09jseward@acm.org\0A\00", align 1
@fileMetaInfo = internal global %struct.stat zeroinitializer, align 8
@.str.114 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.115 = private unnamed_addr constant [22 x i8] c" no data compressed.\0A\00", align 1
@.str.116 = private unnamed_addr constant [57 x i8] c"%6.3f:1, %6.3f bits/byte, %5.2f%% saved, %s in, %s out.\0A\00", align 1
@.str.117 = private unnamed_addr constant [26 x i8] c"compress:unexpected error\00", align 1
@.str.118 = private unnamed_addr constant [236 x i8] c"bzip2: I'm not configured correctly for this platform!\0A\09I require Int32, Int16 and Char to have sizes\0A\09of 4, 2 and 1 bytes to run properly, and they don't.\0A\09Probably you can fix this by defining them correctly,\0A\09and recompiling.  Bye!\0A\00", align 1
@.str.119 = private unnamed_addr constant [65 x i8] c"\0A%s: I/O or other error, bailing out.  Possible reason follows.\0A\00", align 1
@.str.120 = private unnamed_addr constant [23 x i8] c"uncompress: bad modes\0A\00", align 1
@.str.121 = private unnamed_addr constant [5 x i8] c".out\00", align 1
@.str.122 = private unnamed_addr constant [50 x i8] c"%s: Can't guess original name for %s -- using %s\0A\00", align 1
@.str.123 = private unnamed_addr constant [51 x i8] c"%s: I won't read compressed data from a terminal.\0A\00", align 1
@.str.124 = private unnamed_addr constant [34 x i8] c"%s: Can't open input file %s:%s.\0A\00", align 1
@.str.125 = private unnamed_addr constant [24 x i8] c"uncompress: bad srcMode\00", align 1
@.str.126 = private unnamed_addr constant [6 x i8] c"done\0A\00", align 1
@.str.127 = private unnamed_addr constant [19 x i8] c"not a bzip2 file.\0A\00", align 1
@.str.128 = private unnamed_addr constant [29 x i8] c"%s: %s is not a bzip2 file.\0A\00", align 1
@.str.129 = private unnamed_addr constant [27 x i8] c"decompress:bzReadGetUnused\00", align 1
@.str.130 = private unnamed_addr constant [6 x i8] c"\0A    \00", align 1
@.str.131 = private unnamed_addr constant [45 x i8] c"\0A%s: %s: trailing garbage after EOF ignored\0A\00", align 1
@.str.132 = private unnamed_addr constant [28 x i8] c"decompress:unexpected error\00", align 1
@.str.133 = private unnamed_addr constant [47 x i8] c"\0A%s: Data integrity error when decompressing.\0A\00", align 1
@.str.134 = private unnamed_addr constant [95 x i8] c"\0A%s: Compressed file ends unexpectedly;\0A\09perhaps it is corrupted?  *Possible* reason follows.\0A\00", align 1
@.str.135 = private unnamed_addr constant [18 x i8] c"testf: bad modes\0A\00", align 1
@.str.136 = private unnamed_addr constant [30 x i8] c"%s: Can't open input %s: %s.\0A\00", align 1
@.str.137 = private unnamed_addr constant [19 x i8] c"testf: bad srcMode\00", align 1
@.str.138 = private unnamed_addr constant [4 x i8] c"ok\0A\00", align 1
@.str.139 = private unnamed_addr constant [21 x i8] c"test:bzReadGetUnused\00", align 1
@.str.140 = private unnamed_addr constant [9 x i8] c"%s: %s: \00", align 1
@.str.141 = private unnamed_addr constant [36 x i8] c"data integrity (CRC) error in data\0A\00", align 1
@.str.142 = private unnamed_addr constant [24 x i8] c"file ends unexpectedly\0A\00", align 1
@.str.143 = private unnamed_addr constant [46 x i8] c"bad magic number (file not created by bzip2)\0A\00", align 1
@.str.144 = private unnamed_addr constant [36 x i8] c"trailing garbage after EOF ignored\0A\00", align 1
@.str.145 = private unnamed_addr constant [22 x i8] c"test:unexpected error\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_blockSort(%struct.EState* %0) #0 {
  %2 = alloca %struct.EState*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i16*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.EState* %0, %struct.EState** %2, align 8
  %13 = load %struct.EState*, %struct.EState** %2, align 8
  %14 = getelementptr inbounds %struct.EState, %struct.EState* %13, i32 0, i32 8
  %15 = load i32*, i32** %14, align 8
  store i32* %15, i32** %3, align 8
  %16 = load %struct.EState*, %struct.EState** %2, align 8
  %17 = getelementptr inbounds %struct.EState, %struct.EState* %16, i32 0, i32 9
  %18 = load i8*, i8** %17, align 8
  store i8* %18, i8** %4, align 8
  %19 = load %struct.EState*, %struct.EState** %2, align 8
  %20 = getelementptr inbounds %struct.EState, %struct.EState* %19, i32 0, i32 6
  %21 = load i32*, i32** %20, align 8
  store i32* %21, i32** %5, align 8
  %22 = load %struct.EState*, %struct.EState** %2, align 8
  %23 = getelementptr inbounds %struct.EState, %struct.EState* %22, i32 0, i32 17
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %6, align 4
  %25 = load %struct.EState*, %struct.EState** %2, align 8
  %26 = getelementptr inbounds %struct.EState, %struct.EState* %25, i32 0, i32 28
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %7, align 4
  %28 = load %struct.EState*, %struct.EState** %2, align 8
  %29 = getelementptr inbounds %struct.EState, %struct.EState* %28, i32 0, i32 12
  %30 = load i32, i32* %29, align 8
  store i32 %30, i32* %8, align 4
  %31 = load i32, i32* %6, align 4
  %32 = icmp slt i32 %31, 10000
  br i1 %32, label %33, label %43

33:                                               ; preds = %1
  %34 = load %struct.EState*, %struct.EState** %2, align 8
  %35 = getelementptr inbounds %struct.EState, %struct.EState* %34, i32 0, i32 4
  %36 = load i32*, i32** %35, align 8
  %37 = load %struct.EState*, %struct.EState** %2, align 8
  %38 = getelementptr inbounds %struct.EState, %struct.EState* %37, i32 0, i32 5
  %39 = load i32*, i32** %38, align 8
  %40 = load i32*, i32** %5, align 8
  %41 = load i32, i32* %6, align 4
  %42 = load i32, i32* %7, align 4
  call void @fallbackSort(i32* %36, i32* %39, i32* %40, i32 %41, i32 %42)
  br label %121

43:                                               ; preds = %1
  %44 = load i32, i32* %6, align 4
  %45 = add nsw i32 %44, 34
  store i32 %45, i32* %12, align 4
  %46 = load i32, i32* %12, align 4
  %47 = and i32 %46, 1
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %43
  %50 = load i32, i32* %12, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %12, align 4
  br label %52

52:                                               ; preds = %49, %43
  %53 = load i8*, i8** %4, align 8
  %54 = load i32, i32* %12, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %53, i64 %55
  %57 = bitcast i8* %56 to i16*
  store i16* %57, i16** %9, align 8
  %58 = load i32, i32* %8, align 4
  %59 = icmp slt i32 %58, 1
  br i1 %59, label %60, label %61

60:                                               ; preds = %52
  store i32 1, i32* %8, align 4
  br label %61

61:                                               ; preds = %60, %52
  %62 = load i32, i32* %8, align 4
  %63 = icmp sgt i32 %62, 100
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  store i32 100, i32* %8, align 4
  br label %65

65:                                               ; preds = %64, %61
  %66 = load i32, i32* %6, align 4
  %67 = load i32, i32* %8, align 4
  %68 = sub nsw i32 %67, 1
  %69 = sdiv i32 %68, 3
  %70 = mul nsw i32 %66, %69
  store i32 %70, i32* %11, align 4
  %71 = load i32, i32* %11, align 4
  store i32 %71, i32* %10, align 4
  %72 = load i32*, i32** %3, align 8
  %73 = load i8*, i8** %4, align 8
  %74 = load i16*, i16** %9, align 8
  %75 = load i32*, i32** %5, align 8
  %76 = load i32, i32* %6, align 4
  %77 = load i32, i32* %7, align 4
  call void @mainSort(i32* %72, i8* %73, i16* %74, i32* %75, i32 %76, i32 %77, i32* %10)
  %78 = load i32, i32* %7, align 4
  %79 = icmp sge i32 %78, 3
  br i1 %79, label %80, label %101

80:                                               ; preds = %65
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %82 = load i32, i32* %11, align 4
  %83 = load i32, i32* %10, align 4
  %84 = sub nsw i32 %82, %83
  %85 = load i32, i32* %6, align 4
  %86 = load i32, i32* %11, align 4
  %87 = load i32, i32* %10, align 4
  %88 = sub nsw i32 %86, %87
  %89 = sitofp i32 %88 to float
  %90 = load i32, i32* %6, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %80
  br label %95

93:                                               ; preds = %80
  %94 = load i32, i32* %6, align 4
  br label %95

95:                                               ; preds = %93, %92
  %96 = phi i32 [ 1, %92 ], [ %94, %93 ]
  %97 = sitofp i32 %96 to float
  %98 = fdiv float %89, %97
  %99 = fpext float %98 to double
  %100 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %81, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i32 %84, i32 %85, double %99)
  br label %101

101:                                              ; preds = %95, %65
  %102 = load i32, i32* %10, align 4
  %103 = icmp slt i32 %102, 0
  br i1 %103, label %104, label %120

104:                                              ; preds = %101
  %105 = load i32, i32* %7, align 4
  %106 = icmp sge i32 %105, 2
  br i1 %106, label %107, label %110

107:                                              ; preds = %104
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %109 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %108, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0))
  br label %110

110:                                              ; preds = %107, %104
  %111 = load %struct.EState*, %struct.EState** %2, align 8
  %112 = getelementptr inbounds %struct.EState, %struct.EState* %111, i32 0, i32 4
  %113 = load i32*, i32** %112, align 8
  %114 = load %struct.EState*, %struct.EState** %2, align 8
  %115 = getelementptr inbounds %struct.EState, %struct.EState* %114, i32 0, i32 5
  %116 = load i32*, i32** %115, align 8
  %117 = load i32*, i32** %5, align 8
  %118 = load i32, i32* %6, align 4
  %119 = load i32, i32* %7, align 4
  call void @fallbackSort(i32* %113, i32* %116, i32* %117, i32 %118, i32 %119)
  br label %120

120:                                              ; preds = %110, %101
  br label %121

121:                                              ; preds = %120, %33
  %122 = load %struct.EState*, %struct.EState** %2, align 8
  %123 = getelementptr inbounds %struct.EState, %struct.EState* %122, i32 0, i32 7
  store i32 -1, i32* %123, align 8
  store i32 0, i32* %12, align 4
  br label %124

124:                                              ; preds = %142, %121
  %125 = load i32, i32* %12, align 4
  %126 = load %struct.EState*, %struct.EState** %2, align 8
  %127 = getelementptr inbounds %struct.EState, %struct.EState* %126, i32 0, i32 17
  %128 = load i32, i32* %127, align 4
  %129 = icmp slt i32 %125, %128
  br i1 %129, label %130, label %145

130:                                              ; preds = %124
  %131 = load i32*, i32** %3, align 8
  %132 = load i32, i32* %12, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i32, i32* %131, i64 %133
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %141

137:                                              ; preds = %130
  %138 = load i32, i32* %12, align 4
  %139 = load %struct.EState*, %struct.EState** %2, align 8
  %140 = getelementptr inbounds %struct.EState, %struct.EState* %139, i32 0, i32 7
  store i32 %138, i32* %140, align 8
  br label %145

141:                                              ; preds = %130
  br label %142

142:                                              ; preds = %141
  %143 = load i32, i32* %12, align 4
  %144 = add nsw i32 %143, 1
  store i32 %144, i32* %12, align 4
  br label %124

145:                                              ; preds = %137, %124
  %146 = load %struct.EState*, %struct.EState** %2, align 8
  %147 = getelementptr inbounds %struct.EState, %struct.EState* %146, i32 0, i32 7
  %148 = load i32, i32* %147, align 8
  %149 = icmp ne i32 %148, -1
  br i1 %149, label %151, label %150

150:                                              ; preds = %145
  call void @BZ2_bz__AssertH__fail(i32 1003)
  br label %151

151:                                              ; preds = %150, %145
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fallbackSort(i32* %0, i32* %1, i32* %2, i32 %3, i32 %4) #0 {
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [257 x i32], align 16
  %12 = alloca [256 x i32], align 16
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 8
  store i32* %0, i32** %6, align 8
  store i32* %1, i32** %7, align 8
  store i32* %2, i32** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %24 = load i32*, i32** %7, align 8
  %25 = bitcast i32* %24 to i8*
  store i8* %25, i8** %23, align 8
  %26 = load i32, i32* %10, align 4
  %27 = icmp sge i32 %26, 4
  br i1 %27, label %28, label %31

28:                                               ; preds = %5
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.48, i64 0, i64 0))
  br label %31

31:                                               ; preds = %28, %5
  store i32 0, i32* %14, align 4
  br label %32

32:                                               ; preds = %39, %31
  %33 = load i32, i32* %14, align 4
  %34 = icmp slt i32 %33, 257
  br i1 %34, label %35, label %42

35:                                               ; preds = %32
  %36 = load i32, i32* %14, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [257 x i32], [257 x i32]* %11, i64 0, i64 %37
  store i32 0, i32* %38, align 4
  br label %39

39:                                               ; preds = %35
  %40 = load i32, i32* %14, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %14, align 4
  br label %32

42:                                               ; preds = %32
  store i32 0, i32* %14, align 4
  br label %43

43:                                               ; preds = %57, %42
  %44 = load i32, i32* %14, align 4
  %45 = load i32, i32* %9, align 4
  %46 = icmp slt i32 %44, %45
  br i1 %46, label %47, label %60

47:                                               ; preds = %43
  %48 = load i8*, i8** %23, align 8
  %49 = load i32, i32* %14, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %48, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [257 x i32], [257 x i32]* %11, i64 0, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %54, align 4
  br label %57

57:                                               ; preds = %47
  %58 = load i32, i32* %14, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %14, align 4
  br label %43

60:                                               ; preds = %43
  store i32 0, i32* %14, align 4
  br label %61

61:                                               ; preds = %72, %60
  %62 = load i32, i32* %14, align 4
  %63 = icmp slt i32 %62, 256
  br i1 %63, label %64, label %75

64:                                               ; preds = %61
  %65 = load i32, i32* %14, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds [257 x i32], [257 x i32]* %11, i64 0, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = load i32, i32* %14, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [256 x i32], [256 x i32]* %12, i64 0, i64 %70
  store i32 %68, i32* %71, align 4
  br label %72

72:                                               ; preds = %64
  %73 = load i32, i32* %14, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %14, align 4
  br label %61

75:                                               ; preds = %61
  store i32 1, i32* %14, align 4
  br label %76

76:                                               ; preds = %90, %75
  %77 = load i32, i32* %14, align 4
  %78 = icmp slt i32 %77, 257
  br i1 %78, label %79, label %93

79:                                               ; preds = %76
  %80 = load i32, i32* %14, align 4
  %81 = sub nsw i32 %80, 1
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [257 x i32], [257 x i32]* %11, i64 0, i64 %82
  %84 = load i32, i32* %83, align 4
  %85 = load i32, i32* %14, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [257 x i32], [257 x i32]* %11, i64 0, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = add nsw i32 %88, %84
  store i32 %89, i32* %87, align 4
  br label %90

90:                                               ; preds = %79
  %91 = load i32, i32* %14, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %14, align 4
  br label %76

93:                                               ; preds = %76
  store i32 0, i32* %14, align 4
  br label %94

94:                                               ; preds = %119, %93
  %95 = load i32, i32* %14, align 4
  %96 = load i32, i32* %9, align 4
  %97 = icmp slt i32 %95, %96
  br i1 %97, label %98, label %122

98:                                               ; preds = %94
  %99 = load i8*, i8** %23, align 8
  %100 = load i32, i32* %14, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i8, i8* %99, i64 %101
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  store i32 %104, i32* %15, align 4
  %105 = load i32, i32* %15, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds [257 x i32], [257 x i32]* %11, i64 0, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = sub nsw i32 %108, 1
  store i32 %109, i32* %16, align 4
  %110 = load i32, i32* %16, align 4
  %111 = load i32, i32* %15, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [257 x i32], [257 x i32]* %11, i64 0, i64 %112
  store i32 %110, i32* %113, align 4
  %114 = load i32, i32* %14, align 4
  %115 = load i32*, i32** %6, align 8
  %116 = load i32, i32* %16, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i32, i32* %115, i64 %117
  store i32 %114, i32* %118, align 4
  br label %119

119:                                              ; preds = %98
  %120 = load i32, i32* %14, align 4
  %121 = add nsw i32 %120, 1
  store i32 %121, i32* %14, align 4
  br label %94

122:                                              ; preds = %94
  %123 = load i32, i32* %9, align 4
  %124 = sdiv i32 %123, 32
  %125 = add nsw i32 2, %124
  store i32 %125, i32* %22, align 4
  store i32 0, i32* %14, align 4
  br label %126

126:                                              ; preds = %135, %122
  %127 = load i32, i32* %14, align 4
  %128 = load i32, i32* %22, align 4
  %129 = icmp slt i32 %127, %128
  br i1 %129, label %130, label %138

130:                                              ; preds = %126
  %131 = load i32*, i32** %8, align 8
  %132 = load i32, i32* %14, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i32, i32* %131, i64 %133
  store i32 0, i32* %134, align 4
  br label %135

135:                                              ; preds = %130
  %136 = load i32, i32* %14, align 4
  %137 = add nsw i32 %136, 1
  store i32 %137, i32* %14, align 4
  br label %126

138:                                              ; preds = %126
  store i32 0, i32* %14, align 4
  br label %139

139:                                              ; preds = %159, %138
  %140 = load i32, i32* %14, align 4
  %141 = icmp slt i32 %140, 256
  br i1 %141, label %142, label %162

142:                                              ; preds = %139
  %143 = load i32, i32* %14, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds [257 x i32], [257 x i32]* %11, i64 0, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = and i32 %146, 31
  %148 = shl i32 1, %147
  %149 = load i32*, i32** %8, align 8
  %150 = load i32, i32* %14, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds [257 x i32], [257 x i32]* %11, i64 0, i64 %151
  %153 = load i32, i32* %152, align 4
  %154 = ashr i32 %153, 5
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds i32, i32* %149, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = or i32 %157, %148
  store i32 %158, i32* %156, align 4
  br label %159

159:                                              ; preds = %142
  %160 = load i32, i32* %14, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %14, align 4
  br label %139

162:                                              ; preds = %139
  store i32 0, i32* %14, align 4
  br label %163

163:                                              ; preds = %202, %162
  %164 = load i32, i32* %14, align 4
  %165 = icmp slt i32 %164, 32
  br i1 %165, label %166, label %205

166:                                              ; preds = %163
  %167 = load i32, i32* %9, align 4
  %168 = load i32, i32* %14, align 4
  %169 = mul nsw i32 2, %168
  %170 = add nsw i32 %167, %169
  %171 = and i32 %170, 31
  %172 = shl i32 1, %171
  %173 = load i32*, i32** %8, align 8
  %174 = load i32, i32* %9, align 4
  %175 = load i32, i32* %14, align 4
  %176 = mul nsw i32 2, %175
  %177 = add nsw i32 %174, %176
  %178 = ashr i32 %177, 5
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i32, i32* %173, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = or i32 %181, %172
  store i32 %182, i32* %180, align 4
  %183 = load i32, i32* %9, align 4
  %184 = load i32, i32* %14, align 4
  %185 = mul nsw i32 2, %184
  %186 = add nsw i32 %183, %185
  %187 = add nsw i32 %186, 1
  %188 = and i32 %187, 31
  %189 = shl i32 1, %188
  %190 = xor i32 %189, -1
  %191 = load i32*, i32** %8, align 8
  %192 = load i32, i32* %9, align 4
  %193 = load i32, i32* %14, align 4
  %194 = mul nsw i32 2, %193
  %195 = add nsw i32 %192, %194
  %196 = add nsw i32 %195, 1
  %197 = ashr i32 %196, 5
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds i32, i32* %191, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = and i32 %200, %190
  store i32 %201, i32* %199, align 4
  br label %202

202:                                              ; preds = %166
  %203 = load i32, i32* %14, align 4
  %204 = add nsw i32 %203, 1
  store i32 %204, i32* %14, align 4
  br label %163

205:                                              ; preds = %163
  store i32 1, i32* %13, align 4
  br label %206

206:                                              ; preds = %205, %467
  %207 = load i32, i32* %10, align 4
  %208 = icmp sge i32 %207, 4
  br i1 %208, label %209, label %213

209:                                              ; preds = %206
  %210 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %211 = load i32, i32* %13, align 4
  %212 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %210, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.49, i64 0, i64 0), i32 %211)
  br label %213

213:                                              ; preds = %209, %206
  store i32 0, i32* %15, align 4
  store i32 0, i32* %14, align 4
  br label %214

214:                                              ; preds = %252, %213
  %215 = load i32, i32* %14, align 4
  %216 = load i32, i32* %9, align 4
  %217 = icmp slt i32 %215, %216
  br i1 %217, label %218, label %255

218:                                              ; preds = %214
  %219 = load i32*, i32** %8, align 8
  %220 = load i32, i32* %14, align 4
  %221 = ashr i32 %220, 5
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds i32, i32* %219, i64 %222
  %224 = load i32, i32* %223, align 4
  %225 = load i32, i32* %14, align 4
  %226 = and i32 %225, 31
  %227 = shl i32 1, %226
  %228 = and i32 %224, %227
  %229 = icmp ne i32 %228, 0
  br i1 %229, label %230, label %232

230:                                              ; preds = %218
  %231 = load i32, i32* %14, align 4
  store i32 %231, i32* %15, align 4
  br label %232

232:                                              ; preds = %230, %218
  %233 = load i32*, i32** %6, align 8
  %234 = load i32, i32* %14, align 4
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds i32, i32* %233, i64 %235
  %237 = load i32, i32* %236, align 4
  %238 = load i32, i32* %13, align 4
  %239 = sub i32 %237, %238
  store i32 %239, i32* %16, align 4
  %240 = load i32, i32* %16, align 4
  %241 = icmp slt i32 %240, 0
  br i1 %241, label %242, label %246

242:                                              ; preds = %232
  %243 = load i32, i32* %9, align 4
  %244 = load i32, i32* %16, align 4
  %245 = add nsw i32 %244, %243
  store i32 %245, i32* %16, align 4
  br label %246

246:                                              ; preds = %242, %232
  %247 = load i32, i32* %15, align 4
  %248 = load i32*, i32** %7, align 8
  %249 = load i32, i32* %16, align 4
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds i32, i32* %248, i64 %250
  store i32 %247, i32* %251, align 4
  br label %252

252:                                              ; preds = %246
  %253 = load i32, i32* %14, align 4
  %254 = add nsw i32 %253, 1
  store i32 %254, i32* %14, align 4
  br label %214

255:                                              ; preds = %214
  store i32 0, i32* %21, align 4
  store i32 -1, i32* %18, align 4
  br label %256

256:                                              ; preds = %255, %449
  %257 = load i32, i32* %18, align 4
  %258 = add nsw i32 %257, 1
  store i32 %258, i32* %16, align 4
  br label %259

259:                                              ; preds = %277, %256
  %260 = load i32*, i32** %8, align 8
  %261 = load i32, i32* %16, align 4
  %262 = ashr i32 %261, 5
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds i32, i32* %260, i64 %263
  %265 = load i32, i32* %264, align 4
  %266 = load i32, i32* %16, align 4
  %267 = and i32 %266, 31
  %268 = shl i32 1, %267
  %269 = and i32 %265, %268
  %270 = icmp ne i32 %269, 0
  br i1 %270, label %271, label %275

271:                                              ; preds = %259
  %272 = load i32, i32* %16, align 4
  %273 = and i32 %272, 31
  %274 = icmp ne i32 %273, 0
  br label %275

275:                                              ; preds = %271, %259
  %276 = phi i1 [ false, %259 ], [ %274, %271 ]
  br i1 %276, label %277, label %280

277:                                              ; preds = %275
  %278 = load i32, i32* %16, align 4
  %279 = add nsw i32 %278, 1
  store i32 %279, i32* %16, align 4
  br label %259

280:                                              ; preds = %275
  %281 = load i32*, i32** %8, align 8
  %282 = load i32, i32* %16, align 4
  %283 = ashr i32 %282, 5
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds i32, i32* %281, i64 %284
  %286 = load i32, i32* %285, align 4
  %287 = load i32, i32* %16, align 4
  %288 = and i32 %287, 31
  %289 = shl i32 1, %288
  %290 = and i32 %286, %289
  %291 = icmp ne i32 %290, 0
  br i1 %291, label %292, label %321

292:                                              ; preds = %280
  br label %293

293:                                              ; preds = %301, %292
  %294 = load i32*, i32** %8, align 8
  %295 = load i32, i32* %16, align 4
  %296 = ashr i32 %295, 5
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds i32, i32* %294, i64 %297
  %299 = load i32, i32* %298, align 4
  %300 = icmp eq i32 %299, -1
  br i1 %300, label %301, label %304

301:                                              ; preds = %293
  %302 = load i32, i32* %16, align 4
  %303 = add nsw i32 %302, 32
  store i32 %303, i32* %16, align 4
  br label %293

304:                                              ; preds = %293
  br label %305

305:                                              ; preds = %317, %304
  %306 = load i32*, i32** %8, align 8
  %307 = load i32, i32* %16, align 4
  %308 = ashr i32 %307, 5
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds i32, i32* %306, i64 %309
  %311 = load i32, i32* %310, align 4
  %312 = load i32, i32* %16, align 4
  %313 = and i32 %312, 31
  %314 = shl i32 1, %313
  %315 = and i32 %311, %314
  %316 = icmp ne i32 %315, 0
  br i1 %316, label %317, label %320

317:                                              ; preds = %305
  %318 = load i32, i32* %16, align 4
  %319 = add nsw i32 %318, 1
  store i32 %319, i32* %16, align 4
  br label %305

320:                                              ; preds = %305
  br label %321

321:                                              ; preds = %320, %280
  %322 = load i32, i32* %16, align 4
  %323 = sub nsw i32 %322, 1
  store i32 %323, i32* %17, align 4
  %324 = load i32, i32* %17, align 4
  %325 = load i32, i32* %9, align 4
  %326 = icmp sge i32 %324, %325
  br i1 %326, label %327, label %328

327:                                              ; preds = %321
  br label %450

328:                                              ; preds = %321
  br label %329

329:                                              ; preds = %347, %328
  %330 = load i32*, i32** %8, align 8
  %331 = load i32, i32* %16, align 4
  %332 = ashr i32 %331, 5
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds i32, i32* %330, i64 %333
  %335 = load i32, i32* %334, align 4
  %336 = load i32, i32* %16, align 4
  %337 = and i32 %336, 31
  %338 = shl i32 1, %337
  %339 = and i32 %335, %338
  %340 = icmp ne i32 %339, 0
  br i1 %340, label %345, label %341

341:                                              ; preds = %329
  %342 = load i32, i32* %16, align 4
  %343 = and i32 %342, 31
  %344 = icmp ne i32 %343, 0
  br label %345

345:                                              ; preds = %341, %329
  %346 = phi i1 [ false, %329 ], [ %344, %341 ]
  br i1 %346, label %347, label %350

347:                                              ; preds = %345
  %348 = load i32, i32* %16, align 4
  %349 = add nsw i32 %348, 1
  store i32 %349, i32* %16, align 4
  br label %329

350:                                              ; preds = %345
  %351 = load i32*, i32** %8, align 8
  %352 = load i32, i32* %16, align 4
  %353 = ashr i32 %352, 5
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds i32, i32* %351, i64 %354
  %356 = load i32, i32* %355, align 4
  %357 = load i32, i32* %16, align 4
  %358 = and i32 %357, 31
  %359 = shl i32 1, %358
  %360 = and i32 %356, %359
  %361 = icmp ne i32 %360, 0
  br i1 %361, label %392, label %362

362:                                              ; preds = %350
  br label %363

363:                                              ; preds = %371, %362
  %364 = load i32*, i32** %8, align 8
  %365 = load i32, i32* %16, align 4
  %366 = ashr i32 %365, 5
  %367 = sext i32 %366 to i64
  %368 = getelementptr inbounds i32, i32* %364, i64 %367
  %369 = load i32, i32* %368, align 4
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %374

371:                                              ; preds = %363
  %372 = load i32, i32* %16, align 4
  %373 = add nsw i32 %372, 32
  store i32 %373, i32* %16, align 4
  br label %363

374:                                              ; preds = %363
  br label %375

375:                                              ; preds = %388, %374
  %376 = load i32*, i32** %8, align 8
  %377 = load i32, i32* %16, align 4
  %378 = ashr i32 %377, 5
  %379 = sext i32 %378 to i64
  %380 = getelementptr inbounds i32, i32* %376, i64 %379
  %381 = load i32, i32* %380, align 4
  %382 = load i32, i32* %16, align 4
  %383 = and i32 %382, 31
  %384 = shl i32 1, %383
  %385 = and i32 %381, %384
  %386 = icmp ne i32 %385, 0
  %387 = xor i1 %386, true
  br i1 %387, label %388, label %391

388:                                              ; preds = %375
  %389 = load i32, i32* %16, align 4
  %390 = add nsw i32 %389, 1
  store i32 %390, i32* %16, align 4
  br label %375

391:                                              ; preds = %375
  br label %392

392:                                              ; preds = %391, %350
  %393 = load i32, i32* %16, align 4
  %394 = sub nsw i32 %393, 1
  store i32 %394, i32* %18, align 4
  %395 = load i32, i32* %18, align 4
  %396 = load i32, i32* %9, align 4
  %397 = icmp sge i32 %395, %396
  br i1 %397, label %398, label %399

398:                                              ; preds = %392
  br label %450

399:                                              ; preds = %392
  %400 = load i32, i32* %18, align 4
  %401 = load i32, i32* %17, align 4
  %402 = icmp sgt i32 %400, %401
  br i1 %402, label %403, label %449

403:                                              ; preds = %399
  %404 = load i32, i32* %18, align 4
  %405 = load i32, i32* %17, align 4
  %406 = sub nsw i32 %404, %405
  %407 = add nsw i32 %406, 1
  %408 = load i32, i32* %21, align 4
  %409 = add nsw i32 %408, %407
  store i32 %409, i32* %21, align 4
  %410 = load i32*, i32** %6, align 8
  %411 = load i32*, i32** %7, align 8
  %412 = load i32, i32* %17, align 4
  %413 = load i32, i32* %18, align 4
  call void @fallbackQSort3(i32* %410, i32* %411, i32 %412, i32 %413)
  store i32 -1, i32* %19, align 4
  %414 = load i32, i32* %17, align 4
  store i32 %414, i32* %14, align 4
  br label %415

415:                                              ; preds = %445, %403
  %416 = load i32, i32* %14, align 4
  %417 = load i32, i32* %18, align 4
  %418 = icmp sle i32 %416, %417
  br i1 %418, label %419, label %448

419:                                              ; preds = %415
  %420 = load i32*, i32** %7, align 8
  %421 = load i32*, i32** %6, align 8
  %422 = load i32, i32* %14, align 4
  %423 = sext i32 %422 to i64
  %424 = getelementptr inbounds i32, i32* %421, i64 %423
  %425 = load i32, i32* %424, align 4
  %426 = zext i32 %425 to i64
  %427 = getelementptr inbounds i32, i32* %420, i64 %426
  %428 = load i32, i32* %427, align 4
  store i32 %428, i32* %20, align 4
  %429 = load i32, i32* %19, align 4
  %430 = load i32, i32* %20, align 4
  %431 = icmp ne i32 %429, %430
  br i1 %431, label %432, label %444

432:                                              ; preds = %419
  %433 = load i32, i32* %14, align 4
  %434 = and i32 %433, 31
  %435 = shl i32 1, %434
  %436 = load i32*, i32** %8, align 8
  %437 = load i32, i32* %14, align 4
  %438 = ashr i32 %437, 5
  %439 = sext i32 %438 to i64
  %440 = getelementptr inbounds i32, i32* %436, i64 %439
  %441 = load i32, i32* %440, align 4
  %442 = or i32 %441, %435
  store i32 %442, i32* %440, align 4
  %443 = load i32, i32* %20, align 4
  store i32 %443, i32* %19, align 4
  br label %444

444:                                              ; preds = %432, %419
  br label %445

445:                                              ; preds = %444
  %446 = load i32, i32* %14, align 4
  %447 = add nsw i32 %446, 1
  store i32 %447, i32* %14, align 4
  br label %415

448:                                              ; preds = %415
  br label %449

449:                                              ; preds = %448, %399
  br label %256

450:                                              ; preds = %398, %327
  %451 = load i32, i32* %10, align 4
  %452 = icmp sge i32 %451, 4
  br i1 %452, label %453, label %457

453:                                              ; preds = %450
  %454 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %455 = load i32, i32* %21, align 4
  %456 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %454, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.50, i64 0, i64 0), i32 %455)
  br label %457

457:                                              ; preds = %453, %450
  %458 = load i32, i32* %13, align 4
  %459 = mul nsw i32 %458, 2
  store i32 %459, i32* %13, align 4
  %460 = load i32, i32* %13, align 4
  %461 = load i32, i32* %9, align 4
  %462 = icmp sgt i32 %460, %461
  br i1 %462, label %466, label %463

463:                                              ; preds = %457
  %464 = load i32, i32* %21, align 4
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %467

466:                                              ; preds = %463, %457
  br label %468

467:                                              ; preds = %463
  br label %206

468:                                              ; preds = %466
  %469 = load i32, i32* %10, align 4
  %470 = icmp sge i32 %469, 4
  br i1 %470, label %471, label %474

471:                                              ; preds = %468
  %472 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %473 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %472, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.51, i64 0, i64 0))
  br label %474

474:                                              ; preds = %471, %468
  store i32 0, i32* %15, align 4
  store i32 0, i32* %14, align 4
  br label %475

475:                                              ; preds = %505, %474
  %476 = load i32, i32* %14, align 4
  %477 = load i32, i32* %9, align 4
  %478 = icmp slt i32 %476, %477
  br i1 %478, label %479, label %508

479:                                              ; preds = %475
  br label %480

480:                                              ; preds = %486, %479
  %481 = load i32, i32* %15, align 4
  %482 = sext i32 %481 to i64
  %483 = getelementptr inbounds [256 x i32], [256 x i32]* %12, i64 0, i64 %482
  %484 = load i32, i32* %483, align 4
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %486, label %489

486:                                              ; preds = %480
  %487 = load i32, i32* %15, align 4
  %488 = add nsw i32 %487, 1
  store i32 %488, i32* %15, align 4
  br label %480

489:                                              ; preds = %480
  %490 = load i32, i32* %15, align 4
  %491 = sext i32 %490 to i64
  %492 = getelementptr inbounds [256 x i32], [256 x i32]* %12, i64 0, i64 %491
  %493 = load i32, i32* %492, align 4
  %494 = add nsw i32 %493, -1
  store i32 %494, i32* %492, align 4
  %495 = load i32, i32* %15, align 4
  %496 = trunc i32 %495 to i8
  %497 = load i8*, i8** %23, align 8
  %498 = load i32*, i32** %6, align 8
  %499 = load i32, i32* %14, align 4
  %500 = sext i32 %499 to i64
  %501 = getelementptr inbounds i32, i32* %498, i64 %500
  %502 = load i32, i32* %501, align 4
  %503 = zext i32 %502 to i64
  %504 = getelementptr inbounds i8, i8* %497, i64 %503
  store i8 %496, i8* %504, align 1
  br label %505

505:                                              ; preds = %489
  %506 = load i32, i32* %14, align 4
  %507 = add nsw i32 %506, 1
  store i32 %507, i32* %14, align 4
  br label %475

508:                                              ; preds = %475
  %509 = load i32, i32* %15, align 4
  %510 = icmp slt i32 %509, 256
  br i1 %510, label %512, label %511

511:                                              ; preds = %508
  call void @BZ2_bz__AssertH__fail(i32 1005)
  br label %512

512:                                              ; preds = %511, %508
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mainSort(i32* %0, i8* %1, i16* %2, i32* %3, i32 %4, i32 %5, i32* %6) #0 {
  %8 = alloca i32*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i16*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca [256 x i32], align 16
  %21 = alloca [256 x i8], align 16
  %22 = alloca [256 x i32], align 16
  %23 = alloca [256 x i32], align 16
  %24 = alloca i8, align 1
  %25 = alloca i32, align 4
  %26 = alloca i16, align 2
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i16, align 2
  store i32* %0, i32** %8, align 8
  store i8* %1, i8** %9, align 8
  store i16* %2, i16** %10, align 8
  store i32* %3, i32** %11, align 8
  store i32 %4, i32* %12, align 4
  store i32 %5, i32* %13, align 4
  store i32* %6, i32** %14, align 8
  %36 = load i32, i32* %13, align 4
  %37 = icmp sge i32 %36, 4
  br i1 %37, label %38, label %41

38:                                               ; preds = %7
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %40 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.52, i64 0, i64 0))
  br label %41

41:                                               ; preds = %38, %7
  store i32 65536, i32* %15, align 4
  br label %42

42:                                               ; preds = %50, %41
  %43 = load i32, i32* %15, align 4
  %44 = icmp sge i32 %43, 0
  br i1 %44, label %45, label %53

45:                                               ; preds = %42
  %46 = load i32*, i32** %11, align 8
  %47 = load i32, i32* %15, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, i32* %46, i64 %48
  store i32 0, i32* %49, align 4
  br label %50

50:                                               ; preds = %45
  %51 = load i32, i32* %15, align 4
  %52 = add nsw i32 %51, -1
  store i32 %52, i32* %15, align 4
  br label %42

53:                                               ; preds = %42
  %54 = load i8*, i8** %9, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 0
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = shl i32 %57, 8
  store i32 %58, i32* %16, align 4
  %59 = load i32, i32* %12, align 4
  %60 = sub nsw i32 %59, 1
  store i32 %60, i32* %15, align 4
  br label %61

61:                                               ; preds = %155, %53
  %62 = load i32, i32* %15, align 4
  %63 = icmp sge i32 %62, 3
  br i1 %63, label %64, label %158

64:                                               ; preds = %61
  %65 = load i16*, i16** %10, align 8
  %66 = load i32, i32* %15, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i16, i16* %65, i64 %67
  store i16 0, i16* %68, align 2
  %69 = load i32, i32* %16, align 4
  %70 = ashr i32 %69, 8
  %71 = load i8*, i8** %9, align 8
  %72 = load i32, i32* %15, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %71, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i16
  %77 = zext i16 %76 to i32
  %78 = shl i32 %77, 8
  %79 = or i32 %70, %78
  store i32 %79, i32* %16, align 4
  %80 = load i32*, i32** %11, align 8
  %81 = load i32, i32* %16, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i32, i32* %80, i64 %82
  %84 = load i32, i32* %83, align 4
  %85 = add i32 %84, 1
  store i32 %85, i32* %83, align 4
  %86 = load i16*, i16** %10, align 8
  %87 = load i32, i32* %15, align 4
  %88 = sub nsw i32 %87, 1
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i16, i16* %86, i64 %89
  store i16 0, i16* %90, align 2
  %91 = load i32, i32* %16, align 4
  %92 = ashr i32 %91, 8
  %93 = load i8*, i8** %9, align 8
  %94 = load i32, i32* %15, align 4
  %95 = sub nsw i32 %94, 1
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %93, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i16
  %100 = zext i16 %99 to i32
  %101 = shl i32 %100, 8
  %102 = or i32 %92, %101
  store i32 %102, i32* %16, align 4
  %103 = load i32*, i32** %11, align 8
  %104 = load i32, i32* %16, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i32, i32* %103, i64 %105
  %107 = load i32, i32* %106, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %106, align 4
  %109 = load i16*, i16** %10, align 8
  %110 = load i32, i32* %15, align 4
  %111 = sub nsw i32 %110, 2
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i16, i16* %109, i64 %112
  store i16 0, i16* %113, align 2
  %114 = load i32, i32* %16, align 4
  %115 = ashr i32 %114, 8
  %116 = load i8*, i8** %9, align 8
  %117 = load i32, i32* %15, align 4
  %118 = sub nsw i32 %117, 2
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i8, i8* %116, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i16
  %123 = zext i16 %122 to i32
  %124 = shl i32 %123, 8
  %125 = or i32 %115, %124
  store i32 %125, i32* %16, align 4
  %126 = load i32*, i32** %11, align 8
  %127 = load i32, i32* %16, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i32, i32* %126, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %129, align 4
  %132 = load i16*, i16** %10, align 8
  %133 = load i32, i32* %15, align 4
  %134 = sub nsw i32 %133, 3
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i16, i16* %132, i64 %135
  store i16 0, i16* %136, align 2
  %137 = load i32, i32* %16, align 4
  %138 = ashr i32 %137, 8
  %139 = load i8*, i8** %9, align 8
  %140 = load i32, i32* %15, align 4
  %141 = sub nsw i32 %140, 3
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i8, i8* %139, i64 %142
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i16
  %146 = zext i16 %145 to i32
  %147 = shl i32 %146, 8
  %148 = or i32 %138, %147
  store i32 %148, i32* %16, align 4
  %149 = load i32*, i32** %11, align 8
  %150 = load i32, i32* %16, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i32, i32* %149, i64 %151
  %153 = load i32, i32* %152, align 4
  %154 = add i32 %153, 1
  store i32 %154, i32* %152, align 4
  br label %155

155:                                              ; preds = %64
  %156 = load i32, i32* %15, align 4
  %157 = sub nsw i32 %156, 4
  store i32 %157, i32* %15, align 4
  br label %61

158:                                              ; preds = %61
  br label %159

159:                                              ; preds = %184, %158
  %160 = load i32, i32* %15, align 4
  %161 = icmp sge i32 %160, 0
  br i1 %161, label %162, label %187

162:                                              ; preds = %159
  %163 = load i16*, i16** %10, align 8
  %164 = load i32, i32* %15, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds i16, i16* %163, i64 %165
  store i16 0, i16* %166, align 2
  %167 = load i32, i32* %16, align 4
  %168 = ashr i32 %167, 8
  %169 = load i8*, i8** %9, align 8
  %170 = load i32, i32* %15, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds i8, i8* %169, i64 %171
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i16
  %175 = zext i16 %174 to i32
  %176 = shl i32 %175, 8
  %177 = or i32 %168, %176
  store i32 %177, i32* %16, align 4
  %178 = load i32*, i32** %11, align 8
  %179 = load i32, i32* %16, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i32, i32* %178, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = add i32 %182, 1
  store i32 %183, i32* %181, align 4
  br label %184

184:                                              ; preds = %162
  %185 = load i32, i32* %15, align 4
  %186 = add nsw i32 %185, -1
  store i32 %186, i32* %15, align 4
  br label %159

187:                                              ; preds = %159
  store i32 0, i32* %15, align 4
  br label %188

188:                                              ; preds = %209, %187
  %189 = load i32, i32* %15, align 4
  %190 = icmp slt i32 %189, 34
  br i1 %190, label %191, label %212

191:                                              ; preds = %188
  %192 = load i8*, i8** %9, align 8
  %193 = load i32, i32* %15, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds i8, i8* %192, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = load i8*, i8** %9, align 8
  %198 = load i32, i32* %12, align 4
  %199 = load i32, i32* %15, align 4
  %200 = add nsw i32 %198, %199
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds i8, i8* %197, i64 %201
  store i8 %196, i8* %202, align 1
  %203 = load i16*, i16** %10, align 8
  %204 = load i32, i32* %12, align 4
  %205 = load i32, i32* %15, align 4
  %206 = add nsw i32 %204, %205
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds i16, i16* %203, i64 %207
  store i16 0, i16* %208, align 2
  br label %209

209:                                              ; preds = %191
  %210 = load i32, i32* %15, align 4
  %211 = add nsw i32 %210, 1
  store i32 %211, i32* %15, align 4
  br label %188

212:                                              ; preds = %188
  %213 = load i32, i32* %13, align 4
  %214 = icmp sge i32 %213, 4
  br i1 %214, label %215, label %218

215:                                              ; preds = %212
  %216 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %217 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %216, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.48, i64 0, i64 0))
  br label %218

218:                                              ; preds = %215, %212
  store i32 1, i32* %15, align 4
  br label %219

219:                                              ; preds = %235, %218
  %220 = load i32, i32* %15, align 4
  %221 = icmp sle i32 %220, 65536
  br i1 %221, label %222, label %238

222:                                              ; preds = %219
  %223 = load i32*, i32** %11, align 8
  %224 = load i32, i32* %15, align 4
  %225 = sub nsw i32 %224, 1
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds i32, i32* %223, i64 %226
  %228 = load i32, i32* %227, align 4
  %229 = load i32*, i32** %11, align 8
  %230 = load i32, i32* %15, align 4
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i32, i32* %229, i64 %231
  %233 = load i32, i32* %232, align 4
  %234 = add i32 %233, %228
  store i32 %234, i32* %232, align 4
  br label %235

235:                                              ; preds = %222
  %236 = load i32, i32* %15, align 4
  %237 = add nsw i32 %236, 1
  store i32 %237, i32* %15, align 4
  br label %219

238:                                              ; preds = %219
  %239 = load i8*, i8** %9, align 8
  %240 = getelementptr inbounds i8, i8* %239, i64 0
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  %243 = shl i32 %242, 8
  %244 = trunc i32 %243 to i16
  store i16 %244, i16* %26, align 2
  %245 = load i32, i32* %12, align 4
  %246 = sub nsw i32 %245, 1
  store i32 %246, i32* %15, align 4
  br label %247

247:                                              ; preds = %369, %238
  %248 = load i32, i32* %15, align 4
  %249 = icmp sge i32 %248, 3
  br i1 %249, label %250, label %372

250:                                              ; preds = %247
  %251 = load i16, i16* %26, align 2
  %252 = zext i16 %251 to i32
  %253 = ashr i32 %252, 8
  %254 = load i8*, i8** %9, align 8
  %255 = load i32, i32* %15, align 4
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds i8, i8* %254, i64 %256
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i32
  %260 = shl i32 %259, 8
  %261 = or i32 %253, %260
  %262 = trunc i32 %261 to i16
  store i16 %262, i16* %26, align 2
  %263 = load i32*, i32** %11, align 8
  %264 = load i16, i16* %26, align 2
  %265 = zext i16 %264 to i64
  %266 = getelementptr inbounds i32, i32* %263, i64 %265
  %267 = load i32, i32* %266, align 4
  %268 = sub i32 %267, 1
  store i32 %268, i32* %16, align 4
  %269 = load i32, i32* %16, align 4
  %270 = load i32*, i32** %11, align 8
  %271 = load i16, i16* %26, align 2
  %272 = zext i16 %271 to i64
  %273 = getelementptr inbounds i32, i32* %270, i64 %272
  store i32 %269, i32* %273, align 4
  %274 = load i32, i32* %15, align 4
  %275 = load i32*, i32** %8, align 8
  %276 = load i32, i32* %16, align 4
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds i32, i32* %275, i64 %277
  store i32 %274, i32* %278, align 4
  %279 = load i16, i16* %26, align 2
  %280 = zext i16 %279 to i32
  %281 = ashr i32 %280, 8
  %282 = load i8*, i8** %9, align 8
  %283 = load i32, i32* %15, align 4
  %284 = sub nsw i32 %283, 1
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds i8, i8* %282, i64 %285
  %287 = load i8, i8* %286, align 1
  %288 = zext i8 %287 to i32
  %289 = shl i32 %288, 8
  %290 = or i32 %281, %289
  %291 = trunc i32 %290 to i16
  store i16 %291, i16* %26, align 2
  %292 = load i32*, i32** %11, align 8
  %293 = load i16, i16* %26, align 2
  %294 = zext i16 %293 to i64
  %295 = getelementptr inbounds i32, i32* %292, i64 %294
  %296 = load i32, i32* %295, align 4
  %297 = sub i32 %296, 1
  store i32 %297, i32* %16, align 4
  %298 = load i32, i32* %16, align 4
  %299 = load i32*, i32** %11, align 8
  %300 = load i16, i16* %26, align 2
  %301 = zext i16 %300 to i64
  %302 = getelementptr inbounds i32, i32* %299, i64 %301
  store i32 %298, i32* %302, align 4
  %303 = load i32, i32* %15, align 4
  %304 = sub nsw i32 %303, 1
  %305 = load i32*, i32** %8, align 8
  %306 = load i32, i32* %16, align 4
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds i32, i32* %305, i64 %307
  store i32 %304, i32* %308, align 4
  %309 = load i16, i16* %26, align 2
  %310 = zext i16 %309 to i32
  %311 = ashr i32 %310, 8
  %312 = load i8*, i8** %9, align 8
  %313 = load i32, i32* %15, align 4
  %314 = sub nsw i32 %313, 2
  %315 = sext i32 %314 to i64
  %316 = getelementptr inbounds i8, i8* %312, i64 %315
  %317 = load i8, i8* %316, align 1
  %318 = zext i8 %317 to i32
  %319 = shl i32 %318, 8
  %320 = or i32 %311, %319
  %321 = trunc i32 %320 to i16
  store i16 %321, i16* %26, align 2
  %322 = load i32*, i32** %11, align 8
  %323 = load i16, i16* %26, align 2
  %324 = zext i16 %323 to i64
  %325 = getelementptr inbounds i32, i32* %322, i64 %324
  %326 = load i32, i32* %325, align 4
  %327 = sub i32 %326, 1
  store i32 %327, i32* %16, align 4
  %328 = load i32, i32* %16, align 4
  %329 = load i32*, i32** %11, align 8
  %330 = load i16, i16* %26, align 2
  %331 = zext i16 %330 to i64
  %332 = getelementptr inbounds i32, i32* %329, i64 %331
  store i32 %328, i32* %332, align 4
  %333 = load i32, i32* %15, align 4
  %334 = sub nsw i32 %333, 2
  %335 = load i32*, i32** %8, align 8
  %336 = load i32, i32* %16, align 4
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds i32, i32* %335, i64 %337
  store i32 %334, i32* %338, align 4
  %339 = load i16, i16* %26, align 2
  %340 = zext i16 %339 to i32
  %341 = ashr i32 %340, 8
  %342 = load i8*, i8** %9, align 8
  %343 = load i32, i32* %15, align 4
  %344 = sub nsw i32 %343, 3
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds i8, i8* %342, i64 %345
  %347 = load i8, i8* %346, align 1
  %348 = zext i8 %347 to i32
  %349 = shl i32 %348, 8
  %350 = or i32 %341, %349
  %351 = trunc i32 %350 to i16
  store i16 %351, i16* %26, align 2
  %352 = load i32*, i32** %11, align 8
  %353 = load i16, i16* %26, align 2
  %354 = zext i16 %353 to i64
  %355 = getelementptr inbounds i32, i32* %352, i64 %354
  %356 = load i32, i32* %355, align 4
  %357 = sub i32 %356, 1
  store i32 %357, i32* %16, align 4
  %358 = load i32, i32* %16, align 4
  %359 = load i32*, i32** %11, align 8
  %360 = load i16, i16* %26, align 2
  %361 = zext i16 %360 to i64
  %362 = getelementptr inbounds i32, i32* %359, i64 %361
  store i32 %358, i32* %362, align 4
  %363 = load i32, i32* %15, align 4
  %364 = sub nsw i32 %363, 3
  %365 = load i32*, i32** %8, align 8
  %366 = load i32, i32* %16, align 4
  %367 = sext i32 %366 to i64
  %368 = getelementptr inbounds i32, i32* %365, i64 %367
  store i32 %364, i32* %368, align 4
  br label %369

369:                                              ; preds = %250
  %370 = load i32, i32* %15, align 4
  %371 = sub nsw i32 %370, 4
  store i32 %371, i32* %15, align 4
  br label %247

372:                                              ; preds = %247
  br label %373

373:                                              ; preds = %405, %372
  %374 = load i32, i32* %15, align 4
  %375 = icmp sge i32 %374, 0
  br i1 %375, label %376, label %408

376:                                              ; preds = %373
  %377 = load i16, i16* %26, align 2
  %378 = zext i16 %377 to i32
  %379 = ashr i32 %378, 8
  %380 = load i8*, i8** %9, align 8
  %381 = load i32, i32* %15, align 4
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds i8, i8* %380, i64 %382
  %384 = load i8, i8* %383, align 1
  %385 = zext i8 %384 to i32
  %386 = shl i32 %385, 8
  %387 = or i32 %379, %386
  %388 = trunc i32 %387 to i16
  store i16 %388, i16* %26, align 2
  %389 = load i32*, i32** %11, align 8
  %390 = load i16, i16* %26, align 2
  %391 = zext i16 %390 to i64
  %392 = getelementptr inbounds i32, i32* %389, i64 %391
  %393 = load i32, i32* %392, align 4
  %394 = sub i32 %393, 1
  store i32 %394, i32* %16, align 4
  %395 = load i32, i32* %16, align 4
  %396 = load i32*, i32** %11, align 8
  %397 = load i16, i16* %26, align 2
  %398 = zext i16 %397 to i64
  %399 = getelementptr inbounds i32, i32* %396, i64 %398
  store i32 %395, i32* %399, align 4
  %400 = load i32, i32* %15, align 4
  %401 = load i32*, i32** %8, align 8
  %402 = load i32, i32* %16, align 4
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds i32, i32* %401, i64 %403
  store i32 %400, i32* %404, align 4
  br label %405

405:                                              ; preds = %376
  %406 = load i32, i32* %15, align 4
  %407 = add nsw i32 %406, -1
  store i32 %407, i32* %15, align 4
  br label %373

408:                                              ; preds = %373
  store i32 0, i32* %15, align 4
  br label %409

409:                                              ; preds = %420, %408
  %410 = load i32, i32* %15, align 4
  %411 = icmp sle i32 %410, 255
  br i1 %411, label %412, label %423

412:                                              ; preds = %409
  %413 = load i32, i32* %15, align 4
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds [256 x i8], [256 x i8]* %21, i64 0, i64 %414
  store i8 0, i8* %415, align 1
  %416 = load i32, i32* %15, align 4
  %417 = load i32, i32* %15, align 4
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds [256 x i32], [256 x i32]* %20, i64 0, i64 %418
  store i32 %416, i32* %419, align 4
  br label %420

420:                                              ; preds = %412
  %421 = load i32, i32* %15, align 4
  %422 = add nsw i32 %421, 1
  store i32 %422, i32* %15, align 4
  br label %409

423:                                              ; preds = %409
  store i32 1, i32* %28, align 4
  br label %424

424:                                              ; preds = %428, %423
  %425 = load i32, i32* %28, align 4
  %426 = mul nsw i32 3, %425
  %427 = add nsw i32 %426, 1
  store i32 %427, i32* %28, align 4
  br label %428

428:                                              ; preds = %424
  %429 = load i32, i32* %28, align 4
  %430 = icmp sle i32 %429, 256
  br i1 %430, label %424, label %431

431:                                              ; preds = %428
  br label %432

432:                                              ; preds = %514, %431
  %433 = load i32, i32* %28, align 4
  %434 = sdiv i32 %433, 3
  store i32 %434, i32* %28, align 4
  %435 = load i32, i32* %28, align 4
  store i32 %435, i32* %15, align 4
  br label %436

436:                                              ; preds = %510, %432
  %437 = load i32, i32* %15, align 4
  %438 = icmp sle i32 %437, 255
  br i1 %438, label %439, label %513

439:                                              ; preds = %436
  %440 = load i32, i32* %15, align 4
  %441 = sext i32 %440 to i64
  %442 = getelementptr inbounds [256 x i32], [256 x i32]* %20, i64 0, i64 %441
  %443 = load i32, i32* %442, align 4
  store i32 %443, i32* %27, align 4
  %444 = load i32, i32* %15, align 4
  store i32 %444, i32* %16, align 4
  br label %445

445:                                              ; preds = %503, %439
  %446 = load i32*, i32** %11, align 8
  %447 = load i32, i32* %16, align 4
  %448 = load i32, i32* %28, align 4
  %449 = sub nsw i32 %447, %448
  %450 = sext i32 %449 to i64
  %451 = getelementptr inbounds [256 x i32], [256 x i32]* %20, i64 0, i64 %450
  %452 = load i32, i32* %451, align 4
  %453 = add nsw i32 %452, 1
  %454 = shl i32 %453, 8
  %455 = sext i32 %454 to i64
  %456 = getelementptr inbounds i32, i32* %446, i64 %455
  %457 = load i32, i32* %456, align 4
  %458 = load i32*, i32** %11, align 8
  %459 = load i32, i32* %16, align 4
  %460 = load i32, i32* %28, align 4
  %461 = sub nsw i32 %459, %460
  %462 = sext i32 %461 to i64
  %463 = getelementptr inbounds [256 x i32], [256 x i32]* %20, i64 0, i64 %462
  %464 = load i32, i32* %463, align 4
  %465 = shl i32 %464, 8
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds i32, i32* %458, i64 %466
  %468 = load i32, i32* %467, align 4
  %469 = sub i32 %457, %468
  %470 = load i32*, i32** %11, align 8
  %471 = load i32, i32* %27, align 4
  %472 = add nsw i32 %471, 1
  %473 = shl i32 %472, 8
  %474 = sext i32 %473 to i64
  %475 = getelementptr inbounds i32, i32* %470, i64 %474
  %476 = load i32, i32* %475, align 4
  %477 = load i32*, i32** %11, align 8
  %478 = load i32, i32* %27, align 4
  %479 = shl i32 %478, 8
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds i32, i32* %477, i64 %480
  %482 = load i32, i32* %481, align 4
  %483 = sub i32 %476, %482
  %484 = icmp ugt i32 %469, %483
  br i1 %484, label %485, label %504

485:                                              ; preds = %445
  %486 = load i32, i32* %16, align 4
  %487 = load i32, i32* %28, align 4
  %488 = sub nsw i32 %486, %487
  %489 = sext i32 %488 to i64
  %490 = getelementptr inbounds [256 x i32], [256 x i32]* %20, i64 0, i64 %489
  %491 = load i32, i32* %490, align 4
  %492 = load i32, i32* %16, align 4
  %493 = sext i32 %492 to i64
  %494 = getelementptr inbounds [256 x i32], [256 x i32]* %20, i64 0, i64 %493
  store i32 %491, i32* %494, align 4
  %495 = load i32, i32* %16, align 4
  %496 = load i32, i32* %28, align 4
  %497 = sub nsw i32 %495, %496
  store i32 %497, i32* %16, align 4
  %498 = load i32, i32* %16, align 4
  %499 = load i32, i32* %28, align 4
  %500 = sub nsw i32 %499, 1
  %501 = icmp sle i32 %498, %500
  br i1 %501, label %502, label %503

502:                                              ; preds = %485
  br label %505

503:                                              ; preds = %485
  br label %445

504:                                              ; preds = %445
  br label %505

505:                                              ; preds = %504, %502
  %506 = load i32, i32* %27, align 4
  %507 = load i32, i32* %16, align 4
  %508 = sext i32 %507 to i64
  %509 = getelementptr inbounds [256 x i32], [256 x i32]* %20, i64 0, i64 %508
  store i32 %506, i32* %509, align 4
  br label %510

510:                                              ; preds = %505
  %511 = load i32, i32* %15, align 4
  %512 = add nsw i32 %511, 1
  store i32 %512, i32* %15, align 4
  br label %436

513:                                              ; preds = %436
  br label %514

514:                                              ; preds = %513
  %515 = load i32, i32* %28, align 4
  %516 = icmp ne i32 %515, 1
  br i1 %516, label %432, label %517

517:                                              ; preds = %514
  store i32 0, i32* %25, align 4
  store i32 0, i32* %15, align 4
  br label %518

518:                                              ; preds = %877, %517
  %519 = load i32, i32* %15, align 4
  %520 = icmp sle i32 %519, 255
  br i1 %520, label %521, label %880

521:                                              ; preds = %518
  %522 = load i32, i32* %15, align 4
  %523 = sext i32 %522 to i64
  %524 = getelementptr inbounds [256 x i32], [256 x i32]* %20, i64 0, i64 %523
  %525 = load i32, i32* %524, align 4
  store i32 %525, i32* %18, align 4
  store i32 0, i32* %16, align 4
  br label %526

526:                                              ; preds = %604, %521
  %527 = load i32, i32* %16, align 4
  %528 = icmp sle i32 %527, 255
  br i1 %528, label %529, label %607

529:                                              ; preds = %526
  %530 = load i32, i32* %16, align 4
  %531 = load i32, i32* %18, align 4
  %532 = icmp ne i32 %530, %531
  br i1 %532, label %533, label %603

533:                                              ; preds = %529
  %534 = load i32, i32* %18, align 4
  %535 = shl i32 %534, 8
  %536 = load i32, i32* %16, align 4
  %537 = add nsw i32 %535, %536
  store i32 %537, i32* %19, align 4
  %538 = load i32*, i32** %11, align 8
  %539 = load i32, i32* %19, align 4
  %540 = sext i32 %539 to i64
  %541 = getelementptr inbounds i32, i32* %538, i64 %540
  %542 = load i32, i32* %541, align 4
  %543 = and i32 %542, 2097152
  %544 = icmp ne i32 %543, 0
  br i1 %544, label %596, label %545

545:                                              ; preds = %533
  %546 = load i32*, i32** %11, align 8
  %547 = load i32, i32* %19, align 4
  %548 = sext i32 %547 to i64
  %549 = getelementptr inbounds i32, i32* %546, i64 %548
  %550 = load i32, i32* %549, align 4
  %551 = and i32 %550, -2097153
  store i32 %551, i32* %29, align 4
  %552 = load i32*, i32** %11, align 8
  %553 = load i32, i32* %19, align 4
  %554 = add nsw i32 %553, 1
  %555 = sext i32 %554 to i64
  %556 = getelementptr inbounds i32, i32* %552, i64 %555
  %557 = load i32, i32* %556, align 4
  %558 = and i32 %557, -2097153
  %559 = sub i32 %558, 1
  store i32 %559, i32* %30, align 4
  %560 = load i32, i32* %30, align 4
  %561 = load i32, i32* %29, align 4
  %562 = icmp sgt i32 %560, %561
  br i1 %562, label %563, label %595

563:                                              ; preds = %545
  %564 = load i32, i32* %13, align 4
  %565 = icmp sge i32 %564, 4
  br i1 %565, label %566, label %576

566:                                              ; preds = %563
  %567 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %568 = load i32, i32* %18, align 4
  %569 = load i32, i32* %16, align 4
  %570 = load i32, i32* %25, align 4
  %571 = load i32, i32* %30, align 4
  %572 = load i32, i32* %29, align 4
  %573 = sub nsw i32 %571, %572
  %574 = add nsw i32 %573, 1
  %575 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %567, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.53, i64 0, i64 0), i32 %568, i32 %569, i32 %570, i32 %574)
  br label %576

576:                                              ; preds = %566, %563
  %577 = load i32*, i32** %8, align 8
  %578 = load i8*, i8** %9, align 8
  %579 = load i16*, i16** %10, align 8
  %580 = load i32, i32* %12, align 4
  %581 = load i32, i32* %29, align 4
  %582 = load i32, i32* %30, align 4
  %583 = load i32*, i32** %14, align 8
  call void @mainQSort3(i32* %577, i8* %578, i16* %579, i32 %580, i32 %581, i32 %582, i32 2, i32* %583)
  %584 = load i32, i32* %30, align 4
  %585 = load i32, i32* %29, align 4
  %586 = sub nsw i32 %584, %585
  %587 = add nsw i32 %586, 1
  %588 = load i32, i32* %25, align 4
  %589 = add nsw i32 %588, %587
  store i32 %589, i32* %25, align 4
  %590 = load i32*, i32** %14, align 8
  %591 = load i32, i32* %590, align 4
  %592 = icmp slt i32 %591, 0
  br i1 %592, label %593, label %594

593:                                              ; preds = %576
  br label %891

594:                                              ; preds = %576
  br label %595

595:                                              ; preds = %594, %545
  br label %596

596:                                              ; preds = %595, %533
  %597 = load i32*, i32** %11, align 8
  %598 = load i32, i32* %19, align 4
  %599 = sext i32 %598 to i64
  %600 = getelementptr inbounds i32, i32* %597, i64 %599
  %601 = load i32, i32* %600, align 4
  %602 = or i32 %601, 2097152
  store i32 %602, i32* %600, align 4
  br label %603

603:                                              ; preds = %596, %529
  br label %604

604:                                              ; preds = %603
  %605 = load i32, i32* %16, align 4
  %606 = add nsw i32 %605, 1
  store i32 %606, i32* %16, align 4
  br label %526

607:                                              ; preds = %526
  %608 = load i32, i32* %18, align 4
  %609 = sext i32 %608 to i64
  %610 = getelementptr inbounds [256 x i8], [256 x i8]* %21, i64 0, i64 %609
  %611 = load i8, i8* %610, align 1
  %612 = icmp ne i8 %611, 0
  br i1 %612, label %613, label %614

613:                                              ; preds = %607
  call void @BZ2_bz__AssertH__fail(i32 1006)
  br label %614

614:                                              ; preds = %613, %607
  store i32 0, i32* %16, align 4
  br label %615

615:                                              ; preds = %645, %614
  %616 = load i32, i32* %16, align 4
  %617 = icmp sle i32 %616, 255
  br i1 %617, label %618, label %648

618:                                              ; preds = %615
  %619 = load i32*, i32** %11, align 8
  %620 = load i32, i32* %16, align 4
  %621 = shl i32 %620, 8
  %622 = load i32, i32* %18, align 4
  %623 = add nsw i32 %621, %622
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds i32, i32* %619, i64 %624
  %626 = load i32, i32* %625, align 4
  %627 = and i32 %626, -2097153
  %628 = load i32, i32* %16, align 4
  %629 = sext i32 %628 to i64
  %630 = getelementptr inbounds [256 x i32], [256 x i32]* %22, i64 0, i64 %629
  store i32 %627, i32* %630, align 4
  %631 = load i32*, i32** %11, align 8
  %632 = load i32, i32* %16, align 4
  %633 = shl i32 %632, 8
  %634 = load i32, i32* %18, align 4
  %635 = add nsw i32 %633, %634
  %636 = add nsw i32 %635, 1
  %637 = sext i32 %636 to i64
  %638 = getelementptr inbounds i32, i32* %631, i64 %637
  %639 = load i32, i32* %638, align 4
  %640 = and i32 %639, -2097153
  %641 = sub i32 %640, 1
  %642 = load i32, i32* %16, align 4
  %643 = sext i32 %642 to i64
  %644 = getelementptr inbounds [256 x i32], [256 x i32]* %23, i64 0, i64 %643
  store i32 %641, i32* %644, align 4
  br label %645

645:                                              ; preds = %618
  %646 = load i32, i32* %16, align 4
  %647 = add nsw i32 %646, 1
  store i32 %647, i32* %16, align 4
  br label %615

648:                                              ; preds = %615
  %649 = load i32*, i32** %11, align 8
  %650 = load i32, i32* %18, align 4
  %651 = shl i32 %650, 8
  %652 = sext i32 %651 to i64
  %653 = getelementptr inbounds i32, i32* %649, i64 %652
  %654 = load i32, i32* %653, align 4
  %655 = and i32 %654, -2097153
  store i32 %655, i32* %16, align 4
  br label %656

656:                                              ; preds = %698, %648
  %657 = load i32, i32* %16, align 4
  %658 = load i32, i32* %18, align 4
  %659 = sext i32 %658 to i64
  %660 = getelementptr inbounds [256 x i32], [256 x i32]* %22, i64 0, i64 %659
  %661 = load i32, i32* %660, align 4
  %662 = icmp slt i32 %657, %661
  br i1 %662, label %663, label %701

663:                                              ; preds = %656
  %664 = load i32*, i32** %8, align 8
  %665 = load i32, i32* %16, align 4
  %666 = sext i32 %665 to i64
  %667 = getelementptr inbounds i32, i32* %664, i64 %666
  %668 = load i32, i32* %667, align 4
  %669 = sub i32 %668, 1
  store i32 %669, i32* %17, align 4
  %670 = load i32, i32* %17, align 4
  %671 = icmp slt i32 %670, 0
  br i1 %671, label %672, label %676

672:                                              ; preds = %663
  %673 = load i32, i32* %12, align 4
  %674 = load i32, i32* %17, align 4
  %675 = add nsw i32 %674, %673
  store i32 %675, i32* %17, align 4
  br label %676

676:                                              ; preds = %672, %663
  %677 = load i8*, i8** %9, align 8
  %678 = load i32, i32* %17, align 4
  %679 = sext i32 %678 to i64
  %680 = getelementptr inbounds i8, i8* %677, i64 %679
  %681 = load i8, i8* %680, align 1
  store i8 %681, i8* %24, align 1
  %682 = load i8, i8* %24, align 1
  %683 = zext i8 %682 to i64
  %684 = getelementptr inbounds [256 x i8], [256 x i8]* %21, i64 0, i64 %683
  %685 = load i8, i8* %684, align 1
  %686 = icmp ne i8 %685, 0
  br i1 %686, label %697, label %687

687:                                              ; preds = %676
  %688 = load i32, i32* %17, align 4
  %689 = load i32*, i32** %8, align 8
  %690 = load i8, i8* %24, align 1
  %691 = zext i8 %690 to i64
  %692 = getelementptr inbounds [256 x i32], [256 x i32]* %22, i64 0, i64 %691
  %693 = load i32, i32* %692, align 4
  %694 = add nsw i32 %693, 1
  store i32 %694, i32* %692, align 4
  %695 = sext i32 %693 to i64
  %696 = getelementptr inbounds i32, i32* %689, i64 %695
  store i32 %688, i32* %696, align 4
  br label %697

697:                                              ; preds = %687, %676
  br label %698

698:                                              ; preds = %697
  %699 = load i32, i32* %16, align 4
  %700 = add nsw i32 %699, 1
  store i32 %700, i32* %16, align 4
  br label %656

701:                                              ; preds = %656
  %702 = load i32*, i32** %11, align 8
  %703 = load i32, i32* %18, align 4
  %704 = add nsw i32 %703, 1
  %705 = shl i32 %704, 8
  %706 = sext i32 %705 to i64
  %707 = getelementptr inbounds i32, i32* %702, i64 %706
  %708 = load i32, i32* %707, align 4
  %709 = and i32 %708, -2097153
  %710 = sub i32 %709, 1
  store i32 %710, i32* %16, align 4
  br label %711

711:                                              ; preds = %753, %701
  %712 = load i32, i32* %16, align 4
  %713 = load i32, i32* %18, align 4
  %714 = sext i32 %713 to i64
  %715 = getelementptr inbounds [256 x i32], [256 x i32]* %23, i64 0, i64 %714
  %716 = load i32, i32* %715, align 4
  %717 = icmp sgt i32 %712, %716
  br i1 %717, label %718, label %756

718:                                              ; preds = %711
  %719 = load i32*, i32** %8, align 8
  %720 = load i32, i32* %16, align 4
  %721 = sext i32 %720 to i64
  %722 = getelementptr inbounds i32, i32* %719, i64 %721
  %723 = load i32, i32* %722, align 4
  %724 = sub i32 %723, 1
  store i32 %724, i32* %17, align 4
  %725 = load i32, i32* %17, align 4
  %726 = icmp slt i32 %725, 0
  br i1 %726, label %727, label %731

727:                                              ; preds = %718
  %728 = load i32, i32* %12, align 4
  %729 = load i32, i32* %17, align 4
  %730 = add nsw i32 %729, %728
  store i32 %730, i32* %17, align 4
  br label %731

731:                                              ; preds = %727, %718
  %732 = load i8*, i8** %9, align 8
  %733 = load i32, i32* %17, align 4
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds i8, i8* %732, i64 %734
  %736 = load i8, i8* %735, align 1
  store i8 %736, i8* %24, align 1
  %737 = load i8, i8* %24, align 1
  %738 = zext i8 %737 to i64
  %739 = getelementptr inbounds [256 x i8], [256 x i8]* %21, i64 0, i64 %738
  %740 = load i8, i8* %739, align 1
  %741 = icmp ne i8 %740, 0
  br i1 %741, label %752, label %742

742:                                              ; preds = %731
  %743 = load i32, i32* %17, align 4
  %744 = load i32*, i32** %8, align 8
  %745 = load i8, i8* %24, align 1
  %746 = zext i8 %745 to i64
  %747 = getelementptr inbounds [256 x i32], [256 x i32]* %23, i64 0, i64 %746
  %748 = load i32, i32* %747, align 4
  %749 = add nsw i32 %748, -1
  store i32 %749, i32* %747, align 4
  %750 = sext i32 %748 to i64
  %751 = getelementptr inbounds i32, i32* %744, i64 %750
  store i32 %743, i32* %751, align 4
  br label %752

752:                                              ; preds = %742, %731
  br label %753

753:                                              ; preds = %752
  %754 = load i32, i32* %16, align 4
  %755 = add nsw i32 %754, -1
  store i32 %755, i32* %16, align 4
  br label %711

756:                                              ; preds = %711
  %757 = load i32, i32* %18, align 4
  %758 = sext i32 %757 to i64
  %759 = getelementptr inbounds [256 x i32], [256 x i32]* %22, i64 0, i64 %758
  %760 = load i32, i32* %759, align 4
  %761 = sub nsw i32 %760, 1
  %762 = load i32, i32* %18, align 4
  %763 = sext i32 %762 to i64
  %764 = getelementptr inbounds [256 x i32], [256 x i32]* %23, i64 0, i64 %763
  %765 = load i32, i32* %764, align 4
  %766 = icmp eq i32 %761, %765
  br i1 %766, label %782, label %767

767:                                              ; preds = %756
  %768 = load i32, i32* %18, align 4
  %769 = sext i32 %768 to i64
  %770 = getelementptr inbounds [256 x i32], [256 x i32]* %22, i64 0, i64 %769
  %771 = load i32, i32* %770, align 4
  %772 = icmp eq i32 %771, 0
  br i1 %772, label %773, label %781

773:                                              ; preds = %767
  %774 = load i32, i32* %18, align 4
  %775 = sext i32 %774 to i64
  %776 = getelementptr inbounds [256 x i32], [256 x i32]* %23, i64 0, i64 %775
  %777 = load i32, i32* %776, align 4
  %778 = load i32, i32* %12, align 4
  %779 = sub nsw i32 %778, 1
  %780 = icmp eq i32 %777, %779
  br i1 %780, label %782, label %781

781:                                              ; preds = %773, %767
  call void @BZ2_bz__AssertH__fail(i32 1007)
  br label %782

782:                                              ; preds = %781, %773, %756
  store i32 0, i32* %16, align 4
  br label %783

783:                                              ; preds = %796, %782
  %784 = load i32, i32* %16, align 4
  %785 = icmp sle i32 %784, 255
  br i1 %785, label %786, label %799

786:                                              ; preds = %783
  %787 = load i32*, i32** %11, align 8
  %788 = load i32, i32* %16, align 4
  %789 = shl i32 %788, 8
  %790 = load i32, i32* %18, align 4
  %791 = add nsw i32 %789, %790
  %792 = sext i32 %791 to i64
  %793 = getelementptr inbounds i32, i32* %787, i64 %792
  %794 = load i32, i32* %793, align 4
  %795 = or i32 %794, 2097152
  store i32 %795, i32* %793, align 4
  br label %796

796:                                              ; preds = %786
  %797 = load i32, i32* %16, align 4
  %798 = add nsw i32 %797, 1
  store i32 %798, i32* %16, align 4
  br label %783

799:                                              ; preds = %783
  %800 = load i32, i32* %18, align 4
  %801 = sext i32 %800 to i64
  %802 = getelementptr inbounds [256 x i8], [256 x i8]* %21, i64 0, i64 %801
  store i8 1, i8* %802, align 1
  %803 = load i32, i32* %15, align 4
  %804 = icmp slt i32 %803, 255
  br i1 %804, label %805, label %876

805:                                              ; preds = %799
  %806 = load i32*, i32** %11, align 8
  %807 = load i32, i32* %18, align 4
  %808 = shl i32 %807, 8
  %809 = sext i32 %808 to i64
  %810 = getelementptr inbounds i32, i32* %806, i64 %809
  %811 = load i32, i32* %810, align 4
  %812 = and i32 %811, -2097153
  store i32 %812, i32* %31, align 4
  %813 = load i32*, i32** %11, align 8
  %814 = load i32, i32* %18, align 4
  %815 = add nsw i32 %814, 1
  %816 = shl i32 %815, 8
  %817 = sext i32 %816 to i64
  %818 = getelementptr inbounds i32, i32* %813, i64 %817
  %819 = load i32, i32* %818, align 4
  %820 = and i32 %819, -2097153
  %821 = load i32, i32* %31, align 4
  %822 = sub i32 %820, %821
  store i32 %822, i32* %32, align 4
  store i32 0, i32* %33, align 4
  br label %823

823:                                              ; preds = %828, %805
  %824 = load i32, i32* %32, align 4
  %825 = load i32, i32* %33, align 4
  %826 = ashr i32 %824, %825
  %827 = icmp sgt i32 %826, 65534
  br i1 %827, label %828, label %831

828:                                              ; preds = %823
  %829 = load i32, i32* %33, align 4
  %830 = add nsw i32 %829, 1
  store i32 %830, i32* %33, align 4
  br label %823

831:                                              ; preds = %823
  %832 = load i32, i32* %32, align 4
  %833 = sub nsw i32 %832, 1
  store i32 %833, i32* %16, align 4
  br label %834

834:                                              ; preds = %865, %831
  %835 = load i32, i32* %16, align 4
  %836 = icmp sge i32 %835, 0
  br i1 %836, label %837, label %868

837:                                              ; preds = %834
  %838 = load i32*, i32** %8, align 8
  %839 = load i32, i32* %31, align 4
  %840 = load i32, i32* %16, align 4
  %841 = add nsw i32 %839, %840
  %842 = sext i32 %841 to i64
  %843 = getelementptr inbounds i32, i32* %838, i64 %842
  %844 = load i32, i32* %843, align 4
  store i32 %844, i32* %34, align 4
  %845 = load i32, i32* %16, align 4
  %846 = load i32, i32* %33, align 4
  %847 = ashr i32 %845, %846
  %848 = trunc i32 %847 to i16
  store i16 %848, i16* %35, align 2
  %849 = load i16, i16* %35, align 2
  %850 = load i16*, i16** %10, align 8
  %851 = load i32, i32* %34, align 4
  %852 = sext i32 %851 to i64
  %853 = getelementptr inbounds i16, i16* %850, i64 %852
  store i16 %849, i16* %853, align 2
  %854 = load i32, i32* %34, align 4
  %855 = icmp slt i32 %854, 34
  br i1 %855, label %856, label %864

856:                                              ; preds = %837
  %857 = load i16, i16* %35, align 2
  %858 = load i16*, i16** %10, align 8
  %859 = load i32, i32* %34, align 4
  %860 = load i32, i32* %12, align 4
  %861 = add nsw i32 %859, %860
  %862 = sext i32 %861 to i64
  %863 = getelementptr inbounds i16, i16* %858, i64 %862
  store i16 %857, i16* %863, align 2
  br label %864

864:                                              ; preds = %856, %837
  br label %865

865:                                              ; preds = %864
  %866 = load i32, i32* %16, align 4
  %867 = add nsw i32 %866, -1
  store i32 %867, i32* %16, align 4
  br label %834

868:                                              ; preds = %834
  %869 = load i32, i32* %32, align 4
  %870 = sub nsw i32 %869, 1
  %871 = load i32, i32* %33, align 4
  %872 = ashr i32 %870, %871
  %873 = icmp sle i32 %872, 65535
  br i1 %873, label %875, label %874

874:                                              ; preds = %868
  call void @BZ2_bz__AssertH__fail(i32 1002)
  br label %875

875:                                              ; preds = %874, %868
  br label %876

876:                                              ; preds = %875, %799
  br label %877

877:                                              ; preds = %876
  %878 = load i32, i32* %15, align 4
  %879 = add nsw i32 %878, 1
  store i32 %879, i32* %15, align 4
  br label %518

880:                                              ; preds = %518
  %881 = load i32, i32* %13, align 4
  %882 = icmp sge i32 %881, 4
  br i1 %882, label %883, label %891

883:                                              ; preds = %880
  %884 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %885 = load i32, i32* %12, align 4
  %886 = load i32, i32* %25, align 4
  %887 = load i32, i32* %12, align 4
  %888 = load i32, i32* %25, align 4
  %889 = sub nsw i32 %887, %888
  %890 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %884, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.54, i64 0, i64 0), i32 %885, i32 %886, i32 %889)
  br label %891

891:                                              ; preds = %593, %883, %880
  ret void
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_bz__AssertH__fail(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %4 = load i32, i32* %2, align 4
  %5 = call i8* @BZ2_bzlibVersion()
  %6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([442 x i8], [442 x i8]* @.str.6, i64 0, i64 0), i32 %4, i8* %5)
  %7 = load i32, i32* %2, align 4
  %8 = icmp eq i32 %7, 1007
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([1057 x i8], [1057 x i8]* @.str.7, i64 0, i64 0))
  br label %12

12:                                               ; preds = %9, %1
  call void @exit(i32 3) #8
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_hbMakeCodeLengths(i8* %0, i32* %1, i32 %2, i32 %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8, align 1
  %17 = alloca [260 x i32], align 16
  %18 = alloca [516 x i32], align 16
  %19 = alloca [516 x i32], align 16
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  store i32 0, i32* %13, align 4
  br label %30

30:                                               ; preds = %55, %4
  %31 = load i32, i32* %13, align 4
  %32 = load i32, i32* %7, align 4
  %33 = icmp slt i32 %31, %32
  br i1 %33, label %34, label %58

34:                                               ; preds = %30
  %35 = load i32*, i32** %6, align 8
  %36 = load i32, i32* %13, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %35, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %34
  br label %48

42:                                               ; preds = %34
  %43 = load i32*, i32** %6, align 8
  %44 = load i32, i32* %13, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i32, i32* %43, i64 %45
  %47 = load i32, i32* %46, align 4
  br label %48

48:                                               ; preds = %42, %41
  %49 = phi i32 [ 1, %41 ], [ %47, %42 ]
  %50 = shl i32 %49, 8
  %51 = load i32, i32* %13, align 4
  %52 = add nsw i32 %51, 1
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %53
  store i32 %50, i32* %54, align 4
  br label %55

55:                                               ; preds = %48
  %56 = load i32, i32* %13, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %13, align 4
  br label %30

58:                                               ; preds = %30
  br label %59

59:                                               ; preds = %58, %429
  %60 = load i32, i32* %7, align 4
  store i32 %60, i32* %9, align 4
  store i32 0, i32* %10, align 4
  %61 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 0
  store i32 0, i32* %61, align 16
  %62 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 0
  store i32 0, i32* %62, align 16
  %63 = getelementptr inbounds [516 x i32], [516 x i32]* %19, i64 0, i64 0
  store i32 -2, i32* %63, align 16
  store i32 1, i32* %13, align 4
  br label %64

64:                                               ; preds = %113, %59
  %65 = load i32, i32* %13, align 4
  %66 = load i32, i32* %7, align 4
  %67 = icmp sle i32 %65, %66
  br i1 %67, label %68, label %116

68:                                               ; preds = %64
  %69 = load i32, i32* %13, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [516 x i32], [516 x i32]* %19, i64 0, i64 %70
  store i32 -1, i32* %71, align 4
  %72 = load i32, i32* %10, align 4
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %10, align 4
  %74 = load i32, i32* %13, align 4
  %75 = load i32, i32* %10, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %76
  store i32 %74, i32* %77, align 4
  %78 = load i32, i32* %10, align 4
  store i32 %78, i32* %20, align 4
  %79 = load i32, i32* %20, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %80
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %21, align 4
  br label %83

83:                                               ; preds = %97, %68
  %84 = load i32, i32* %21, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = load i32, i32* %20, align 4
  %89 = ashr i32 %88, 1
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = icmp slt i32 %87, %95
  br i1 %96, label %97, label %108

97:                                               ; preds = %83
  %98 = load i32, i32* %20, align 4
  %99 = ashr i32 %98, 1
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %100
  %102 = load i32, i32* %101, align 4
  %103 = load i32, i32* %20, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %104
  store i32 %102, i32* %105, align 4
  %106 = load i32, i32* %20, align 4
  %107 = ashr i32 %106, 1
  store i32 %107, i32* %20, align 4
  br label %83

108:                                              ; preds = %83
  %109 = load i32, i32* %21, align 4
  %110 = load i32, i32* %20, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %111
  store i32 %109, i32* %112, align 4
  br label %113

113:                                              ; preds = %108
  %114 = load i32, i32* %13, align 4
  %115 = add nsw i32 %114, 1
  store i32 %115, i32* %13, align 4
  br label %64

116:                                              ; preds = %64
  %117 = load i32, i32* %10, align 4
  %118 = icmp slt i32 %117, 260
  br i1 %118, label %120, label %119

119:                                              ; preds = %116
  call void @BZ2_bz__AssertH__fail(i32 2001)
  br label %120

120:                                              ; preds = %119, %116
  br label %121

121:                                              ; preds = %358, %120
  %122 = load i32, i32* %10, align 4
  %123 = icmp sgt i32 %122, 1
  br i1 %123, label %124, label %363

124:                                              ; preds = %121
  %125 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 1
  %126 = load i32, i32* %125, align 4
  store i32 %126, i32* %11, align 4
  %127 = load i32, i32* %10, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 1
  store i32 %130, i32* %131, align 4
  %132 = load i32, i32* %10, align 4
  %133 = add nsw i32 %132, -1
  store i32 %133, i32* %10, align 4
  store i32 1, i32* %22, align 4
  %134 = load i32, i32* %22, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %135
  %137 = load i32, i32* %136, align 4
  store i32 %137, i32* %24, align 4
  br label %138

138:                                              ; preds = %124, %183
  %139 = load i32, i32* %22, align 4
  %140 = shl i32 %139, 1
  store i32 %140, i32* %23, align 4
  %141 = load i32, i32* %23, align 4
  %142 = load i32, i32* %10, align 4
  %143 = icmp sgt i32 %141, %142
  br i1 %143, label %144, label %145

144:                                              ; preds = %138
  br label %192

145:                                              ; preds = %138
  %146 = load i32, i32* %23, align 4
  %147 = load i32, i32* %10, align 4
  %148 = icmp slt i32 %146, %147
  br i1 %148, label %149, label %169

149:                                              ; preds = %145
  %150 = load i32, i32* %23, align 4
  %151 = add nsw i32 %150, 1
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %152
  %154 = load i32, i32* %153, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = load i32, i32* %23, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %162
  %164 = load i32, i32* %163, align 4
  %165 = icmp slt i32 %157, %164
  br i1 %165, label %166, label %169

166:                                              ; preds = %149
  %167 = load i32, i32* %23, align 4
  %168 = add nsw i32 %167, 1
  store i32 %168, i32* %23, align 4
  br label %169

169:                                              ; preds = %166, %149, %145
  %170 = load i32, i32* %24, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %171
  %173 = load i32, i32* %172, align 4
  %174 = load i32, i32* %23, align 4
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %175
  %177 = load i32, i32* %176, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %178
  %180 = load i32, i32* %179, align 4
  %181 = icmp slt i32 %173, %180
  br i1 %181, label %182, label %183

182:                                              ; preds = %169
  br label %192

183:                                              ; preds = %169
  %184 = load i32, i32* %23, align 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %185
  %187 = load i32, i32* %186, align 4
  %188 = load i32, i32* %22, align 4
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %189
  store i32 %187, i32* %190, align 4
  %191 = load i32, i32* %23, align 4
  store i32 %191, i32* %22, align 4
  br label %138

192:                                              ; preds = %182, %144
  %193 = load i32, i32* %24, align 4
  %194 = load i32, i32* %22, align 4
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %195
  store i32 %193, i32* %196, align 4
  %197 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 1
  %198 = load i32, i32* %197, align 4
  store i32 %198, i32* %12, align 4
  %199 = load i32, i32* %10, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %200
  %202 = load i32, i32* %201, align 4
  %203 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 1
  store i32 %202, i32* %203, align 4
  %204 = load i32, i32* %10, align 4
  %205 = add nsw i32 %204, -1
  store i32 %205, i32* %10, align 4
  store i32 1, i32* %25, align 4
  %206 = load i32, i32* %25, align 4
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %207
  %209 = load i32, i32* %208, align 4
  store i32 %209, i32* %27, align 4
  br label %210

210:                                              ; preds = %192, %255
  %211 = load i32, i32* %25, align 4
  %212 = shl i32 %211, 1
  store i32 %212, i32* %26, align 4
  %213 = load i32, i32* %26, align 4
  %214 = load i32, i32* %10, align 4
  %215 = icmp sgt i32 %213, %214
  br i1 %215, label %216, label %217

216:                                              ; preds = %210
  br label %264

217:                                              ; preds = %210
  %218 = load i32, i32* %26, align 4
  %219 = load i32, i32* %10, align 4
  %220 = icmp slt i32 %218, %219
  br i1 %220, label %221, label %241

221:                                              ; preds = %217
  %222 = load i32, i32* %26, align 4
  %223 = add nsw i32 %222, 1
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %224
  %226 = load i32, i32* %225, align 4
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = load i32, i32* %26, align 4
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %231
  %233 = load i32, i32* %232, align 4
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %234
  %236 = load i32, i32* %235, align 4
  %237 = icmp slt i32 %229, %236
  br i1 %237, label %238, label %241

238:                                              ; preds = %221
  %239 = load i32, i32* %26, align 4
  %240 = add nsw i32 %239, 1
  store i32 %240, i32* %26, align 4
  br label %241

241:                                              ; preds = %238, %221, %217
  %242 = load i32, i32* %27, align 4
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %243
  %245 = load i32, i32* %244, align 4
  %246 = load i32, i32* %26, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %247
  %249 = load i32, i32* %248, align 4
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %250
  %252 = load i32, i32* %251, align 4
  %253 = icmp slt i32 %245, %252
  br i1 %253, label %254, label %255

254:                                              ; preds = %241
  br label %264

255:                                              ; preds = %241
  %256 = load i32, i32* %26, align 4
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %257
  %259 = load i32, i32* %258, align 4
  %260 = load i32, i32* %25, align 4
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %261
  store i32 %259, i32* %262, align 4
  %263 = load i32, i32* %26, align 4
  store i32 %263, i32* %25, align 4
  br label %210

264:                                              ; preds = %254, %216
  %265 = load i32, i32* %27, align 4
  %266 = load i32, i32* %25, align 4
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %267
  store i32 %265, i32* %268, align 4
  %269 = load i32, i32* %9, align 4
  %270 = add nsw i32 %269, 1
  store i32 %270, i32* %9, align 4
  %271 = load i32, i32* %9, align 4
  %272 = load i32, i32* %12, align 4
  %273 = sext i32 %272 to i64
  %274 = getelementptr inbounds [516 x i32], [516 x i32]* %19, i64 0, i64 %273
  store i32 %271, i32* %274, align 4
  %275 = load i32, i32* %11, align 4
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds [516 x i32], [516 x i32]* %19, i64 0, i64 %276
  store i32 %271, i32* %277, align 4
  %278 = load i32, i32* %11, align 4
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %279
  %281 = load i32, i32* %280, align 4
  %282 = and i32 %281, -256
  %283 = load i32, i32* %12, align 4
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %284
  %286 = load i32, i32* %285, align 4
  %287 = and i32 %286, -256
  %288 = add i32 %282, %287
  %289 = load i32, i32* %11, align 4
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %290
  %292 = load i32, i32* %291, align 4
  %293 = and i32 %292, 255
  %294 = load i32, i32* %12, align 4
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %295
  %297 = load i32, i32* %296, align 4
  %298 = and i32 %297, 255
  %299 = icmp sgt i32 %293, %298
  br i1 %299, label %300, label %306

300:                                              ; preds = %264
  %301 = load i32, i32* %11, align 4
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %302
  %304 = load i32, i32* %303, align 4
  %305 = and i32 %304, 255
  br label %312

306:                                              ; preds = %264
  %307 = load i32, i32* %12, align 4
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %308
  %310 = load i32, i32* %309, align 4
  %311 = and i32 %310, 255
  br label %312

312:                                              ; preds = %306, %300
  %313 = phi i32 [ %305, %300 ], [ %311, %306 ]
  %314 = add nsw i32 1, %313
  %315 = or i32 %288, %314
  %316 = load i32, i32* %9, align 4
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %317
  store i32 %315, i32* %318, align 4
  %319 = load i32, i32* %9, align 4
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds [516 x i32], [516 x i32]* %19, i64 0, i64 %320
  store i32 -1, i32* %321, align 4
  %322 = load i32, i32* %10, align 4
  %323 = add nsw i32 %322, 1
  store i32 %323, i32* %10, align 4
  %324 = load i32, i32* %9, align 4
  %325 = load i32, i32* %10, align 4
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %326
  store i32 %324, i32* %327, align 4
  %328 = load i32, i32* %10, align 4
  store i32 %328, i32* %28, align 4
  %329 = load i32, i32* %28, align 4
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %330
  %332 = load i32, i32* %331, align 4
  store i32 %332, i32* %29, align 4
  br label %333

333:                                              ; preds = %347, %312
  %334 = load i32, i32* %29, align 4
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %335
  %337 = load i32, i32* %336, align 4
  %338 = load i32, i32* %28, align 4
  %339 = ashr i32 %338, 1
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %340
  %342 = load i32, i32* %341, align 4
  %343 = sext i32 %342 to i64
  %344 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %343
  %345 = load i32, i32* %344, align 4
  %346 = icmp slt i32 %337, %345
  br i1 %346, label %347, label %358

347:                                              ; preds = %333
  %348 = load i32, i32* %28, align 4
  %349 = ashr i32 %348, 1
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %350
  %352 = load i32, i32* %351, align 4
  %353 = load i32, i32* %28, align 4
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %354
  store i32 %352, i32* %355, align 4
  %356 = load i32, i32* %28, align 4
  %357 = ashr i32 %356, 1
  store i32 %357, i32* %28, align 4
  br label %333

358:                                              ; preds = %333
  %359 = load i32, i32* %29, align 4
  %360 = load i32, i32* %28, align 4
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds [260 x i32], [260 x i32]* %17, i64 0, i64 %361
  store i32 %359, i32* %362, align 4
  br label %121

363:                                              ; preds = %121
  %364 = load i32, i32* %9, align 4
  %365 = icmp slt i32 %364, 516
  br i1 %365, label %367, label %366

366:                                              ; preds = %363
  call void @BZ2_bz__AssertH__fail(i32 2002)
  br label %367

367:                                              ; preds = %366, %363
  store i8 0, i8* %16, align 1
  store i32 1, i32* %13, align 4
  br label %368

368:                                              ; preds = %400, %367
  %369 = load i32, i32* %13, align 4
  %370 = load i32, i32* %7, align 4
  %371 = icmp sle i32 %369, %370
  br i1 %371, label %372, label %403

372:                                              ; preds = %368
  store i32 0, i32* %14, align 4
  %373 = load i32, i32* %13, align 4
  store i32 %373, i32* %15, align 4
  br label %374

374:                                              ; preds = %380, %372
  %375 = load i32, i32* %15, align 4
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds [516 x i32], [516 x i32]* %19, i64 0, i64 %376
  %378 = load i32, i32* %377, align 4
  %379 = icmp sge i32 %378, 0
  br i1 %379, label %380, label %387

380:                                              ; preds = %374
  %381 = load i32, i32* %15, align 4
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds [516 x i32], [516 x i32]* %19, i64 0, i64 %382
  %384 = load i32, i32* %383, align 4
  store i32 %384, i32* %15, align 4
  %385 = load i32, i32* %14, align 4
  %386 = add nsw i32 %385, 1
  store i32 %386, i32* %14, align 4
  br label %374

387:                                              ; preds = %374
  %388 = load i32, i32* %14, align 4
  %389 = trunc i32 %388 to i8
  %390 = load i8*, i8** %5, align 8
  %391 = load i32, i32* %13, align 4
  %392 = sub nsw i32 %391, 1
  %393 = sext i32 %392 to i64
  %394 = getelementptr inbounds i8, i8* %390, i64 %393
  store i8 %389, i8* %394, align 1
  %395 = load i32, i32* %14, align 4
  %396 = load i32, i32* %8, align 4
  %397 = icmp sgt i32 %395, %396
  br i1 %397, label %398, label %399

398:                                              ; preds = %387
  store i8 1, i8* %16, align 1
  br label %399

399:                                              ; preds = %398, %387
  br label %400

400:                                              ; preds = %399
  %401 = load i32, i32* %13, align 4
  %402 = add nsw i32 %401, 1
  store i32 %402, i32* %13, align 4
  br label %368

403:                                              ; preds = %368
  %404 = load i8, i8* %16, align 1
  %405 = icmp ne i8 %404, 0
  br i1 %405, label %407, label %406

406:                                              ; preds = %403
  br label %430

407:                                              ; preds = %403
  store i32 1, i32* %13, align 4
  br label %408

408:                                              ; preds = %426, %407
  %409 = load i32, i32* %13, align 4
  %410 = load i32, i32* %7, align 4
  %411 = icmp slt i32 %409, %410
  br i1 %411, label %412, label %429

412:                                              ; preds = %408
  %413 = load i32, i32* %13, align 4
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %414
  %416 = load i32, i32* %415, align 4
  %417 = ashr i32 %416, 8
  store i32 %417, i32* %14, align 4
  %418 = load i32, i32* %14, align 4
  %419 = sdiv i32 %418, 2
  %420 = add nsw i32 1, %419
  store i32 %420, i32* %14, align 4
  %421 = load i32, i32* %14, align 4
  %422 = shl i32 %421, 8
  %423 = load i32, i32* %13, align 4
  %424 = sext i32 %423 to i64
  %425 = getelementptr inbounds [516 x i32], [516 x i32]* %18, i64 0, i64 %424
  store i32 %422, i32* %425, align 4
  br label %426

426:                                              ; preds = %412
  %427 = load i32, i32* %13, align 4
  %428 = add nsw i32 %427, 1
  store i32 %428, i32* %13, align 4
  br label %408

429:                                              ; preds = %408
  br label %59

430:                                              ; preds = %406
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_hbAssignCodes(i32* %0, i8* %1, i32 %2, i32 %3, i32 %4) #0 {
  %6 = alloca i32*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32* %0, i32** %6, align 8
  store i8* %1, i8** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  store i32 0, i32* %12, align 4
  %14 = load i32, i32* %8, align 4
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %48, %5
  %16 = load i32, i32* %11, align 4
  %17 = load i32, i32* %9, align 4
  %18 = icmp sle i32 %16, %17
  br i1 %18, label %19, label %51

19:                                               ; preds = %15
  store i32 0, i32* %13, align 4
  br label %20

20:                                               ; preds = %42, %19
  %21 = load i32, i32* %13, align 4
  %22 = load i32, i32* %10, align 4
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %24, label %45

24:                                               ; preds = %20
  %25 = load i8*, i8** %7, align 8
  %26 = load i32, i32* %13, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %25, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = load i32, i32* %11, align 4
  %32 = icmp eq i32 %30, %31
  br i1 %32, label %33, label %41

33:                                               ; preds = %24
  %34 = load i32, i32* %12, align 4
  %35 = load i32*, i32** %6, align 8
  %36 = load i32, i32* %13, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %35, i64 %37
  store i32 %34, i32* %38, align 4
  %39 = load i32, i32* %12, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %12, align 4
  br label %41

41:                                               ; preds = %33, %24
  br label %42

42:                                               ; preds = %41
  %43 = load i32, i32* %13, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %13, align 4
  br label %20

45:                                               ; preds = %20
  %46 = load i32, i32* %12, align 4
  %47 = shl i32 %46, 1
  store i32 %47, i32* %12, align 4
  br label %48

48:                                               ; preds = %45
  %49 = load i32, i32* %11, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %11, align 4
  br label %15

51:                                               ; preds = %15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_hbCreateDecodeTables(i32* %0, i32* %1, i32* %2, i8* %3, i32 %4, i32 %5, i32 %6) #0 {
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store i32* %0, i32** %8, align 8
  store i32* %1, i32** %9, align 8
  store i32* %2, i32** %10, align 8
  store i8* %3, i8** %11, align 8
  store i32 %4, i32* %12, align 4
  store i32 %5, i32* %13, align 4
  store i32 %6, i32* %14, align 4
  store i32 0, i32* %15, align 4
  %19 = load i32, i32* %12, align 4
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %51, %7
  %21 = load i32, i32* %16, align 4
  %22 = load i32, i32* %13, align 4
  %23 = icmp sle i32 %21, %22
  br i1 %23, label %24, label %54

24:                                               ; preds = %20
  store i32 0, i32* %17, align 4
  br label %25

25:                                               ; preds = %47, %24
  %26 = load i32, i32* %17, align 4
  %27 = load i32, i32* %14, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %29, label %50

29:                                               ; preds = %25
  %30 = load i8*, i8** %11, align 8
  %31 = load i32, i32* %17, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = load i32, i32* %16, align 4
  %37 = icmp eq i32 %35, %36
  br i1 %37, label %38, label %46

38:                                               ; preds = %29
  %39 = load i32, i32* %17, align 4
  %40 = load i32*, i32** %10, align 8
  %41 = load i32, i32* %15, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %40, i64 %42
  store i32 %39, i32* %43, align 4
  %44 = load i32, i32* %15, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %15, align 4
  br label %46

46:                                               ; preds = %38, %29
  br label %47

47:                                               ; preds = %46
  %48 = load i32, i32* %17, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %17, align 4
  br label %25

50:                                               ; preds = %25
  br label %51

51:                                               ; preds = %50
  %52 = load i32, i32* %16, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %16, align 4
  br label %20

54:                                               ; preds = %20
  store i32 0, i32* %16, align 4
  br label %55

55:                                               ; preds = %63, %54
  %56 = load i32, i32* %16, align 4
  %57 = icmp slt i32 %56, 23
  br i1 %57, label %58, label %66

58:                                               ; preds = %55
  %59 = load i32*, i32** %9, align 8
  %60 = load i32, i32* %16, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i32, i32* %59, i64 %61
  store i32 0, i32* %62, align 4
  br label %63

63:                                               ; preds = %58
  %64 = load i32, i32* %16, align 4
  %65 = add nsw i32 %64, 1
  store i32 %65, i32* %16, align 4
  br label %55

66:                                               ; preds = %55
  store i32 0, i32* %16, align 4
  br label %67

67:                                               ; preds = %84, %66
  %68 = load i32, i32* %16, align 4
  %69 = load i32, i32* %14, align 4
  %70 = icmp slt i32 %68, %69
  br i1 %70, label %71, label %87

71:                                               ; preds = %67
  %72 = load i32*, i32** %9, align 8
  %73 = load i8*, i8** %11, align 8
  %74 = load i32, i32* %16, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i8, i8* %73, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = add nsw i32 %78, 1
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i32, i32* %72, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %81, align 4
  br label %84

84:                                               ; preds = %71
  %85 = load i32, i32* %16, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %16, align 4
  br label %67

87:                                               ; preds = %67
  store i32 1, i32* %16, align 4
  br label %88

88:                                               ; preds = %104, %87
  %89 = load i32, i32* %16, align 4
  %90 = icmp slt i32 %89, 23
  br i1 %90, label %91, label %107

91:                                               ; preds = %88
  %92 = load i32*, i32** %9, align 8
  %93 = load i32, i32* %16, align 4
  %94 = sub nsw i32 %93, 1
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i32, i32* %92, i64 %95
  %97 = load i32, i32* %96, align 4
  %98 = load i32*, i32** %9, align 8
  %99 = load i32, i32* %16, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i32, i32* %98, i64 %100
  %102 = load i32, i32* %101, align 4
  %103 = add nsw i32 %102, %97
  store i32 %103, i32* %101, align 4
  br label %104

104:                                              ; preds = %91
  %105 = load i32, i32* %16, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %16, align 4
  br label %88

107:                                              ; preds = %88
  store i32 0, i32* %16, align 4
  br label %108

108:                                              ; preds = %116, %107
  %109 = load i32, i32* %16, align 4
  %110 = icmp slt i32 %109, 23
  br i1 %110, label %111, label %119

111:                                              ; preds = %108
  %112 = load i32*, i32** %8, align 8
  %113 = load i32, i32* %16, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i32, i32* %112, i64 %114
  store i32 0, i32* %115, align 4
  br label %116

116:                                              ; preds = %111
  %117 = load i32, i32* %16, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %16, align 4
  br label %108

119:                                              ; preds = %108
  store i32 0, i32* %18, align 4
  %120 = load i32, i32* %12, align 4
  store i32 %120, i32* %16, align 4
  br label %121

121:                                              ; preds = %148, %119
  %122 = load i32, i32* %16, align 4
  %123 = load i32, i32* %13, align 4
  %124 = icmp sle i32 %122, %123
  br i1 %124, label %125, label %151

125:                                              ; preds = %121
  %126 = load i32*, i32** %9, align 8
  %127 = load i32, i32* %16, align 4
  %128 = add nsw i32 %127, 1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i32, i32* %126, i64 %129
  %131 = load i32, i32* %130, align 4
  %132 = load i32*, i32** %9, align 8
  %133 = load i32, i32* %16, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i32, i32* %132, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = sub nsw i32 %131, %136
  %138 = load i32, i32* %18, align 4
  %139 = add nsw i32 %138, %137
  store i32 %139, i32* %18, align 4
  %140 = load i32, i32* %18, align 4
  %141 = sub nsw i32 %140, 1
  %142 = load i32*, i32** %8, align 8
  %143 = load i32, i32* %16, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds i32, i32* %142, i64 %144
  store i32 %141, i32* %145, align 4
  %146 = load i32, i32* %18, align 4
  %147 = shl i32 %146, 1
  store i32 %147, i32* %18, align 4
  br label %148

148:                                              ; preds = %125
  %149 = load i32, i32* %16, align 4
  %150 = add nsw i32 %149, 1
  store i32 %150, i32* %16, align 4
  br label %121

151:                                              ; preds = %121
  %152 = load i32, i32* %12, align 4
  %153 = add nsw i32 %152, 1
  store i32 %153, i32* %16, align 4
  br label %154

154:                                              ; preds = %177, %151
  %155 = load i32, i32* %16, align 4
  %156 = load i32, i32* %13, align 4
  %157 = icmp sle i32 %155, %156
  br i1 %157, label %158, label %180

158:                                              ; preds = %154
  %159 = load i32*, i32** %8, align 8
  %160 = load i32, i32* %16, align 4
  %161 = sub nsw i32 %160, 1
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds i32, i32* %159, i64 %162
  %164 = load i32, i32* %163, align 4
  %165 = add nsw i32 %164, 1
  %166 = shl i32 %165, 1
  %167 = load i32*, i32** %9, align 8
  %168 = load i32, i32* %16, align 4
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds i32, i32* %167, i64 %169
  %171 = load i32, i32* %170, align 4
  %172 = sub nsw i32 %166, %171
  %173 = load i32*, i32** %9, align 8
  %174 = load i32, i32* %16, align 4
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds i32, i32* %173, i64 %175
  store i32 %172, i32* %176, align 4
  br label %177

177:                                              ; preds = %158
  %178 = load i32, i32* %16, align 4
  %179 = add nsw i32 %178, 1
  store i32 %179, i32* %16, align 4
  br label %154

180:                                              ; preds = %154
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_bsInitWrite(%struct.EState* %0) #0 {
  %2 = alloca %struct.EState*, align 8
  store %struct.EState* %0, %struct.EState** %2, align 8
  %3 = load %struct.EState*, %struct.EState** %2, align 8
  %4 = getelementptr inbounds %struct.EState, %struct.EState* %3, i32 0, i32 25
  store i32 0, i32* %4, align 4
  %5 = load %struct.EState*, %struct.EState** %2, align 8
  %6 = getelementptr inbounds %struct.EState, %struct.EState* %5, i32 0, i32 24
  store i32 0, i32* %6, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_compressBlock(%struct.EState* %0, i8 zeroext %1) #0 {
  %3 = alloca %struct.EState*, align 8
  %4 = alloca i8, align 1
  store %struct.EState* %0, %struct.EState** %3, align 8
  store i8 %1, i8* %4, align 1
  %5 = load %struct.EState*, %struct.EState** %3, align 8
  %6 = getelementptr inbounds %struct.EState, %struct.EState* %5, i32 0, i32 17
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %63

9:                                                ; preds = %2
  %10 = load %struct.EState*, %struct.EState** %3, align 8
  %11 = getelementptr inbounds %struct.EState, %struct.EState* %10, i32 0, i32 26
  %12 = load i32, i32* %11, align 8
  %13 = xor i32 %12, -1
  %14 = load %struct.EState*, %struct.EState** %3, align 8
  %15 = getelementptr inbounds %struct.EState, %struct.EState* %14, i32 0, i32 26
  store i32 %13, i32* %15, align 8
  %16 = load %struct.EState*, %struct.EState** %3, align 8
  %17 = getelementptr inbounds %struct.EState, %struct.EState* %16, i32 0, i32 27
  %18 = load i32, i32* %17, align 4
  %19 = shl i32 %18, 1
  %20 = load %struct.EState*, %struct.EState** %3, align 8
  %21 = getelementptr inbounds %struct.EState, %struct.EState* %20, i32 0, i32 27
  %22 = load i32, i32* %21, align 4
  %23 = lshr i32 %22, 31
  %24 = or i32 %19, %23
  %25 = load %struct.EState*, %struct.EState** %3, align 8
  %26 = getelementptr inbounds %struct.EState, %struct.EState* %25, i32 0, i32 27
  store i32 %24, i32* %26, align 4
  %27 = load %struct.EState*, %struct.EState** %3, align 8
  %28 = getelementptr inbounds %struct.EState, %struct.EState* %27, i32 0, i32 26
  %29 = load i32, i32* %28, align 8
  %30 = load %struct.EState*, %struct.EState** %3, align 8
  %31 = getelementptr inbounds %struct.EState, %struct.EState* %30, i32 0, i32 27
  %32 = load i32, i32* %31, align 4
  %33 = xor i32 %32, %29
  store i32 %33, i32* %31, align 4
  %34 = load %struct.EState*, %struct.EState** %3, align 8
  %35 = getelementptr inbounds %struct.EState, %struct.EState* %34, i32 0, i32 29
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, 1
  br i1 %37, label %38, label %41

38:                                               ; preds = %9
  %39 = load %struct.EState*, %struct.EState** %3, align 8
  %40 = getelementptr inbounds %struct.EState, %struct.EState* %39, i32 0, i32 19
  store i32 0, i32* %40, align 4
  br label %41

41:                                               ; preds = %38, %9
  %42 = load %struct.EState*, %struct.EState** %3, align 8
  %43 = getelementptr inbounds %struct.EState, %struct.EState* %42, i32 0, i32 28
  %44 = load i32, i32* %43, align 8
  %45 = icmp sge i32 %44, 2
  br i1 %45, label %46, label %61

46:                                               ; preds = %41
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %48 = load %struct.EState*, %struct.EState** %3, align 8
  %49 = getelementptr inbounds %struct.EState, %struct.EState* %48, i32 0, i32 29
  %50 = load i32, i32* %49, align 4
  %51 = load %struct.EState*, %struct.EState** %3, align 8
  %52 = getelementptr inbounds %struct.EState, %struct.EState* %51, i32 0, i32 26
  %53 = load i32, i32* %52, align 8
  %54 = load %struct.EState*, %struct.EState** %3, align 8
  %55 = getelementptr inbounds %struct.EState, %struct.EState* %54, i32 0, i32 27
  %56 = load i32, i32* %55, align 4
  %57 = load %struct.EState*, %struct.EState** %3, align 8
  %58 = getelementptr inbounds %struct.EState, %struct.EState* %57, i32 0, i32 17
  %59 = load i32, i32* %58, align 4
  %60 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0), i32 %50, i32 %53, i32 %56, i32 %59)
  br label %61

61:                                               ; preds = %46, %41
  %62 = load %struct.EState*, %struct.EState** %3, align 8
  call void @BZ2_blockSort(%struct.EState* %62)
  br label %63

63:                                               ; preds = %61, %2
  %64 = load %struct.EState*, %struct.EState** %3, align 8
  %65 = getelementptr inbounds %struct.EState, %struct.EState* %64, i32 0, i32 5
  %66 = load i32*, i32** %65, align 8
  %67 = bitcast i32* %66 to i8*
  %68 = load %struct.EState*, %struct.EState** %3, align 8
  %69 = getelementptr inbounds %struct.EState, %struct.EState* %68, i32 0, i32 17
  %70 = load i32, i32* %69, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i8, i8* %67, i64 %71
  %73 = load %struct.EState*, %struct.EState** %3, align 8
  %74 = getelementptr inbounds %struct.EState, %struct.EState* %73, i32 0, i32 11
  store i8* %72, i8** %74, align 8
  %75 = load %struct.EState*, %struct.EState** %3, align 8
  %76 = getelementptr inbounds %struct.EState, %struct.EState* %75, i32 0, i32 29
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %90

79:                                               ; preds = %63
  %80 = load %struct.EState*, %struct.EState** %3, align 8
  call void @BZ2_bsInitWrite(%struct.EState* %80)
  %81 = load %struct.EState*, %struct.EState** %3, align 8
  call void @bsPutUChar(%struct.EState* %81, i8 zeroext 66)
  %82 = load %struct.EState*, %struct.EState** %3, align 8
  call void @bsPutUChar(%struct.EState* %82, i8 zeroext 90)
  %83 = load %struct.EState*, %struct.EState** %3, align 8
  call void @bsPutUChar(%struct.EState* %83, i8 zeroext 104)
  %84 = load %struct.EState*, %struct.EState** %3, align 8
  %85 = load %struct.EState*, %struct.EState** %3, align 8
  %86 = getelementptr inbounds %struct.EState, %struct.EState* %85, i32 0, i32 30
  %87 = load i32, i32* %86, align 8
  %88 = add nsw i32 48, %87
  %89 = trunc i32 %88 to i8
  call void @bsPutUChar(%struct.EState* %84, i8 zeroext %89)
  br label %90

90:                                               ; preds = %79, %63
  %91 = load %struct.EState*, %struct.EState** %3, align 8
  %92 = getelementptr inbounds %struct.EState, %struct.EState* %91, i32 0, i32 17
  %93 = load i32, i32* %92, align 4
  %94 = icmp sgt i32 %93, 0
  br i1 %94, label %95, label %113

95:                                               ; preds = %90
  %96 = load %struct.EState*, %struct.EState** %3, align 8
  call void @bsPutUChar(%struct.EState* %96, i8 zeroext 49)
  %97 = load %struct.EState*, %struct.EState** %3, align 8
  call void @bsPutUChar(%struct.EState* %97, i8 zeroext 65)
  %98 = load %struct.EState*, %struct.EState** %3, align 8
  call void @bsPutUChar(%struct.EState* %98, i8 zeroext 89)
  %99 = load %struct.EState*, %struct.EState** %3, align 8
  call void @bsPutUChar(%struct.EState* %99, i8 zeroext 38)
  %100 = load %struct.EState*, %struct.EState** %3, align 8
  call void @bsPutUChar(%struct.EState* %100, i8 zeroext 83)
  %101 = load %struct.EState*, %struct.EState** %3, align 8
  call void @bsPutUChar(%struct.EState* %101, i8 zeroext 89)
  %102 = load %struct.EState*, %struct.EState** %3, align 8
  %103 = load %struct.EState*, %struct.EState** %3, align 8
  %104 = getelementptr inbounds %struct.EState, %struct.EState* %103, i32 0, i32 26
  %105 = load i32, i32* %104, align 8
  call void @bsPutUInt32(%struct.EState* %102, i32 %105)
  %106 = load %struct.EState*, %struct.EState** %3, align 8
  call void @bsW(%struct.EState* %106, i32 1, i32 0)
  %107 = load %struct.EState*, %struct.EState** %3, align 8
  %108 = load %struct.EState*, %struct.EState** %3, align 8
  %109 = getelementptr inbounds %struct.EState, %struct.EState* %108, i32 0, i32 7
  %110 = load i32, i32* %109, align 8
  call void @bsW(%struct.EState* %107, i32 24, i32 %110)
  %111 = load %struct.EState*, %struct.EState** %3, align 8
  call void @generateMTFValues(%struct.EState* %111)
  %112 = load %struct.EState*, %struct.EState** %3, align 8
  call void @sendMTFValues(%struct.EState* %112)
  br label %113

113:                                              ; preds = %95, %90
  %114 = load i8, i8* %4, align 1
  %115 = icmp ne i8 %114, 0
  br i1 %115, label %116, label %139

116:                                              ; preds = %113
  %117 = load %struct.EState*, %struct.EState** %3, align 8
  call void @bsPutUChar(%struct.EState* %117, i8 zeroext 23)
  %118 = load %struct.EState*, %struct.EState** %3, align 8
  call void @bsPutUChar(%struct.EState* %118, i8 zeroext 114)
  %119 = load %struct.EState*, %struct.EState** %3, align 8
  call void @bsPutUChar(%struct.EState* %119, i8 zeroext 69)
  %120 = load %struct.EState*, %struct.EState** %3, align 8
  call void @bsPutUChar(%struct.EState* %120, i8 zeroext 56)
  %121 = load %struct.EState*, %struct.EState** %3, align 8
  call void @bsPutUChar(%struct.EState* %121, i8 zeroext 80)
  %122 = load %struct.EState*, %struct.EState** %3, align 8
  call void @bsPutUChar(%struct.EState* %122, i8 zeroext -112)
  %123 = load %struct.EState*, %struct.EState** %3, align 8
  %124 = load %struct.EState*, %struct.EState** %3, align 8
  %125 = getelementptr inbounds %struct.EState, %struct.EState* %124, i32 0, i32 27
  %126 = load i32, i32* %125, align 4
  call void @bsPutUInt32(%struct.EState* %123, i32 %126)
  %127 = load %struct.EState*, %struct.EState** %3, align 8
  %128 = getelementptr inbounds %struct.EState, %struct.EState* %127, i32 0, i32 28
  %129 = load i32, i32* %128, align 8
  %130 = icmp sge i32 %129, 2
  br i1 %130, label %131, label %137

131:                                              ; preds = %116
  %132 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %133 = load %struct.EState*, %struct.EState** %3, align 8
  %134 = getelementptr inbounds %struct.EState, %struct.EState* %133, i32 0, i32 27
  %135 = load i32, i32* %134, align 4
  %136 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %132, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i32 %135)
  br label %137

137:                                              ; preds = %131, %116
  %138 = load %struct.EState*, %struct.EState** %3, align 8
  call void @bsFinishWrite(%struct.EState* %138)
  br label %139

139:                                              ; preds = %137, %113
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @bsPutUChar(%struct.EState* %0, i8 zeroext %1) #0 {
  %3 = alloca %struct.EState*, align 8
  %4 = alloca i8, align 1
  store %struct.EState* %0, %struct.EState** %3, align 8
  store i8 %1, i8* %4, align 1
  %5 = load %struct.EState*, %struct.EState** %3, align 8
  %6 = load i8, i8* %4, align 1
  %7 = zext i8 %6 to i32
  call void @bsW(%struct.EState* %5, i32 8, i32 %7)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @bsPutUInt32(%struct.EState* %0, i32 %1) #0 {
  %3 = alloca %struct.EState*, align 8
  %4 = alloca i32, align 4
  store %struct.EState* %0, %struct.EState** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.EState*, %struct.EState** %3, align 8
  %6 = load i32, i32* %4, align 4
  %7 = lshr i32 %6, 24
  %8 = zext i32 %7 to i64
  %9 = and i64 %8, 255
  %10 = trunc i64 %9 to i32
  call void @bsW(%struct.EState* %5, i32 8, i32 %10)
  %11 = load %struct.EState*, %struct.EState** %3, align 8
  %12 = load i32, i32* %4, align 4
  %13 = lshr i32 %12, 16
  %14 = zext i32 %13 to i64
  %15 = and i64 %14, 255
  %16 = trunc i64 %15 to i32
  call void @bsW(%struct.EState* %11, i32 8, i32 %16)
  %17 = load %struct.EState*, %struct.EState** %3, align 8
  %18 = load i32, i32* %4, align 4
  %19 = lshr i32 %18, 8
  %20 = zext i32 %19 to i64
  %21 = and i64 %20, 255
  %22 = trunc i64 %21 to i32
  call void @bsW(%struct.EState* %17, i32 8, i32 %22)
  %23 = load %struct.EState*, %struct.EState** %3, align 8
  %24 = load i32, i32* %4, align 4
  %25 = zext i32 %24 to i64
  %26 = and i64 %25, 255
  %27 = trunc i64 %26 to i32
  call void @bsW(%struct.EState* %23, i32 8, i32 %27)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @bsW(%struct.EState* %0, i32 %1, i32 %2) #0 {
  %4 = alloca %struct.EState*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.EState* %0, %struct.EState** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  br label %7

7:                                                ; preds = %12, %3
  %8 = load %struct.EState*, %struct.EState** %4, align 8
  %9 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 25
  %10 = load i32, i32* %9, align 4
  %11 = icmp sge i32 %10, 8
  br i1 %11, label %12, label %38

12:                                               ; preds = %7
  %13 = load %struct.EState*, %struct.EState** %4, align 8
  %14 = getelementptr inbounds %struct.EState, %struct.EState* %13, i32 0, i32 24
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 24
  %17 = trunc i32 %16 to i8
  %18 = load %struct.EState*, %struct.EState** %4, align 8
  %19 = getelementptr inbounds %struct.EState, %struct.EState* %18, i32 0, i32 11
  %20 = load i8*, i8** %19, align 8
  %21 = load %struct.EState*, %struct.EState** %4, align 8
  %22 = getelementptr inbounds %struct.EState, %struct.EState* %21, i32 0, i32 19
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %20, i64 %24
  store i8 %17, i8* %25, align 1
  %26 = load %struct.EState*, %struct.EState** %4, align 8
  %27 = getelementptr inbounds %struct.EState, %struct.EState* %26, i32 0, i32 19
  %28 = load i32, i32* %27, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %27, align 4
  %30 = load %struct.EState*, %struct.EState** %4, align 8
  %31 = getelementptr inbounds %struct.EState, %struct.EState* %30, i32 0, i32 24
  %32 = load i32, i32* %31, align 8
  %33 = shl i32 %32, 8
  store i32 %33, i32* %31, align 8
  %34 = load %struct.EState*, %struct.EState** %4, align 8
  %35 = getelementptr inbounds %struct.EState, %struct.EState* %34, i32 0, i32 25
  %36 = load i32, i32* %35, align 4
  %37 = sub nsw i32 %36, 8
  store i32 %37, i32* %35, align 4
  br label %7

38:                                               ; preds = %7
  %39 = load i32, i32* %6, align 4
  %40 = load %struct.EState*, %struct.EState** %4, align 8
  %41 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 25
  %42 = load i32, i32* %41, align 4
  %43 = sub nsw i32 32, %42
  %44 = load i32, i32* %5, align 4
  %45 = sub nsw i32 %43, %44
  %46 = shl i32 %39, %45
  %47 = load %struct.EState*, %struct.EState** %4, align 8
  %48 = getelementptr inbounds %struct.EState, %struct.EState* %47, i32 0, i32 24
  %49 = load i32, i32* %48, align 8
  %50 = or i32 %49, %46
  store i32 %50, i32* %48, align 8
  %51 = load i32, i32* %5, align 4
  %52 = load %struct.EState*, %struct.EState** %4, align 8
  %53 = getelementptr inbounds %struct.EState, %struct.EState* %52, i32 0, i32 25
  %54 = load i32, i32* %53, align 4
  %55 = add nsw i32 %54, %51
  store i32 %55, i32* %53, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @generateMTFValues(%struct.EState* %0) #0 {
  %2 = alloca %struct.EState*, align 8
  %3 = alloca [256 x i8], align 16
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i16*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  store %struct.EState* %0, %struct.EState** %2, align 8
  %17 = load %struct.EState*, %struct.EState** %2, align 8
  %18 = getelementptr inbounds %struct.EState, %struct.EState* %17, i32 0, i32 8
  %19 = load i32*, i32** %18, align 8
  store i32* %19, i32** %9, align 8
  %20 = load %struct.EState*, %struct.EState** %2, align 8
  %21 = getelementptr inbounds %struct.EState, %struct.EState* %20, i32 0, i32 9
  %22 = load i8*, i8** %21, align 8
  store i8* %22, i8** %10, align 8
  %23 = load %struct.EState*, %struct.EState** %2, align 8
  %24 = getelementptr inbounds %struct.EState, %struct.EState* %23, i32 0, i32 10
  %25 = load i16*, i16** %24, align 8
  store i16* %25, i16** %11, align 8
  %26 = load %struct.EState*, %struct.EState** %2, align 8
  call void @makeMaps_e(%struct.EState* %26)
  %27 = load %struct.EState*, %struct.EState** %2, align 8
  %28 = getelementptr inbounds %struct.EState, %struct.EState* %27, i32 0, i32 21
  %29 = load i32, i32* %28, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %8, align 4
  store i32 0, i32* %4, align 4
  br label %31

31:                                               ; preds = %41, %1
  %32 = load i32, i32* %4, align 4
  %33 = load i32, i32* %8, align 4
  %34 = icmp sle i32 %32, %33
  br i1 %34, label %35, label %44

35:                                               ; preds = %31
  %36 = load %struct.EState*, %struct.EState** %2, align 8
  %37 = getelementptr inbounds %struct.EState, %struct.EState* %36, i32 0, i32 32
  %38 = load i32, i32* %4, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [258 x i32], [258 x i32]* %37, i64 0, i64 %39
  store i32 0, i32* %40, align 4
  br label %41

41:                                               ; preds = %35
  %42 = load i32, i32* %4, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %4, align 4
  br label %31

44:                                               ; preds = %31
  store i32 0, i32* %7, align 4
  store i32 0, i32* %6, align 4
  store i32 0, i32* %4, align 4
  br label %45

45:                                               ; preds = %57, %44
  %46 = load i32, i32* %4, align 4
  %47 = load %struct.EState*, %struct.EState** %2, align 8
  %48 = getelementptr inbounds %struct.EState, %struct.EState* %47, i32 0, i32 21
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %46, %49
  br i1 %50, label %51, label %60

51:                                               ; preds = %45
  %52 = load i32, i32* %4, align 4
  %53 = trunc i32 %52 to i8
  %54 = load i32, i32* %4, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %55
  store i8 %53, i8* %56, align 1
  br label %57

57:                                               ; preds = %51
  %58 = load i32, i32* %4, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %4, align 4
  br label %45

60:                                               ; preds = %45
  store i32 0, i32* %4, align 4
  br label %61

61:                                               ; preds = %194, %60
  %62 = load i32, i32* %4, align 4
  %63 = load %struct.EState*, %struct.EState** %2, align 8
  %64 = getelementptr inbounds %struct.EState, %struct.EState* %63, i32 0, i32 17
  %65 = load i32, i32* %64, align 4
  %66 = icmp slt i32 %62, %65
  br i1 %66, label %67, label %197

67:                                               ; preds = %61
  %68 = load i32*, i32** %9, align 8
  %69 = load i32, i32* %4, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, i32* %68, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = sub i32 %72, 1
  store i32 %73, i32* %5, align 4
  %74 = load i32, i32* %5, align 4
  %75 = icmp slt i32 %74, 0
  br i1 %75, label %76, label %82

76:                                               ; preds = %67
  %77 = load %struct.EState*, %struct.EState** %2, align 8
  %78 = getelementptr inbounds %struct.EState, %struct.EState* %77, i32 0, i32 17
  %79 = load i32, i32* %78, align 4
  %80 = load i32, i32* %5, align 4
  %81 = add nsw i32 %80, %79
  store i32 %81, i32* %5, align 4
  br label %82

82:                                               ; preds = %76, %67
  %83 = load %struct.EState*, %struct.EState** %2, align 8
  %84 = getelementptr inbounds %struct.EState, %struct.EState* %83, i32 0, i32 23
  %85 = load i8*, i8** %10, align 8
  %86 = load i32, i32* %5, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %85, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i64
  %91 = getelementptr inbounds [256 x i8], [256 x i8]* %84, i64 0, i64 %90
  %92 = load i8, i8* %91, align 1
  store i8 %92, i8* %12, align 1
  %93 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0
  %94 = load i8, i8* %93, align 16
  %95 = zext i8 %94 to i32
  %96 = load i8, i8* %12, align 1
  %97 = zext i8 %96 to i32
  %98 = icmp eq i32 %95, %97
  br i1 %98, label %99, label %102

99:                                               ; preds = %82
  %100 = load i32, i32* %6, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %6, align 4
  br label %193

102:                                              ; preds = %82
  %103 = load i32, i32* %6, align 4
  %104 = icmp sgt i32 %103, 0
  br i1 %104, label %105, label %145

105:                                              ; preds = %102
  %106 = load i32, i32* %6, align 4
  %107 = add nsw i32 %106, -1
  store i32 %107, i32* %6, align 4
  br label %108

108:                                              ; preds = %105, %140
  %109 = load i32, i32* %6, align 4
  %110 = and i32 %109, 1
  %111 = icmp ne i32 %110, 0
  br i1 %111, label %112, label %124

112:                                              ; preds = %108
  %113 = load i16*, i16** %11, align 8
  %114 = load i32, i32* %7, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i16, i16* %113, i64 %115
  store i16 1, i16* %116, align 2
  %117 = load i32, i32* %7, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %7, align 4
  %119 = load %struct.EState*, %struct.EState** %2, align 8
  %120 = getelementptr inbounds %struct.EState, %struct.EState* %119, i32 0, i32 32
  %121 = getelementptr inbounds [258 x i32], [258 x i32]* %120, i64 0, i64 1
  %122 = load i32, i32* %121, align 4
  %123 = add nsw i32 %122, 1
  store i32 %123, i32* %121, align 4
  br label %136

124:                                              ; preds = %108
  %125 = load i16*, i16** %11, align 8
  %126 = load i32, i32* %7, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i16, i16* %125, i64 %127
  store i16 0, i16* %128, align 2
  %129 = load i32, i32* %7, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %7, align 4
  %131 = load %struct.EState*, %struct.EState** %2, align 8
  %132 = getelementptr inbounds %struct.EState, %struct.EState* %131, i32 0, i32 32
  %133 = getelementptr inbounds [258 x i32], [258 x i32]* %132, i64 0, i64 0
  %134 = load i32, i32* %133, align 8
  %135 = add nsw i32 %134, 1
  store i32 %135, i32* %133, align 8
  br label %136

136:                                              ; preds = %124, %112
  %137 = load i32, i32* %6, align 4
  %138 = icmp slt i32 %137, 2
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  br label %144

140:                                              ; preds = %136
  %141 = load i32, i32* %6, align 4
  %142 = sub nsw i32 %141, 2
  %143 = sdiv i32 %142, 2
  store i32 %143, i32* %6, align 4
  br label %108

144:                                              ; preds = %139
  store i32 0, i32* %6, align 4
  br label %145

145:                                              ; preds = %144, %102
  %146 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 1
  %147 = load i8, i8* %146, align 1
  store i8 %147, i8* %13, align 1
  %148 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0
  %149 = load i8, i8* %148, align 16
  %150 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 1
  store i8 %149, i8* %150, align 1
  %151 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 1
  store i8* %151, i8** %14, align 8
  %152 = load i8, i8* %12, align 1
  store i8 %152, i8* %15, align 1
  br label %153

153:                                              ; preds = %159, %145
  %154 = load i8, i8* %15, align 1
  %155 = zext i8 %154 to i32
  %156 = load i8, i8* %13, align 1
  %157 = zext i8 %156 to i32
  %158 = icmp ne i32 %155, %157
  br i1 %158, label %159, label %167

159:                                              ; preds = %153
  %160 = load i8*, i8** %14, align 8
  %161 = getelementptr inbounds i8, i8* %160, i32 1
  store i8* %161, i8** %14, align 8
  %162 = load i8, i8* %13, align 1
  store i8 %162, i8* %16, align 1
  %163 = load i8*, i8** %14, align 8
  %164 = load i8, i8* %163, align 1
  store i8 %164, i8* %13, align 1
  %165 = load i8, i8* %16, align 1
  %166 = load i8*, i8** %14, align 8
  store i8 %165, i8* %166, align 1
  br label %153

167:                                              ; preds = %153
  %168 = load i8, i8* %13, align 1
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0
  store i8 %168, i8* %169, align 16
  %170 = load i8*, i8** %14, align 8
  %171 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0
  %172 = ptrtoint i8* %170 to i64
  %173 = ptrtoint i8* %171 to i64
  %174 = sub i64 %172, %173
  %175 = trunc i64 %174 to i32
  store i32 %175, i32* %5, align 4
  %176 = load i32, i32* %5, align 4
  %177 = add nsw i32 %176, 1
  %178 = trunc i32 %177 to i16
  %179 = load i16*, i16** %11, align 8
  %180 = load i32, i32* %7, align 4
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds i16, i16* %179, i64 %181
  store i16 %178, i16* %182, align 2
  %183 = load i32, i32* %7, align 4
  %184 = add nsw i32 %183, 1
  store i32 %184, i32* %7, align 4
  %185 = load %struct.EState*, %struct.EState** %2, align 8
  %186 = getelementptr inbounds %struct.EState, %struct.EState* %185, i32 0, i32 32
  %187 = load i32, i32* %5, align 4
  %188 = add nsw i32 %187, 1
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds [258 x i32], [258 x i32]* %186, i64 0, i64 %189
  %191 = load i32, i32* %190, align 4
  %192 = add nsw i32 %191, 1
  store i32 %192, i32* %190, align 4
  br label %193

193:                                              ; preds = %167, %99
  br label %194

194:                                              ; preds = %193
  %195 = load i32, i32* %4, align 4
  %196 = add nsw i32 %195, 1
  store i32 %196, i32* %4, align 4
  br label %61

197:                                              ; preds = %61
  %198 = load i32, i32* %6, align 4
  %199 = icmp sgt i32 %198, 0
  br i1 %199, label %200, label %240

200:                                              ; preds = %197
  %201 = load i32, i32* %6, align 4
  %202 = add nsw i32 %201, -1
  store i32 %202, i32* %6, align 4
  br label %203

203:                                              ; preds = %200, %235
  %204 = load i32, i32* %6, align 4
  %205 = and i32 %204, 1
  %206 = icmp ne i32 %205, 0
  br i1 %206, label %207, label %219

207:                                              ; preds = %203
  %208 = load i16*, i16** %11, align 8
  %209 = load i32, i32* %7, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds i16, i16* %208, i64 %210
  store i16 1, i16* %211, align 2
  %212 = load i32, i32* %7, align 4
  %213 = add nsw i32 %212, 1
  store i32 %213, i32* %7, align 4
  %214 = load %struct.EState*, %struct.EState** %2, align 8
  %215 = getelementptr inbounds %struct.EState, %struct.EState* %214, i32 0, i32 32
  %216 = getelementptr inbounds [258 x i32], [258 x i32]* %215, i64 0, i64 1
  %217 = load i32, i32* %216, align 4
  %218 = add nsw i32 %217, 1
  store i32 %218, i32* %216, align 4
  br label %231

219:                                              ; preds = %203
  %220 = load i16*, i16** %11, align 8
  %221 = load i32, i32* %7, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds i16, i16* %220, i64 %222
  store i16 0, i16* %223, align 2
  %224 = load i32, i32* %7, align 4
  %225 = add nsw i32 %224, 1
  store i32 %225, i32* %7, align 4
  %226 = load %struct.EState*, %struct.EState** %2, align 8
  %227 = getelementptr inbounds %struct.EState, %struct.EState* %226, i32 0, i32 32
  %228 = getelementptr inbounds [258 x i32], [258 x i32]* %227, i64 0, i64 0
  %229 = load i32, i32* %228, align 8
  %230 = add nsw i32 %229, 1
  store i32 %230, i32* %228, align 8
  br label %231

231:                                              ; preds = %219, %207
  %232 = load i32, i32* %6, align 4
  %233 = icmp slt i32 %232, 2
  br i1 %233, label %234, label %235

234:                                              ; preds = %231
  br label %239

235:                                              ; preds = %231
  %236 = load i32, i32* %6, align 4
  %237 = sub nsw i32 %236, 2
  %238 = sdiv i32 %237, 2
  store i32 %238, i32* %6, align 4
  br label %203

239:                                              ; preds = %234
  store i32 0, i32* %6, align 4
  br label %240

240:                                              ; preds = %239, %197
  %241 = load i32, i32* %8, align 4
  %242 = trunc i32 %241 to i16
  %243 = load i16*, i16** %11, align 8
  %244 = load i32, i32* %7, align 4
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds i16, i16* %243, i64 %245
  store i16 %242, i16* %246, align 2
  %247 = load i32, i32* %7, align 4
  %248 = add nsw i32 %247, 1
  store i32 %248, i32* %7, align 4
  %249 = load %struct.EState*, %struct.EState** %2, align 8
  %250 = getelementptr inbounds %struct.EState, %struct.EState* %249, i32 0, i32 32
  %251 = load i32, i32* %8, align 4
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds [258 x i32], [258 x i32]* %250, i64 0, i64 %252
  %254 = load i32, i32* %253, align 4
  %255 = add nsw i32 %254, 1
  store i32 %255, i32* %253, align 4
  %256 = load i32, i32* %7, align 4
  %257 = load %struct.EState*, %struct.EState** %2, align 8
  %258 = getelementptr inbounds %struct.EState, %struct.EState* %257, i32 0, i32 31
  store i32 %256, i32* %258, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sendMTFValues(%struct.EState* %0) #0 {
  %2 = alloca %struct.EState*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca [6 x i16], align 2
  %21 = alloca [6 x i32], align 16
  %22 = alloca i16*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i16, align 2
  %31 = alloca i16, align 2
  %32 = alloca [6 x i8], align 1
  %33 = alloca i8, align 1
  %34 = alloca i8, align 1
  %35 = alloca i8, align 1
  %36 = alloca [16 x i8], align 16
  %37 = alloca i32, align 4
  %38 = alloca i16, align 2
  %39 = alloca i8*, align 8
  %40 = alloca i32*, align 8
  store %struct.EState* %0, %struct.EState** %2, align 8
  %41 = load %struct.EState*, %struct.EState** %2, align 8
  %42 = getelementptr inbounds %struct.EState, %struct.EState* %41, i32 0, i32 10
  %43 = load i16*, i16** %42, align 8
  store i16* %43, i16** %22, align 8
  %44 = load %struct.EState*, %struct.EState** %2, align 8
  %45 = getelementptr inbounds %struct.EState, %struct.EState* %44, i32 0, i32 28
  %46 = load i32, i32* %45, align 8
  %47 = icmp sge i32 %46, 3
  br i1 %47, label %48, label %60

48:                                               ; preds = %1
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %50 = load %struct.EState*, %struct.EState** %2, align 8
  %51 = getelementptr inbounds %struct.EState, %struct.EState* %50, i32 0, i32 17
  %52 = load i32, i32* %51, align 4
  %53 = load %struct.EState*, %struct.EState** %2, align 8
  %54 = getelementptr inbounds %struct.EState, %struct.EState* %53, i32 0, i32 31
  %55 = load i32, i32* %54, align 4
  %56 = load %struct.EState*, %struct.EState** %2, align 8
  %57 = getelementptr inbounds %struct.EState, %struct.EState* %56, i32 0, i32 21
  %58 = load i32, i32* %57, align 4
  %59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.55, i64 0, i64 0), i32 %52, i32 %55, i32 %58)
  br label %60

60:                                               ; preds = %48, %1
  %61 = load %struct.EState*, %struct.EState** %2, align 8
  %62 = getelementptr inbounds %struct.EState, %struct.EState* %61, i32 0, i32 21
  %63 = load i32, i32* %62, align 4
  %64 = add nsw i32 %63, 2
  store i32 %64, i32* %14, align 4
  store i32 0, i32* %4, align 4
  br label %65

65:                                               ; preds = %86, %60
  %66 = load i32, i32* %4, align 4
  %67 = icmp slt i32 %66, 6
  br i1 %67, label %68, label %89

68:                                               ; preds = %65
  store i32 0, i32* %3, align 4
  br label %69

69:                                               ; preds = %82, %68
  %70 = load i32, i32* %3, align 4
  %71 = load i32, i32* %14, align 4
  %72 = icmp slt i32 %70, %71
  br i1 %72, label %73, label %85

73:                                               ; preds = %69
  %74 = load %struct.EState*, %struct.EState** %2, align 8
  %75 = getelementptr inbounds %struct.EState, %struct.EState* %74, i32 0, i32 35
  %76 = load i32, i32* %4, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %75, i64 0, i64 %77
  %79 = load i32, i32* %3, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [258 x i8], [258 x i8]* %78, i64 0, i64 %80
  store i8 15, i8* %81, align 1
  br label %82

82:                                               ; preds = %73
  %83 = load i32, i32* %3, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %3, align 4
  br label %69

85:                                               ; preds = %69
  br label %86

86:                                               ; preds = %85
  %87 = load i32, i32* %4, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %4, align 4
  br label %65

89:                                               ; preds = %65
  %90 = load %struct.EState*, %struct.EState** %2, align 8
  %91 = getelementptr inbounds %struct.EState, %struct.EState* %90, i32 0, i32 31
  %92 = load i32, i32* %91, align 4
  %93 = icmp sgt i32 %92, 0
  br i1 %93, label %95, label %94

94:                                               ; preds = %89
  call void @BZ2_bz__AssertH__fail(i32 3001)
  br label %95

95:                                               ; preds = %94, %89
  %96 = load %struct.EState*, %struct.EState** %2, align 8
  %97 = getelementptr inbounds %struct.EState, %struct.EState* %96, i32 0, i32 31
  %98 = load i32, i32* %97, align 4
  %99 = icmp slt i32 %98, 200
  br i1 %99, label %100, label %101

100:                                              ; preds = %95
  store i32 2, i32* %18, align 4
  br label %123

101:                                              ; preds = %95
  %102 = load %struct.EState*, %struct.EState** %2, align 8
  %103 = getelementptr inbounds %struct.EState, %struct.EState* %102, i32 0, i32 31
  %104 = load i32, i32* %103, align 4
  %105 = icmp slt i32 %104, 600
  br i1 %105, label %106, label %107

106:                                              ; preds = %101
  store i32 3, i32* %18, align 4
  br label %122

107:                                              ; preds = %101
  %108 = load %struct.EState*, %struct.EState** %2, align 8
  %109 = getelementptr inbounds %struct.EState, %struct.EState* %108, i32 0, i32 31
  %110 = load i32, i32* %109, align 4
  %111 = icmp slt i32 %110, 1200
  br i1 %111, label %112, label %113

112:                                              ; preds = %107
  store i32 4, i32* %18, align 4
  br label %121

113:                                              ; preds = %107
  %114 = load %struct.EState*, %struct.EState** %2, align 8
  %115 = getelementptr inbounds %struct.EState, %struct.EState* %114, i32 0, i32 31
  %116 = load i32, i32* %115, align 4
  %117 = icmp slt i32 %116, 2400
  br i1 %117, label %118, label %119

118:                                              ; preds = %113
  store i32 5, i32* %18, align 4
  br label %120

119:                                              ; preds = %113
  store i32 6, i32* %18, align 4
  br label %120

120:                                              ; preds = %119, %118
  br label %121

121:                                              ; preds = %120, %112
  br label %122

122:                                              ; preds = %121, %106
  br label %123

123:                                              ; preds = %122, %100
  %124 = load i32, i32* %18, align 4
  store i32 %124, i32* %23, align 4
  %125 = load %struct.EState*, %struct.EState** %2, align 8
  %126 = getelementptr inbounds %struct.EState, %struct.EState* %125, i32 0, i32 31
  %127 = load i32, i32* %126, align 4
  store i32 %127, i32* %24, align 4
  store i32 0, i32* %7, align 4
  br label %128

128:                                              ; preds = %246, %123
  %129 = load i32, i32* %23, align 4
  %130 = icmp sgt i32 %129, 0
  br i1 %130, label %131, label %254

131:                                              ; preds = %128
  %132 = load i32, i32* %24, align 4
  %133 = load i32, i32* %23, align 4
  %134 = sdiv i32 %132, %133
  store i32 %134, i32* %25, align 4
  %135 = load i32, i32* %7, align 4
  %136 = sub nsw i32 %135, 1
  store i32 %136, i32* %8, align 4
  store i32 0, i32* %26, align 4
  br label %137

137:                                              ; preds = %148, %131
  %138 = load i32, i32* %26, align 4
  %139 = load i32, i32* %25, align 4
  %140 = icmp slt i32 %138, %139
  br i1 %140, label %141, label %146

141:                                              ; preds = %137
  %142 = load i32, i32* %8, align 4
  %143 = load i32, i32* %14, align 4
  %144 = sub nsw i32 %143, 1
  %145 = icmp slt i32 %142, %144
  br label %146

146:                                              ; preds = %141, %137
  %147 = phi i1 [ false, %137 ], [ %145, %141 ]
  br i1 %147, label %148, label %159

148:                                              ; preds = %146
  %149 = load i32, i32* %8, align 4
  %150 = add nsw i32 %149, 1
  store i32 %150, i32* %8, align 4
  %151 = load %struct.EState*, %struct.EState** %2, align 8
  %152 = getelementptr inbounds %struct.EState, %struct.EState* %151, i32 0, i32 32
  %153 = load i32, i32* %8, align 4
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds [258 x i32], [258 x i32]* %152, i64 0, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = load i32, i32* %26, align 4
  %158 = add nsw i32 %157, %156
  store i32 %158, i32* %26, align 4
  br label %137

159:                                              ; preds = %146
  %160 = load i32, i32* %8, align 4
  %161 = load i32, i32* %7, align 4
  %162 = icmp sgt i32 %160, %161
  br i1 %162, label %163, label %187

163:                                              ; preds = %159
  %164 = load i32, i32* %23, align 4
  %165 = load i32, i32* %18, align 4
  %166 = icmp ne i32 %164, %165
  br i1 %166, label %167, label %187

167:                                              ; preds = %163
  %168 = load i32, i32* %23, align 4
  %169 = icmp ne i32 %168, 1
  br i1 %169, label %170, label %187

170:                                              ; preds = %167
  %171 = load i32, i32* %18, align 4
  %172 = load i32, i32* %23, align 4
  %173 = sub nsw i32 %171, %172
  %174 = srem i32 %173, 2
  %175 = icmp eq i32 %174, 1
  br i1 %175, label %176, label %187

176:                                              ; preds = %170
  %177 = load %struct.EState*, %struct.EState** %2, align 8
  %178 = getelementptr inbounds %struct.EState, %struct.EState* %177, i32 0, i32 32
  %179 = load i32, i32* %8, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds [258 x i32], [258 x i32]* %178, i64 0, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = load i32, i32* %26, align 4
  %184 = sub nsw i32 %183, %182
  store i32 %184, i32* %26, align 4
  %185 = load i32, i32* %8, align 4
  %186 = add nsw i32 %185, -1
  store i32 %186, i32* %8, align 4
  br label %187

187:                                              ; preds = %176, %170, %167, %163, %159
  %188 = load %struct.EState*, %struct.EState** %2, align 8
  %189 = getelementptr inbounds %struct.EState, %struct.EState* %188, i32 0, i32 28
  %190 = load i32, i32* %189, align 8
  %191 = icmp sge i32 %190, 3
  br i1 %191, label %192, label %209

192:                                              ; preds = %187
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %194 = load i32, i32* %23, align 4
  %195 = load i32, i32* %7, align 4
  %196 = load i32, i32* %8, align 4
  %197 = load i32, i32* %26, align 4
  %198 = load i32, i32* %26, align 4
  %199 = sitofp i32 %198 to float
  %200 = fpext float %199 to double
  %201 = fmul double 1.000000e+02, %200
  %202 = load %struct.EState*, %struct.EState** %2, align 8
  %203 = getelementptr inbounds %struct.EState, %struct.EState* %202, i32 0, i32 31
  %204 = load i32, i32* %203, align 4
  %205 = sitofp i32 %204 to float
  %206 = fpext float %205 to double
  %207 = fdiv double %201, %206
  %208 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %193, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.56, i64 0, i64 0), i32 %194, i32 %195, i32 %196, i32 %197, double %207)
  br label %209

209:                                              ; preds = %192, %187
  store i32 0, i32* %3, align 4
  br label %210

210:                                              ; preds = %243, %209
  %211 = load i32, i32* %3, align 4
  %212 = load i32, i32* %14, align 4
  %213 = icmp slt i32 %211, %212
  br i1 %213, label %214, label %246

214:                                              ; preds = %210
  %215 = load i32, i32* %3, align 4
  %216 = load i32, i32* %7, align 4
  %217 = icmp sge i32 %215, %216
  br i1 %217, label %218, label %232

218:                                              ; preds = %214
  %219 = load i32, i32* %3, align 4
  %220 = load i32, i32* %8, align 4
  %221 = icmp sle i32 %219, %220
  br i1 %221, label %222, label %232

222:                                              ; preds = %218
  %223 = load %struct.EState*, %struct.EState** %2, align 8
  %224 = getelementptr inbounds %struct.EState, %struct.EState* %223, i32 0, i32 35
  %225 = load i32, i32* %23, align 4
  %226 = sub nsw i32 %225, 1
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %224, i64 0, i64 %227
  %229 = load i32, i32* %3, align 4
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds [258 x i8], [258 x i8]* %228, i64 0, i64 %230
  store i8 0, i8* %231, align 1
  br label %242

232:                                              ; preds = %218, %214
  %233 = load %struct.EState*, %struct.EState** %2, align 8
  %234 = getelementptr inbounds %struct.EState, %struct.EState* %233, i32 0, i32 35
  %235 = load i32, i32* %23, align 4
  %236 = sub nsw i32 %235, 1
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %234, i64 0, i64 %237
  %239 = load i32, i32* %3, align 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds [258 x i8], [258 x i8]* %238, i64 0, i64 %240
  store i8 15, i8* %241, align 1
  br label %242

242:                                              ; preds = %232, %222
  br label %243

243:                                              ; preds = %242
  %244 = load i32, i32* %3, align 4
  %245 = add nsw i32 %244, 1
  store i32 %245, i32* %3, align 4
  br label %210

246:                                              ; preds = %210
  %247 = load i32, i32* %23, align 4
  %248 = add nsw i32 %247, -1
  store i32 %248, i32* %23, align 4
  %249 = load i32, i32* %8, align 4
  %250 = add nsw i32 %249, 1
  store i32 %250, i32* %7, align 4
  %251 = load i32, i32* %26, align 4
  %252 = load i32, i32* %24, align 4
  %253 = sub nsw i32 %252, %251
  store i32 %253, i32* %24, align 4
  br label %128

254:                                              ; preds = %128
  store i32 0, i32* %12, align 4
  br label %255

255:                                              ; preds = %3022, %254
  %256 = load i32, i32* %12, align 4
  %257 = icmp slt i32 %256, 4
  br i1 %257, label %258, label %3025

258:                                              ; preds = %255
  store i32 0, i32* %4, align 4
  br label %259

259:                                              ; preds = %267, %258
  %260 = load i32, i32* %4, align 4
  %261 = load i32, i32* %18, align 4
  %262 = icmp slt i32 %260, %261
  br i1 %262, label %263, label %270

263:                                              ; preds = %259
  %264 = load i32, i32* %4, align 4
  %265 = sext i32 %264 to i64
  %266 = getelementptr inbounds [6 x i32], [6 x i32]* %21, i64 0, i64 %265
  store i32 0, i32* %266, align 4
  br label %267

267:                                              ; preds = %263
  %268 = load i32, i32* %4, align 4
  %269 = add nsw i32 %268, 1
  store i32 %269, i32* %4, align 4
  br label %259

270:                                              ; preds = %259
  store i32 0, i32* %4, align 4
  br label %271

271:                                              ; preds = %293, %270
  %272 = load i32, i32* %4, align 4
  %273 = load i32, i32* %18, align 4
  %274 = icmp slt i32 %272, %273
  br i1 %274, label %275, label %296

275:                                              ; preds = %271
  store i32 0, i32* %3, align 4
  br label %276

276:                                              ; preds = %289, %275
  %277 = load i32, i32* %3, align 4
  %278 = load i32, i32* %14, align 4
  %279 = icmp slt i32 %277, %278
  br i1 %279, label %280, label %292

280:                                              ; preds = %276
  %281 = load %struct.EState*, %struct.EState** %2, align 8
  %282 = getelementptr inbounds %struct.EState, %struct.EState* %281, i32 0, i32 37
  %283 = load i32, i32* %4, align 4
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %282, i64 0, i64 %284
  %286 = load i32, i32* %3, align 4
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds [258 x i32], [258 x i32]* %285, i64 0, i64 %287
  store i32 0, i32* %288, align 4
  br label %289

289:                                              ; preds = %280
  %290 = load i32, i32* %3, align 4
  %291 = add nsw i32 %290, 1
  store i32 %291, i32* %3, align 4
  br label %276

292:                                              ; preds = %276
  br label %293

293:                                              ; preds = %292
  %294 = load i32, i32* %4, align 4
  %295 = add nsw i32 %294, 1
  store i32 %295, i32* %4, align 4
  br label %271

296:                                              ; preds = %271
  %297 = load i32, i32* %18, align 4
  %298 = icmp eq i32 %297, 6
  br i1 %298, label %299, label %381

299:                                              ; preds = %296
  store i32 0, i32* %3, align 4
  br label %300

300:                                              ; preds = %377, %299
  %301 = load i32, i32* %3, align 4
  %302 = load i32, i32* %14, align 4
  %303 = icmp slt i32 %301, %302
  br i1 %303, label %304, label %380

304:                                              ; preds = %300
  %305 = load %struct.EState*, %struct.EState** %2, align 8
  %306 = getelementptr inbounds %struct.EState, %struct.EState* %305, i32 0, i32 35
  %307 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %306, i64 0, i64 1
  %308 = load i32, i32* %3, align 4
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds [258 x i8], [258 x i8]* %307, i64 0, i64 %309
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i32
  %313 = shl i32 %312, 16
  %314 = load %struct.EState*, %struct.EState** %2, align 8
  %315 = getelementptr inbounds %struct.EState, %struct.EState* %314, i32 0, i32 35
  %316 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %315, i64 0, i64 0
  %317 = load i32, i32* %3, align 4
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds [258 x i8], [258 x i8]* %316, i64 0, i64 %318
  %320 = load i8, i8* %319, align 1
  %321 = zext i8 %320 to i32
  %322 = or i32 %313, %321
  %323 = load %struct.EState*, %struct.EState** %2, align 8
  %324 = getelementptr inbounds %struct.EState, %struct.EState* %323, i32 0, i32 38
  %325 = load i32, i32* %3, align 4
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %324, i64 0, i64 %326
  %328 = getelementptr inbounds [4 x i32], [4 x i32]* %327, i64 0, i64 0
  store i32 %322, i32* %328, align 8
  %329 = load %struct.EState*, %struct.EState** %2, align 8
  %330 = getelementptr inbounds %struct.EState, %struct.EState* %329, i32 0, i32 35
  %331 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %330, i64 0, i64 3
  %332 = load i32, i32* %3, align 4
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds [258 x i8], [258 x i8]* %331, i64 0, i64 %333
  %335 = load i8, i8* %334, align 1
  %336 = zext i8 %335 to i32
  %337 = shl i32 %336, 16
  %338 = load %struct.EState*, %struct.EState** %2, align 8
  %339 = getelementptr inbounds %struct.EState, %struct.EState* %338, i32 0, i32 35
  %340 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %339, i64 0, i64 2
  %341 = load i32, i32* %3, align 4
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds [258 x i8], [258 x i8]* %340, i64 0, i64 %342
  %344 = load i8, i8* %343, align 1
  %345 = zext i8 %344 to i32
  %346 = or i32 %337, %345
  %347 = load %struct.EState*, %struct.EState** %2, align 8
  %348 = getelementptr inbounds %struct.EState, %struct.EState* %347, i32 0, i32 38
  %349 = load i32, i32* %3, align 4
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %348, i64 0, i64 %350
  %352 = getelementptr inbounds [4 x i32], [4 x i32]* %351, i64 0, i64 1
  store i32 %346, i32* %352, align 4
  %353 = load %struct.EState*, %struct.EState** %2, align 8
  %354 = getelementptr inbounds %struct.EState, %struct.EState* %353, i32 0, i32 35
  %355 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %354, i64 0, i64 5
  %356 = load i32, i32* %3, align 4
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds [258 x i8], [258 x i8]* %355, i64 0, i64 %357
  %359 = load i8, i8* %358, align 1
  %360 = zext i8 %359 to i32
  %361 = shl i32 %360, 16
  %362 = load %struct.EState*, %struct.EState** %2, align 8
  %363 = getelementptr inbounds %struct.EState, %struct.EState* %362, i32 0, i32 35
  %364 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %363, i64 0, i64 4
  %365 = load i32, i32* %3, align 4
  %366 = sext i32 %365 to i64
  %367 = getelementptr inbounds [258 x i8], [258 x i8]* %364, i64 0, i64 %366
  %368 = load i8, i8* %367, align 1
  %369 = zext i8 %368 to i32
  %370 = or i32 %361, %369
  %371 = load %struct.EState*, %struct.EState** %2, align 8
  %372 = getelementptr inbounds %struct.EState, %struct.EState* %371, i32 0, i32 38
  %373 = load i32, i32* %3, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %372, i64 0, i64 %374
  %376 = getelementptr inbounds [4 x i32], [4 x i32]* %375, i64 0, i64 2
  store i32 %370, i32* %376, align 8
  br label %377

377:                                              ; preds = %304
  %378 = load i32, i32* %3, align 4
  %379 = add nsw i32 %378, 1
  store i32 %379, i32* %3, align 4
  br label %300

380:                                              ; preds = %300
  br label %381

381:                                              ; preds = %380, %296
  store i32 0, i32* %13, align 4
  store i32 0, i32* %9, align 4
  store i32 0, i32* %7, align 4
  br label %382

382:                                              ; preds = %381, %2967
  %383 = load i32, i32* %7, align 4
  %384 = load %struct.EState*, %struct.EState** %2, align 8
  %385 = getelementptr inbounds %struct.EState, %struct.EState* %384, i32 0, i32 31
  %386 = load i32, i32* %385, align 4
  %387 = icmp sge i32 %383, %386
  br i1 %387, label %388, label %389

388:                                              ; preds = %382
  br label %2970

389:                                              ; preds = %382
  %390 = load i32, i32* %7, align 4
  %391 = add nsw i32 %390, 50
  %392 = sub nsw i32 %391, 1
  store i32 %392, i32* %8, align 4
  %393 = load i32, i32* %8, align 4
  %394 = load %struct.EState*, %struct.EState** %2, align 8
  %395 = getelementptr inbounds %struct.EState, %struct.EState* %394, i32 0, i32 31
  %396 = load i32, i32* %395, align 4
  %397 = icmp sge i32 %393, %396
  br i1 %397, label %398, label %403

398:                                              ; preds = %389
  %399 = load %struct.EState*, %struct.EState** %2, align 8
  %400 = getelementptr inbounds %struct.EState, %struct.EState* %399, i32 0, i32 31
  %401 = load i32, i32* %400, align 4
  %402 = sub nsw i32 %401, 1
  store i32 %402, i32* %8, align 4
  br label %403

403:                                              ; preds = %398, %389
  store i32 0, i32* %4, align 4
  br label %404

404:                                              ; preds = %412, %403
  %405 = load i32, i32* %4, align 4
  %406 = load i32, i32* %18, align 4
  %407 = icmp slt i32 %405, %406
  br i1 %407, label %408, label %415

408:                                              ; preds = %404
  %409 = load i32, i32* %4, align 4
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds [6 x i16], [6 x i16]* %20, i64 0, i64 %410
  store i16 0, i16* %411, align 2
  br label %412

412:                                              ; preds = %408
  %413 = load i32, i32* %4, align 4
  %414 = add nsw i32 %413, 1
  store i32 %414, i32* %4, align 4
  br label %404

415:                                              ; preds = %404
  %416 = load i32, i32* %18, align 4
  %417 = icmp eq i32 %416, 6
  br i1 %417, label %418, label %2099

418:                                              ; preds = %415
  %419 = load i32, i32* %8, align 4
  %420 = load i32, i32* %7, align 4
  %421 = sub nsw i32 %419, %420
  %422 = add nsw i32 %421, 1
  %423 = icmp eq i32 50, %422
  br i1 %423, label %424, label %2099

424:                                              ; preds = %418
  store i32 0, i32* %29, align 4
  store i32 0, i32* %28, align 4
  store i32 0, i32* %27, align 4
  %425 = load i16*, i16** %22, align 8
  %426 = load i32, i32* %7, align 4
  %427 = add nsw i32 %426, 0
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds i16, i16* %425, i64 %428
  %430 = load i16, i16* %429, align 2
  store i16 %430, i16* %30, align 2
  %431 = load %struct.EState*, %struct.EState** %2, align 8
  %432 = getelementptr inbounds %struct.EState, %struct.EState* %431, i32 0, i32 38
  %433 = load i16, i16* %30, align 2
  %434 = zext i16 %433 to i64
  %435 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %432, i64 0, i64 %434
  %436 = getelementptr inbounds [4 x i32], [4 x i32]* %435, i64 0, i64 0
  %437 = load i32, i32* %436, align 8
  %438 = load i32, i32* %27, align 4
  %439 = add i32 %438, %437
  store i32 %439, i32* %27, align 4
  %440 = load %struct.EState*, %struct.EState** %2, align 8
  %441 = getelementptr inbounds %struct.EState, %struct.EState* %440, i32 0, i32 38
  %442 = load i16, i16* %30, align 2
  %443 = zext i16 %442 to i64
  %444 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %441, i64 0, i64 %443
  %445 = getelementptr inbounds [4 x i32], [4 x i32]* %444, i64 0, i64 1
  %446 = load i32, i32* %445, align 4
  %447 = load i32, i32* %28, align 4
  %448 = add i32 %447, %446
  store i32 %448, i32* %28, align 4
  %449 = load %struct.EState*, %struct.EState** %2, align 8
  %450 = getelementptr inbounds %struct.EState, %struct.EState* %449, i32 0, i32 38
  %451 = load i16, i16* %30, align 2
  %452 = zext i16 %451 to i64
  %453 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %450, i64 0, i64 %452
  %454 = getelementptr inbounds [4 x i32], [4 x i32]* %453, i64 0, i64 2
  %455 = load i32, i32* %454, align 8
  %456 = load i32, i32* %29, align 4
  %457 = add i32 %456, %455
  store i32 %457, i32* %29, align 4
  %458 = load i16*, i16** %22, align 8
  %459 = load i32, i32* %7, align 4
  %460 = add nsw i32 %459, 1
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds i16, i16* %458, i64 %461
  %463 = load i16, i16* %462, align 2
  store i16 %463, i16* %30, align 2
  %464 = load %struct.EState*, %struct.EState** %2, align 8
  %465 = getelementptr inbounds %struct.EState, %struct.EState* %464, i32 0, i32 38
  %466 = load i16, i16* %30, align 2
  %467 = zext i16 %466 to i64
  %468 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %465, i64 0, i64 %467
  %469 = getelementptr inbounds [4 x i32], [4 x i32]* %468, i64 0, i64 0
  %470 = load i32, i32* %469, align 8
  %471 = load i32, i32* %27, align 4
  %472 = add i32 %471, %470
  store i32 %472, i32* %27, align 4
  %473 = load %struct.EState*, %struct.EState** %2, align 8
  %474 = getelementptr inbounds %struct.EState, %struct.EState* %473, i32 0, i32 38
  %475 = load i16, i16* %30, align 2
  %476 = zext i16 %475 to i64
  %477 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %474, i64 0, i64 %476
  %478 = getelementptr inbounds [4 x i32], [4 x i32]* %477, i64 0, i64 1
  %479 = load i32, i32* %478, align 4
  %480 = load i32, i32* %28, align 4
  %481 = add i32 %480, %479
  store i32 %481, i32* %28, align 4
  %482 = load %struct.EState*, %struct.EState** %2, align 8
  %483 = getelementptr inbounds %struct.EState, %struct.EState* %482, i32 0, i32 38
  %484 = load i16, i16* %30, align 2
  %485 = zext i16 %484 to i64
  %486 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %483, i64 0, i64 %485
  %487 = getelementptr inbounds [4 x i32], [4 x i32]* %486, i64 0, i64 2
  %488 = load i32, i32* %487, align 8
  %489 = load i32, i32* %29, align 4
  %490 = add i32 %489, %488
  store i32 %490, i32* %29, align 4
  %491 = load i16*, i16** %22, align 8
  %492 = load i32, i32* %7, align 4
  %493 = add nsw i32 %492, 2
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds i16, i16* %491, i64 %494
  %496 = load i16, i16* %495, align 2
  store i16 %496, i16* %30, align 2
  %497 = load %struct.EState*, %struct.EState** %2, align 8
  %498 = getelementptr inbounds %struct.EState, %struct.EState* %497, i32 0, i32 38
  %499 = load i16, i16* %30, align 2
  %500 = zext i16 %499 to i64
  %501 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %498, i64 0, i64 %500
  %502 = getelementptr inbounds [4 x i32], [4 x i32]* %501, i64 0, i64 0
  %503 = load i32, i32* %502, align 8
  %504 = load i32, i32* %27, align 4
  %505 = add i32 %504, %503
  store i32 %505, i32* %27, align 4
  %506 = load %struct.EState*, %struct.EState** %2, align 8
  %507 = getelementptr inbounds %struct.EState, %struct.EState* %506, i32 0, i32 38
  %508 = load i16, i16* %30, align 2
  %509 = zext i16 %508 to i64
  %510 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %507, i64 0, i64 %509
  %511 = getelementptr inbounds [4 x i32], [4 x i32]* %510, i64 0, i64 1
  %512 = load i32, i32* %511, align 4
  %513 = load i32, i32* %28, align 4
  %514 = add i32 %513, %512
  store i32 %514, i32* %28, align 4
  %515 = load %struct.EState*, %struct.EState** %2, align 8
  %516 = getelementptr inbounds %struct.EState, %struct.EState* %515, i32 0, i32 38
  %517 = load i16, i16* %30, align 2
  %518 = zext i16 %517 to i64
  %519 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %516, i64 0, i64 %518
  %520 = getelementptr inbounds [4 x i32], [4 x i32]* %519, i64 0, i64 2
  %521 = load i32, i32* %520, align 8
  %522 = load i32, i32* %29, align 4
  %523 = add i32 %522, %521
  store i32 %523, i32* %29, align 4
  %524 = load i16*, i16** %22, align 8
  %525 = load i32, i32* %7, align 4
  %526 = add nsw i32 %525, 3
  %527 = sext i32 %526 to i64
  %528 = getelementptr inbounds i16, i16* %524, i64 %527
  %529 = load i16, i16* %528, align 2
  store i16 %529, i16* %30, align 2
  %530 = load %struct.EState*, %struct.EState** %2, align 8
  %531 = getelementptr inbounds %struct.EState, %struct.EState* %530, i32 0, i32 38
  %532 = load i16, i16* %30, align 2
  %533 = zext i16 %532 to i64
  %534 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %531, i64 0, i64 %533
  %535 = getelementptr inbounds [4 x i32], [4 x i32]* %534, i64 0, i64 0
  %536 = load i32, i32* %535, align 8
  %537 = load i32, i32* %27, align 4
  %538 = add i32 %537, %536
  store i32 %538, i32* %27, align 4
  %539 = load %struct.EState*, %struct.EState** %2, align 8
  %540 = getelementptr inbounds %struct.EState, %struct.EState* %539, i32 0, i32 38
  %541 = load i16, i16* %30, align 2
  %542 = zext i16 %541 to i64
  %543 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %540, i64 0, i64 %542
  %544 = getelementptr inbounds [4 x i32], [4 x i32]* %543, i64 0, i64 1
  %545 = load i32, i32* %544, align 4
  %546 = load i32, i32* %28, align 4
  %547 = add i32 %546, %545
  store i32 %547, i32* %28, align 4
  %548 = load %struct.EState*, %struct.EState** %2, align 8
  %549 = getelementptr inbounds %struct.EState, %struct.EState* %548, i32 0, i32 38
  %550 = load i16, i16* %30, align 2
  %551 = zext i16 %550 to i64
  %552 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %549, i64 0, i64 %551
  %553 = getelementptr inbounds [4 x i32], [4 x i32]* %552, i64 0, i64 2
  %554 = load i32, i32* %553, align 8
  %555 = load i32, i32* %29, align 4
  %556 = add i32 %555, %554
  store i32 %556, i32* %29, align 4
  %557 = load i16*, i16** %22, align 8
  %558 = load i32, i32* %7, align 4
  %559 = add nsw i32 %558, 4
  %560 = sext i32 %559 to i64
  %561 = getelementptr inbounds i16, i16* %557, i64 %560
  %562 = load i16, i16* %561, align 2
  store i16 %562, i16* %30, align 2
  %563 = load %struct.EState*, %struct.EState** %2, align 8
  %564 = getelementptr inbounds %struct.EState, %struct.EState* %563, i32 0, i32 38
  %565 = load i16, i16* %30, align 2
  %566 = zext i16 %565 to i64
  %567 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %564, i64 0, i64 %566
  %568 = getelementptr inbounds [4 x i32], [4 x i32]* %567, i64 0, i64 0
  %569 = load i32, i32* %568, align 8
  %570 = load i32, i32* %27, align 4
  %571 = add i32 %570, %569
  store i32 %571, i32* %27, align 4
  %572 = load %struct.EState*, %struct.EState** %2, align 8
  %573 = getelementptr inbounds %struct.EState, %struct.EState* %572, i32 0, i32 38
  %574 = load i16, i16* %30, align 2
  %575 = zext i16 %574 to i64
  %576 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %573, i64 0, i64 %575
  %577 = getelementptr inbounds [4 x i32], [4 x i32]* %576, i64 0, i64 1
  %578 = load i32, i32* %577, align 4
  %579 = load i32, i32* %28, align 4
  %580 = add i32 %579, %578
  store i32 %580, i32* %28, align 4
  %581 = load %struct.EState*, %struct.EState** %2, align 8
  %582 = getelementptr inbounds %struct.EState, %struct.EState* %581, i32 0, i32 38
  %583 = load i16, i16* %30, align 2
  %584 = zext i16 %583 to i64
  %585 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %582, i64 0, i64 %584
  %586 = getelementptr inbounds [4 x i32], [4 x i32]* %585, i64 0, i64 2
  %587 = load i32, i32* %586, align 8
  %588 = load i32, i32* %29, align 4
  %589 = add i32 %588, %587
  store i32 %589, i32* %29, align 4
  %590 = load i16*, i16** %22, align 8
  %591 = load i32, i32* %7, align 4
  %592 = add nsw i32 %591, 5
  %593 = sext i32 %592 to i64
  %594 = getelementptr inbounds i16, i16* %590, i64 %593
  %595 = load i16, i16* %594, align 2
  store i16 %595, i16* %30, align 2
  %596 = load %struct.EState*, %struct.EState** %2, align 8
  %597 = getelementptr inbounds %struct.EState, %struct.EState* %596, i32 0, i32 38
  %598 = load i16, i16* %30, align 2
  %599 = zext i16 %598 to i64
  %600 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %597, i64 0, i64 %599
  %601 = getelementptr inbounds [4 x i32], [4 x i32]* %600, i64 0, i64 0
  %602 = load i32, i32* %601, align 8
  %603 = load i32, i32* %27, align 4
  %604 = add i32 %603, %602
  store i32 %604, i32* %27, align 4
  %605 = load %struct.EState*, %struct.EState** %2, align 8
  %606 = getelementptr inbounds %struct.EState, %struct.EState* %605, i32 0, i32 38
  %607 = load i16, i16* %30, align 2
  %608 = zext i16 %607 to i64
  %609 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %606, i64 0, i64 %608
  %610 = getelementptr inbounds [4 x i32], [4 x i32]* %609, i64 0, i64 1
  %611 = load i32, i32* %610, align 4
  %612 = load i32, i32* %28, align 4
  %613 = add i32 %612, %611
  store i32 %613, i32* %28, align 4
  %614 = load %struct.EState*, %struct.EState** %2, align 8
  %615 = getelementptr inbounds %struct.EState, %struct.EState* %614, i32 0, i32 38
  %616 = load i16, i16* %30, align 2
  %617 = zext i16 %616 to i64
  %618 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %615, i64 0, i64 %617
  %619 = getelementptr inbounds [4 x i32], [4 x i32]* %618, i64 0, i64 2
  %620 = load i32, i32* %619, align 8
  %621 = load i32, i32* %29, align 4
  %622 = add i32 %621, %620
  store i32 %622, i32* %29, align 4
  %623 = load i16*, i16** %22, align 8
  %624 = load i32, i32* %7, align 4
  %625 = add nsw i32 %624, 6
  %626 = sext i32 %625 to i64
  %627 = getelementptr inbounds i16, i16* %623, i64 %626
  %628 = load i16, i16* %627, align 2
  store i16 %628, i16* %30, align 2
  %629 = load %struct.EState*, %struct.EState** %2, align 8
  %630 = getelementptr inbounds %struct.EState, %struct.EState* %629, i32 0, i32 38
  %631 = load i16, i16* %30, align 2
  %632 = zext i16 %631 to i64
  %633 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %630, i64 0, i64 %632
  %634 = getelementptr inbounds [4 x i32], [4 x i32]* %633, i64 0, i64 0
  %635 = load i32, i32* %634, align 8
  %636 = load i32, i32* %27, align 4
  %637 = add i32 %636, %635
  store i32 %637, i32* %27, align 4
  %638 = load %struct.EState*, %struct.EState** %2, align 8
  %639 = getelementptr inbounds %struct.EState, %struct.EState* %638, i32 0, i32 38
  %640 = load i16, i16* %30, align 2
  %641 = zext i16 %640 to i64
  %642 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %639, i64 0, i64 %641
  %643 = getelementptr inbounds [4 x i32], [4 x i32]* %642, i64 0, i64 1
  %644 = load i32, i32* %643, align 4
  %645 = load i32, i32* %28, align 4
  %646 = add i32 %645, %644
  store i32 %646, i32* %28, align 4
  %647 = load %struct.EState*, %struct.EState** %2, align 8
  %648 = getelementptr inbounds %struct.EState, %struct.EState* %647, i32 0, i32 38
  %649 = load i16, i16* %30, align 2
  %650 = zext i16 %649 to i64
  %651 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %648, i64 0, i64 %650
  %652 = getelementptr inbounds [4 x i32], [4 x i32]* %651, i64 0, i64 2
  %653 = load i32, i32* %652, align 8
  %654 = load i32, i32* %29, align 4
  %655 = add i32 %654, %653
  store i32 %655, i32* %29, align 4
  %656 = load i16*, i16** %22, align 8
  %657 = load i32, i32* %7, align 4
  %658 = add nsw i32 %657, 7
  %659 = sext i32 %658 to i64
  %660 = getelementptr inbounds i16, i16* %656, i64 %659
  %661 = load i16, i16* %660, align 2
  store i16 %661, i16* %30, align 2
  %662 = load %struct.EState*, %struct.EState** %2, align 8
  %663 = getelementptr inbounds %struct.EState, %struct.EState* %662, i32 0, i32 38
  %664 = load i16, i16* %30, align 2
  %665 = zext i16 %664 to i64
  %666 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %663, i64 0, i64 %665
  %667 = getelementptr inbounds [4 x i32], [4 x i32]* %666, i64 0, i64 0
  %668 = load i32, i32* %667, align 8
  %669 = load i32, i32* %27, align 4
  %670 = add i32 %669, %668
  store i32 %670, i32* %27, align 4
  %671 = load %struct.EState*, %struct.EState** %2, align 8
  %672 = getelementptr inbounds %struct.EState, %struct.EState* %671, i32 0, i32 38
  %673 = load i16, i16* %30, align 2
  %674 = zext i16 %673 to i64
  %675 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %672, i64 0, i64 %674
  %676 = getelementptr inbounds [4 x i32], [4 x i32]* %675, i64 0, i64 1
  %677 = load i32, i32* %676, align 4
  %678 = load i32, i32* %28, align 4
  %679 = add i32 %678, %677
  store i32 %679, i32* %28, align 4
  %680 = load %struct.EState*, %struct.EState** %2, align 8
  %681 = getelementptr inbounds %struct.EState, %struct.EState* %680, i32 0, i32 38
  %682 = load i16, i16* %30, align 2
  %683 = zext i16 %682 to i64
  %684 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %681, i64 0, i64 %683
  %685 = getelementptr inbounds [4 x i32], [4 x i32]* %684, i64 0, i64 2
  %686 = load i32, i32* %685, align 8
  %687 = load i32, i32* %29, align 4
  %688 = add i32 %687, %686
  store i32 %688, i32* %29, align 4
  %689 = load i16*, i16** %22, align 8
  %690 = load i32, i32* %7, align 4
  %691 = add nsw i32 %690, 8
  %692 = sext i32 %691 to i64
  %693 = getelementptr inbounds i16, i16* %689, i64 %692
  %694 = load i16, i16* %693, align 2
  store i16 %694, i16* %30, align 2
  %695 = load %struct.EState*, %struct.EState** %2, align 8
  %696 = getelementptr inbounds %struct.EState, %struct.EState* %695, i32 0, i32 38
  %697 = load i16, i16* %30, align 2
  %698 = zext i16 %697 to i64
  %699 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %696, i64 0, i64 %698
  %700 = getelementptr inbounds [4 x i32], [4 x i32]* %699, i64 0, i64 0
  %701 = load i32, i32* %700, align 8
  %702 = load i32, i32* %27, align 4
  %703 = add i32 %702, %701
  store i32 %703, i32* %27, align 4
  %704 = load %struct.EState*, %struct.EState** %2, align 8
  %705 = getelementptr inbounds %struct.EState, %struct.EState* %704, i32 0, i32 38
  %706 = load i16, i16* %30, align 2
  %707 = zext i16 %706 to i64
  %708 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %705, i64 0, i64 %707
  %709 = getelementptr inbounds [4 x i32], [4 x i32]* %708, i64 0, i64 1
  %710 = load i32, i32* %709, align 4
  %711 = load i32, i32* %28, align 4
  %712 = add i32 %711, %710
  store i32 %712, i32* %28, align 4
  %713 = load %struct.EState*, %struct.EState** %2, align 8
  %714 = getelementptr inbounds %struct.EState, %struct.EState* %713, i32 0, i32 38
  %715 = load i16, i16* %30, align 2
  %716 = zext i16 %715 to i64
  %717 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %714, i64 0, i64 %716
  %718 = getelementptr inbounds [4 x i32], [4 x i32]* %717, i64 0, i64 2
  %719 = load i32, i32* %718, align 8
  %720 = load i32, i32* %29, align 4
  %721 = add i32 %720, %719
  store i32 %721, i32* %29, align 4
  %722 = load i16*, i16** %22, align 8
  %723 = load i32, i32* %7, align 4
  %724 = add nsw i32 %723, 9
  %725 = sext i32 %724 to i64
  %726 = getelementptr inbounds i16, i16* %722, i64 %725
  %727 = load i16, i16* %726, align 2
  store i16 %727, i16* %30, align 2
  %728 = load %struct.EState*, %struct.EState** %2, align 8
  %729 = getelementptr inbounds %struct.EState, %struct.EState* %728, i32 0, i32 38
  %730 = load i16, i16* %30, align 2
  %731 = zext i16 %730 to i64
  %732 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %729, i64 0, i64 %731
  %733 = getelementptr inbounds [4 x i32], [4 x i32]* %732, i64 0, i64 0
  %734 = load i32, i32* %733, align 8
  %735 = load i32, i32* %27, align 4
  %736 = add i32 %735, %734
  store i32 %736, i32* %27, align 4
  %737 = load %struct.EState*, %struct.EState** %2, align 8
  %738 = getelementptr inbounds %struct.EState, %struct.EState* %737, i32 0, i32 38
  %739 = load i16, i16* %30, align 2
  %740 = zext i16 %739 to i64
  %741 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %738, i64 0, i64 %740
  %742 = getelementptr inbounds [4 x i32], [4 x i32]* %741, i64 0, i64 1
  %743 = load i32, i32* %742, align 4
  %744 = load i32, i32* %28, align 4
  %745 = add i32 %744, %743
  store i32 %745, i32* %28, align 4
  %746 = load %struct.EState*, %struct.EState** %2, align 8
  %747 = getelementptr inbounds %struct.EState, %struct.EState* %746, i32 0, i32 38
  %748 = load i16, i16* %30, align 2
  %749 = zext i16 %748 to i64
  %750 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %747, i64 0, i64 %749
  %751 = getelementptr inbounds [4 x i32], [4 x i32]* %750, i64 0, i64 2
  %752 = load i32, i32* %751, align 8
  %753 = load i32, i32* %29, align 4
  %754 = add i32 %753, %752
  store i32 %754, i32* %29, align 4
  %755 = load i16*, i16** %22, align 8
  %756 = load i32, i32* %7, align 4
  %757 = add nsw i32 %756, 10
  %758 = sext i32 %757 to i64
  %759 = getelementptr inbounds i16, i16* %755, i64 %758
  %760 = load i16, i16* %759, align 2
  store i16 %760, i16* %30, align 2
  %761 = load %struct.EState*, %struct.EState** %2, align 8
  %762 = getelementptr inbounds %struct.EState, %struct.EState* %761, i32 0, i32 38
  %763 = load i16, i16* %30, align 2
  %764 = zext i16 %763 to i64
  %765 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %762, i64 0, i64 %764
  %766 = getelementptr inbounds [4 x i32], [4 x i32]* %765, i64 0, i64 0
  %767 = load i32, i32* %766, align 8
  %768 = load i32, i32* %27, align 4
  %769 = add i32 %768, %767
  store i32 %769, i32* %27, align 4
  %770 = load %struct.EState*, %struct.EState** %2, align 8
  %771 = getelementptr inbounds %struct.EState, %struct.EState* %770, i32 0, i32 38
  %772 = load i16, i16* %30, align 2
  %773 = zext i16 %772 to i64
  %774 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %771, i64 0, i64 %773
  %775 = getelementptr inbounds [4 x i32], [4 x i32]* %774, i64 0, i64 1
  %776 = load i32, i32* %775, align 4
  %777 = load i32, i32* %28, align 4
  %778 = add i32 %777, %776
  store i32 %778, i32* %28, align 4
  %779 = load %struct.EState*, %struct.EState** %2, align 8
  %780 = getelementptr inbounds %struct.EState, %struct.EState* %779, i32 0, i32 38
  %781 = load i16, i16* %30, align 2
  %782 = zext i16 %781 to i64
  %783 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %780, i64 0, i64 %782
  %784 = getelementptr inbounds [4 x i32], [4 x i32]* %783, i64 0, i64 2
  %785 = load i32, i32* %784, align 8
  %786 = load i32, i32* %29, align 4
  %787 = add i32 %786, %785
  store i32 %787, i32* %29, align 4
  %788 = load i16*, i16** %22, align 8
  %789 = load i32, i32* %7, align 4
  %790 = add nsw i32 %789, 11
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds i16, i16* %788, i64 %791
  %793 = load i16, i16* %792, align 2
  store i16 %793, i16* %30, align 2
  %794 = load %struct.EState*, %struct.EState** %2, align 8
  %795 = getelementptr inbounds %struct.EState, %struct.EState* %794, i32 0, i32 38
  %796 = load i16, i16* %30, align 2
  %797 = zext i16 %796 to i64
  %798 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %795, i64 0, i64 %797
  %799 = getelementptr inbounds [4 x i32], [4 x i32]* %798, i64 0, i64 0
  %800 = load i32, i32* %799, align 8
  %801 = load i32, i32* %27, align 4
  %802 = add i32 %801, %800
  store i32 %802, i32* %27, align 4
  %803 = load %struct.EState*, %struct.EState** %2, align 8
  %804 = getelementptr inbounds %struct.EState, %struct.EState* %803, i32 0, i32 38
  %805 = load i16, i16* %30, align 2
  %806 = zext i16 %805 to i64
  %807 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %804, i64 0, i64 %806
  %808 = getelementptr inbounds [4 x i32], [4 x i32]* %807, i64 0, i64 1
  %809 = load i32, i32* %808, align 4
  %810 = load i32, i32* %28, align 4
  %811 = add i32 %810, %809
  store i32 %811, i32* %28, align 4
  %812 = load %struct.EState*, %struct.EState** %2, align 8
  %813 = getelementptr inbounds %struct.EState, %struct.EState* %812, i32 0, i32 38
  %814 = load i16, i16* %30, align 2
  %815 = zext i16 %814 to i64
  %816 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %813, i64 0, i64 %815
  %817 = getelementptr inbounds [4 x i32], [4 x i32]* %816, i64 0, i64 2
  %818 = load i32, i32* %817, align 8
  %819 = load i32, i32* %29, align 4
  %820 = add i32 %819, %818
  store i32 %820, i32* %29, align 4
  %821 = load i16*, i16** %22, align 8
  %822 = load i32, i32* %7, align 4
  %823 = add nsw i32 %822, 12
  %824 = sext i32 %823 to i64
  %825 = getelementptr inbounds i16, i16* %821, i64 %824
  %826 = load i16, i16* %825, align 2
  store i16 %826, i16* %30, align 2
  %827 = load %struct.EState*, %struct.EState** %2, align 8
  %828 = getelementptr inbounds %struct.EState, %struct.EState* %827, i32 0, i32 38
  %829 = load i16, i16* %30, align 2
  %830 = zext i16 %829 to i64
  %831 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %828, i64 0, i64 %830
  %832 = getelementptr inbounds [4 x i32], [4 x i32]* %831, i64 0, i64 0
  %833 = load i32, i32* %832, align 8
  %834 = load i32, i32* %27, align 4
  %835 = add i32 %834, %833
  store i32 %835, i32* %27, align 4
  %836 = load %struct.EState*, %struct.EState** %2, align 8
  %837 = getelementptr inbounds %struct.EState, %struct.EState* %836, i32 0, i32 38
  %838 = load i16, i16* %30, align 2
  %839 = zext i16 %838 to i64
  %840 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %837, i64 0, i64 %839
  %841 = getelementptr inbounds [4 x i32], [4 x i32]* %840, i64 0, i64 1
  %842 = load i32, i32* %841, align 4
  %843 = load i32, i32* %28, align 4
  %844 = add i32 %843, %842
  store i32 %844, i32* %28, align 4
  %845 = load %struct.EState*, %struct.EState** %2, align 8
  %846 = getelementptr inbounds %struct.EState, %struct.EState* %845, i32 0, i32 38
  %847 = load i16, i16* %30, align 2
  %848 = zext i16 %847 to i64
  %849 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %846, i64 0, i64 %848
  %850 = getelementptr inbounds [4 x i32], [4 x i32]* %849, i64 0, i64 2
  %851 = load i32, i32* %850, align 8
  %852 = load i32, i32* %29, align 4
  %853 = add i32 %852, %851
  store i32 %853, i32* %29, align 4
  %854 = load i16*, i16** %22, align 8
  %855 = load i32, i32* %7, align 4
  %856 = add nsw i32 %855, 13
  %857 = sext i32 %856 to i64
  %858 = getelementptr inbounds i16, i16* %854, i64 %857
  %859 = load i16, i16* %858, align 2
  store i16 %859, i16* %30, align 2
  %860 = load %struct.EState*, %struct.EState** %2, align 8
  %861 = getelementptr inbounds %struct.EState, %struct.EState* %860, i32 0, i32 38
  %862 = load i16, i16* %30, align 2
  %863 = zext i16 %862 to i64
  %864 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %861, i64 0, i64 %863
  %865 = getelementptr inbounds [4 x i32], [4 x i32]* %864, i64 0, i64 0
  %866 = load i32, i32* %865, align 8
  %867 = load i32, i32* %27, align 4
  %868 = add i32 %867, %866
  store i32 %868, i32* %27, align 4
  %869 = load %struct.EState*, %struct.EState** %2, align 8
  %870 = getelementptr inbounds %struct.EState, %struct.EState* %869, i32 0, i32 38
  %871 = load i16, i16* %30, align 2
  %872 = zext i16 %871 to i64
  %873 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %870, i64 0, i64 %872
  %874 = getelementptr inbounds [4 x i32], [4 x i32]* %873, i64 0, i64 1
  %875 = load i32, i32* %874, align 4
  %876 = load i32, i32* %28, align 4
  %877 = add i32 %876, %875
  store i32 %877, i32* %28, align 4
  %878 = load %struct.EState*, %struct.EState** %2, align 8
  %879 = getelementptr inbounds %struct.EState, %struct.EState* %878, i32 0, i32 38
  %880 = load i16, i16* %30, align 2
  %881 = zext i16 %880 to i64
  %882 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %879, i64 0, i64 %881
  %883 = getelementptr inbounds [4 x i32], [4 x i32]* %882, i64 0, i64 2
  %884 = load i32, i32* %883, align 8
  %885 = load i32, i32* %29, align 4
  %886 = add i32 %885, %884
  store i32 %886, i32* %29, align 4
  %887 = load i16*, i16** %22, align 8
  %888 = load i32, i32* %7, align 4
  %889 = add nsw i32 %888, 14
  %890 = sext i32 %889 to i64
  %891 = getelementptr inbounds i16, i16* %887, i64 %890
  %892 = load i16, i16* %891, align 2
  store i16 %892, i16* %30, align 2
  %893 = load %struct.EState*, %struct.EState** %2, align 8
  %894 = getelementptr inbounds %struct.EState, %struct.EState* %893, i32 0, i32 38
  %895 = load i16, i16* %30, align 2
  %896 = zext i16 %895 to i64
  %897 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %894, i64 0, i64 %896
  %898 = getelementptr inbounds [4 x i32], [4 x i32]* %897, i64 0, i64 0
  %899 = load i32, i32* %898, align 8
  %900 = load i32, i32* %27, align 4
  %901 = add i32 %900, %899
  store i32 %901, i32* %27, align 4
  %902 = load %struct.EState*, %struct.EState** %2, align 8
  %903 = getelementptr inbounds %struct.EState, %struct.EState* %902, i32 0, i32 38
  %904 = load i16, i16* %30, align 2
  %905 = zext i16 %904 to i64
  %906 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %903, i64 0, i64 %905
  %907 = getelementptr inbounds [4 x i32], [4 x i32]* %906, i64 0, i64 1
  %908 = load i32, i32* %907, align 4
  %909 = load i32, i32* %28, align 4
  %910 = add i32 %909, %908
  store i32 %910, i32* %28, align 4
  %911 = load %struct.EState*, %struct.EState** %2, align 8
  %912 = getelementptr inbounds %struct.EState, %struct.EState* %911, i32 0, i32 38
  %913 = load i16, i16* %30, align 2
  %914 = zext i16 %913 to i64
  %915 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %912, i64 0, i64 %914
  %916 = getelementptr inbounds [4 x i32], [4 x i32]* %915, i64 0, i64 2
  %917 = load i32, i32* %916, align 8
  %918 = load i32, i32* %29, align 4
  %919 = add i32 %918, %917
  store i32 %919, i32* %29, align 4
  %920 = load i16*, i16** %22, align 8
  %921 = load i32, i32* %7, align 4
  %922 = add nsw i32 %921, 15
  %923 = sext i32 %922 to i64
  %924 = getelementptr inbounds i16, i16* %920, i64 %923
  %925 = load i16, i16* %924, align 2
  store i16 %925, i16* %30, align 2
  %926 = load %struct.EState*, %struct.EState** %2, align 8
  %927 = getelementptr inbounds %struct.EState, %struct.EState* %926, i32 0, i32 38
  %928 = load i16, i16* %30, align 2
  %929 = zext i16 %928 to i64
  %930 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %927, i64 0, i64 %929
  %931 = getelementptr inbounds [4 x i32], [4 x i32]* %930, i64 0, i64 0
  %932 = load i32, i32* %931, align 8
  %933 = load i32, i32* %27, align 4
  %934 = add i32 %933, %932
  store i32 %934, i32* %27, align 4
  %935 = load %struct.EState*, %struct.EState** %2, align 8
  %936 = getelementptr inbounds %struct.EState, %struct.EState* %935, i32 0, i32 38
  %937 = load i16, i16* %30, align 2
  %938 = zext i16 %937 to i64
  %939 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %936, i64 0, i64 %938
  %940 = getelementptr inbounds [4 x i32], [4 x i32]* %939, i64 0, i64 1
  %941 = load i32, i32* %940, align 4
  %942 = load i32, i32* %28, align 4
  %943 = add i32 %942, %941
  store i32 %943, i32* %28, align 4
  %944 = load %struct.EState*, %struct.EState** %2, align 8
  %945 = getelementptr inbounds %struct.EState, %struct.EState* %944, i32 0, i32 38
  %946 = load i16, i16* %30, align 2
  %947 = zext i16 %946 to i64
  %948 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %945, i64 0, i64 %947
  %949 = getelementptr inbounds [4 x i32], [4 x i32]* %948, i64 0, i64 2
  %950 = load i32, i32* %949, align 8
  %951 = load i32, i32* %29, align 4
  %952 = add i32 %951, %950
  store i32 %952, i32* %29, align 4
  %953 = load i16*, i16** %22, align 8
  %954 = load i32, i32* %7, align 4
  %955 = add nsw i32 %954, 16
  %956 = sext i32 %955 to i64
  %957 = getelementptr inbounds i16, i16* %953, i64 %956
  %958 = load i16, i16* %957, align 2
  store i16 %958, i16* %30, align 2
  %959 = load %struct.EState*, %struct.EState** %2, align 8
  %960 = getelementptr inbounds %struct.EState, %struct.EState* %959, i32 0, i32 38
  %961 = load i16, i16* %30, align 2
  %962 = zext i16 %961 to i64
  %963 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %960, i64 0, i64 %962
  %964 = getelementptr inbounds [4 x i32], [4 x i32]* %963, i64 0, i64 0
  %965 = load i32, i32* %964, align 8
  %966 = load i32, i32* %27, align 4
  %967 = add i32 %966, %965
  store i32 %967, i32* %27, align 4
  %968 = load %struct.EState*, %struct.EState** %2, align 8
  %969 = getelementptr inbounds %struct.EState, %struct.EState* %968, i32 0, i32 38
  %970 = load i16, i16* %30, align 2
  %971 = zext i16 %970 to i64
  %972 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %969, i64 0, i64 %971
  %973 = getelementptr inbounds [4 x i32], [4 x i32]* %972, i64 0, i64 1
  %974 = load i32, i32* %973, align 4
  %975 = load i32, i32* %28, align 4
  %976 = add i32 %975, %974
  store i32 %976, i32* %28, align 4
  %977 = load %struct.EState*, %struct.EState** %2, align 8
  %978 = getelementptr inbounds %struct.EState, %struct.EState* %977, i32 0, i32 38
  %979 = load i16, i16* %30, align 2
  %980 = zext i16 %979 to i64
  %981 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %978, i64 0, i64 %980
  %982 = getelementptr inbounds [4 x i32], [4 x i32]* %981, i64 0, i64 2
  %983 = load i32, i32* %982, align 8
  %984 = load i32, i32* %29, align 4
  %985 = add i32 %984, %983
  store i32 %985, i32* %29, align 4
  %986 = load i16*, i16** %22, align 8
  %987 = load i32, i32* %7, align 4
  %988 = add nsw i32 %987, 17
  %989 = sext i32 %988 to i64
  %990 = getelementptr inbounds i16, i16* %986, i64 %989
  %991 = load i16, i16* %990, align 2
  store i16 %991, i16* %30, align 2
  %992 = load %struct.EState*, %struct.EState** %2, align 8
  %993 = getelementptr inbounds %struct.EState, %struct.EState* %992, i32 0, i32 38
  %994 = load i16, i16* %30, align 2
  %995 = zext i16 %994 to i64
  %996 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %993, i64 0, i64 %995
  %997 = getelementptr inbounds [4 x i32], [4 x i32]* %996, i64 0, i64 0
  %998 = load i32, i32* %997, align 8
  %999 = load i32, i32* %27, align 4
  %1000 = add i32 %999, %998
  store i32 %1000, i32* %27, align 4
  %1001 = load %struct.EState*, %struct.EState** %2, align 8
  %1002 = getelementptr inbounds %struct.EState, %struct.EState* %1001, i32 0, i32 38
  %1003 = load i16, i16* %30, align 2
  %1004 = zext i16 %1003 to i64
  %1005 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1002, i64 0, i64 %1004
  %1006 = getelementptr inbounds [4 x i32], [4 x i32]* %1005, i64 0, i64 1
  %1007 = load i32, i32* %1006, align 4
  %1008 = load i32, i32* %28, align 4
  %1009 = add i32 %1008, %1007
  store i32 %1009, i32* %28, align 4
  %1010 = load %struct.EState*, %struct.EState** %2, align 8
  %1011 = getelementptr inbounds %struct.EState, %struct.EState* %1010, i32 0, i32 38
  %1012 = load i16, i16* %30, align 2
  %1013 = zext i16 %1012 to i64
  %1014 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1011, i64 0, i64 %1013
  %1015 = getelementptr inbounds [4 x i32], [4 x i32]* %1014, i64 0, i64 2
  %1016 = load i32, i32* %1015, align 8
  %1017 = load i32, i32* %29, align 4
  %1018 = add i32 %1017, %1016
  store i32 %1018, i32* %29, align 4
  %1019 = load i16*, i16** %22, align 8
  %1020 = load i32, i32* %7, align 4
  %1021 = add nsw i32 %1020, 18
  %1022 = sext i32 %1021 to i64
  %1023 = getelementptr inbounds i16, i16* %1019, i64 %1022
  %1024 = load i16, i16* %1023, align 2
  store i16 %1024, i16* %30, align 2
  %1025 = load %struct.EState*, %struct.EState** %2, align 8
  %1026 = getelementptr inbounds %struct.EState, %struct.EState* %1025, i32 0, i32 38
  %1027 = load i16, i16* %30, align 2
  %1028 = zext i16 %1027 to i64
  %1029 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1026, i64 0, i64 %1028
  %1030 = getelementptr inbounds [4 x i32], [4 x i32]* %1029, i64 0, i64 0
  %1031 = load i32, i32* %1030, align 8
  %1032 = load i32, i32* %27, align 4
  %1033 = add i32 %1032, %1031
  store i32 %1033, i32* %27, align 4
  %1034 = load %struct.EState*, %struct.EState** %2, align 8
  %1035 = getelementptr inbounds %struct.EState, %struct.EState* %1034, i32 0, i32 38
  %1036 = load i16, i16* %30, align 2
  %1037 = zext i16 %1036 to i64
  %1038 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1035, i64 0, i64 %1037
  %1039 = getelementptr inbounds [4 x i32], [4 x i32]* %1038, i64 0, i64 1
  %1040 = load i32, i32* %1039, align 4
  %1041 = load i32, i32* %28, align 4
  %1042 = add i32 %1041, %1040
  store i32 %1042, i32* %28, align 4
  %1043 = load %struct.EState*, %struct.EState** %2, align 8
  %1044 = getelementptr inbounds %struct.EState, %struct.EState* %1043, i32 0, i32 38
  %1045 = load i16, i16* %30, align 2
  %1046 = zext i16 %1045 to i64
  %1047 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1044, i64 0, i64 %1046
  %1048 = getelementptr inbounds [4 x i32], [4 x i32]* %1047, i64 0, i64 2
  %1049 = load i32, i32* %1048, align 8
  %1050 = load i32, i32* %29, align 4
  %1051 = add i32 %1050, %1049
  store i32 %1051, i32* %29, align 4
  %1052 = load i16*, i16** %22, align 8
  %1053 = load i32, i32* %7, align 4
  %1054 = add nsw i32 %1053, 19
  %1055 = sext i32 %1054 to i64
  %1056 = getelementptr inbounds i16, i16* %1052, i64 %1055
  %1057 = load i16, i16* %1056, align 2
  store i16 %1057, i16* %30, align 2
  %1058 = load %struct.EState*, %struct.EState** %2, align 8
  %1059 = getelementptr inbounds %struct.EState, %struct.EState* %1058, i32 0, i32 38
  %1060 = load i16, i16* %30, align 2
  %1061 = zext i16 %1060 to i64
  %1062 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1059, i64 0, i64 %1061
  %1063 = getelementptr inbounds [4 x i32], [4 x i32]* %1062, i64 0, i64 0
  %1064 = load i32, i32* %1063, align 8
  %1065 = load i32, i32* %27, align 4
  %1066 = add i32 %1065, %1064
  store i32 %1066, i32* %27, align 4
  %1067 = load %struct.EState*, %struct.EState** %2, align 8
  %1068 = getelementptr inbounds %struct.EState, %struct.EState* %1067, i32 0, i32 38
  %1069 = load i16, i16* %30, align 2
  %1070 = zext i16 %1069 to i64
  %1071 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1068, i64 0, i64 %1070
  %1072 = getelementptr inbounds [4 x i32], [4 x i32]* %1071, i64 0, i64 1
  %1073 = load i32, i32* %1072, align 4
  %1074 = load i32, i32* %28, align 4
  %1075 = add i32 %1074, %1073
  store i32 %1075, i32* %28, align 4
  %1076 = load %struct.EState*, %struct.EState** %2, align 8
  %1077 = getelementptr inbounds %struct.EState, %struct.EState* %1076, i32 0, i32 38
  %1078 = load i16, i16* %30, align 2
  %1079 = zext i16 %1078 to i64
  %1080 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1077, i64 0, i64 %1079
  %1081 = getelementptr inbounds [4 x i32], [4 x i32]* %1080, i64 0, i64 2
  %1082 = load i32, i32* %1081, align 8
  %1083 = load i32, i32* %29, align 4
  %1084 = add i32 %1083, %1082
  store i32 %1084, i32* %29, align 4
  %1085 = load i16*, i16** %22, align 8
  %1086 = load i32, i32* %7, align 4
  %1087 = add nsw i32 %1086, 20
  %1088 = sext i32 %1087 to i64
  %1089 = getelementptr inbounds i16, i16* %1085, i64 %1088
  %1090 = load i16, i16* %1089, align 2
  store i16 %1090, i16* %30, align 2
  %1091 = load %struct.EState*, %struct.EState** %2, align 8
  %1092 = getelementptr inbounds %struct.EState, %struct.EState* %1091, i32 0, i32 38
  %1093 = load i16, i16* %30, align 2
  %1094 = zext i16 %1093 to i64
  %1095 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1092, i64 0, i64 %1094
  %1096 = getelementptr inbounds [4 x i32], [4 x i32]* %1095, i64 0, i64 0
  %1097 = load i32, i32* %1096, align 8
  %1098 = load i32, i32* %27, align 4
  %1099 = add i32 %1098, %1097
  store i32 %1099, i32* %27, align 4
  %1100 = load %struct.EState*, %struct.EState** %2, align 8
  %1101 = getelementptr inbounds %struct.EState, %struct.EState* %1100, i32 0, i32 38
  %1102 = load i16, i16* %30, align 2
  %1103 = zext i16 %1102 to i64
  %1104 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1101, i64 0, i64 %1103
  %1105 = getelementptr inbounds [4 x i32], [4 x i32]* %1104, i64 0, i64 1
  %1106 = load i32, i32* %1105, align 4
  %1107 = load i32, i32* %28, align 4
  %1108 = add i32 %1107, %1106
  store i32 %1108, i32* %28, align 4
  %1109 = load %struct.EState*, %struct.EState** %2, align 8
  %1110 = getelementptr inbounds %struct.EState, %struct.EState* %1109, i32 0, i32 38
  %1111 = load i16, i16* %30, align 2
  %1112 = zext i16 %1111 to i64
  %1113 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1110, i64 0, i64 %1112
  %1114 = getelementptr inbounds [4 x i32], [4 x i32]* %1113, i64 0, i64 2
  %1115 = load i32, i32* %1114, align 8
  %1116 = load i32, i32* %29, align 4
  %1117 = add i32 %1116, %1115
  store i32 %1117, i32* %29, align 4
  %1118 = load i16*, i16** %22, align 8
  %1119 = load i32, i32* %7, align 4
  %1120 = add nsw i32 %1119, 21
  %1121 = sext i32 %1120 to i64
  %1122 = getelementptr inbounds i16, i16* %1118, i64 %1121
  %1123 = load i16, i16* %1122, align 2
  store i16 %1123, i16* %30, align 2
  %1124 = load %struct.EState*, %struct.EState** %2, align 8
  %1125 = getelementptr inbounds %struct.EState, %struct.EState* %1124, i32 0, i32 38
  %1126 = load i16, i16* %30, align 2
  %1127 = zext i16 %1126 to i64
  %1128 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1125, i64 0, i64 %1127
  %1129 = getelementptr inbounds [4 x i32], [4 x i32]* %1128, i64 0, i64 0
  %1130 = load i32, i32* %1129, align 8
  %1131 = load i32, i32* %27, align 4
  %1132 = add i32 %1131, %1130
  store i32 %1132, i32* %27, align 4
  %1133 = load %struct.EState*, %struct.EState** %2, align 8
  %1134 = getelementptr inbounds %struct.EState, %struct.EState* %1133, i32 0, i32 38
  %1135 = load i16, i16* %30, align 2
  %1136 = zext i16 %1135 to i64
  %1137 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1134, i64 0, i64 %1136
  %1138 = getelementptr inbounds [4 x i32], [4 x i32]* %1137, i64 0, i64 1
  %1139 = load i32, i32* %1138, align 4
  %1140 = load i32, i32* %28, align 4
  %1141 = add i32 %1140, %1139
  store i32 %1141, i32* %28, align 4
  %1142 = load %struct.EState*, %struct.EState** %2, align 8
  %1143 = getelementptr inbounds %struct.EState, %struct.EState* %1142, i32 0, i32 38
  %1144 = load i16, i16* %30, align 2
  %1145 = zext i16 %1144 to i64
  %1146 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1143, i64 0, i64 %1145
  %1147 = getelementptr inbounds [4 x i32], [4 x i32]* %1146, i64 0, i64 2
  %1148 = load i32, i32* %1147, align 8
  %1149 = load i32, i32* %29, align 4
  %1150 = add i32 %1149, %1148
  store i32 %1150, i32* %29, align 4
  %1151 = load i16*, i16** %22, align 8
  %1152 = load i32, i32* %7, align 4
  %1153 = add nsw i32 %1152, 22
  %1154 = sext i32 %1153 to i64
  %1155 = getelementptr inbounds i16, i16* %1151, i64 %1154
  %1156 = load i16, i16* %1155, align 2
  store i16 %1156, i16* %30, align 2
  %1157 = load %struct.EState*, %struct.EState** %2, align 8
  %1158 = getelementptr inbounds %struct.EState, %struct.EState* %1157, i32 0, i32 38
  %1159 = load i16, i16* %30, align 2
  %1160 = zext i16 %1159 to i64
  %1161 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1158, i64 0, i64 %1160
  %1162 = getelementptr inbounds [4 x i32], [4 x i32]* %1161, i64 0, i64 0
  %1163 = load i32, i32* %1162, align 8
  %1164 = load i32, i32* %27, align 4
  %1165 = add i32 %1164, %1163
  store i32 %1165, i32* %27, align 4
  %1166 = load %struct.EState*, %struct.EState** %2, align 8
  %1167 = getelementptr inbounds %struct.EState, %struct.EState* %1166, i32 0, i32 38
  %1168 = load i16, i16* %30, align 2
  %1169 = zext i16 %1168 to i64
  %1170 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1167, i64 0, i64 %1169
  %1171 = getelementptr inbounds [4 x i32], [4 x i32]* %1170, i64 0, i64 1
  %1172 = load i32, i32* %1171, align 4
  %1173 = load i32, i32* %28, align 4
  %1174 = add i32 %1173, %1172
  store i32 %1174, i32* %28, align 4
  %1175 = load %struct.EState*, %struct.EState** %2, align 8
  %1176 = getelementptr inbounds %struct.EState, %struct.EState* %1175, i32 0, i32 38
  %1177 = load i16, i16* %30, align 2
  %1178 = zext i16 %1177 to i64
  %1179 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1176, i64 0, i64 %1178
  %1180 = getelementptr inbounds [4 x i32], [4 x i32]* %1179, i64 0, i64 2
  %1181 = load i32, i32* %1180, align 8
  %1182 = load i32, i32* %29, align 4
  %1183 = add i32 %1182, %1181
  store i32 %1183, i32* %29, align 4
  %1184 = load i16*, i16** %22, align 8
  %1185 = load i32, i32* %7, align 4
  %1186 = add nsw i32 %1185, 23
  %1187 = sext i32 %1186 to i64
  %1188 = getelementptr inbounds i16, i16* %1184, i64 %1187
  %1189 = load i16, i16* %1188, align 2
  store i16 %1189, i16* %30, align 2
  %1190 = load %struct.EState*, %struct.EState** %2, align 8
  %1191 = getelementptr inbounds %struct.EState, %struct.EState* %1190, i32 0, i32 38
  %1192 = load i16, i16* %30, align 2
  %1193 = zext i16 %1192 to i64
  %1194 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1191, i64 0, i64 %1193
  %1195 = getelementptr inbounds [4 x i32], [4 x i32]* %1194, i64 0, i64 0
  %1196 = load i32, i32* %1195, align 8
  %1197 = load i32, i32* %27, align 4
  %1198 = add i32 %1197, %1196
  store i32 %1198, i32* %27, align 4
  %1199 = load %struct.EState*, %struct.EState** %2, align 8
  %1200 = getelementptr inbounds %struct.EState, %struct.EState* %1199, i32 0, i32 38
  %1201 = load i16, i16* %30, align 2
  %1202 = zext i16 %1201 to i64
  %1203 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1200, i64 0, i64 %1202
  %1204 = getelementptr inbounds [4 x i32], [4 x i32]* %1203, i64 0, i64 1
  %1205 = load i32, i32* %1204, align 4
  %1206 = load i32, i32* %28, align 4
  %1207 = add i32 %1206, %1205
  store i32 %1207, i32* %28, align 4
  %1208 = load %struct.EState*, %struct.EState** %2, align 8
  %1209 = getelementptr inbounds %struct.EState, %struct.EState* %1208, i32 0, i32 38
  %1210 = load i16, i16* %30, align 2
  %1211 = zext i16 %1210 to i64
  %1212 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1209, i64 0, i64 %1211
  %1213 = getelementptr inbounds [4 x i32], [4 x i32]* %1212, i64 0, i64 2
  %1214 = load i32, i32* %1213, align 8
  %1215 = load i32, i32* %29, align 4
  %1216 = add i32 %1215, %1214
  store i32 %1216, i32* %29, align 4
  %1217 = load i16*, i16** %22, align 8
  %1218 = load i32, i32* %7, align 4
  %1219 = add nsw i32 %1218, 24
  %1220 = sext i32 %1219 to i64
  %1221 = getelementptr inbounds i16, i16* %1217, i64 %1220
  %1222 = load i16, i16* %1221, align 2
  store i16 %1222, i16* %30, align 2
  %1223 = load %struct.EState*, %struct.EState** %2, align 8
  %1224 = getelementptr inbounds %struct.EState, %struct.EState* %1223, i32 0, i32 38
  %1225 = load i16, i16* %30, align 2
  %1226 = zext i16 %1225 to i64
  %1227 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1224, i64 0, i64 %1226
  %1228 = getelementptr inbounds [4 x i32], [4 x i32]* %1227, i64 0, i64 0
  %1229 = load i32, i32* %1228, align 8
  %1230 = load i32, i32* %27, align 4
  %1231 = add i32 %1230, %1229
  store i32 %1231, i32* %27, align 4
  %1232 = load %struct.EState*, %struct.EState** %2, align 8
  %1233 = getelementptr inbounds %struct.EState, %struct.EState* %1232, i32 0, i32 38
  %1234 = load i16, i16* %30, align 2
  %1235 = zext i16 %1234 to i64
  %1236 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1233, i64 0, i64 %1235
  %1237 = getelementptr inbounds [4 x i32], [4 x i32]* %1236, i64 0, i64 1
  %1238 = load i32, i32* %1237, align 4
  %1239 = load i32, i32* %28, align 4
  %1240 = add i32 %1239, %1238
  store i32 %1240, i32* %28, align 4
  %1241 = load %struct.EState*, %struct.EState** %2, align 8
  %1242 = getelementptr inbounds %struct.EState, %struct.EState* %1241, i32 0, i32 38
  %1243 = load i16, i16* %30, align 2
  %1244 = zext i16 %1243 to i64
  %1245 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1242, i64 0, i64 %1244
  %1246 = getelementptr inbounds [4 x i32], [4 x i32]* %1245, i64 0, i64 2
  %1247 = load i32, i32* %1246, align 8
  %1248 = load i32, i32* %29, align 4
  %1249 = add i32 %1248, %1247
  store i32 %1249, i32* %29, align 4
  %1250 = load i16*, i16** %22, align 8
  %1251 = load i32, i32* %7, align 4
  %1252 = add nsw i32 %1251, 25
  %1253 = sext i32 %1252 to i64
  %1254 = getelementptr inbounds i16, i16* %1250, i64 %1253
  %1255 = load i16, i16* %1254, align 2
  store i16 %1255, i16* %30, align 2
  %1256 = load %struct.EState*, %struct.EState** %2, align 8
  %1257 = getelementptr inbounds %struct.EState, %struct.EState* %1256, i32 0, i32 38
  %1258 = load i16, i16* %30, align 2
  %1259 = zext i16 %1258 to i64
  %1260 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1257, i64 0, i64 %1259
  %1261 = getelementptr inbounds [4 x i32], [4 x i32]* %1260, i64 0, i64 0
  %1262 = load i32, i32* %1261, align 8
  %1263 = load i32, i32* %27, align 4
  %1264 = add i32 %1263, %1262
  store i32 %1264, i32* %27, align 4
  %1265 = load %struct.EState*, %struct.EState** %2, align 8
  %1266 = getelementptr inbounds %struct.EState, %struct.EState* %1265, i32 0, i32 38
  %1267 = load i16, i16* %30, align 2
  %1268 = zext i16 %1267 to i64
  %1269 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1266, i64 0, i64 %1268
  %1270 = getelementptr inbounds [4 x i32], [4 x i32]* %1269, i64 0, i64 1
  %1271 = load i32, i32* %1270, align 4
  %1272 = load i32, i32* %28, align 4
  %1273 = add i32 %1272, %1271
  store i32 %1273, i32* %28, align 4
  %1274 = load %struct.EState*, %struct.EState** %2, align 8
  %1275 = getelementptr inbounds %struct.EState, %struct.EState* %1274, i32 0, i32 38
  %1276 = load i16, i16* %30, align 2
  %1277 = zext i16 %1276 to i64
  %1278 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1275, i64 0, i64 %1277
  %1279 = getelementptr inbounds [4 x i32], [4 x i32]* %1278, i64 0, i64 2
  %1280 = load i32, i32* %1279, align 8
  %1281 = load i32, i32* %29, align 4
  %1282 = add i32 %1281, %1280
  store i32 %1282, i32* %29, align 4
  %1283 = load i16*, i16** %22, align 8
  %1284 = load i32, i32* %7, align 4
  %1285 = add nsw i32 %1284, 26
  %1286 = sext i32 %1285 to i64
  %1287 = getelementptr inbounds i16, i16* %1283, i64 %1286
  %1288 = load i16, i16* %1287, align 2
  store i16 %1288, i16* %30, align 2
  %1289 = load %struct.EState*, %struct.EState** %2, align 8
  %1290 = getelementptr inbounds %struct.EState, %struct.EState* %1289, i32 0, i32 38
  %1291 = load i16, i16* %30, align 2
  %1292 = zext i16 %1291 to i64
  %1293 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1290, i64 0, i64 %1292
  %1294 = getelementptr inbounds [4 x i32], [4 x i32]* %1293, i64 0, i64 0
  %1295 = load i32, i32* %1294, align 8
  %1296 = load i32, i32* %27, align 4
  %1297 = add i32 %1296, %1295
  store i32 %1297, i32* %27, align 4
  %1298 = load %struct.EState*, %struct.EState** %2, align 8
  %1299 = getelementptr inbounds %struct.EState, %struct.EState* %1298, i32 0, i32 38
  %1300 = load i16, i16* %30, align 2
  %1301 = zext i16 %1300 to i64
  %1302 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1299, i64 0, i64 %1301
  %1303 = getelementptr inbounds [4 x i32], [4 x i32]* %1302, i64 0, i64 1
  %1304 = load i32, i32* %1303, align 4
  %1305 = load i32, i32* %28, align 4
  %1306 = add i32 %1305, %1304
  store i32 %1306, i32* %28, align 4
  %1307 = load %struct.EState*, %struct.EState** %2, align 8
  %1308 = getelementptr inbounds %struct.EState, %struct.EState* %1307, i32 0, i32 38
  %1309 = load i16, i16* %30, align 2
  %1310 = zext i16 %1309 to i64
  %1311 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1308, i64 0, i64 %1310
  %1312 = getelementptr inbounds [4 x i32], [4 x i32]* %1311, i64 0, i64 2
  %1313 = load i32, i32* %1312, align 8
  %1314 = load i32, i32* %29, align 4
  %1315 = add i32 %1314, %1313
  store i32 %1315, i32* %29, align 4
  %1316 = load i16*, i16** %22, align 8
  %1317 = load i32, i32* %7, align 4
  %1318 = add nsw i32 %1317, 27
  %1319 = sext i32 %1318 to i64
  %1320 = getelementptr inbounds i16, i16* %1316, i64 %1319
  %1321 = load i16, i16* %1320, align 2
  store i16 %1321, i16* %30, align 2
  %1322 = load %struct.EState*, %struct.EState** %2, align 8
  %1323 = getelementptr inbounds %struct.EState, %struct.EState* %1322, i32 0, i32 38
  %1324 = load i16, i16* %30, align 2
  %1325 = zext i16 %1324 to i64
  %1326 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1323, i64 0, i64 %1325
  %1327 = getelementptr inbounds [4 x i32], [4 x i32]* %1326, i64 0, i64 0
  %1328 = load i32, i32* %1327, align 8
  %1329 = load i32, i32* %27, align 4
  %1330 = add i32 %1329, %1328
  store i32 %1330, i32* %27, align 4
  %1331 = load %struct.EState*, %struct.EState** %2, align 8
  %1332 = getelementptr inbounds %struct.EState, %struct.EState* %1331, i32 0, i32 38
  %1333 = load i16, i16* %30, align 2
  %1334 = zext i16 %1333 to i64
  %1335 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1332, i64 0, i64 %1334
  %1336 = getelementptr inbounds [4 x i32], [4 x i32]* %1335, i64 0, i64 1
  %1337 = load i32, i32* %1336, align 4
  %1338 = load i32, i32* %28, align 4
  %1339 = add i32 %1338, %1337
  store i32 %1339, i32* %28, align 4
  %1340 = load %struct.EState*, %struct.EState** %2, align 8
  %1341 = getelementptr inbounds %struct.EState, %struct.EState* %1340, i32 0, i32 38
  %1342 = load i16, i16* %30, align 2
  %1343 = zext i16 %1342 to i64
  %1344 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1341, i64 0, i64 %1343
  %1345 = getelementptr inbounds [4 x i32], [4 x i32]* %1344, i64 0, i64 2
  %1346 = load i32, i32* %1345, align 8
  %1347 = load i32, i32* %29, align 4
  %1348 = add i32 %1347, %1346
  store i32 %1348, i32* %29, align 4
  %1349 = load i16*, i16** %22, align 8
  %1350 = load i32, i32* %7, align 4
  %1351 = add nsw i32 %1350, 28
  %1352 = sext i32 %1351 to i64
  %1353 = getelementptr inbounds i16, i16* %1349, i64 %1352
  %1354 = load i16, i16* %1353, align 2
  store i16 %1354, i16* %30, align 2
  %1355 = load %struct.EState*, %struct.EState** %2, align 8
  %1356 = getelementptr inbounds %struct.EState, %struct.EState* %1355, i32 0, i32 38
  %1357 = load i16, i16* %30, align 2
  %1358 = zext i16 %1357 to i64
  %1359 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1356, i64 0, i64 %1358
  %1360 = getelementptr inbounds [4 x i32], [4 x i32]* %1359, i64 0, i64 0
  %1361 = load i32, i32* %1360, align 8
  %1362 = load i32, i32* %27, align 4
  %1363 = add i32 %1362, %1361
  store i32 %1363, i32* %27, align 4
  %1364 = load %struct.EState*, %struct.EState** %2, align 8
  %1365 = getelementptr inbounds %struct.EState, %struct.EState* %1364, i32 0, i32 38
  %1366 = load i16, i16* %30, align 2
  %1367 = zext i16 %1366 to i64
  %1368 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1365, i64 0, i64 %1367
  %1369 = getelementptr inbounds [4 x i32], [4 x i32]* %1368, i64 0, i64 1
  %1370 = load i32, i32* %1369, align 4
  %1371 = load i32, i32* %28, align 4
  %1372 = add i32 %1371, %1370
  store i32 %1372, i32* %28, align 4
  %1373 = load %struct.EState*, %struct.EState** %2, align 8
  %1374 = getelementptr inbounds %struct.EState, %struct.EState* %1373, i32 0, i32 38
  %1375 = load i16, i16* %30, align 2
  %1376 = zext i16 %1375 to i64
  %1377 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1374, i64 0, i64 %1376
  %1378 = getelementptr inbounds [4 x i32], [4 x i32]* %1377, i64 0, i64 2
  %1379 = load i32, i32* %1378, align 8
  %1380 = load i32, i32* %29, align 4
  %1381 = add i32 %1380, %1379
  store i32 %1381, i32* %29, align 4
  %1382 = load i16*, i16** %22, align 8
  %1383 = load i32, i32* %7, align 4
  %1384 = add nsw i32 %1383, 29
  %1385 = sext i32 %1384 to i64
  %1386 = getelementptr inbounds i16, i16* %1382, i64 %1385
  %1387 = load i16, i16* %1386, align 2
  store i16 %1387, i16* %30, align 2
  %1388 = load %struct.EState*, %struct.EState** %2, align 8
  %1389 = getelementptr inbounds %struct.EState, %struct.EState* %1388, i32 0, i32 38
  %1390 = load i16, i16* %30, align 2
  %1391 = zext i16 %1390 to i64
  %1392 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1389, i64 0, i64 %1391
  %1393 = getelementptr inbounds [4 x i32], [4 x i32]* %1392, i64 0, i64 0
  %1394 = load i32, i32* %1393, align 8
  %1395 = load i32, i32* %27, align 4
  %1396 = add i32 %1395, %1394
  store i32 %1396, i32* %27, align 4
  %1397 = load %struct.EState*, %struct.EState** %2, align 8
  %1398 = getelementptr inbounds %struct.EState, %struct.EState* %1397, i32 0, i32 38
  %1399 = load i16, i16* %30, align 2
  %1400 = zext i16 %1399 to i64
  %1401 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1398, i64 0, i64 %1400
  %1402 = getelementptr inbounds [4 x i32], [4 x i32]* %1401, i64 0, i64 1
  %1403 = load i32, i32* %1402, align 4
  %1404 = load i32, i32* %28, align 4
  %1405 = add i32 %1404, %1403
  store i32 %1405, i32* %28, align 4
  %1406 = load %struct.EState*, %struct.EState** %2, align 8
  %1407 = getelementptr inbounds %struct.EState, %struct.EState* %1406, i32 0, i32 38
  %1408 = load i16, i16* %30, align 2
  %1409 = zext i16 %1408 to i64
  %1410 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1407, i64 0, i64 %1409
  %1411 = getelementptr inbounds [4 x i32], [4 x i32]* %1410, i64 0, i64 2
  %1412 = load i32, i32* %1411, align 8
  %1413 = load i32, i32* %29, align 4
  %1414 = add i32 %1413, %1412
  store i32 %1414, i32* %29, align 4
  %1415 = load i16*, i16** %22, align 8
  %1416 = load i32, i32* %7, align 4
  %1417 = add nsw i32 %1416, 30
  %1418 = sext i32 %1417 to i64
  %1419 = getelementptr inbounds i16, i16* %1415, i64 %1418
  %1420 = load i16, i16* %1419, align 2
  store i16 %1420, i16* %30, align 2
  %1421 = load %struct.EState*, %struct.EState** %2, align 8
  %1422 = getelementptr inbounds %struct.EState, %struct.EState* %1421, i32 0, i32 38
  %1423 = load i16, i16* %30, align 2
  %1424 = zext i16 %1423 to i64
  %1425 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1422, i64 0, i64 %1424
  %1426 = getelementptr inbounds [4 x i32], [4 x i32]* %1425, i64 0, i64 0
  %1427 = load i32, i32* %1426, align 8
  %1428 = load i32, i32* %27, align 4
  %1429 = add i32 %1428, %1427
  store i32 %1429, i32* %27, align 4
  %1430 = load %struct.EState*, %struct.EState** %2, align 8
  %1431 = getelementptr inbounds %struct.EState, %struct.EState* %1430, i32 0, i32 38
  %1432 = load i16, i16* %30, align 2
  %1433 = zext i16 %1432 to i64
  %1434 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1431, i64 0, i64 %1433
  %1435 = getelementptr inbounds [4 x i32], [4 x i32]* %1434, i64 0, i64 1
  %1436 = load i32, i32* %1435, align 4
  %1437 = load i32, i32* %28, align 4
  %1438 = add i32 %1437, %1436
  store i32 %1438, i32* %28, align 4
  %1439 = load %struct.EState*, %struct.EState** %2, align 8
  %1440 = getelementptr inbounds %struct.EState, %struct.EState* %1439, i32 0, i32 38
  %1441 = load i16, i16* %30, align 2
  %1442 = zext i16 %1441 to i64
  %1443 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1440, i64 0, i64 %1442
  %1444 = getelementptr inbounds [4 x i32], [4 x i32]* %1443, i64 0, i64 2
  %1445 = load i32, i32* %1444, align 8
  %1446 = load i32, i32* %29, align 4
  %1447 = add i32 %1446, %1445
  store i32 %1447, i32* %29, align 4
  %1448 = load i16*, i16** %22, align 8
  %1449 = load i32, i32* %7, align 4
  %1450 = add nsw i32 %1449, 31
  %1451 = sext i32 %1450 to i64
  %1452 = getelementptr inbounds i16, i16* %1448, i64 %1451
  %1453 = load i16, i16* %1452, align 2
  store i16 %1453, i16* %30, align 2
  %1454 = load %struct.EState*, %struct.EState** %2, align 8
  %1455 = getelementptr inbounds %struct.EState, %struct.EState* %1454, i32 0, i32 38
  %1456 = load i16, i16* %30, align 2
  %1457 = zext i16 %1456 to i64
  %1458 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1455, i64 0, i64 %1457
  %1459 = getelementptr inbounds [4 x i32], [4 x i32]* %1458, i64 0, i64 0
  %1460 = load i32, i32* %1459, align 8
  %1461 = load i32, i32* %27, align 4
  %1462 = add i32 %1461, %1460
  store i32 %1462, i32* %27, align 4
  %1463 = load %struct.EState*, %struct.EState** %2, align 8
  %1464 = getelementptr inbounds %struct.EState, %struct.EState* %1463, i32 0, i32 38
  %1465 = load i16, i16* %30, align 2
  %1466 = zext i16 %1465 to i64
  %1467 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1464, i64 0, i64 %1466
  %1468 = getelementptr inbounds [4 x i32], [4 x i32]* %1467, i64 0, i64 1
  %1469 = load i32, i32* %1468, align 4
  %1470 = load i32, i32* %28, align 4
  %1471 = add i32 %1470, %1469
  store i32 %1471, i32* %28, align 4
  %1472 = load %struct.EState*, %struct.EState** %2, align 8
  %1473 = getelementptr inbounds %struct.EState, %struct.EState* %1472, i32 0, i32 38
  %1474 = load i16, i16* %30, align 2
  %1475 = zext i16 %1474 to i64
  %1476 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1473, i64 0, i64 %1475
  %1477 = getelementptr inbounds [4 x i32], [4 x i32]* %1476, i64 0, i64 2
  %1478 = load i32, i32* %1477, align 8
  %1479 = load i32, i32* %29, align 4
  %1480 = add i32 %1479, %1478
  store i32 %1480, i32* %29, align 4
  %1481 = load i16*, i16** %22, align 8
  %1482 = load i32, i32* %7, align 4
  %1483 = add nsw i32 %1482, 32
  %1484 = sext i32 %1483 to i64
  %1485 = getelementptr inbounds i16, i16* %1481, i64 %1484
  %1486 = load i16, i16* %1485, align 2
  store i16 %1486, i16* %30, align 2
  %1487 = load %struct.EState*, %struct.EState** %2, align 8
  %1488 = getelementptr inbounds %struct.EState, %struct.EState* %1487, i32 0, i32 38
  %1489 = load i16, i16* %30, align 2
  %1490 = zext i16 %1489 to i64
  %1491 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1488, i64 0, i64 %1490
  %1492 = getelementptr inbounds [4 x i32], [4 x i32]* %1491, i64 0, i64 0
  %1493 = load i32, i32* %1492, align 8
  %1494 = load i32, i32* %27, align 4
  %1495 = add i32 %1494, %1493
  store i32 %1495, i32* %27, align 4
  %1496 = load %struct.EState*, %struct.EState** %2, align 8
  %1497 = getelementptr inbounds %struct.EState, %struct.EState* %1496, i32 0, i32 38
  %1498 = load i16, i16* %30, align 2
  %1499 = zext i16 %1498 to i64
  %1500 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1497, i64 0, i64 %1499
  %1501 = getelementptr inbounds [4 x i32], [4 x i32]* %1500, i64 0, i64 1
  %1502 = load i32, i32* %1501, align 4
  %1503 = load i32, i32* %28, align 4
  %1504 = add i32 %1503, %1502
  store i32 %1504, i32* %28, align 4
  %1505 = load %struct.EState*, %struct.EState** %2, align 8
  %1506 = getelementptr inbounds %struct.EState, %struct.EState* %1505, i32 0, i32 38
  %1507 = load i16, i16* %30, align 2
  %1508 = zext i16 %1507 to i64
  %1509 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1506, i64 0, i64 %1508
  %1510 = getelementptr inbounds [4 x i32], [4 x i32]* %1509, i64 0, i64 2
  %1511 = load i32, i32* %1510, align 8
  %1512 = load i32, i32* %29, align 4
  %1513 = add i32 %1512, %1511
  store i32 %1513, i32* %29, align 4
  %1514 = load i16*, i16** %22, align 8
  %1515 = load i32, i32* %7, align 4
  %1516 = add nsw i32 %1515, 33
  %1517 = sext i32 %1516 to i64
  %1518 = getelementptr inbounds i16, i16* %1514, i64 %1517
  %1519 = load i16, i16* %1518, align 2
  store i16 %1519, i16* %30, align 2
  %1520 = load %struct.EState*, %struct.EState** %2, align 8
  %1521 = getelementptr inbounds %struct.EState, %struct.EState* %1520, i32 0, i32 38
  %1522 = load i16, i16* %30, align 2
  %1523 = zext i16 %1522 to i64
  %1524 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1521, i64 0, i64 %1523
  %1525 = getelementptr inbounds [4 x i32], [4 x i32]* %1524, i64 0, i64 0
  %1526 = load i32, i32* %1525, align 8
  %1527 = load i32, i32* %27, align 4
  %1528 = add i32 %1527, %1526
  store i32 %1528, i32* %27, align 4
  %1529 = load %struct.EState*, %struct.EState** %2, align 8
  %1530 = getelementptr inbounds %struct.EState, %struct.EState* %1529, i32 0, i32 38
  %1531 = load i16, i16* %30, align 2
  %1532 = zext i16 %1531 to i64
  %1533 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1530, i64 0, i64 %1532
  %1534 = getelementptr inbounds [4 x i32], [4 x i32]* %1533, i64 0, i64 1
  %1535 = load i32, i32* %1534, align 4
  %1536 = load i32, i32* %28, align 4
  %1537 = add i32 %1536, %1535
  store i32 %1537, i32* %28, align 4
  %1538 = load %struct.EState*, %struct.EState** %2, align 8
  %1539 = getelementptr inbounds %struct.EState, %struct.EState* %1538, i32 0, i32 38
  %1540 = load i16, i16* %30, align 2
  %1541 = zext i16 %1540 to i64
  %1542 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1539, i64 0, i64 %1541
  %1543 = getelementptr inbounds [4 x i32], [4 x i32]* %1542, i64 0, i64 2
  %1544 = load i32, i32* %1543, align 8
  %1545 = load i32, i32* %29, align 4
  %1546 = add i32 %1545, %1544
  store i32 %1546, i32* %29, align 4
  %1547 = load i16*, i16** %22, align 8
  %1548 = load i32, i32* %7, align 4
  %1549 = add nsw i32 %1548, 34
  %1550 = sext i32 %1549 to i64
  %1551 = getelementptr inbounds i16, i16* %1547, i64 %1550
  %1552 = load i16, i16* %1551, align 2
  store i16 %1552, i16* %30, align 2
  %1553 = load %struct.EState*, %struct.EState** %2, align 8
  %1554 = getelementptr inbounds %struct.EState, %struct.EState* %1553, i32 0, i32 38
  %1555 = load i16, i16* %30, align 2
  %1556 = zext i16 %1555 to i64
  %1557 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1554, i64 0, i64 %1556
  %1558 = getelementptr inbounds [4 x i32], [4 x i32]* %1557, i64 0, i64 0
  %1559 = load i32, i32* %1558, align 8
  %1560 = load i32, i32* %27, align 4
  %1561 = add i32 %1560, %1559
  store i32 %1561, i32* %27, align 4
  %1562 = load %struct.EState*, %struct.EState** %2, align 8
  %1563 = getelementptr inbounds %struct.EState, %struct.EState* %1562, i32 0, i32 38
  %1564 = load i16, i16* %30, align 2
  %1565 = zext i16 %1564 to i64
  %1566 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1563, i64 0, i64 %1565
  %1567 = getelementptr inbounds [4 x i32], [4 x i32]* %1566, i64 0, i64 1
  %1568 = load i32, i32* %1567, align 4
  %1569 = load i32, i32* %28, align 4
  %1570 = add i32 %1569, %1568
  store i32 %1570, i32* %28, align 4
  %1571 = load %struct.EState*, %struct.EState** %2, align 8
  %1572 = getelementptr inbounds %struct.EState, %struct.EState* %1571, i32 0, i32 38
  %1573 = load i16, i16* %30, align 2
  %1574 = zext i16 %1573 to i64
  %1575 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1572, i64 0, i64 %1574
  %1576 = getelementptr inbounds [4 x i32], [4 x i32]* %1575, i64 0, i64 2
  %1577 = load i32, i32* %1576, align 8
  %1578 = load i32, i32* %29, align 4
  %1579 = add i32 %1578, %1577
  store i32 %1579, i32* %29, align 4
  %1580 = load i16*, i16** %22, align 8
  %1581 = load i32, i32* %7, align 4
  %1582 = add nsw i32 %1581, 35
  %1583 = sext i32 %1582 to i64
  %1584 = getelementptr inbounds i16, i16* %1580, i64 %1583
  %1585 = load i16, i16* %1584, align 2
  store i16 %1585, i16* %30, align 2
  %1586 = load %struct.EState*, %struct.EState** %2, align 8
  %1587 = getelementptr inbounds %struct.EState, %struct.EState* %1586, i32 0, i32 38
  %1588 = load i16, i16* %30, align 2
  %1589 = zext i16 %1588 to i64
  %1590 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1587, i64 0, i64 %1589
  %1591 = getelementptr inbounds [4 x i32], [4 x i32]* %1590, i64 0, i64 0
  %1592 = load i32, i32* %1591, align 8
  %1593 = load i32, i32* %27, align 4
  %1594 = add i32 %1593, %1592
  store i32 %1594, i32* %27, align 4
  %1595 = load %struct.EState*, %struct.EState** %2, align 8
  %1596 = getelementptr inbounds %struct.EState, %struct.EState* %1595, i32 0, i32 38
  %1597 = load i16, i16* %30, align 2
  %1598 = zext i16 %1597 to i64
  %1599 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1596, i64 0, i64 %1598
  %1600 = getelementptr inbounds [4 x i32], [4 x i32]* %1599, i64 0, i64 1
  %1601 = load i32, i32* %1600, align 4
  %1602 = load i32, i32* %28, align 4
  %1603 = add i32 %1602, %1601
  store i32 %1603, i32* %28, align 4
  %1604 = load %struct.EState*, %struct.EState** %2, align 8
  %1605 = getelementptr inbounds %struct.EState, %struct.EState* %1604, i32 0, i32 38
  %1606 = load i16, i16* %30, align 2
  %1607 = zext i16 %1606 to i64
  %1608 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1605, i64 0, i64 %1607
  %1609 = getelementptr inbounds [4 x i32], [4 x i32]* %1608, i64 0, i64 2
  %1610 = load i32, i32* %1609, align 8
  %1611 = load i32, i32* %29, align 4
  %1612 = add i32 %1611, %1610
  store i32 %1612, i32* %29, align 4
  %1613 = load i16*, i16** %22, align 8
  %1614 = load i32, i32* %7, align 4
  %1615 = add nsw i32 %1614, 36
  %1616 = sext i32 %1615 to i64
  %1617 = getelementptr inbounds i16, i16* %1613, i64 %1616
  %1618 = load i16, i16* %1617, align 2
  store i16 %1618, i16* %30, align 2
  %1619 = load %struct.EState*, %struct.EState** %2, align 8
  %1620 = getelementptr inbounds %struct.EState, %struct.EState* %1619, i32 0, i32 38
  %1621 = load i16, i16* %30, align 2
  %1622 = zext i16 %1621 to i64
  %1623 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1620, i64 0, i64 %1622
  %1624 = getelementptr inbounds [4 x i32], [4 x i32]* %1623, i64 0, i64 0
  %1625 = load i32, i32* %1624, align 8
  %1626 = load i32, i32* %27, align 4
  %1627 = add i32 %1626, %1625
  store i32 %1627, i32* %27, align 4
  %1628 = load %struct.EState*, %struct.EState** %2, align 8
  %1629 = getelementptr inbounds %struct.EState, %struct.EState* %1628, i32 0, i32 38
  %1630 = load i16, i16* %30, align 2
  %1631 = zext i16 %1630 to i64
  %1632 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1629, i64 0, i64 %1631
  %1633 = getelementptr inbounds [4 x i32], [4 x i32]* %1632, i64 0, i64 1
  %1634 = load i32, i32* %1633, align 4
  %1635 = load i32, i32* %28, align 4
  %1636 = add i32 %1635, %1634
  store i32 %1636, i32* %28, align 4
  %1637 = load %struct.EState*, %struct.EState** %2, align 8
  %1638 = getelementptr inbounds %struct.EState, %struct.EState* %1637, i32 0, i32 38
  %1639 = load i16, i16* %30, align 2
  %1640 = zext i16 %1639 to i64
  %1641 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1638, i64 0, i64 %1640
  %1642 = getelementptr inbounds [4 x i32], [4 x i32]* %1641, i64 0, i64 2
  %1643 = load i32, i32* %1642, align 8
  %1644 = load i32, i32* %29, align 4
  %1645 = add i32 %1644, %1643
  store i32 %1645, i32* %29, align 4
  %1646 = load i16*, i16** %22, align 8
  %1647 = load i32, i32* %7, align 4
  %1648 = add nsw i32 %1647, 37
  %1649 = sext i32 %1648 to i64
  %1650 = getelementptr inbounds i16, i16* %1646, i64 %1649
  %1651 = load i16, i16* %1650, align 2
  store i16 %1651, i16* %30, align 2
  %1652 = load %struct.EState*, %struct.EState** %2, align 8
  %1653 = getelementptr inbounds %struct.EState, %struct.EState* %1652, i32 0, i32 38
  %1654 = load i16, i16* %30, align 2
  %1655 = zext i16 %1654 to i64
  %1656 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1653, i64 0, i64 %1655
  %1657 = getelementptr inbounds [4 x i32], [4 x i32]* %1656, i64 0, i64 0
  %1658 = load i32, i32* %1657, align 8
  %1659 = load i32, i32* %27, align 4
  %1660 = add i32 %1659, %1658
  store i32 %1660, i32* %27, align 4
  %1661 = load %struct.EState*, %struct.EState** %2, align 8
  %1662 = getelementptr inbounds %struct.EState, %struct.EState* %1661, i32 0, i32 38
  %1663 = load i16, i16* %30, align 2
  %1664 = zext i16 %1663 to i64
  %1665 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1662, i64 0, i64 %1664
  %1666 = getelementptr inbounds [4 x i32], [4 x i32]* %1665, i64 0, i64 1
  %1667 = load i32, i32* %1666, align 4
  %1668 = load i32, i32* %28, align 4
  %1669 = add i32 %1668, %1667
  store i32 %1669, i32* %28, align 4
  %1670 = load %struct.EState*, %struct.EState** %2, align 8
  %1671 = getelementptr inbounds %struct.EState, %struct.EState* %1670, i32 0, i32 38
  %1672 = load i16, i16* %30, align 2
  %1673 = zext i16 %1672 to i64
  %1674 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1671, i64 0, i64 %1673
  %1675 = getelementptr inbounds [4 x i32], [4 x i32]* %1674, i64 0, i64 2
  %1676 = load i32, i32* %1675, align 8
  %1677 = load i32, i32* %29, align 4
  %1678 = add i32 %1677, %1676
  store i32 %1678, i32* %29, align 4
  %1679 = load i16*, i16** %22, align 8
  %1680 = load i32, i32* %7, align 4
  %1681 = add nsw i32 %1680, 38
  %1682 = sext i32 %1681 to i64
  %1683 = getelementptr inbounds i16, i16* %1679, i64 %1682
  %1684 = load i16, i16* %1683, align 2
  store i16 %1684, i16* %30, align 2
  %1685 = load %struct.EState*, %struct.EState** %2, align 8
  %1686 = getelementptr inbounds %struct.EState, %struct.EState* %1685, i32 0, i32 38
  %1687 = load i16, i16* %30, align 2
  %1688 = zext i16 %1687 to i64
  %1689 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1686, i64 0, i64 %1688
  %1690 = getelementptr inbounds [4 x i32], [4 x i32]* %1689, i64 0, i64 0
  %1691 = load i32, i32* %1690, align 8
  %1692 = load i32, i32* %27, align 4
  %1693 = add i32 %1692, %1691
  store i32 %1693, i32* %27, align 4
  %1694 = load %struct.EState*, %struct.EState** %2, align 8
  %1695 = getelementptr inbounds %struct.EState, %struct.EState* %1694, i32 0, i32 38
  %1696 = load i16, i16* %30, align 2
  %1697 = zext i16 %1696 to i64
  %1698 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1695, i64 0, i64 %1697
  %1699 = getelementptr inbounds [4 x i32], [4 x i32]* %1698, i64 0, i64 1
  %1700 = load i32, i32* %1699, align 4
  %1701 = load i32, i32* %28, align 4
  %1702 = add i32 %1701, %1700
  store i32 %1702, i32* %28, align 4
  %1703 = load %struct.EState*, %struct.EState** %2, align 8
  %1704 = getelementptr inbounds %struct.EState, %struct.EState* %1703, i32 0, i32 38
  %1705 = load i16, i16* %30, align 2
  %1706 = zext i16 %1705 to i64
  %1707 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1704, i64 0, i64 %1706
  %1708 = getelementptr inbounds [4 x i32], [4 x i32]* %1707, i64 0, i64 2
  %1709 = load i32, i32* %1708, align 8
  %1710 = load i32, i32* %29, align 4
  %1711 = add i32 %1710, %1709
  store i32 %1711, i32* %29, align 4
  %1712 = load i16*, i16** %22, align 8
  %1713 = load i32, i32* %7, align 4
  %1714 = add nsw i32 %1713, 39
  %1715 = sext i32 %1714 to i64
  %1716 = getelementptr inbounds i16, i16* %1712, i64 %1715
  %1717 = load i16, i16* %1716, align 2
  store i16 %1717, i16* %30, align 2
  %1718 = load %struct.EState*, %struct.EState** %2, align 8
  %1719 = getelementptr inbounds %struct.EState, %struct.EState* %1718, i32 0, i32 38
  %1720 = load i16, i16* %30, align 2
  %1721 = zext i16 %1720 to i64
  %1722 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1719, i64 0, i64 %1721
  %1723 = getelementptr inbounds [4 x i32], [4 x i32]* %1722, i64 0, i64 0
  %1724 = load i32, i32* %1723, align 8
  %1725 = load i32, i32* %27, align 4
  %1726 = add i32 %1725, %1724
  store i32 %1726, i32* %27, align 4
  %1727 = load %struct.EState*, %struct.EState** %2, align 8
  %1728 = getelementptr inbounds %struct.EState, %struct.EState* %1727, i32 0, i32 38
  %1729 = load i16, i16* %30, align 2
  %1730 = zext i16 %1729 to i64
  %1731 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1728, i64 0, i64 %1730
  %1732 = getelementptr inbounds [4 x i32], [4 x i32]* %1731, i64 0, i64 1
  %1733 = load i32, i32* %1732, align 4
  %1734 = load i32, i32* %28, align 4
  %1735 = add i32 %1734, %1733
  store i32 %1735, i32* %28, align 4
  %1736 = load %struct.EState*, %struct.EState** %2, align 8
  %1737 = getelementptr inbounds %struct.EState, %struct.EState* %1736, i32 0, i32 38
  %1738 = load i16, i16* %30, align 2
  %1739 = zext i16 %1738 to i64
  %1740 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1737, i64 0, i64 %1739
  %1741 = getelementptr inbounds [4 x i32], [4 x i32]* %1740, i64 0, i64 2
  %1742 = load i32, i32* %1741, align 8
  %1743 = load i32, i32* %29, align 4
  %1744 = add i32 %1743, %1742
  store i32 %1744, i32* %29, align 4
  %1745 = load i16*, i16** %22, align 8
  %1746 = load i32, i32* %7, align 4
  %1747 = add nsw i32 %1746, 40
  %1748 = sext i32 %1747 to i64
  %1749 = getelementptr inbounds i16, i16* %1745, i64 %1748
  %1750 = load i16, i16* %1749, align 2
  store i16 %1750, i16* %30, align 2
  %1751 = load %struct.EState*, %struct.EState** %2, align 8
  %1752 = getelementptr inbounds %struct.EState, %struct.EState* %1751, i32 0, i32 38
  %1753 = load i16, i16* %30, align 2
  %1754 = zext i16 %1753 to i64
  %1755 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1752, i64 0, i64 %1754
  %1756 = getelementptr inbounds [4 x i32], [4 x i32]* %1755, i64 0, i64 0
  %1757 = load i32, i32* %1756, align 8
  %1758 = load i32, i32* %27, align 4
  %1759 = add i32 %1758, %1757
  store i32 %1759, i32* %27, align 4
  %1760 = load %struct.EState*, %struct.EState** %2, align 8
  %1761 = getelementptr inbounds %struct.EState, %struct.EState* %1760, i32 0, i32 38
  %1762 = load i16, i16* %30, align 2
  %1763 = zext i16 %1762 to i64
  %1764 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1761, i64 0, i64 %1763
  %1765 = getelementptr inbounds [4 x i32], [4 x i32]* %1764, i64 0, i64 1
  %1766 = load i32, i32* %1765, align 4
  %1767 = load i32, i32* %28, align 4
  %1768 = add i32 %1767, %1766
  store i32 %1768, i32* %28, align 4
  %1769 = load %struct.EState*, %struct.EState** %2, align 8
  %1770 = getelementptr inbounds %struct.EState, %struct.EState* %1769, i32 0, i32 38
  %1771 = load i16, i16* %30, align 2
  %1772 = zext i16 %1771 to i64
  %1773 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1770, i64 0, i64 %1772
  %1774 = getelementptr inbounds [4 x i32], [4 x i32]* %1773, i64 0, i64 2
  %1775 = load i32, i32* %1774, align 8
  %1776 = load i32, i32* %29, align 4
  %1777 = add i32 %1776, %1775
  store i32 %1777, i32* %29, align 4
  %1778 = load i16*, i16** %22, align 8
  %1779 = load i32, i32* %7, align 4
  %1780 = add nsw i32 %1779, 41
  %1781 = sext i32 %1780 to i64
  %1782 = getelementptr inbounds i16, i16* %1778, i64 %1781
  %1783 = load i16, i16* %1782, align 2
  store i16 %1783, i16* %30, align 2
  %1784 = load %struct.EState*, %struct.EState** %2, align 8
  %1785 = getelementptr inbounds %struct.EState, %struct.EState* %1784, i32 0, i32 38
  %1786 = load i16, i16* %30, align 2
  %1787 = zext i16 %1786 to i64
  %1788 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1785, i64 0, i64 %1787
  %1789 = getelementptr inbounds [4 x i32], [4 x i32]* %1788, i64 0, i64 0
  %1790 = load i32, i32* %1789, align 8
  %1791 = load i32, i32* %27, align 4
  %1792 = add i32 %1791, %1790
  store i32 %1792, i32* %27, align 4
  %1793 = load %struct.EState*, %struct.EState** %2, align 8
  %1794 = getelementptr inbounds %struct.EState, %struct.EState* %1793, i32 0, i32 38
  %1795 = load i16, i16* %30, align 2
  %1796 = zext i16 %1795 to i64
  %1797 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1794, i64 0, i64 %1796
  %1798 = getelementptr inbounds [4 x i32], [4 x i32]* %1797, i64 0, i64 1
  %1799 = load i32, i32* %1798, align 4
  %1800 = load i32, i32* %28, align 4
  %1801 = add i32 %1800, %1799
  store i32 %1801, i32* %28, align 4
  %1802 = load %struct.EState*, %struct.EState** %2, align 8
  %1803 = getelementptr inbounds %struct.EState, %struct.EState* %1802, i32 0, i32 38
  %1804 = load i16, i16* %30, align 2
  %1805 = zext i16 %1804 to i64
  %1806 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1803, i64 0, i64 %1805
  %1807 = getelementptr inbounds [4 x i32], [4 x i32]* %1806, i64 0, i64 2
  %1808 = load i32, i32* %1807, align 8
  %1809 = load i32, i32* %29, align 4
  %1810 = add i32 %1809, %1808
  store i32 %1810, i32* %29, align 4
  %1811 = load i16*, i16** %22, align 8
  %1812 = load i32, i32* %7, align 4
  %1813 = add nsw i32 %1812, 42
  %1814 = sext i32 %1813 to i64
  %1815 = getelementptr inbounds i16, i16* %1811, i64 %1814
  %1816 = load i16, i16* %1815, align 2
  store i16 %1816, i16* %30, align 2
  %1817 = load %struct.EState*, %struct.EState** %2, align 8
  %1818 = getelementptr inbounds %struct.EState, %struct.EState* %1817, i32 0, i32 38
  %1819 = load i16, i16* %30, align 2
  %1820 = zext i16 %1819 to i64
  %1821 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1818, i64 0, i64 %1820
  %1822 = getelementptr inbounds [4 x i32], [4 x i32]* %1821, i64 0, i64 0
  %1823 = load i32, i32* %1822, align 8
  %1824 = load i32, i32* %27, align 4
  %1825 = add i32 %1824, %1823
  store i32 %1825, i32* %27, align 4
  %1826 = load %struct.EState*, %struct.EState** %2, align 8
  %1827 = getelementptr inbounds %struct.EState, %struct.EState* %1826, i32 0, i32 38
  %1828 = load i16, i16* %30, align 2
  %1829 = zext i16 %1828 to i64
  %1830 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1827, i64 0, i64 %1829
  %1831 = getelementptr inbounds [4 x i32], [4 x i32]* %1830, i64 0, i64 1
  %1832 = load i32, i32* %1831, align 4
  %1833 = load i32, i32* %28, align 4
  %1834 = add i32 %1833, %1832
  store i32 %1834, i32* %28, align 4
  %1835 = load %struct.EState*, %struct.EState** %2, align 8
  %1836 = getelementptr inbounds %struct.EState, %struct.EState* %1835, i32 0, i32 38
  %1837 = load i16, i16* %30, align 2
  %1838 = zext i16 %1837 to i64
  %1839 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1836, i64 0, i64 %1838
  %1840 = getelementptr inbounds [4 x i32], [4 x i32]* %1839, i64 0, i64 2
  %1841 = load i32, i32* %1840, align 8
  %1842 = load i32, i32* %29, align 4
  %1843 = add i32 %1842, %1841
  store i32 %1843, i32* %29, align 4
  %1844 = load i16*, i16** %22, align 8
  %1845 = load i32, i32* %7, align 4
  %1846 = add nsw i32 %1845, 43
  %1847 = sext i32 %1846 to i64
  %1848 = getelementptr inbounds i16, i16* %1844, i64 %1847
  %1849 = load i16, i16* %1848, align 2
  store i16 %1849, i16* %30, align 2
  %1850 = load %struct.EState*, %struct.EState** %2, align 8
  %1851 = getelementptr inbounds %struct.EState, %struct.EState* %1850, i32 0, i32 38
  %1852 = load i16, i16* %30, align 2
  %1853 = zext i16 %1852 to i64
  %1854 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1851, i64 0, i64 %1853
  %1855 = getelementptr inbounds [4 x i32], [4 x i32]* %1854, i64 0, i64 0
  %1856 = load i32, i32* %1855, align 8
  %1857 = load i32, i32* %27, align 4
  %1858 = add i32 %1857, %1856
  store i32 %1858, i32* %27, align 4
  %1859 = load %struct.EState*, %struct.EState** %2, align 8
  %1860 = getelementptr inbounds %struct.EState, %struct.EState* %1859, i32 0, i32 38
  %1861 = load i16, i16* %30, align 2
  %1862 = zext i16 %1861 to i64
  %1863 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1860, i64 0, i64 %1862
  %1864 = getelementptr inbounds [4 x i32], [4 x i32]* %1863, i64 0, i64 1
  %1865 = load i32, i32* %1864, align 4
  %1866 = load i32, i32* %28, align 4
  %1867 = add i32 %1866, %1865
  store i32 %1867, i32* %28, align 4
  %1868 = load %struct.EState*, %struct.EState** %2, align 8
  %1869 = getelementptr inbounds %struct.EState, %struct.EState* %1868, i32 0, i32 38
  %1870 = load i16, i16* %30, align 2
  %1871 = zext i16 %1870 to i64
  %1872 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1869, i64 0, i64 %1871
  %1873 = getelementptr inbounds [4 x i32], [4 x i32]* %1872, i64 0, i64 2
  %1874 = load i32, i32* %1873, align 8
  %1875 = load i32, i32* %29, align 4
  %1876 = add i32 %1875, %1874
  store i32 %1876, i32* %29, align 4
  %1877 = load i16*, i16** %22, align 8
  %1878 = load i32, i32* %7, align 4
  %1879 = add nsw i32 %1878, 44
  %1880 = sext i32 %1879 to i64
  %1881 = getelementptr inbounds i16, i16* %1877, i64 %1880
  %1882 = load i16, i16* %1881, align 2
  store i16 %1882, i16* %30, align 2
  %1883 = load %struct.EState*, %struct.EState** %2, align 8
  %1884 = getelementptr inbounds %struct.EState, %struct.EState* %1883, i32 0, i32 38
  %1885 = load i16, i16* %30, align 2
  %1886 = zext i16 %1885 to i64
  %1887 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1884, i64 0, i64 %1886
  %1888 = getelementptr inbounds [4 x i32], [4 x i32]* %1887, i64 0, i64 0
  %1889 = load i32, i32* %1888, align 8
  %1890 = load i32, i32* %27, align 4
  %1891 = add i32 %1890, %1889
  store i32 %1891, i32* %27, align 4
  %1892 = load %struct.EState*, %struct.EState** %2, align 8
  %1893 = getelementptr inbounds %struct.EState, %struct.EState* %1892, i32 0, i32 38
  %1894 = load i16, i16* %30, align 2
  %1895 = zext i16 %1894 to i64
  %1896 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1893, i64 0, i64 %1895
  %1897 = getelementptr inbounds [4 x i32], [4 x i32]* %1896, i64 0, i64 1
  %1898 = load i32, i32* %1897, align 4
  %1899 = load i32, i32* %28, align 4
  %1900 = add i32 %1899, %1898
  store i32 %1900, i32* %28, align 4
  %1901 = load %struct.EState*, %struct.EState** %2, align 8
  %1902 = getelementptr inbounds %struct.EState, %struct.EState* %1901, i32 0, i32 38
  %1903 = load i16, i16* %30, align 2
  %1904 = zext i16 %1903 to i64
  %1905 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1902, i64 0, i64 %1904
  %1906 = getelementptr inbounds [4 x i32], [4 x i32]* %1905, i64 0, i64 2
  %1907 = load i32, i32* %1906, align 8
  %1908 = load i32, i32* %29, align 4
  %1909 = add i32 %1908, %1907
  store i32 %1909, i32* %29, align 4
  %1910 = load i16*, i16** %22, align 8
  %1911 = load i32, i32* %7, align 4
  %1912 = add nsw i32 %1911, 45
  %1913 = sext i32 %1912 to i64
  %1914 = getelementptr inbounds i16, i16* %1910, i64 %1913
  %1915 = load i16, i16* %1914, align 2
  store i16 %1915, i16* %30, align 2
  %1916 = load %struct.EState*, %struct.EState** %2, align 8
  %1917 = getelementptr inbounds %struct.EState, %struct.EState* %1916, i32 0, i32 38
  %1918 = load i16, i16* %30, align 2
  %1919 = zext i16 %1918 to i64
  %1920 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1917, i64 0, i64 %1919
  %1921 = getelementptr inbounds [4 x i32], [4 x i32]* %1920, i64 0, i64 0
  %1922 = load i32, i32* %1921, align 8
  %1923 = load i32, i32* %27, align 4
  %1924 = add i32 %1923, %1922
  store i32 %1924, i32* %27, align 4
  %1925 = load %struct.EState*, %struct.EState** %2, align 8
  %1926 = getelementptr inbounds %struct.EState, %struct.EState* %1925, i32 0, i32 38
  %1927 = load i16, i16* %30, align 2
  %1928 = zext i16 %1927 to i64
  %1929 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1926, i64 0, i64 %1928
  %1930 = getelementptr inbounds [4 x i32], [4 x i32]* %1929, i64 0, i64 1
  %1931 = load i32, i32* %1930, align 4
  %1932 = load i32, i32* %28, align 4
  %1933 = add i32 %1932, %1931
  store i32 %1933, i32* %28, align 4
  %1934 = load %struct.EState*, %struct.EState** %2, align 8
  %1935 = getelementptr inbounds %struct.EState, %struct.EState* %1934, i32 0, i32 38
  %1936 = load i16, i16* %30, align 2
  %1937 = zext i16 %1936 to i64
  %1938 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1935, i64 0, i64 %1937
  %1939 = getelementptr inbounds [4 x i32], [4 x i32]* %1938, i64 0, i64 2
  %1940 = load i32, i32* %1939, align 8
  %1941 = load i32, i32* %29, align 4
  %1942 = add i32 %1941, %1940
  store i32 %1942, i32* %29, align 4
  %1943 = load i16*, i16** %22, align 8
  %1944 = load i32, i32* %7, align 4
  %1945 = add nsw i32 %1944, 46
  %1946 = sext i32 %1945 to i64
  %1947 = getelementptr inbounds i16, i16* %1943, i64 %1946
  %1948 = load i16, i16* %1947, align 2
  store i16 %1948, i16* %30, align 2
  %1949 = load %struct.EState*, %struct.EState** %2, align 8
  %1950 = getelementptr inbounds %struct.EState, %struct.EState* %1949, i32 0, i32 38
  %1951 = load i16, i16* %30, align 2
  %1952 = zext i16 %1951 to i64
  %1953 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1950, i64 0, i64 %1952
  %1954 = getelementptr inbounds [4 x i32], [4 x i32]* %1953, i64 0, i64 0
  %1955 = load i32, i32* %1954, align 8
  %1956 = load i32, i32* %27, align 4
  %1957 = add i32 %1956, %1955
  store i32 %1957, i32* %27, align 4
  %1958 = load %struct.EState*, %struct.EState** %2, align 8
  %1959 = getelementptr inbounds %struct.EState, %struct.EState* %1958, i32 0, i32 38
  %1960 = load i16, i16* %30, align 2
  %1961 = zext i16 %1960 to i64
  %1962 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1959, i64 0, i64 %1961
  %1963 = getelementptr inbounds [4 x i32], [4 x i32]* %1962, i64 0, i64 1
  %1964 = load i32, i32* %1963, align 4
  %1965 = load i32, i32* %28, align 4
  %1966 = add i32 %1965, %1964
  store i32 %1966, i32* %28, align 4
  %1967 = load %struct.EState*, %struct.EState** %2, align 8
  %1968 = getelementptr inbounds %struct.EState, %struct.EState* %1967, i32 0, i32 38
  %1969 = load i16, i16* %30, align 2
  %1970 = zext i16 %1969 to i64
  %1971 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1968, i64 0, i64 %1970
  %1972 = getelementptr inbounds [4 x i32], [4 x i32]* %1971, i64 0, i64 2
  %1973 = load i32, i32* %1972, align 8
  %1974 = load i32, i32* %29, align 4
  %1975 = add i32 %1974, %1973
  store i32 %1975, i32* %29, align 4
  %1976 = load i16*, i16** %22, align 8
  %1977 = load i32, i32* %7, align 4
  %1978 = add nsw i32 %1977, 47
  %1979 = sext i32 %1978 to i64
  %1980 = getelementptr inbounds i16, i16* %1976, i64 %1979
  %1981 = load i16, i16* %1980, align 2
  store i16 %1981, i16* %30, align 2
  %1982 = load %struct.EState*, %struct.EState** %2, align 8
  %1983 = getelementptr inbounds %struct.EState, %struct.EState* %1982, i32 0, i32 38
  %1984 = load i16, i16* %30, align 2
  %1985 = zext i16 %1984 to i64
  %1986 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1983, i64 0, i64 %1985
  %1987 = getelementptr inbounds [4 x i32], [4 x i32]* %1986, i64 0, i64 0
  %1988 = load i32, i32* %1987, align 8
  %1989 = load i32, i32* %27, align 4
  %1990 = add i32 %1989, %1988
  store i32 %1990, i32* %27, align 4
  %1991 = load %struct.EState*, %struct.EState** %2, align 8
  %1992 = getelementptr inbounds %struct.EState, %struct.EState* %1991, i32 0, i32 38
  %1993 = load i16, i16* %30, align 2
  %1994 = zext i16 %1993 to i64
  %1995 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1992, i64 0, i64 %1994
  %1996 = getelementptr inbounds [4 x i32], [4 x i32]* %1995, i64 0, i64 1
  %1997 = load i32, i32* %1996, align 4
  %1998 = load i32, i32* %28, align 4
  %1999 = add i32 %1998, %1997
  store i32 %1999, i32* %28, align 4
  %2000 = load %struct.EState*, %struct.EState** %2, align 8
  %2001 = getelementptr inbounds %struct.EState, %struct.EState* %2000, i32 0, i32 38
  %2002 = load i16, i16* %30, align 2
  %2003 = zext i16 %2002 to i64
  %2004 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %2001, i64 0, i64 %2003
  %2005 = getelementptr inbounds [4 x i32], [4 x i32]* %2004, i64 0, i64 2
  %2006 = load i32, i32* %2005, align 8
  %2007 = load i32, i32* %29, align 4
  %2008 = add i32 %2007, %2006
  store i32 %2008, i32* %29, align 4
  %2009 = load i16*, i16** %22, align 8
  %2010 = load i32, i32* %7, align 4
  %2011 = add nsw i32 %2010, 48
  %2012 = sext i32 %2011 to i64
  %2013 = getelementptr inbounds i16, i16* %2009, i64 %2012
  %2014 = load i16, i16* %2013, align 2
  store i16 %2014, i16* %30, align 2
  %2015 = load %struct.EState*, %struct.EState** %2, align 8
  %2016 = getelementptr inbounds %struct.EState, %struct.EState* %2015, i32 0, i32 38
  %2017 = load i16, i16* %30, align 2
  %2018 = zext i16 %2017 to i64
  %2019 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %2016, i64 0, i64 %2018
  %2020 = getelementptr inbounds [4 x i32], [4 x i32]* %2019, i64 0, i64 0
  %2021 = load i32, i32* %2020, align 8
  %2022 = load i32, i32* %27, align 4
  %2023 = add i32 %2022, %2021
  store i32 %2023, i32* %27, align 4
  %2024 = load %struct.EState*, %struct.EState** %2, align 8
  %2025 = getelementptr inbounds %struct.EState, %struct.EState* %2024, i32 0, i32 38
  %2026 = load i16, i16* %30, align 2
  %2027 = zext i16 %2026 to i64
  %2028 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %2025, i64 0, i64 %2027
  %2029 = getelementptr inbounds [4 x i32], [4 x i32]* %2028, i64 0, i64 1
  %2030 = load i32, i32* %2029, align 4
  %2031 = load i32, i32* %28, align 4
  %2032 = add i32 %2031, %2030
  store i32 %2032, i32* %28, align 4
  %2033 = load %struct.EState*, %struct.EState** %2, align 8
  %2034 = getelementptr inbounds %struct.EState, %struct.EState* %2033, i32 0, i32 38
  %2035 = load i16, i16* %30, align 2
  %2036 = zext i16 %2035 to i64
  %2037 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %2034, i64 0, i64 %2036
  %2038 = getelementptr inbounds [4 x i32], [4 x i32]* %2037, i64 0, i64 2
  %2039 = load i32, i32* %2038, align 8
  %2040 = load i32, i32* %29, align 4
  %2041 = add i32 %2040, %2039
  store i32 %2041, i32* %29, align 4
  %2042 = load i16*, i16** %22, align 8
  %2043 = load i32, i32* %7, align 4
  %2044 = add nsw i32 %2043, 49
  %2045 = sext i32 %2044 to i64
  %2046 = getelementptr inbounds i16, i16* %2042, i64 %2045
  %2047 = load i16, i16* %2046, align 2
  store i16 %2047, i16* %30, align 2
  %2048 = load %struct.EState*, %struct.EState** %2, align 8
  %2049 = getelementptr inbounds %struct.EState, %struct.EState* %2048, i32 0, i32 38
  %2050 = load i16, i16* %30, align 2
  %2051 = zext i16 %2050 to i64
  %2052 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %2049, i64 0, i64 %2051
  %2053 = getelementptr inbounds [4 x i32], [4 x i32]* %2052, i64 0, i64 0
  %2054 = load i32, i32* %2053, align 8
  %2055 = load i32, i32* %27, align 4
  %2056 = add i32 %2055, %2054
  store i32 %2056, i32* %27, align 4
  %2057 = load %struct.EState*, %struct.EState** %2, align 8
  %2058 = getelementptr inbounds %struct.EState, %struct.EState* %2057, i32 0, i32 38
  %2059 = load i16, i16* %30, align 2
  %2060 = zext i16 %2059 to i64
  %2061 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %2058, i64 0, i64 %2060
  %2062 = getelementptr inbounds [4 x i32], [4 x i32]* %2061, i64 0, i64 1
  %2063 = load i32, i32* %2062, align 4
  %2064 = load i32, i32* %28, align 4
  %2065 = add i32 %2064, %2063
  store i32 %2065, i32* %28, align 4
  %2066 = load %struct.EState*, %struct.EState** %2, align 8
  %2067 = getelementptr inbounds %struct.EState, %struct.EState* %2066, i32 0, i32 38
  %2068 = load i16, i16* %30, align 2
  %2069 = zext i16 %2068 to i64
  %2070 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %2067, i64 0, i64 %2069
  %2071 = getelementptr inbounds [4 x i32], [4 x i32]* %2070, i64 0, i64 2
  %2072 = load i32, i32* %2071, align 8
  %2073 = load i32, i32* %29, align 4
  %2074 = add i32 %2073, %2072
  store i32 %2074, i32* %29, align 4
  %2075 = load i32, i32* %27, align 4
  %2076 = and i32 %2075, 65535
  %2077 = trunc i32 %2076 to i16
  %2078 = getelementptr inbounds [6 x i16], [6 x i16]* %20, i64 0, i64 0
  store i16 %2077, i16* %2078, align 2
  %2079 = load i32, i32* %27, align 4
  %2080 = lshr i32 %2079, 16
  %2081 = trunc i32 %2080 to i16
  %2082 = getelementptr inbounds [6 x i16], [6 x i16]* %20, i64 0, i64 1
  store i16 %2081, i16* %2082, align 2
  %2083 = load i32, i32* %28, align 4
  %2084 = and i32 %2083, 65535
  %2085 = trunc i32 %2084 to i16
  %2086 = getelementptr inbounds [6 x i16], [6 x i16]* %20, i64 0, i64 2
  store i16 %2085, i16* %2086, align 2
  %2087 = load i32, i32* %28, align 4
  %2088 = lshr i32 %2087, 16
  %2089 = trunc i32 %2088 to i16
  %2090 = getelementptr inbounds [6 x i16], [6 x i16]* %20, i64 0, i64 3
  store i16 %2089, i16* %2090, align 2
  %2091 = load i32, i32* %29, align 4
  %2092 = and i32 %2091, 65535
  %2093 = trunc i32 %2092 to i16
  %2094 = getelementptr inbounds [6 x i16], [6 x i16]* %20, i64 0, i64 4
  store i16 %2093, i16* %2094, align 2
  %2095 = load i32, i32* %29, align 4
  %2096 = lshr i32 %2095, 16
  %2097 = trunc i32 %2096 to i16
  %2098 = getelementptr inbounds [6 x i16], [6 x i16]* %20, i64 0, i64 5
  store i16 %2097, i16* %2098, align 2
  br label %2141

2099:                                             ; preds = %418, %415
  %2100 = load i32, i32* %7, align 4
  store i32 %2100, i32* %5, align 4
  br label %2101

2101:                                             ; preds = %2137, %2099
  %2102 = load i32, i32* %5, align 4
  %2103 = load i32, i32* %8, align 4
  %2104 = icmp sle i32 %2102, %2103
  br i1 %2104, label %2105, label %2140

2105:                                             ; preds = %2101
  %2106 = load i16*, i16** %22, align 8
  %2107 = load i32, i32* %5, align 4
  %2108 = sext i32 %2107 to i64
  %2109 = getelementptr inbounds i16, i16* %2106, i64 %2108
  %2110 = load i16, i16* %2109, align 2
  store i16 %2110, i16* %31, align 2
  store i32 0, i32* %4, align 4
  br label %2111

2111:                                             ; preds = %2133, %2105
  %2112 = load i32, i32* %4, align 4
  %2113 = load i32, i32* %18, align 4
  %2114 = icmp slt i32 %2112, %2113
  br i1 %2114, label %2115, label %2136

2115:                                             ; preds = %2111
  %2116 = load %struct.EState*, %struct.EState** %2, align 8
  %2117 = getelementptr inbounds %struct.EState, %struct.EState* %2116, i32 0, i32 35
  %2118 = load i32, i32* %4, align 4
  %2119 = sext i32 %2118 to i64
  %2120 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2117, i64 0, i64 %2119
  %2121 = load i16, i16* %31, align 2
  %2122 = zext i16 %2121 to i64
  %2123 = getelementptr inbounds [258 x i8], [258 x i8]* %2120, i64 0, i64 %2122
  %2124 = load i8, i8* %2123, align 1
  %2125 = zext i8 %2124 to i32
  %2126 = load i32, i32* %4, align 4
  %2127 = sext i32 %2126 to i64
  %2128 = getelementptr inbounds [6 x i16], [6 x i16]* %20, i64 0, i64 %2127
  %2129 = load i16, i16* %2128, align 2
  %2130 = zext i16 %2129 to i32
  %2131 = add nsw i32 %2130, %2125
  %2132 = trunc i32 %2131 to i16
  store i16 %2132, i16* %2128, align 2
  br label %2133

2133:                                             ; preds = %2115
  %2134 = load i32, i32* %4, align 4
  %2135 = add nsw i32 %2134, 1
  store i32 %2135, i32* %4, align 4
  br label %2111

2136:                                             ; preds = %2111
  br label %2137

2137:                                             ; preds = %2136
  %2138 = load i32, i32* %5, align 4
  %2139 = add nsw i32 %2138, 1
  store i32 %2139, i32* %5, align 4
  br label %2101

2140:                                             ; preds = %2101
  br label %2141

2141:                                             ; preds = %2140, %424
  store i32 999999999, i32* %11, align 4
  store i32 -1, i32* %10, align 4
  store i32 0, i32* %4, align 4
  br label %2142

2142:                                             ; preds = %2162, %2141
  %2143 = load i32, i32* %4, align 4
  %2144 = load i32, i32* %18, align 4
  %2145 = icmp slt i32 %2143, %2144
  br i1 %2145, label %2146, label %2165

2146:                                             ; preds = %2142
  %2147 = load i32, i32* %4, align 4
  %2148 = sext i32 %2147 to i64
  %2149 = getelementptr inbounds [6 x i16], [6 x i16]* %20, i64 0, i64 %2148
  %2150 = load i16, i16* %2149, align 2
  %2151 = zext i16 %2150 to i32
  %2152 = load i32, i32* %11, align 4
  %2153 = icmp slt i32 %2151, %2152
  br i1 %2153, label %2154, label %2161

2154:                                             ; preds = %2146
  %2155 = load i32, i32* %4, align 4
  %2156 = sext i32 %2155 to i64
  %2157 = getelementptr inbounds [6 x i16], [6 x i16]* %20, i64 0, i64 %2156
  %2158 = load i16, i16* %2157, align 2
  %2159 = zext i16 %2158 to i32
  store i32 %2159, i32* %11, align 4
  %2160 = load i32, i32* %4, align 4
  store i32 %2160, i32* %10, align 4
  br label %2161

2161:                                             ; preds = %2154, %2146
  br label %2162

2162:                                             ; preds = %2161
  %2163 = load i32, i32* %4, align 4
  %2164 = add nsw i32 %2163, 1
  store i32 %2164, i32* %4, align 4
  br label %2142

2165:                                             ; preds = %2142
  %2166 = load i32, i32* %11, align 4
  %2167 = load i32, i32* %9, align 4
  %2168 = add nsw i32 %2167, %2166
  store i32 %2168, i32* %9, align 4
  %2169 = load i32, i32* %10, align 4
  %2170 = sext i32 %2169 to i64
  %2171 = getelementptr inbounds [6 x i32], [6 x i32]* %21, i64 0, i64 %2170
  %2172 = load i32, i32* %2171, align 4
  %2173 = add nsw i32 %2172, 1
  store i32 %2173, i32* %2171, align 4
  %2174 = load i32, i32* %10, align 4
  %2175 = trunc i32 %2174 to i8
  %2176 = load %struct.EState*, %struct.EState** %2, align 8
  %2177 = getelementptr inbounds %struct.EState, %struct.EState* %2176, i32 0, i32 33
  %2178 = load i32, i32* %13, align 4
  %2179 = sext i32 %2178 to i64
  %2180 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2177, i64 0, i64 %2179
  store i8 %2175, i8* %2180, align 1
  %2181 = load i32, i32* %13, align 4
  %2182 = add nsw i32 %2181, 1
  store i32 %2182, i32* %13, align 4
  %2183 = load i32, i32* %18, align 4
  %2184 = icmp eq i32 %2183, 6
  br i1 %2184, label %2185, label %2942

2185:                                             ; preds = %2165
  %2186 = load i32, i32* %8, align 4
  %2187 = load i32, i32* %7, align 4
  %2188 = sub nsw i32 %2186, %2187
  %2189 = add nsw i32 %2188, 1
  %2190 = icmp eq i32 50, %2189
  br i1 %2190, label %2191, label %2942

2191:                                             ; preds = %2185
  %2192 = load %struct.EState*, %struct.EState** %2, align 8
  %2193 = getelementptr inbounds %struct.EState, %struct.EState* %2192, i32 0, i32 37
  %2194 = load i32, i32* %10, align 4
  %2195 = sext i32 %2194 to i64
  %2196 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2193, i64 0, i64 %2195
  %2197 = load i16*, i16** %22, align 8
  %2198 = load i32, i32* %7, align 4
  %2199 = add nsw i32 %2198, 0
  %2200 = sext i32 %2199 to i64
  %2201 = getelementptr inbounds i16, i16* %2197, i64 %2200
  %2202 = load i16, i16* %2201, align 2
  %2203 = zext i16 %2202 to i64
  %2204 = getelementptr inbounds [258 x i32], [258 x i32]* %2196, i64 0, i64 %2203
  %2205 = load i32, i32* %2204, align 4
  %2206 = add nsw i32 %2205, 1
  store i32 %2206, i32* %2204, align 4
  %2207 = load %struct.EState*, %struct.EState** %2, align 8
  %2208 = getelementptr inbounds %struct.EState, %struct.EState* %2207, i32 0, i32 37
  %2209 = load i32, i32* %10, align 4
  %2210 = sext i32 %2209 to i64
  %2211 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2208, i64 0, i64 %2210
  %2212 = load i16*, i16** %22, align 8
  %2213 = load i32, i32* %7, align 4
  %2214 = add nsw i32 %2213, 1
  %2215 = sext i32 %2214 to i64
  %2216 = getelementptr inbounds i16, i16* %2212, i64 %2215
  %2217 = load i16, i16* %2216, align 2
  %2218 = zext i16 %2217 to i64
  %2219 = getelementptr inbounds [258 x i32], [258 x i32]* %2211, i64 0, i64 %2218
  %2220 = load i32, i32* %2219, align 4
  %2221 = add nsw i32 %2220, 1
  store i32 %2221, i32* %2219, align 4
  %2222 = load %struct.EState*, %struct.EState** %2, align 8
  %2223 = getelementptr inbounds %struct.EState, %struct.EState* %2222, i32 0, i32 37
  %2224 = load i32, i32* %10, align 4
  %2225 = sext i32 %2224 to i64
  %2226 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2223, i64 0, i64 %2225
  %2227 = load i16*, i16** %22, align 8
  %2228 = load i32, i32* %7, align 4
  %2229 = add nsw i32 %2228, 2
  %2230 = sext i32 %2229 to i64
  %2231 = getelementptr inbounds i16, i16* %2227, i64 %2230
  %2232 = load i16, i16* %2231, align 2
  %2233 = zext i16 %2232 to i64
  %2234 = getelementptr inbounds [258 x i32], [258 x i32]* %2226, i64 0, i64 %2233
  %2235 = load i32, i32* %2234, align 4
  %2236 = add nsw i32 %2235, 1
  store i32 %2236, i32* %2234, align 4
  %2237 = load %struct.EState*, %struct.EState** %2, align 8
  %2238 = getelementptr inbounds %struct.EState, %struct.EState* %2237, i32 0, i32 37
  %2239 = load i32, i32* %10, align 4
  %2240 = sext i32 %2239 to i64
  %2241 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2238, i64 0, i64 %2240
  %2242 = load i16*, i16** %22, align 8
  %2243 = load i32, i32* %7, align 4
  %2244 = add nsw i32 %2243, 3
  %2245 = sext i32 %2244 to i64
  %2246 = getelementptr inbounds i16, i16* %2242, i64 %2245
  %2247 = load i16, i16* %2246, align 2
  %2248 = zext i16 %2247 to i64
  %2249 = getelementptr inbounds [258 x i32], [258 x i32]* %2241, i64 0, i64 %2248
  %2250 = load i32, i32* %2249, align 4
  %2251 = add nsw i32 %2250, 1
  store i32 %2251, i32* %2249, align 4
  %2252 = load %struct.EState*, %struct.EState** %2, align 8
  %2253 = getelementptr inbounds %struct.EState, %struct.EState* %2252, i32 0, i32 37
  %2254 = load i32, i32* %10, align 4
  %2255 = sext i32 %2254 to i64
  %2256 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2253, i64 0, i64 %2255
  %2257 = load i16*, i16** %22, align 8
  %2258 = load i32, i32* %7, align 4
  %2259 = add nsw i32 %2258, 4
  %2260 = sext i32 %2259 to i64
  %2261 = getelementptr inbounds i16, i16* %2257, i64 %2260
  %2262 = load i16, i16* %2261, align 2
  %2263 = zext i16 %2262 to i64
  %2264 = getelementptr inbounds [258 x i32], [258 x i32]* %2256, i64 0, i64 %2263
  %2265 = load i32, i32* %2264, align 4
  %2266 = add nsw i32 %2265, 1
  store i32 %2266, i32* %2264, align 4
  %2267 = load %struct.EState*, %struct.EState** %2, align 8
  %2268 = getelementptr inbounds %struct.EState, %struct.EState* %2267, i32 0, i32 37
  %2269 = load i32, i32* %10, align 4
  %2270 = sext i32 %2269 to i64
  %2271 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2268, i64 0, i64 %2270
  %2272 = load i16*, i16** %22, align 8
  %2273 = load i32, i32* %7, align 4
  %2274 = add nsw i32 %2273, 5
  %2275 = sext i32 %2274 to i64
  %2276 = getelementptr inbounds i16, i16* %2272, i64 %2275
  %2277 = load i16, i16* %2276, align 2
  %2278 = zext i16 %2277 to i64
  %2279 = getelementptr inbounds [258 x i32], [258 x i32]* %2271, i64 0, i64 %2278
  %2280 = load i32, i32* %2279, align 4
  %2281 = add nsw i32 %2280, 1
  store i32 %2281, i32* %2279, align 4
  %2282 = load %struct.EState*, %struct.EState** %2, align 8
  %2283 = getelementptr inbounds %struct.EState, %struct.EState* %2282, i32 0, i32 37
  %2284 = load i32, i32* %10, align 4
  %2285 = sext i32 %2284 to i64
  %2286 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2283, i64 0, i64 %2285
  %2287 = load i16*, i16** %22, align 8
  %2288 = load i32, i32* %7, align 4
  %2289 = add nsw i32 %2288, 6
  %2290 = sext i32 %2289 to i64
  %2291 = getelementptr inbounds i16, i16* %2287, i64 %2290
  %2292 = load i16, i16* %2291, align 2
  %2293 = zext i16 %2292 to i64
  %2294 = getelementptr inbounds [258 x i32], [258 x i32]* %2286, i64 0, i64 %2293
  %2295 = load i32, i32* %2294, align 4
  %2296 = add nsw i32 %2295, 1
  store i32 %2296, i32* %2294, align 4
  %2297 = load %struct.EState*, %struct.EState** %2, align 8
  %2298 = getelementptr inbounds %struct.EState, %struct.EState* %2297, i32 0, i32 37
  %2299 = load i32, i32* %10, align 4
  %2300 = sext i32 %2299 to i64
  %2301 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2298, i64 0, i64 %2300
  %2302 = load i16*, i16** %22, align 8
  %2303 = load i32, i32* %7, align 4
  %2304 = add nsw i32 %2303, 7
  %2305 = sext i32 %2304 to i64
  %2306 = getelementptr inbounds i16, i16* %2302, i64 %2305
  %2307 = load i16, i16* %2306, align 2
  %2308 = zext i16 %2307 to i64
  %2309 = getelementptr inbounds [258 x i32], [258 x i32]* %2301, i64 0, i64 %2308
  %2310 = load i32, i32* %2309, align 4
  %2311 = add nsw i32 %2310, 1
  store i32 %2311, i32* %2309, align 4
  %2312 = load %struct.EState*, %struct.EState** %2, align 8
  %2313 = getelementptr inbounds %struct.EState, %struct.EState* %2312, i32 0, i32 37
  %2314 = load i32, i32* %10, align 4
  %2315 = sext i32 %2314 to i64
  %2316 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2313, i64 0, i64 %2315
  %2317 = load i16*, i16** %22, align 8
  %2318 = load i32, i32* %7, align 4
  %2319 = add nsw i32 %2318, 8
  %2320 = sext i32 %2319 to i64
  %2321 = getelementptr inbounds i16, i16* %2317, i64 %2320
  %2322 = load i16, i16* %2321, align 2
  %2323 = zext i16 %2322 to i64
  %2324 = getelementptr inbounds [258 x i32], [258 x i32]* %2316, i64 0, i64 %2323
  %2325 = load i32, i32* %2324, align 4
  %2326 = add nsw i32 %2325, 1
  store i32 %2326, i32* %2324, align 4
  %2327 = load %struct.EState*, %struct.EState** %2, align 8
  %2328 = getelementptr inbounds %struct.EState, %struct.EState* %2327, i32 0, i32 37
  %2329 = load i32, i32* %10, align 4
  %2330 = sext i32 %2329 to i64
  %2331 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2328, i64 0, i64 %2330
  %2332 = load i16*, i16** %22, align 8
  %2333 = load i32, i32* %7, align 4
  %2334 = add nsw i32 %2333, 9
  %2335 = sext i32 %2334 to i64
  %2336 = getelementptr inbounds i16, i16* %2332, i64 %2335
  %2337 = load i16, i16* %2336, align 2
  %2338 = zext i16 %2337 to i64
  %2339 = getelementptr inbounds [258 x i32], [258 x i32]* %2331, i64 0, i64 %2338
  %2340 = load i32, i32* %2339, align 4
  %2341 = add nsw i32 %2340, 1
  store i32 %2341, i32* %2339, align 4
  %2342 = load %struct.EState*, %struct.EState** %2, align 8
  %2343 = getelementptr inbounds %struct.EState, %struct.EState* %2342, i32 0, i32 37
  %2344 = load i32, i32* %10, align 4
  %2345 = sext i32 %2344 to i64
  %2346 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2343, i64 0, i64 %2345
  %2347 = load i16*, i16** %22, align 8
  %2348 = load i32, i32* %7, align 4
  %2349 = add nsw i32 %2348, 10
  %2350 = sext i32 %2349 to i64
  %2351 = getelementptr inbounds i16, i16* %2347, i64 %2350
  %2352 = load i16, i16* %2351, align 2
  %2353 = zext i16 %2352 to i64
  %2354 = getelementptr inbounds [258 x i32], [258 x i32]* %2346, i64 0, i64 %2353
  %2355 = load i32, i32* %2354, align 4
  %2356 = add nsw i32 %2355, 1
  store i32 %2356, i32* %2354, align 4
  %2357 = load %struct.EState*, %struct.EState** %2, align 8
  %2358 = getelementptr inbounds %struct.EState, %struct.EState* %2357, i32 0, i32 37
  %2359 = load i32, i32* %10, align 4
  %2360 = sext i32 %2359 to i64
  %2361 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2358, i64 0, i64 %2360
  %2362 = load i16*, i16** %22, align 8
  %2363 = load i32, i32* %7, align 4
  %2364 = add nsw i32 %2363, 11
  %2365 = sext i32 %2364 to i64
  %2366 = getelementptr inbounds i16, i16* %2362, i64 %2365
  %2367 = load i16, i16* %2366, align 2
  %2368 = zext i16 %2367 to i64
  %2369 = getelementptr inbounds [258 x i32], [258 x i32]* %2361, i64 0, i64 %2368
  %2370 = load i32, i32* %2369, align 4
  %2371 = add nsw i32 %2370, 1
  store i32 %2371, i32* %2369, align 4
  %2372 = load %struct.EState*, %struct.EState** %2, align 8
  %2373 = getelementptr inbounds %struct.EState, %struct.EState* %2372, i32 0, i32 37
  %2374 = load i32, i32* %10, align 4
  %2375 = sext i32 %2374 to i64
  %2376 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2373, i64 0, i64 %2375
  %2377 = load i16*, i16** %22, align 8
  %2378 = load i32, i32* %7, align 4
  %2379 = add nsw i32 %2378, 12
  %2380 = sext i32 %2379 to i64
  %2381 = getelementptr inbounds i16, i16* %2377, i64 %2380
  %2382 = load i16, i16* %2381, align 2
  %2383 = zext i16 %2382 to i64
  %2384 = getelementptr inbounds [258 x i32], [258 x i32]* %2376, i64 0, i64 %2383
  %2385 = load i32, i32* %2384, align 4
  %2386 = add nsw i32 %2385, 1
  store i32 %2386, i32* %2384, align 4
  %2387 = load %struct.EState*, %struct.EState** %2, align 8
  %2388 = getelementptr inbounds %struct.EState, %struct.EState* %2387, i32 0, i32 37
  %2389 = load i32, i32* %10, align 4
  %2390 = sext i32 %2389 to i64
  %2391 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2388, i64 0, i64 %2390
  %2392 = load i16*, i16** %22, align 8
  %2393 = load i32, i32* %7, align 4
  %2394 = add nsw i32 %2393, 13
  %2395 = sext i32 %2394 to i64
  %2396 = getelementptr inbounds i16, i16* %2392, i64 %2395
  %2397 = load i16, i16* %2396, align 2
  %2398 = zext i16 %2397 to i64
  %2399 = getelementptr inbounds [258 x i32], [258 x i32]* %2391, i64 0, i64 %2398
  %2400 = load i32, i32* %2399, align 4
  %2401 = add nsw i32 %2400, 1
  store i32 %2401, i32* %2399, align 4
  %2402 = load %struct.EState*, %struct.EState** %2, align 8
  %2403 = getelementptr inbounds %struct.EState, %struct.EState* %2402, i32 0, i32 37
  %2404 = load i32, i32* %10, align 4
  %2405 = sext i32 %2404 to i64
  %2406 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2403, i64 0, i64 %2405
  %2407 = load i16*, i16** %22, align 8
  %2408 = load i32, i32* %7, align 4
  %2409 = add nsw i32 %2408, 14
  %2410 = sext i32 %2409 to i64
  %2411 = getelementptr inbounds i16, i16* %2407, i64 %2410
  %2412 = load i16, i16* %2411, align 2
  %2413 = zext i16 %2412 to i64
  %2414 = getelementptr inbounds [258 x i32], [258 x i32]* %2406, i64 0, i64 %2413
  %2415 = load i32, i32* %2414, align 4
  %2416 = add nsw i32 %2415, 1
  store i32 %2416, i32* %2414, align 4
  %2417 = load %struct.EState*, %struct.EState** %2, align 8
  %2418 = getelementptr inbounds %struct.EState, %struct.EState* %2417, i32 0, i32 37
  %2419 = load i32, i32* %10, align 4
  %2420 = sext i32 %2419 to i64
  %2421 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2418, i64 0, i64 %2420
  %2422 = load i16*, i16** %22, align 8
  %2423 = load i32, i32* %7, align 4
  %2424 = add nsw i32 %2423, 15
  %2425 = sext i32 %2424 to i64
  %2426 = getelementptr inbounds i16, i16* %2422, i64 %2425
  %2427 = load i16, i16* %2426, align 2
  %2428 = zext i16 %2427 to i64
  %2429 = getelementptr inbounds [258 x i32], [258 x i32]* %2421, i64 0, i64 %2428
  %2430 = load i32, i32* %2429, align 4
  %2431 = add nsw i32 %2430, 1
  store i32 %2431, i32* %2429, align 4
  %2432 = load %struct.EState*, %struct.EState** %2, align 8
  %2433 = getelementptr inbounds %struct.EState, %struct.EState* %2432, i32 0, i32 37
  %2434 = load i32, i32* %10, align 4
  %2435 = sext i32 %2434 to i64
  %2436 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2433, i64 0, i64 %2435
  %2437 = load i16*, i16** %22, align 8
  %2438 = load i32, i32* %7, align 4
  %2439 = add nsw i32 %2438, 16
  %2440 = sext i32 %2439 to i64
  %2441 = getelementptr inbounds i16, i16* %2437, i64 %2440
  %2442 = load i16, i16* %2441, align 2
  %2443 = zext i16 %2442 to i64
  %2444 = getelementptr inbounds [258 x i32], [258 x i32]* %2436, i64 0, i64 %2443
  %2445 = load i32, i32* %2444, align 4
  %2446 = add nsw i32 %2445, 1
  store i32 %2446, i32* %2444, align 4
  %2447 = load %struct.EState*, %struct.EState** %2, align 8
  %2448 = getelementptr inbounds %struct.EState, %struct.EState* %2447, i32 0, i32 37
  %2449 = load i32, i32* %10, align 4
  %2450 = sext i32 %2449 to i64
  %2451 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2448, i64 0, i64 %2450
  %2452 = load i16*, i16** %22, align 8
  %2453 = load i32, i32* %7, align 4
  %2454 = add nsw i32 %2453, 17
  %2455 = sext i32 %2454 to i64
  %2456 = getelementptr inbounds i16, i16* %2452, i64 %2455
  %2457 = load i16, i16* %2456, align 2
  %2458 = zext i16 %2457 to i64
  %2459 = getelementptr inbounds [258 x i32], [258 x i32]* %2451, i64 0, i64 %2458
  %2460 = load i32, i32* %2459, align 4
  %2461 = add nsw i32 %2460, 1
  store i32 %2461, i32* %2459, align 4
  %2462 = load %struct.EState*, %struct.EState** %2, align 8
  %2463 = getelementptr inbounds %struct.EState, %struct.EState* %2462, i32 0, i32 37
  %2464 = load i32, i32* %10, align 4
  %2465 = sext i32 %2464 to i64
  %2466 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2463, i64 0, i64 %2465
  %2467 = load i16*, i16** %22, align 8
  %2468 = load i32, i32* %7, align 4
  %2469 = add nsw i32 %2468, 18
  %2470 = sext i32 %2469 to i64
  %2471 = getelementptr inbounds i16, i16* %2467, i64 %2470
  %2472 = load i16, i16* %2471, align 2
  %2473 = zext i16 %2472 to i64
  %2474 = getelementptr inbounds [258 x i32], [258 x i32]* %2466, i64 0, i64 %2473
  %2475 = load i32, i32* %2474, align 4
  %2476 = add nsw i32 %2475, 1
  store i32 %2476, i32* %2474, align 4
  %2477 = load %struct.EState*, %struct.EState** %2, align 8
  %2478 = getelementptr inbounds %struct.EState, %struct.EState* %2477, i32 0, i32 37
  %2479 = load i32, i32* %10, align 4
  %2480 = sext i32 %2479 to i64
  %2481 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2478, i64 0, i64 %2480
  %2482 = load i16*, i16** %22, align 8
  %2483 = load i32, i32* %7, align 4
  %2484 = add nsw i32 %2483, 19
  %2485 = sext i32 %2484 to i64
  %2486 = getelementptr inbounds i16, i16* %2482, i64 %2485
  %2487 = load i16, i16* %2486, align 2
  %2488 = zext i16 %2487 to i64
  %2489 = getelementptr inbounds [258 x i32], [258 x i32]* %2481, i64 0, i64 %2488
  %2490 = load i32, i32* %2489, align 4
  %2491 = add nsw i32 %2490, 1
  store i32 %2491, i32* %2489, align 4
  %2492 = load %struct.EState*, %struct.EState** %2, align 8
  %2493 = getelementptr inbounds %struct.EState, %struct.EState* %2492, i32 0, i32 37
  %2494 = load i32, i32* %10, align 4
  %2495 = sext i32 %2494 to i64
  %2496 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2493, i64 0, i64 %2495
  %2497 = load i16*, i16** %22, align 8
  %2498 = load i32, i32* %7, align 4
  %2499 = add nsw i32 %2498, 20
  %2500 = sext i32 %2499 to i64
  %2501 = getelementptr inbounds i16, i16* %2497, i64 %2500
  %2502 = load i16, i16* %2501, align 2
  %2503 = zext i16 %2502 to i64
  %2504 = getelementptr inbounds [258 x i32], [258 x i32]* %2496, i64 0, i64 %2503
  %2505 = load i32, i32* %2504, align 4
  %2506 = add nsw i32 %2505, 1
  store i32 %2506, i32* %2504, align 4
  %2507 = load %struct.EState*, %struct.EState** %2, align 8
  %2508 = getelementptr inbounds %struct.EState, %struct.EState* %2507, i32 0, i32 37
  %2509 = load i32, i32* %10, align 4
  %2510 = sext i32 %2509 to i64
  %2511 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2508, i64 0, i64 %2510
  %2512 = load i16*, i16** %22, align 8
  %2513 = load i32, i32* %7, align 4
  %2514 = add nsw i32 %2513, 21
  %2515 = sext i32 %2514 to i64
  %2516 = getelementptr inbounds i16, i16* %2512, i64 %2515
  %2517 = load i16, i16* %2516, align 2
  %2518 = zext i16 %2517 to i64
  %2519 = getelementptr inbounds [258 x i32], [258 x i32]* %2511, i64 0, i64 %2518
  %2520 = load i32, i32* %2519, align 4
  %2521 = add nsw i32 %2520, 1
  store i32 %2521, i32* %2519, align 4
  %2522 = load %struct.EState*, %struct.EState** %2, align 8
  %2523 = getelementptr inbounds %struct.EState, %struct.EState* %2522, i32 0, i32 37
  %2524 = load i32, i32* %10, align 4
  %2525 = sext i32 %2524 to i64
  %2526 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2523, i64 0, i64 %2525
  %2527 = load i16*, i16** %22, align 8
  %2528 = load i32, i32* %7, align 4
  %2529 = add nsw i32 %2528, 22
  %2530 = sext i32 %2529 to i64
  %2531 = getelementptr inbounds i16, i16* %2527, i64 %2530
  %2532 = load i16, i16* %2531, align 2
  %2533 = zext i16 %2532 to i64
  %2534 = getelementptr inbounds [258 x i32], [258 x i32]* %2526, i64 0, i64 %2533
  %2535 = load i32, i32* %2534, align 4
  %2536 = add nsw i32 %2535, 1
  store i32 %2536, i32* %2534, align 4
  %2537 = load %struct.EState*, %struct.EState** %2, align 8
  %2538 = getelementptr inbounds %struct.EState, %struct.EState* %2537, i32 0, i32 37
  %2539 = load i32, i32* %10, align 4
  %2540 = sext i32 %2539 to i64
  %2541 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2538, i64 0, i64 %2540
  %2542 = load i16*, i16** %22, align 8
  %2543 = load i32, i32* %7, align 4
  %2544 = add nsw i32 %2543, 23
  %2545 = sext i32 %2544 to i64
  %2546 = getelementptr inbounds i16, i16* %2542, i64 %2545
  %2547 = load i16, i16* %2546, align 2
  %2548 = zext i16 %2547 to i64
  %2549 = getelementptr inbounds [258 x i32], [258 x i32]* %2541, i64 0, i64 %2548
  %2550 = load i32, i32* %2549, align 4
  %2551 = add nsw i32 %2550, 1
  store i32 %2551, i32* %2549, align 4
  %2552 = load %struct.EState*, %struct.EState** %2, align 8
  %2553 = getelementptr inbounds %struct.EState, %struct.EState* %2552, i32 0, i32 37
  %2554 = load i32, i32* %10, align 4
  %2555 = sext i32 %2554 to i64
  %2556 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2553, i64 0, i64 %2555
  %2557 = load i16*, i16** %22, align 8
  %2558 = load i32, i32* %7, align 4
  %2559 = add nsw i32 %2558, 24
  %2560 = sext i32 %2559 to i64
  %2561 = getelementptr inbounds i16, i16* %2557, i64 %2560
  %2562 = load i16, i16* %2561, align 2
  %2563 = zext i16 %2562 to i64
  %2564 = getelementptr inbounds [258 x i32], [258 x i32]* %2556, i64 0, i64 %2563
  %2565 = load i32, i32* %2564, align 4
  %2566 = add nsw i32 %2565, 1
  store i32 %2566, i32* %2564, align 4
  %2567 = load %struct.EState*, %struct.EState** %2, align 8
  %2568 = getelementptr inbounds %struct.EState, %struct.EState* %2567, i32 0, i32 37
  %2569 = load i32, i32* %10, align 4
  %2570 = sext i32 %2569 to i64
  %2571 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2568, i64 0, i64 %2570
  %2572 = load i16*, i16** %22, align 8
  %2573 = load i32, i32* %7, align 4
  %2574 = add nsw i32 %2573, 25
  %2575 = sext i32 %2574 to i64
  %2576 = getelementptr inbounds i16, i16* %2572, i64 %2575
  %2577 = load i16, i16* %2576, align 2
  %2578 = zext i16 %2577 to i64
  %2579 = getelementptr inbounds [258 x i32], [258 x i32]* %2571, i64 0, i64 %2578
  %2580 = load i32, i32* %2579, align 4
  %2581 = add nsw i32 %2580, 1
  store i32 %2581, i32* %2579, align 4
  %2582 = load %struct.EState*, %struct.EState** %2, align 8
  %2583 = getelementptr inbounds %struct.EState, %struct.EState* %2582, i32 0, i32 37
  %2584 = load i32, i32* %10, align 4
  %2585 = sext i32 %2584 to i64
  %2586 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2583, i64 0, i64 %2585
  %2587 = load i16*, i16** %22, align 8
  %2588 = load i32, i32* %7, align 4
  %2589 = add nsw i32 %2588, 26
  %2590 = sext i32 %2589 to i64
  %2591 = getelementptr inbounds i16, i16* %2587, i64 %2590
  %2592 = load i16, i16* %2591, align 2
  %2593 = zext i16 %2592 to i64
  %2594 = getelementptr inbounds [258 x i32], [258 x i32]* %2586, i64 0, i64 %2593
  %2595 = load i32, i32* %2594, align 4
  %2596 = add nsw i32 %2595, 1
  store i32 %2596, i32* %2594, align 4
  %2597 = load %struct.EState*, %struct.EState** %2, align 8
  %2598 = getelementptr inbounds %struct.EState, %struct.EState* %2597, i32 0, i32 37
  %2599 = load i32, i32* %10, align 4
  %2600 = sext i32 %2599 to i64
  %2601 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2598, i64 0, i64 %2600
  %2602 = load i16*, i16** %22, align 8
  %2603 = load i32, i32* %7, align 4
  %2604 = add nsw i32 %2603, 27
  %2605 = sext i32 %2604 to i64
  %2606 = getelementptr inbounds i16, i16* %2602, i64 %2605
  %2607 = load i16, i16* %2606, align 2
  %2608 = zext i16 %2607 to i64
  %2609 = getelementptr inbounds [258 x i32], [258 x i32]* %2601, i64 0, i64 %2608
  %2610 = load i32, i32* %2609, align 4
  %2611 = add nsw i32 %2610, 1
  store i32 %2611, i32* %2609, align 4
  %2612 = load %struct.EState*, %struct.EState** %2, align 8
  %2613 = getelementptr inbounds %struct.EState, %struct.EState* %2612, i32 0, i32 37
  %2614 = load i32, i32* %10, align 4
  %2615 = sext i32 %2614 to i64
  %2616 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2613, i64 0, i64 %2615
  %2617 = load i16*, i16** %22, align 8
  %2618 = load i32, i32* %7, align 4
  %2619 = add nsw i32 %2618, 28
  %2620 = sext i32 %2619 to i64
  %2621 = getelementptr inbounds i16, i16* %2617, i64 %2620
  %2622 = load i16, i16* %2621, align 2
  %2623 = zext i16 %2622 to i64
  %2624 = getelementptr inbounds [258 x i32], [258 x i32]* %2616, i64 0, i64 %2623
  %2625 = load i32, i32* %2624, align 4
  %2626 = add nsw i32 %2625, 1
  store i32 %2626, i32* %2624, align 4
  %2627 = load %struct.EState*, %struct.EState** %2, align 8
  %2628 = getelementptr inbounds %struct.EState, %struct.EState* %2627, i32 0, i32 37
  %2629 = load i32, i32* %10, align 4
  %2630 = sext i32 %2629 to i64
  %2631 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2628, i64 0, i64 %2630
  %2632 = load i16*, i16** %22, align 8
  %2633 = load i32, i32* %7, align 4
  %2634 = add nsw i32 %2633, 29
  %2635 = sext i32 %2634 to i64
  %2636 = getelementptr inbounds i16, i16* %2632, i64 %2635
  %2637 = load i16, i16* %2636, align 2
  %2638 = zext i16 %2637 to i64
  %2639 = getelementptr inbounds [258 x i32], [258 x i32]* %2631, i64 0, i64 %2638
  %2640 = load i32, i32* %2639, align 4
  %2641 = add nsw i32 %2640, 1
  store i32 %2641, i32* %2639, align 4
  %2642 = load %struct.EState*, %struct.EState** %2, align 8
  %2643 = getelementptr inbounds %struct.EState, %struct.EState* %2642, i32 0, i32 37
  %2644 = load i32, i32* %10, align 4
  %2645 = sext i32 %2644 to i64
  %2646 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2643, i64 0, i64 %2645
  %2647 = load i16*, i16** %22, align 8
  %2648 = load i32, i32* %7, align 4
  %2649 = add nsw i32 %2648, 30
  %2650 = sext i32 %2649 to i64
  %2651 = getelementptr inbounds i16, i16* %2647, i64 %2650
  %2652 = load i16, i16* %2651, align 2
  %2653 = zext i16 %2652 to i64
  %2654 = getelementptr inbounds [258 x i32], [258 x i32]* %2646, i64 0, i64 %2653
  %2655 = load i32, i32* %2654, align 4
  %2656 = add nsw i32 %2655, 1
  store i32 %2656, i32* %2654, align 4
  %2657 = load %struct.EState*, %struct.EState** %2, align 8
  %2658 = getelementptr inbounds %struct.EState, %struct.EState* %2657, i32 0, i32 37
  %2659 = load i32, i32* %10, align 4
  %2660 = sext i32 %2659 to i64
  %2661 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2658, i64 0, i64 %2660
  %2662 = load i16*, i16** %22, align 8
  %2663 = load i32, i32* %7, align 4
  %2664 = add nsw i32 %2663, 31
  %2665 = sext i32 %2664 to i64
  %2666 = getelementptr inbounds i16, i16* %2662, i64 %2665
  %2667 = load i16, i16* %2666, align 2
  %2668 = zext i16 %2667 to i64
  %2669 = getelementptr inbounds [258 x i32], [258 x i32]* %2661, i64 0, i64 %2668
  %2670 = load i32, i32* %2669, align 4
  %2671 = add nsw i32 %2670, 1
  store i32 %2671, i32* %2669, align 4
  %2672 = load %struct.EState*, %struct.EState** %2, align 8
  %2673 = getelementptr inbounds %struct.EState, %struct.EState* %2672, i32 0, i32 37
  %2674 = load i32, i32* %10, align 4
  %2675 = sext i32 %2674 to i64
  %2676 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2673, i64 0, i64 %2675
  %2677 = load i16*, i16** %22, align 8
  %2678 = load i32, i32* %7, align 4
  %2679 = add nsw i32 %2678, 32
  %2680 = sext i32 %2679 to i64
  %2681 = getelementptr inbounds i16, i16* %2677, i64 %2680
  %2682 = load i16, i16* %2681, align 2
  %2683 = zext i16 %2682 to i64
  %2684 = getelementptr inbounds [258 x i32], [258 x i32]* %2676, i64 0, i64 %2683
  %2685 = load i32, i32* %2684, align 4
  %2686 = add nsw i32 %2685, 1
  store i32 %2686, i32* %2684, align 4
  %2687 = load %struct.EState*, %struct.EState** %2, align 8
  %2688 = getelementptr inbounds %struct.EState, %struct.EState* %2687, i32 0, i32 37
  %2689 = load i32, i32* %10, align 4
  %2690 = sext i32 %2689 to i64
  %2691 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2688, i64 0, i64 %2690
  %2692 = load i16*, i16** %22, align 8
  %2693 = load i32, i32* %7, align 4
  %2694 = add nsw i32 %2693, 33
  %2695 = sext i32 %2694 to i64
  %2696 = getelementptr inbounds i16, i16* %2692, i64 %2695
  %2697 = load i16, i16* %2696, align 2
  %2698 = zext i16 %2697 to i64
  %2699 = getelementptr inbounds [258 x i32], [258 x i32]* %2691, i64 0, i64 %2698
  %2700 = load i32, i32* %2699, align 4
  %2701 = add nsw i32 %2700, 1
  store i32 %2701, i32* %2699, align 4
  %2702 = load %struct.EState*, %struct.EState** %2, align 8
  %2703 = getelementptr inbounds %struct.EState, %struct.EState* %2702, i32 0, i32 37
  %2704 = load i32, i32* %10, align 4
  %2705 = sext i32 %2704 to i64
  %2706 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2703, i64 0, i64 %2705
  %2707 = load i16*, i16** %22, align 8
  %2708 = load i32, i32* %7, align 4
  %2709 = add nsw i32 %2708, 34
  %2710 = sext i32 %2709 to i64
  %2711 = getelementptr inbounds i16, i16* %2707, i64 %2710
  %2712 = load i16, i16* %2711, align 2
  %2713 = zext i16 %2712 to i64
  %2714 = getelementptr inbounds [258 x i32], [258 x i32]* %2706, i64 0, i64 %2713
  %2715 = load i32, i32* %2714, align 4
  %2716 = add nsw i32 %2715, 1
  store i32 %2716, i32* %2714, align 4
  %2717 = load %struct.EState*, %struct.EState** %2, align 8
  %2718 = getelementptr inbounds %struct.EState, %struct.EState* %2717, i32 0, i32 37
  %2719 = load i32, i32* %10, align 4
  %2720 = sext i32 %2719 to i64
  %2721 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2718, i64 0, i64 %2720
  %2722 = load i16*, i16** %22, align 8
  %2723 = load i32, i32* %7, align 4
  %2724 = add nsw i32 %2723, 35
  %2725 = sext i32 %2724 to i64
  %2726 = getelementptr inbounds i16, i16* %2722, i64 %2725
  %2727 = load i16, i16* %2726, align 2
  %2728 = zext i16 %2727 to i64
  %2729 = getelementptr inbounds [258 x i32], [258 x i32]* %2721, i64 0, i64 %2728
  %2730 = load i32, i32* %2729, align 4
  %2731 = add nsw i32 %2730, 1
  store i32 %2731, i32* %2729, align 4
  %2732 = load %struct.EState*, %struct.EState** %2, align 8
  %2733 = getelementptr inbounds %struct.EState, %struct.EState* %2732, i32 0, i32 37
  %2734 = load i32, i32* %10, align 4
  %2735 = sext i32 %2734 to i64
  %2736 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2733, i64 0, i64 %2735
  %2737 = load i16*, i16** %22, align 8
  %2738 = load i32, i32* %7, align 4
  %2739 = add nsw i32 %2738, 36
  %2740 = sext i32 %2739 to i64
  %2741 = getelementptr inbounds i16, i16* %2737, i64 %2740
  %2742 = load i16, i16* %2741, align 2
  %2743 = zext i16 %2742 to i64
  %2744 = getelementptr inbounds [258 x i32], [258 x i32]* %2736, i64 0, i64 %2743
  %2745 = load i32, i32* %2744, align 4
  %2746 = add nsw i32 %2745, 1
  store i32 %2746, i32* %2744, align 4
  %2747 = load %struct.EState*, %struct.EState** %2, align 8
  %2748 = getelementptr inbounds %struct.EState, %struct.EState* %2747, i32 0, i32 37
  %2749 = load i32, i32* %10, align 4
  %2750 = sext i32 %2749 to i64
  %2751 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2748, i64 0, i64 %2750
  %2752 = load i16*, i16** %22, align 8
  %2753 = load i32, i32* %7, align 4
  %2754 = add nsw i32 %2753, 37
  %2755 = sext i32 %2754 to i64
  %2756 = getelementptr inbounds i16, i16* %2752, i64 %2755
  %2757 = load i16, i16* %2756, align 2
  %2758 = zext i16 %2757 to i64
  %2759 = getelementptr inbounds [258 x i32], [258 x i32]* %2751, i64 0, i64 %2758
  %2760 = load i32, i32* %2759, align 4
  %2761 = add nsw i32 %2760, 1
  store i32 %2761, i32* %2759, align 4
  %2762 = load %struct.EState*, %struct.EState** %2, align 8
  %2763 = getelementptr inbounds %struct.EState, %struct.EState* %2762, i32 0, i32 37
  %2764 = load i32, i32* %10, align 4
  %2765 = sext i32 %2764 to i64
  %2766 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2763, i64 0, i64 %2765
  %2767 = load i16*, i16** %22, align 8
  %2768 = load i32, i32* %7, align 4
  %2769 = add nsw i32 %2768, 38
  %2770 = sext i32 %2769 to i64
  %2771 = getelementptr inbounds i16, i16* %2767, i64 %2770
  %2772 = load i16, i16* %2771, align 2
  %2773 = zext i16 %2772 to i64
  %2774 = getelementptr inbounds [258 x i32], [258 x i32]* %2766, i64 0, i64 %2773
  %2775 = load i32, i32* %2774, align 4
  %2776 = add nsw i32 %2775, 1
  store i32 %2776, i32* %2774, align 4
  %2777 = load %struct.EState*, %struct.EState** %2, align 8
  %2778 = getelementptr inbounds %struct.EState, %struct.EState* %2777, i32 0, i32 37
  %2779 = load i32, i32* %10, align 4
  %2780 = sext i32 %2779 to i64
  %2781 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2778, i64 0, i64 %2780
  %2782 = load i16*, i16** %22, align 8
  %2783 = load i32, i32* %7, align 4
  %2784 = add nsw i32 %2783, 39
  %2785 = sext i32 %2784 to i64
  %2786 = getelementptr inbounds i16, i16* %2782, i64 %2785
  %2787 = load i16, i16* %2786, align 2
  %2788 = zext i16 %2787 to i64
  %2789 = getelementptr inbounds [258 x i32], [258 x i32]* %2781, i64 0, i64 %2788
  %2790 = load i32, i32* %2789, align 4
  %2791 = add nsw i32 %2790, 1
  store i32 %2791, i32* %2789, align 4
  %2792 = load %struct.EState*, %struct.EState** %2, align 8
  %2793 = getelementptr inbounds %struct.EState, %struct.EState* %2792, i32 0, i32 37
  %2794 = load i32, i32* %10, align 4
  %2795 = sext i32 %2794 to i64
  %2796 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2793, i64 0, i64 %2795
  %2797 = load i16*, i16** %22, align 8
  %2798 = load i32, i32* %7, align 4
  %2799 = add nsw i32 %2798, 40
  %2800 = sext i32 %2799 to i64
  %2801 = getelementptr inbounds i16, i16* %2797, i64 %2800
  %2802 = load i16, i16* %2801, align 2
  %2803 = zext i16 %2802 to i64
  %2804 = getelementptr inbounds [258 x i32], [258 x i32]* %2796, i64 0, i64 %2803
  %2805 = load i32, i32* %2804, align 4
  %2806 = add nsw i32 %2805, 1
  store i32 %2806, i32* %2804, align 4
  %2807 = load %struct.EState*, %struct.EState** %2, align 8
  %2808 = getelementptr inbounds %struct.EState, %struct.EState* %2807, i32 0, i32 37
  %2809 = load i32, i32* %10, align 4
  %2810 = sext i32 %2809 to i64
  %2811 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2808, i64 0, i64 %2810
  %2812 = load i16*, i16** %22, align 8
  %2813 = load i32, i32* %7, align 4
  %2814 = add nsw i32 %2813, 41
  %2815 = sext i32 %2814 to i64
  %2816 = getelementptr inbounds i16, i16* %2812, i64 %2815
  %2817 = load i16, i16* %2816, align 2
  %2818 = zext i16 %2817 to i64
  %2819 = getelementptr inbounds [258 x i32], [258 x i32]* %2811, i64 0, i64 %2818
  %2820 = load i32, i32* %2819, align 4
  %2821 = add nsw i32 %2820, 1
  store i32 %2821, i32* %2819, align 4
  %2822 = load %struct.EState*, %struct.EState** %2, align 8
  %2823 = getelementptr inbounds %struct.EState, %struct.EState* %2822, i32 0, i32 37
  %2824 = load i32, i32* %10, align 4
  %2825 = sext i32 %2824 to i64
  %2826 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2823, i64 0, i64 %2825
  %2827 = load i16*, i16** %22, align 8
  %2828 = load i32, i32* %7, align 4
  %2829 = add nsw i32 %2828, 42
  %2830 = sext i32 %2829 to i64
  %2831 = getelementptr inbounds i16, i16* %2827, i64 %2830
  %2832 = load i16, i16* %2831, align 2
  %2833 = zext i16 %2832 to i64
  %2834 = getelementptr inbounds [258 x i32], [258 x i32]* %2826, i64 0, i64 %2833
  %2835 = load i32, i32* %2834, align 4
  %2836 = add nsw i32 %2835, 1
  store i32 %2836, i32* %2834, align 4
  %2837 = load %struct.EState*, %struct.EState** %2, align 8
  %2838 = getelementptr inbounds %struct.EState, %struct.EState* %2837, i32 0, i32 37
  %2839 = load i32, i32* %10, align 4
  %2840 = sext i32 %2839 to i64
  %2841 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2838, i64 0, i64 %2840
  %2842 = load i16*, i16** %22, align 8
  %2843 = load i32, i32* %7, align 4
  %2844 = add nsw i32 %2843, 43
  %2845 = sext i32 %2844 to i64
  %2846 = getelementptr inbounds i16, i16* %2842, i64 %2845
  %2847 = load i16, i16* %2846, align 2
  %2848 = zext i16 %2847 to i64
  %2849 = getelementptr inbounds [258 x i32], [258 x i32]* %2841, i64 0, i64 %2848
  %2850 = load i32, i32* %2849, align 4
  %2851 = add nsw i32 %2850, 1
  store i32 %2851, i32* %2849, align 4
  %2852 = load %struct.EState*, %struct.EState** %2, align 8
  %2853 = getelementptr inbounds %struct.EState, %struct.EState* %2852, i32 0, i32 37
  %2854 = load i32, i32* %10, align 4
  %2855 = sext i32 %2854 to i64
  %2856 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2853, i64 0, i64 %2855
  %2857 = load i16*, i16** %22, align 8
  %2858 = load i32, i32* %7, align 4
  %2859 = add nsw i32 %2858, 44
  %2860 = sext i32 %2859 to i64
  %2861 = getelementptr inbounds i16, i16* %2857, i64 %2860
  %2862 = load i16, i16* %2861, align 2
  %2863 = zext i16 %2862 to i64
  %2864 = getelementptr inbounds [258 x i32], [258 x i32]* %2856, i64 0, i64 %2863
  %2865 = load i32, i32* %2864, align 4
  %2866 = add nsw i32 %2865, 1
  store i32 %2866, i32* %2864, align 4
  %2867 = load %struct.EState*, %struct.EState** %2, align 8
  %2868 = getelementptr inbounds %struct.EState, %struct.EState* %2867, i32 0, i32 37
  %2869 = load i32, i32* %10, align 4
  %2870 = sext i32 %2869 to i64
  %2871 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2868, i64 0, i64 %2870
  %2872 = load i16*, i16** %22, align 8
  %2873 = load i32, i32* %7, align 4
  %2874 = add nsw i32 %2873, 45
  %2875 = sext i32 %2874 to i64
  %2876 = getelementptr inbounds i16, i16* %2872, i64 %2875
  %2877 = load i16, i16* %2876, align 2
  %2878 = zext i16 %2877 to i64
  %2879 = getelementptr inbounds [258 x i32], [258 x i32]* %2871, i64 0, i64 %2878
  %2880 = load i32, i32* %2879, align 4
  %2881 = add nsw i32 %2880, 1
  store i32 %2881, i32* %2879, align 4
  %2882 = load %struct.EState*, %struct.EState** %2, align 8
  %2883 = getelementptr inbounds %struct.EState, %struct.EState* %2882, i32 0, i32 37
  %2884 = load i32, i32* %10, align 4
  %2885 = sext i32 %2884 to i64
  %2886 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2883, i64 0, i64 %2885
  %2887 = load i16*, i16** %22, align 8
  %2888 = load i32, i32* %7, align 4
  %2889 = add nsw i32 %2888, 46
  %2890 = sext i32 %2889 to i64
  %2891 = getelementptr inbounds i16, i16* %2887, i64 %2890
  %2892 = load i16, i16* %2891, align 2
  %2893 = zext i16 %2892 to i64
  %2894 = getelementptr inbounds [258 x i32], [258 x i32]* %2886, i64 0, i64 %2893
  %2895 = load i32, i32* %2894, align 4
  %2896 = add nsw i32 %2895, 1
  store i32 %2896, i32* %2894, align 4
  %2897 = load %struct.EState*, %struct.EState** %2, align 8
  %2898 = getelementptr inbounds %struct.EState, %struct.EState* %2897, i32 0, i32 37
  %2899 = load i32, i32* %10, align 4
  %2900 = sext i32 %2899 to i64
  %2901 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2898, i64 0, i64 %2900
  %2902 = load i16*, i16** %22, align 8
  %2903 = load i32, i32* %7, align 4
  %2904 = add nsw i32 %2903, 47
  %2905 = sext i32 %2904 to i64
  %2906 = getelementptr inbounds i16, i16* %2902, i64 %2905
  %2907 = load i16, i16* %2906, align 2
  %2908 = zext i16 %2907 to i64
  %2909 = getelementptr inbounds [258 x i32], [258 x i32]* %2901, i64 0, i64 %2908
  %2910 = load i32, i32* %2909, align 4
  %2911 = add nsw i32 %2910, 1
  store i32 %2911, i32* %2909, align 4
  %2912 = load %struct.EState*, %struct.EState** %2, align 8
  %2913 = getelementptr inbounds %struct.EState, %struct.EState* %2912, i32 0, i32 37
  %2914 = load i32, i32* %10, align 4
  %2915 = sext i32 %2914 to i64
  %2916 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2913, i64 0, i64 %2915
  %2917 = load i16*, i16** %22, align 8
  %2918 = load i32, i32* %7, align 4
  %2919 = add nsw i32 %2918, 48
  %2920 = sext i32 %2919 to i64
  %2921 = getelementptr inbounds i16, i16* %2917, i64 %2920
  %2922 = load i16, i16* %2921, align 2
  %2923 = zext i16 %2922 to i64
  %2924 = getelementptr inbounds [258 x i32], [258 x i32]* %2916, i64 0, i64 %2923
  %2925 = load i32, i32* %2924, align 4
  %2926 = add nsw i32 %2925, 1
  store i32 %2926, i32* %2924, align 4
  %2927 = load %struct.EState*, %struct.EState** %2, align 8
  %2928 = getelementptr inbounds %struct.EState, %struct.EState* %2927, i32 0, i32 37
  %2929 = load i32, i32* %10, align 4
  %2930 = sext i32 %2929 to i64
  %2931 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2928, i64 0, i64 %2930
  %2932 = load i16*, i16** %22, align 8
  %2933 = load i32, i32* %7, align 4
  %2934 = add nsw i32 %2933, 49
  %2935 = sext i32 %2934 to i64
  %2936 = getelementptr inbounds i16, i16* %2932, i64 %2935
  %2937 = load i16, i16* %2936, align 2
  %2938 = zext i16 %2937 to i64
  %2939 = getelementptr inbounds [258 x i32], [258 x i32]* %2931, i64 0, i64 %2938
  %2940 = load i32, i32* %2939, align 4
  %2941 = add nsw i32 %2940, 1
  store i32 %2941, i32* %2939, align 4
  br label %2967

2942:                                             ; preds = %2185, %2165
  %2943 = load i32, i32* %7, align 4
  store i32 %2943, i32* %5, align 4
  br label %2944

2944:                                             ; preds = %2963, %2942
  %2945 = load i32, i32* %5, align 4
  %2946 = load i32, i32* %8, align 4
  %2947 = icmp sle i32 %2945, %2946
  br i1 %2947, label %2948, label %2966

2948:                                             ; preds = %2944
  %2949 = load %struct.EState*, %struct.EState** %2, align 8
  %2950 = getelementptr inbounds %struct.EState, %struct.EState* %2949, i32 0, i32 37
  %2951 = load i32, i32* %10, align 4
  %2952 = sext i32 %2951 to i64
  %2953 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2950, i64 0, i64 %2952
  %2954 = load i16*, i16** %22, align 8
  %2955 = load i32, i32* %5, align 4
  %2956 = sext i32 %2955 to i64
  %2957 = getelementptr inbounds i16, i16* %2954, i64 %2956
  %2958 = load i16, i16* %2957, align 2
  %2959 = zext i16 %2958 to i64
  %2960 = getelementptr inbounds [258 x i32], [258 x i32]* %2953, i64 0, i64 %2959
  %2961 = load i32, i32* %2960, align 4
  %2962 = add nsw i32 %2961, 1
  store i32 %2962, i32* %2960, align 4
  br label %2963

2963:                                             ; preds = %2948
  %2964 = load i32, i32* %5, align 4
  %2965 = add nsw i32 %2964, 1
  store i32 %2965, i32* %5, align 4
  br label %2944

2966:                                             ; preds = %2944
  br label %2967

2967:                                             ; preds = %2966, %2191
  %2968 = load i32, i32* %8, align 4
  %2969 = add nsw i32 %2968, 1
  store i32 %2969, i32* %7, align 4
  br label %382

2970:                                             ; preds = %388
  %2971 = load %struct.EState*, %struct.EState** %2, align 8
  %2972 = getelementptr inbounds %struct.EState, %struct.EState* %2971, i32 0, i32 28
  %2973 = load i32, i32* %2972, align 8
  %2974 = icmp sge i32 %2973, 3
  br i1 %2974, label %2975, label %2999

2975:                                             ; preds = %2970
  %2976 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2977 = load i32, i32* %12, align 4
  %2978 = add nsw i32 %2977, 1
  %2979 = load i32, i32* %9, align 4
  %2980 = sdiv i32 %2979, 8
  %2981 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2976, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.57, i64 0, i64 0), i32 %2978, i32 %2980)
  store i32 0, i32* %4, align 4
  br label %2982

2982:                                             ; preds = %2993, %2975
  %2983 = load i32, i32* %4, align 4
  %2984 = load i32, i32* %18, align 4
  %2985 = icmp slt i32 %2983, %2984
  br i1 %2985, label %2986, label %2996

2986:                                             ; preds = %2982
  %2987 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2988 = load i32, i32* %4, align 4
  %2989 = sext i32 %2988 to i64
  %2990 = getelementptr inbounds [6 x i32], [6 x i32]* %21, i64 0, i64 %2989
  %2991 = load i32, i32* %2990, align 4
  %2992 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2987, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.58, i64 0, i64 0), i32 %2991)
  br label %2993

2993:                                             ; preds = %2986
  %2994 = load i32, i32* %4, align 4
  %2995 = add nsw i32 %2994, 1
  store i32 %2995, i32* %4, align 4
  br label %2982

2996:                                             ; preds = %2982
  %2997 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2998 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2997, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i64 0, i64 0))
  br label %2999

2999:                                             ; preds = %2996, %2970
  store i32 0, i32* %4, align 4
  br label %3000

3000:                                             ; preds = %3018, %2999
  %3001 = load i32, i32* %4, align 4
  %3002 = load i32, i32* %18, align 4
  %3003 = icmp slt i32 %3001, %3002
  br i1 %3003, label %3004, label %3021

3004:                                             ; preds = %3000
  %3005 = load %struct.EState*, %struct.EState** %2, align 8
  %3006 = getelementptr inbounds %struct.EState, %struct.EState* %3005, i32 0, i32 35
  %3007 = load i32, i32* %4, align 4
  %3008 = sext i32 %3007 to i64
  %3009 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %3006, i64 0, i64 %3008
  %3010 = getelementptr inbounds [258 x i8], [258 x i8]* %3009, i64 0, i64 0
  %3011 = load %struct.EState*, %struct.EState** %2, align 8
  %3012 = getelementptr inbounds %struct.EState, %struct.EState* %3011, i32 0, i32 37
  %3013 = load i32, i32* %4, align 4
  %3014 = sext i32 %3013 to i64
  %3015 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %3012, i64 0, i64 %3014
  %3016 = getelementptr inbounds [258 x i32], [258 x i32]* %3015, i64 0, i64 0
  %3017 = load i32, i32* %14, align 4
  call void @BZ2_hbMakeCodeLengths(i8* %3010, i32* %3016, i32 %3017, i32 20)
  br label %3018

3018:                                             ; preds = %3004
  %3019 = load i32, i32* %4, align 4
  %3020 = add nsw i32 %3019, 1
  store i32 %3020, i32* %4, align 4
  br label %3000

3021:                                             ; preds = %3000
  br label %3022

3022:                                             ; preds = %3021
  %3023 = load i32, i32* %12, align 4
  %3024 = add nsw i32 %3023, 1
  store i32 %3024, i32* %12, align 4
  br label %255

3025:                                             ; preds = %255
  %3026 = load i32, i32* %18, align 4
  %3027 = icmp slt i32 %3026, 8
  br i1 %3027, label %3029, label %3028

3028:                                             ; preds = %3025
  call void @BZ2_bz__AssertH__fail(i32 3002)
  br label %3029

3029:                                             ; preds = %3028, %3025
  %3030 = load i32, i32* %13, align 4
  %3031 = icmp slt i32 %3030, 32768
  br i1 %3031, label %3032, label %3035

3032:                                             ; preds = %3029
  %3033 = load i32, i32* %13, align 4
  %3034 = icmp sle i32 %3033, 18002
  br i1 %3034, label %3036, label %3035

3035:                                             ; preds = %3032, %3029
  call void @BZ2_bz__AssertH__fail(i32 3003)
  br label %3036

3036:                                             ; preds = %3035, %3032
  store i32 0, i32* %5, align 4
  br label %3037

3037:                                             ; preds = %3047, %3036
  %3038 = load i32, i32* %5, align 4
  %3039 = load i32, i32* %18, align 4
  %3040 = icmp slt i32 %3038, %3039
  br i1 %3040, label %3041, label %3050

3041:                                             ; preds = %3037
  %3042 = load i32, i32* %5, align 4
  %3043 = trunc i32 %3042 to i8
  %3044 = load i32, i32* %5, align 4
  %3045 = sext i32 %3044 to i64
  %3046 = getelementptr inbounds [6 x i8], [6 x i8]* %32, i64 0, i64 %3045
  store i8 %3043, i8* %3046, align 1
  br label %3047

3047:                                             ; preds = %3041
  %3048 = load i32, i32* %5, align 4
  %3049 = add nsw i32 %3048, 1
  store i32 %3049, i32* %5, align 4
  br label %3037

3050:                                             ; preds = %3037
  store i32 0, i32* %5, align 4
  br label %3051

3051:                                             ; preds = %3094, %3050
  %3052 = load i32, i32* %5, align 4
  %3053 = load i32, i32* %13, align 4
  %3054 = icmp slt i32 %3052, %3053
  br i1 %3054, label %3055, label %3097

3055:                                             ; preds = %3051
  %3056 = load %struct.EState*, %struct.EState** %2, align 8
  %3057 = getelementptr inbounds %struct.EState, %struct.EState* %3056, i32 0, i32 33
  %3058 = load i32, i32* %5, align 4
  %3059 = sext i32 %3058 to i64
  %3060 = getelementptr inbounds [18002 x i8], [18002 x i8]* %3057, i64 0, i64 %3059
  %3061 = load i8, i8* %3060, align 1
  store i8 %3061, i8* %33, align 1
  store i32 0, i32* %6, align 4
  %3062 = load i32, i32* %6, align 4
  %3063 = sext i32 %3062 to i64
  %3064 = getelementptr inbounds [6 x i8], [6 x i8]* %32, i64 0, i64 %3063
  %3065 = load i8, i8* %3064, align 1
  store i8 %3065, i8* %35, align 1
  br label %3066

3066:                                             ; preds = %3072, %3055
  %3067 = load i8, i8* %33, align 1
  %3068 = zext i8 %3067 to i32
  %3069 = load i8, i8* %35, align 1
  %3070 = zext i8 %3069 to i32
  %3071 = icmp ne i32 %3068, %3070
  br i1 %3071, label %3072, label %3084

3072:                                             ; preds = %3066
  %3073 = load i32, i32* %6, align 4
  %3074 = add nsw i32 %3073, 1
  store i32 %3074, i32* %6, align 4
  %3075 = load i8, i8* %35, align 1
  store i8 %3075, i8* %34, align 1
  %3076 = load i32, i32* %6, align 4
  %3077 = sext i32 %3076 to i64
  %3078 = getelementptr inbounds [6 x i8], [6 x i8]* %32, i64 0, i64 %3077
  %3079 = load i8, i8* %3078, align 1
  store i8 %3079, i8* %35, align 1
  %3080 = load i8, i8* %34, align 1
  %3081 = load i32, i32* %6, align 4
  %3082 = sext i32 %3081 to i64
  %3083 = getelementptr inbounds [6 x i8], [6 x i8]* %32, i64 0, i64 %3082
  store i8 %3080, i8* %3083, align 1
  br label %3066

3084:                                             ; preds = %3066
  %3085 = load i8, i8* %35, align 1
  %3086 = getelementptr inbounds [6 x i8], [6 x i8]* %32, i64 0, i64 0
  store i8 %3085, i8* %3086, align 1
  %3087 = load i32, i32* %6, align 4
  %3088 = trunc i32 %3087 to i8
  %3089 = load %struct.EState*, %struct.EState** %2, align 8
  %3090 = getelementptr inbounds %struct.EState, %struct.EState* %3089, i32 0, i32 34
  %3091 = load i32, i32* %5, align 4
  %3092 = sext i32 %3091 to i64
  %3093 = getelementptr inbounds [18002 x i8], [18002 x i8]* %3090, i64 0, i64 %3092
  store i8 %3088, i8* %3093, align 1
  br label %3094

3094:                                             ; preds = %3084
  %3095 = load i32, i32* %5, align 4
  %3096 = add nsw i32 %3095, 1
  store i32 %3096, i32* %5, align 4
  br label %3051

3097:                                             ; preds = %3051
  store i32 0, i32* %4, align 4
  br label %3098

3098:                                             ; preds = %3183, %3097
  %3099 = load i32, i32* %4, align 4
  %3100 = load i32, i32* %18, align 4
  %3101 = icmp slt i32 %3099, %3100
  br i1 %3101, label %3102, label %3186

3102:                                             ; preds = %3098
  store i32 32, i32* %15, align 4
  store i32 0, i32* %16, align 4
  store i32 0, i32* %5, align 4
  br label %3103

3103:                                             ; preds = %3156, %3102
  %3104 = load i32, i32* %5, align 4
  %3105 = load i32, i32* %14, align 4
  %3106 = icmp slt i32 %3104, %3105
  br i1 %3106, label %3107, label %3159

3107:                                             ; preds = %3103
  %3108 = load %struct.EState*, %struct.EState** %2, align 8
  %3109 = getelementptr inbounds %struct.EState, %struct.EState* %3108, i32 0, i32 35
  %3110 = load i32, i32* %4, align 4
  %3111 = sext i32 %3110 to i64
  %3112 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %3109, i64 0, i64 %3111
  %3113 = load i32, i32* %5, align 4
  %3114 = sext i32 %3113 to i64
  %3115 = getelementptr inbounds [258 x i8], [258 x i8]* %3112, i64 0, i64 %3114
  %3116 = load i8, i8* %3115, align 1
  %3117 = zext i8 %3116 to i32
  %3118 = load i32, i32* %16, align 4
  %3119 = icmp sgt i32 %3117, %3118
  br i1 %3119, label %3120, label %3131

3120:                                             ; preds = %3107
  %3121 = load %struct.EState*, %struct.EState** %2, align 8
  %3122 = getelementptr inbounds %struct.EState, %struct.EState* %3121, i32 0, i32 35
  %3123 = load i32, i32* %4, align 4
  %3124 = sext i32 %3123 to i64
  %3125 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %3122, i64 0, i64 %3124
  %3126 = load i32, i32* %5, align 4
  %3127 = sext i32 %3126 to i64
  %3128 = getelementptr inbounds [258 x i8], [258 x i8]* %3125, i64 0, i64 %3127
  %3129 = load i8, i8* %3128, align 1
  %3130 = zext i8 %3129 to i32
  store i32 %3130, i32* %16, align 4
  br label %3131

3131:                                             ; preds = %3120, %3107
  %3132 = load %struct.EState*, %struct.EState** %2, align 8
  %3133 = getelementptr inbounds %struct.EState, %struct.EState* %3132, i32 0, i32 35
  %3134 = load i32, i32* %4, align 4
  %3135 = sext i32 %3134 to i64
  %3136 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %3133, i64 0, i64 %3135
  %3137 = load i32, i32* %5, align 4
  %3138 = sext i32 %3137 to i64
  %3139 = getelementptr inbounds [258 x i8], [258 x i8]* %3136, i64 0, i64 %3138
  %3140 = load i8, i8* %3139, align 1
  %3141 = zext i8 %3140 to i32
  %3142 = load i32, i32* %15, align 4
  %3143 = icmp slt i32 %3141, %3142
  br i1 %3143, label %3144, label %3155

3144:                                             ; preds = %3131
  %3145 = load %struct.EState*, %struct.EState** %2, align 8
  %3146 = getelementptr inbounds %struct.EState, %struct.EState* %3145, i32 0, i32 35
  %3147 = load i32, i32* %4, align 4
  %3148 = sext i32 %3147 to i64
  %3149 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %3146, i64 0, i64 %3148
  %3150 = load i32, i32* %5, align 4
  %3151 = sext i32 %3150 to i64
  %3152 = getelementptr inbounds [258 x i8], [258 x i8]* %3149, i64 0, i64 %3151
  %3153 = load i8, i8* %3152, align 1
  %3154 = zext i8 %3153 to i32
  store i32 %3154, i32* %15, align 4
  br label %3155

3155:                                             ; preds = %3144, %3131
  br label %3156

3156:                                             ; preds = %3155
  %3157 = load i32, i32* %5, align 4
  %3158 = add nsw i32 %3157, 1
  store i32 %3158, i32* %5, align 4
  br label %3103

3159:                                             ; preds = %3103
  %3160 = load i32, i32* %16, align 4
  %3161 = icmp sgt i32 %3160, 20
  br i1 %3161, label %3162, label %3163

3162:                                             ; preds = %3159
  call void @BZ2_bz__AssertH__fail(i32 3004)
  br label %3163

3163:                                             ; preds = %3162, %3159
  %3164 = load i32, i32* %15, align 4
  %3165 = icmp slt i32 %3164, 1
  br i1 %3165, label %3166, label %3167

3166:                                             ; preds = %3163
  call void @BZ2_bz__AssertH__fail(i32 3005)
  br label %3167

3167:                                             ; preds = %3166, %3163
  %3168 = load %struct.EState*, %struct.EState** %2, align 8
  %3169 = getelementptr inbounds %struct.EState, %struct.EState* %3168, i32 0, i32 36
  %3170 = load i32, i32* %4, align 4
  %3171 = sext i32 %3170 to i64
  %3172 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %3169, i64 0, i64 %3171
  %3173 = getelementptr inbounds [258 x i32], [258 x i32]* %3172, i64 0, i64 0
  %3174 = load %struct.EState*, %struct.EState** %2, align 8
  %3175 = getelementptr inbounds %struct.EState, %struct.EState* %3174, i32 0, i32 35
  %3176 = load i32, i32* %4, align 4
  %3177 = sext i32 %3176 to i64
  %3178 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %3175, i64 0, i64 %3177
  %3179 = getelementptr inbounds [258 x i8], [258 x i8]* %3178, i64 0, i64 0
  %3180 = load i32, i32* %15, align 4
  %3181 = load i32, i32* %16, align 4
  %3182 = load i32, i32* %14, align 4
  call void @BZ2_hbAssignCodes(i32* %3173, i8* %3179, i32 %3180, i32 %3181, i32 %3182)
  br label %3183

3183:                                             ; preds = %3167
  %3184 = load i32, i32* %4, align 4
  %3185 = add nsw i32 %3184, 1
  store i32 %3185, i32* %4, align 4
  br label %3098

3186:                                             ; preds = %3098
  store i32 0, i32* %5, align 4
  br label %3187

3187:                                             ; preds = %3217, %3186
  %3188 = load i32, i32* %5, align 4
  %3189 = icmp slt i32 %3188, 16
  br i1 %3189, label %3190, label %3220

3190:                                             ; preds = %3187
  %3191 = load i32, i32* %5, align 4
  %3192 = sext i32 %3191 to i64
  %3193 = getelementptr inbounds [16 x i8], [16 x i8]* %36, i64 0, i64 %3192
  store i8 0, i8* %3193, align 1
  store i32 0, i32* %6, align 4
  br label %3194

3194:                                             ; preds = %3213, %3190
  %3195 = load i32, i32* %6, align 4
  %3196 = icmp slt i32 %3195, 16
  br i1 %3196, label %3197, label %3216

3197:                                             ; preds = %3194
  %3198 = load %struct.EState*, %struct.EState** %2, align 8
  %3199 = getelementptr inbounds %struct.EState, %struct.EState* %3198, i32 0, i32 22
  %3200 = load i32, i32* %5, align 4
  %3201 = mul nsw i32 %3200, 16
  %3202 = load i32, i32* %6, align 4
  %3203 = add nsw i32 %3201, %3202
  %3204 = sext i32 %3203 to i64
  %3205 = getelementptr inbounds [256 x i8], [256 x i8]* %3199, i64 0, i64 %3204
  %3206 = load i8, i8* %3205, align 1
  %3207 = icmp ne i8 %3206, 0
  br i1 %3207, label %3208, label %3212

3208:                                             ; preds = %3197
  %3209 = load i32, i32* %5, align 4
  %3210 = sext i32 %3209 to i64
  %3211 = getelementptr inbounds [16 x i8], [16 x i8]* %36, i64 0, i64 %3210
  store i8 1, i8* %3211, align 1
  br label %3212

3212:                                             ; preds = %3208, %3197
  br label %3213

3213:                                             ; preds = %3212
  %3214 = load i32, i32* %6, align 4
  %3215 = add nsw i32 %3214, 1
  store i32 %3215, i32* %6, align 4
  br label %3194

3216:                                             ; preds = %3194
  br label %3217

3217:                                             ; preds = %3216
  %3218 = load i32, i32* %5, align 4
  %3219 = add nsw i32 %3218, 1
  store i32 %3219, i32* %5, align 4
  br label %3187

3220:                                             ; preds = %3187
  %3221 = load %struct.EState*, %struct.EState** %2, align 8
  %3222 = getelementptr inbounds %struct.EState, %struct.EState* %3221, i32 0, i32 19
  %3223 = load i32, i32* %3222, align 4
  store i32 %3223, i32* %19, align 4
  store i32 0, i32* %5, align 4
  br label %3224

3224:                                             ; preds = %3238, %3220
  %3225 = load i32, i32* %5, align 4
  %3226 = icmp slt i32 %3225, 16
  br i1 %3226, label %3227, label %3241

3227:                                             ; preds = %3224
  %3228 = load i32, i32* %5, align 4
  %3229 = sext i32 %3228 to i64
  %3230 = getelementptr inbounds [16 x i8], [16 x i8]* %36, i64 0, i64 %3229
  %3231 = load i8, i8* %3230, align 1
  %3232 = icmp ne i8 %3231, 0
  br i1 %3232, label %3233, label %3235

3233:                                             ; preds = %3227
  %3234 = load %struct.EState*, %struct.EState** %2, align 8
  call void @bsW(%struct.EState* %3234, i32 1, i32 1)
  br label %3237

3235:                                             ; preds = %3227
  %3236 = load %struct.EState*, %struct.EState** %2, align 8
  call void @bsW(%struct.EState* %3236, i32 1, i32 0)
  br label %3237

3237:                                             ; preds = %3235, %3233
  br label %3238

3238:                                             ; preds = %3237
  %3239 = load i32, i32* %5, align 4
  %3240 = add nsw i32 %3239, 1
  store i32 %3240, i32* %5, align 4
  br label %3224

3241:                                             ; preds = %3224
  store i32 0, i32* %5, align 4
  br label %3242

3242:                                             ; preds = %3276, %3241
  %3243 = load i32, i32* %5, align 4
  %3244 = icmp slt i32 %3243, 16
  br i1 %3244, label %3245, label %3279

3245:                                             ; preds = %3242
  %3246 = load i32, i32* %5, align 4
  %3247 = sext i32 %3246 to i64
  %3248 = getelementptr inbounds [16 x i8], [16 x i8]* %36, i64 0, i64 %3247
  %3249 = load i8, i8* %3248, align 1
  %3250 = icmp ne i8 %3249, 0
  br i1 %3250, label %3251, label %3275

3251:                                             ; preds = %3245
  store i32 0, i32* %6, align 4
  br label %3252

3252:                                             ; preds = %3271, %3251
  %3253 = load i32, i32* %6, align 4
  %3254 = icmp slt i32 %3253, 16
  br i1 %3254, label %3255, label %3274

3255:                                             ; preds = %3252
  %3256 = load %struct.EState*, %struct.EState** %2, align 8
  %3257 = getelementptr inbounds %struct.EState, %struct.EState* %3256, i32 0, i32 22
  %3258 = load i32, i32* %5, align 4
  %3259 = mul nsw i32 %3258, 16
  %3260 = load i32, i32* %6, align 4
  %3261 = add nsw i32 %3259, %3260
  %3262 = sext i32 %3261 to i64
  %3263 = getelementptr inbounds [256 x i8], [256 x i8]* %3257, i64 0, i64 %3262
  %3264 = load i8, i8* %3263, align 1
  %3265 = icmp ne i8 %3264, 0
  br i1 %3265, label %3266, label %3268

3266:                                             ; preds = %3255
  %3267 = load %struct.EState*, %struct.EState** %2, align 8
  call void @bsW(%struct.EState* %3267, i32 1, i32 1)
  br label %3270

3268:                                             ; preds = %3255
  %3269 = load %struct.EState*, %struct.EState** %2, align 8
  call void @bsW(%struct.EState* %3269, i32 1, i32 0)
  br label %3270

3270:                                             ; preds = %3268, %3266
  br label %3271

3271:                                             ; preds = %3270
  %3272 = load i32, i32* %6, align 4
  %3273 = add nsw i32 %3272, 1
  store i32 %3273, i32* %6, align 4
  br label %3252

3274:                                             ; preds = %3252
  br label %3275

3275:                                             ; preds = %3274, %3245
  br label %3276

3276:                                             ; preds = %3275
  %3277 = load i32, i32* %5, align 4
  %3278 = add nsw i32 %3277, 1
  store i32 %3278, i32* %5, align 4
  br label %3242

3279:                                             ; preds = %3242
  %3280 = load %struct.EState*, %struct.EState** %2, align 8
  %3281 = getelementptr inbounds %struct.EState, %struct.EState* %3280, i32 0, i32 28
  %3282 = load i32, i32* %3281, align 8
  %3283 = icmp sge i32 %3282, 3
  br i1 %3283, label %3284, label %3292

3284:                                             ; preds = %3279
  %3285 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %3286 = load %struct.EState*, %struct.EState** %2, align 8
  %3287 = getelementptr inbounds %struct.EState, %struct.EState* %3286, i32 0, i32 19
  %3288 = load i32, i32* %3287, align 4
  %3289 = load i32, i32* %19, align 4
  %3290 = sub nsw i32 %3288, %3289
  %3291 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3285, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.60, i64 0, i64 0), i32 %3290)
  br label %3292

3292:                                             ; preds = %3284, %3279
  %3293 = load %struct.EState*, %struct.EState** %2, align 8
  %3294 = getelementptr inbounds %struct.EState, %struct.EState* %3293, i32 0, i32 19
  %3295 = load i32, i32* %3294, align 4
  store i32 %3295, i32* %19, align 4
  %3296 = load %struct.EState*, %struct.EState** %2, align 8
  %3297 = load i32, i32* %18, align 4
  call void @bsW(%struct.EState* %3296, i32 3, i32 %3297)
  %3298 = load %struct.EState*, %struct.EState** %2, align 8
  %3299 = load i32, i32* %13, align 4
  call void @bsW(%struct.EState* %3298, i32 15, i32 %3299)
  store i32 0, i32* %5, align 4
  br label %3300

3300:                                             ; preds = %3322, %3292
  %3301 = load i32, i32* %5, align 4
  %3302 = load i32, i32* %13, align 4
  %3303 = icmp slt i32 %3301, %3302
  br i1 %3303, label %3304, label %3325

3304:                                             ; preds = %3300
  store i32 0, i32* %6, align 4
  br label %3305

3305:                                             ; preds = %3317, %3304
  %3306 = load i32, i32* %6, align 4
  %3307 = load %struct.EState*, %struct.EState** %2, align 8
  %3308 = getelementptr inbounds %struct.EState, %struct.EState* %3307, i32 0, i32 34
  %3309 = load i32, i32* %5, align 4
  %3310 = sext i32 %3309 to i64
  %3311 = getelementptr inbounds [18002 x i8], [18002 x i8]* %3308, i64 0, i64 %3310
  %3312 = load i8, i8* %3311, align 1
  %3313 = zext i8 %3312 to i32
  %3314 = icmp slt i32 %3306, %3313
  br i1 %3314, label %3315, label %3320

3315:                                             ; preds = %3305
  %3316 = load %struct.EState*, %struct.EState** %2, align 8
  call void @bsW(%struct.EState* %3316, i32 1, i32 1)
  br label %3317

3317:                                             ; preds = %3315
  %3318 = load i32, i32* %6, align 4
  %3319 = add nsw i32 %3318, 1
  store i32 %3319, i32* %6, align 4
  br label %3305

3320:                                             ; preds = %3305
  %3321 = load %struct.EState*, %struct.EState** %2, align 8
  call void @bsW(%struct.EState* %3321, i32 1, i32 0)
  br label %3322

3322:                                             ; preds = %3320
  %3323 = load i32, i32* %5, align 4
  %3324 = add nsw i32 %3323, 1
  store i32 %3324, i32* %5, align 4
  br label %3300

3325:                                             ; preds = %3300
  %3326 = load %struct.EState*, %struct.EState** %2, align 8
  %3327 = getelementptr inbounds %struct.EState, %struct.EState* %3326, i32 0, i32 28
  %3328 = load i32, i32* %3327, align 8
  %3329 = icmp sge i32 %3328, 3
  br i1 %3329, label %3330, label %3338

3330:                                             ; preds = %3325
  %3331 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %3332 = load %struct.EState*, %struct.EState** %2, align 8
  %3333 = getelementptr inbounds %struct.EState, %struct.EState* %3332, i32 0, i32 19
  %3334 = load i32, i32* %3333, align 4
  %3335 = load i32, i32* %19, align 4
  %3336 = sub nsw i32 %3334, %3335
  %3337 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3331, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0), i32 %3336)
  br label %3338

3338:                                             ; preds = %3330, %3325
  %3339 = load %struct.EState*, %struct.EState** %2, align 8
  %3340 = getelementptr inbounds %struct.EState, %struct.EState* %3339, i32 0, i32 19
  %3341 = load i32, i32* %3340, align 4
  store i32 %3341, i32* %19, align 4
  store i32 0, i32* %4, align 4
  br label %3342

3342:                                             ; preds = %3403, %3338
  %3343 = load i32, i32* %4, align 4
  %3344 = load i32, i32* %18, align 4
  %3345 = icmp slt i32 %3343, %3344
  br i1 %3345, label %3346, label %3406

3346:                                             ; preds = %3342
  %3347 = load %struct.EState*, %struct.EState** %2, align 8
  %3348 = getelementptr inbounds %struct.EState, %struct.EState* %3347, i32 0, i32 35
  %3349 = load i32, i32* %4, align 4
  %3350 = sext i32 %3349 to i64
  %3351 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %3348, i64 0, i64 %3350
  %3352 = getelementptr inbounds [258 x i8], [258 x i8]* %3351, i64 0, i64 0
  %3353 = load i8, i8* %3352, align 2
  %3354 = zext i8 %3353 to i32
  store i32 %3354, i32* %37, align 4
  %3355 = load %struct.EState*, %struct.EState** %2, align 8
  %3356 = load i32, i32* %37, align 4
  call void @bsW(%struct.EState* %3355, i32 5, i32 %3356)
  store i32 0, i32* %5, align 4
  br label %3357

3357:                                             ; preds = %3399, %3346
  %3358 = load i32, i32* %5, align 4
  %3359 = load i32, i32* %14, align 4
  %3360 = icmp slt i32 %3358, %3359
  br i1 %3360, label %3361, label %3402

3361:                                             ; preds = %3357
  br label %3362

3362:                                             ; preds = %3375, %3361
  %3363 = load i32, i32* %37, align 4
  %3364 = load %struct.EState*, %struct.EState** %2, align 8
  %3365 = getelementptr inbounds %struct.EState, %struct.EState* %3364, i32 0, i32 35
  %3366 = load i32, i32* %4, align 4
  %3367 = sext i32 %3366 to i64
  %3368 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %3365, i64 0, i64 %3367
  %3369 = load i32, i32* %5, align 4
  %3370 = sext i32 %3369 to i64
  %3371 = getelementptr inbounds [258 x i8], [258 x i8]* %3368, i64 0, i64 %3370
  %3372 = load i8, i8* %3371, align 1
  %3373 = zext i8 %3372 to i32
  %3374 = icmp slt i32 %3363, %3373
  br i1 %3374, label %3375, label %3379

3375:                                             ; preds = %3362
  %3376 = load %struct.EState*, %struct.EState** %2, align 8
  call void @bsW(%struct.EState* %3376, i32 2, i32 2)
  %3377 = load i32, i32* %37, align 4
  %3378 = add nsw i32 %3377, 1
  store i32 %3378, i32* %37, align 4
  br label %3362

3379:                                             ; preds = %3362
  br label %3380

3380:                                             ; preds = %3393, %3379
  %3381 = load i32, i32* %37, align 4
  %3382 = load %struct.EState*, %struct.EState** %2, align 8
  %3383 = getelementptr inbounds %struct.EState, %struct.EState* %3382, i32 0, i32 35
  %3384 = load i32, i32* %4, align 4
  %3385 = sext i32 %3384 to i64
  %3386 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %3383, i64 0, i64 %3385
  %3387 = load i32, i32* %5, align 4
  %3388 = sext i32 %3387 to i64
  %3389 = getelementptr inbounds [258 x i8], [258 x i8]* %3386, i64 0, i64 %3388
  %3390 = load i8, i8* %3389, align 1
  %3391 = zext i8 %3390 to i32
  %3392 = icmp sgt i32 %3381, %3391
  br i1 %3392, label %3393, label %3397

3393:                                             ; preds = %3380
  %3394 = load %struct.EState*, %struct.EState** %2, align 8
  call void @bsW(%struct.EState* %3394, i32 2, i32 3)
  %3395 = load i32, i32* %37, align 4
  %3396 = add nsw i32 %3395, -1
  store i32 %3396, i32* %37, align 4
  br label %3380

3397:                                             ; preds = %3380
  %3398 = load %struct.EState*, %struct.EState** %2, align 8
  call void @bsW(%struct.EState* %3398, i32 1, i32 0)
  br label %3399

3399:                                             ; preds = %3397
  %3400 = load i32, i32* %5, align 4
  %3401 = add nsw i32 %3400, 1
  store i32 %3401, i32* %5, align 4
  br label %3357

3402:                                             ; preds = %3357
  br label %3403

3403:                                             ; preds = %3402
  %3404 = load i32, i32* %4, align 4
  %3405 = add nsw i32 %3404, 1
  store i32 %3405, i32* %4, align 4
  br label %3342

3406:                                             ; preds = %3342
  %3407 = load %struct.EState*, %struct.EState** %2, align 8
  %3408 = getelementptr inbounds %struct.EState, %struct.EState* %3407, i32 0, i32 28
  %3409 = load i32, i32* %3408, align 8
  %3410 = icmp sge i32 %3409, 3
  br i1 %3410, label %3411, label %3419

3411:                                             ; preds = %3406
  %3412 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %3413 = load %struct.EState*, %struct.EState** %2, align 8
  %3414 = getelementptr inbounds %struct.EState, %struct.EState* %3413, i32 0, i32 19
  %3415 = load i32, i32* %3414, align 4
  %3416 = load i32, i32* %19, align 4
  %3417 = sub nsw i32 %3415, %3416
  %3418 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3412, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.62, i64 0, i64 0), i32 %3417)
  br label %3419

3419:                                             ; preds = %3411, %3406
  %3420 = load %struct.EState*, %struct.EState** %2, align 8
  %3421 = getelementptr inbounds %struct.EState, %struct.EState* %3420, i32 0, i32 19
  %3422 = load i32, i32* %3421, align 4
  store i32 %3422, i32* %19, align 4
  store i32 0, i32* %17, align 4
  store i32 0, i32* %7, align 4
  br label %3423

3423:                                             ; preds = %3419, %4436
  %3424 = load i32, i32* %7, align 4
  %3425 = load %struct.EState*, %struct.EState** %2, align 8
  %3426 = getelementptr inbounds %struct.EState, %struct.EState* %3425, i32 0, i32 31
  %3427 = load i32, i32* %3426, align 4
  %3428 = icmp sge i32 %3424, %3427
  br i1 %3428, label %3429, label %3430

3429:                                             ; preds = %3423
  br label %4441

3430:                                             ; preds = %3423
  %3431 = load i32, i32* %7, align 4
  %3432 = add nsw i32 %3431, 50
  %3433 = sub nsw i32 %3432, 1
  store i32 %3433, i32* %8, align 4
  %3434 = load i32, i32* %8, align 4
  %3435 = load %struct.EState*, %struct.EState** %2, align 8
  %3436 = getelementptr inbounds %struct.EState, %struct.EState* %3435, i32 0, i32 31
  %3437 = load i32, i32* %3436, align 4
  %3438 = icmp sge i32 %3434, %3437
  br i1 %3438, label %3439, label %3444

3439:                                             ; preds = %3430
  %3440 = load %struct.EState*, %struct.EState** %2, align 8
  %3441 = getelementptr inbounds %struct.EState, %struct.EState* %3440, i32 0, i32 31
  %3442 = load i32, i32* %3441, align 4
  %3443 = sub nsw i32 %3442, 1
  store i32 %3443, i32* %8, align 4
  br label %3444

3444:                                             ; preds = %3439, %3430
  %3445 = load %struct.EState*, %struct.EState** %2, align 8
  %3446 = getelementptr inbounds %struct.EState, %struct.EState* %3445, i32 0, i32 33
  %3447 = load i32, i32* %17, align 4
  %3448 = sext i32 %3447 to i64
  %3449 = getelementptr inbounds [18002 x i8], [18002 x i8]* %3446, i64 0, i64 %3448
  %3450 = load i8, i8* %3449, align 1
  %3451 = zext i8 %3450 to i32
  %3452 = load i32, i32* %18, align 4
  %3453 = icmp slt i32 %3451, %3452
  br i1 %3453, label %3455, label %3454

3454:                                             ; preds = %3444
  call void @BZ2_bz__AssertH__fail(i32 3006)
  br label %3455

3455:                                             ; preds = %3454, %3444
  %3456 = load i32, i32* %18, align 4
  %3457 = icmp eq i32 %3456, 6
  br i1 %3457, label %3458, label %4387

3458:                                             ; preds = %3455
  %3459 = load i32, i32* %8, align 4
  %3460 = load i32, i32* %7, align 4
  %3461 = sub nsw i32 %3459, %3460
  %3462 = add nsw i32 %3461, 1
  %3463 = icmp eq i32 50, %3462
  br i1 %3463, label %3464, label %4387

3464:                                             ; preds = %3458
  %3465 = load %struct.EState*, %struct.EState** %2, align 8
  %3466 = getelementptr inbounds %struct.EState, %struct.EState* %3465, i32 0, i32 35
  %3467 = load %struct.EState*, %struct.EState** %2, align 8
  %3468 = getelementptr inbounds %struct.EState, %struct.EState* %3467, i32 0, i32 33
  %3469 = load i32, i32* %17, align 4
  %3470 = sext i32 %3469 to i64
  %3471 = getelementptr inbounds [18002 x i8], [18002 x i8]* %3468, i64 0, i64 %3470
  %3472 = load i8, i8* %3471, align 1
  %3473 = zext i8 %3472 to i64
  %3474 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %3466, i64 0, i64 %3473
  %3475 = getelementptr inbounds [258 x i8], [258 x i8]* %3474, i64 0, i64 0
  store i8* %3475, i8** %39, align 8
  %3476 = load %struct.EState*, %struct.EState** %2, align 8
  %3477 = getelementptr inbounds %struct.EState, %struct.EState* %3476, i32 0, i32 36
  %3478 = load %struct.EState*, %struct.EState** %2, align 8
  %3479 = getelementptr inbounds %struct.EState, %struct.EState* %3478, i32 0, i32 33
  %3480 = load i32, i32* %17, align 4
  %3481 = sext i32 %3480 to i64
  %3482 = getelementptr inbounds [18002 x i8], [18002 x i8]* %3479, i64 0, i64 %3481
  %3483 = load i8, i8* %3482, align 1
  %3484 = zext i8 %3483 to i64
  %3485 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %3477, i64 0, i64 %3484
  %3486 = getelementptr inbounds [258 x i32], [258 x i32]* %3485, i64 0, i64 0
  store i32* %3486, i32** %40, align 8
  %3487 = load i16*, i16** %22, align 8
  %3488 = load i32, i32* %7, align 4
  %3489 = add nsw i32 %3488, 0
  %3490 = sext i32 %3489 to i64
  %3491 = getelementptr inbounds i16, i16* %3487, i64 %3490
  %3492 = load i16, i16* %3491, align 2
  store i16 %3492, i16* %38, align 2
  %3493 = load %struct.EState*, %struct.EState** %2, align 8
  %3494 = load i8*, i8** %39, align 8
  %3495 = load i16, i16* %38, align 2
  %3496 = zext i16 %3495 to i64
  %3497 = getelementptr inbounds i8, i8* %3494, i64 %3496
  %3498 = load i8, i8* %3497, align 1
  %3499 = zext i8 %3498 to i32
  %3500 = load i32*, i32** %40, align 8
  %3501 = load i16, i16* %38, align 2
  %3502 = zext i16 %3501 to i64
  %3503 = getelementptr inbounds i32, i32* %3500, i64 %3502
  %3504 = load i32, i32* %3503, align 4
  call void @bsW(%struct.EState* %3493, i32 %3499, i32 %3504)
  %3505 = load i16*, i16** %22, align 8
  %3506 = load i32, i32* %7, align 4
  %3507 = add nsw i32 %3506, 1
  %3508 = sext i32 %3507 to i64
  %3509 = getelementptr inbounds i16, i16* %3505, i64 %3508
  %3510 = load i16, i16* %3509, align 2
  store i16 %3510, i16* %38, align 2
  %3511 = load %struct.EState*, %struct.EState** %2, align 8
  %3512 = load i8*, i8** %39, align 8
  %3513 = load i16, i16* %38, align 2
  %3514 = zext i16 %3513 to i64
  %3515 = getelementptr inbounds i8, i8* %3512, i64 %3514
  %3516 = load i8, i8* %3515, align 1
  %3517 = zext i8 %3516 to i32
  %3518 = load i32*, i32** %40, align 8
  %3519 = load i16, i16* %38, align 2
  %3520 = zext i16 %3519 to i64
  %3521 = getelementptr inbounds i32, i32* %3518, i64 %3520
  %3522 = load i32, i32* %3521, align 4
  call void @bsW(%struct.EState* %3511, i32 %3517, i32 %3522)
  %3523 = load i16*, i16** %22, align 8
  %3524 = load i32, i32* %7, align 4
  %3525 = add nsw i32 %3524, 2
  %3526 = sext i32 %3525 to i64
  %3527 = getelementptr inbounds i16, i16* %3523, i64 %3526
  %3528 = load i16, i16* %3527, align 2
  store i16 %3528, i16* %38, align 2
  %3529 = load %struct.EState*, %struct.EState** %2, align 8
  %3530 = load i8*, i8** %39, align 8
  %3531 = load i16, i16* %38, align 2
  %3532 = zext i16 %3531 to i64
  %3533 = getelementptr inbounds i8, i8* %3530, i64 %3532
  %3534 = load i8, i8* %3533, align 1
  %3535 = zext i8 %3534 to i32
  %3536 = load i32*, i32** %40, align 8
  %3537 = load i16, i16* %38, align 2
  %3538 = zext i16 %3537 to i64
  %3539 = getelementptr inbounds i32, i32* %3536, i64 %3538
  %3540 = load i32, i32* %3539, align 4
  call void @bsW(%struct.EState* %3529, i32 %3535, i32 %3540)
  %3541 = load i16*, i16** %22, align 8
  %3542 = load i32, i32* %7, align 4
  %3543 = add nsw i32 %3542, 3
  %3544 = sext i32 %3543 to i64
  %3545 = getelementptr inbounds i16, i16* %3541, i64 %3544
  %3546 = load i16, i16* %3545, align 2
  store i16 %3546, i16* %38, align 2
  %3547 = load %struct.EState*, %struct.EState** %2, align 8
  %3548 = load i8*, i8** %39, align 8
  %3549 = load i16, i16* %38, align 2
  %3550 = zext i16 %3549 to i64
  %3551 = getelementptr inbounds i8, i8* %3548, i64 %3550
  %3552 = load i8, i8* %3551, align 1
  %3553 = zext i8 %3552 to i32
  %3554 = load i32*, i32** %40, align 8
  %3555 = load i16, i16* %38, align 2
  %3556 = zext i16 %3555 to i64
  %3557 = getelementptr inbounds i32, i32* %3554, i64 %3556
  %3558 = load i32, i32* %3557, align 4
  call void @bsW(%struct.EState* %3547, i32 %3553, i32 %3558)
  %3559 = load i16*, i16** %22, align 8
  %3560 = load i32, i32* %7, align 4
  %3561 = add nsw i32 %3560, 4
  %3562 = sext i32 %3561 to i64
  %3563 = getelementptr inbounds i16, i16* %3559, i64 %3562
  %3564 = load i16, i16* %3563, align 2
  store i16 %3564, i16* %38, align 2
  %3565 = load %struct.EState*, %struct.EState** %2, align 8
  %3566 = load i8*, i8** %39, align 8
  %3567 = load i16, i16* %38, align 2
  %3568 = zext i16 %3567 to i64
  %3569 = getelementptr inbounds i8, i8* %3566, i64 %3568
  %3570 = load i8, i8* %3569, align 1
  %3571 = zext i8 %3570 to i32
  %3572 = load i32*, i32** %40, align 8
  %3573 = load i16, i16* %38, align 2
  %3574 = zext i16 %3573 to i64
  %3575 = getelementptr inbounds i32, i32* %3572, i64 %3574
  %3576 = load i32, i32* %3575, align 4
  call void @bsW(%struct.EState* %3565, i32 %3571, i32 %3576)
  %3577 = load i16*, i16** %22, align 8
  %3578 = load i32, i32* %7, align 4
  %3579 = add nsw i32 %3578, 5
  %3580 = sext i32 %3579 to i64
  %3581 = getelementptr inbounds i16, i16* %3577, i64 %3580
  %3582 = load i16, i16* %3581, align 2
  store i16 %3582, i16* %38, align 2
  %3583 = load %struct.EState*, %struct.EState** %2, align 8
  %3584 = load i8*, i8** %39, align 8
  %3585 = load i16, i16* %38, align 2
  %3586 = zext i16 %3585 to i64
  %3587 = getelementptr inbounds i8, i8* %3584, i64 %3586
  %3588 = load i8, i8* %3587, align 1
  %3589 = zext i8 %3588 to i32
  %3590 = load i32*, i32** %40, align 8
  %3591 = load i16, i16* %38, align 2
  %3592 = zext i16 %3591 to i64
  %3593 = getelementptr inbounds i32, i32* %3590, i64 %3592
  %3594 = load i32, i32* %3593, align 4
  call void @bsW(%struct.EState* %3583, i32 %3589, i32 %3594)
  %3595 = load i16*, i16** %22, align 8
  %3596 = load i32, i32* %7, align 4
  %3597 = add nsw i32 %3596, 6
  %3598 = sext i32 %3597 to i64
  %3599 = getelementptr inbounds i16, i16* %3595, i64 %3598
  %3600 = load i16, i16* %3599, align 2
  store i16 %3600, i16* %38, align 2
  %3601 = load %struct.EState*, %struct.EState** %2, align 8
  %3602 = load i8*, i8** %39, align 8
  %3603 = load i16, i16* %38, align 2
  %3604 = zext i16 %3603 to i64
  %3605 = getelementptr inbounds i8, i8* %3602, i64 %3604
  %3606 = load i8, i8* %3605, align 1
  %3607 = zext i8 %3606 to i32
  %3608 = load i32*, i32** %40, align 8
  %3609 = load i16, i16* %38, align 2
  %3610 = zext i16 %3609 to i64
  %3611 = getelementptr inbounds i32, i32* %3608, i64 %3610
  %3612 = load i32, i32* %3611, align 4
  call void @bsW(%struct.EState* %3601, i32 %3607, i32 %3612)
  %3613 = load i16*, i16** %22, align 8
  %3614 = load i32, i32* %7, align 4
  %3615 = add nsw i32 %3614, 7
  %3616 = sext i32 %3615 to i64
  %3617 = getelementptr inbounds i16, i16* %3613, i64 %3616
  %3618 = load i16, i16* %3617, align 2
  store i16 %3618, i16* %38, align 2
  %3619 = load %struct.EState*, %struct.EState** %2, align 8
  %3620 = load i8*, i8** %39, align 8
  %3621 = load i16, i16* %38, align 2
  %3622 = zext i16 %3621 to i64
  %3623 = getelementptr inbounds i8, i8* %3620, i64 %3622
  %3624 = load i8, i8* %3623, align 1
  %3625 = zext i8 %3624 to i32
  %3626 = load i32*, i32** %40, align 8
  %3627 = load i16, i16* %38, align 2
  %3628 = zext i16 %3627 to i64
  %3629 = getelementptr inbounds i32, i32* %3626, i64 %3628
  %3630 = load i32, i32* %3629, align 4
  call void @bsW(%struct.EState* %3619, i32 %3625, i32 %3630)
  %3631 = load i16*, i16** %22, align 8
  %3632 = load i32, i32* %7, align 4
  %3633 = add nsw i32 %3632, 8
  %3634 = sext i32 %3633 to i64
  %3635 = getelementptr inbounds i16, i16* %3631, i64 %3634
  %3636 = load i16, i16* %3635, align 2
  store i16 %3636, i16* %38, align 2
  %3637 = load %struct.EState*, %struct.EState** %2, align 8
  %3638 = load i8*, i8** %39, align 8
  %3639 = load i16, i16* %38, align 2
  %3640 = zext i16 %3639 to i64
  %3641 = getelementptr inbounds i8, i8* %3638, i64 %3640
  %3642 = load i8, i8* %3641, align 1
  %3643 = zext i8 %3642 to i32
  %3644 = load i32*, i32** %40, align 8
  %3645 = load i16, i16* %38, align 2
  %3646 = zext i16 %3645 to i64
  %3647 = getelementptr inbounds i32, i32* %3644, i64 %3646
  %3648 = load i32, i32* %3647, align 4
  call void @bsW(%struct.EState* %3637, i32 %3643, i32 %3648)
  %3649 = load i16*, i16** %22, align 8
  %3650 = load i32, i32* %7, align 4
  %3651 = add nsw i32 %3650, 9
  %3652 = sext i32 %3651 to i64
  %3653 = getelementptr inbounds i16, i16* %3649, i64 %3652
  %3654 = load i16, i16* %3653, align 2
  store i16 %3654, i16* %38, align 2
  %3655 = load %struct.EState*, %struct.EState** %2, align 8
  %3656 = load i8*, i8** %39, align 8
  %3657 = load i16, i16* %38, align 2
  %3658 = zext i16 %3657 to i64
  %3659 = getelementptr inbounds i8, i8* %3656, i64 %3658
  %3660 = load i8, i8* %3659, align 1
  %3661 = zext i8 %3660 to i32
  %3662 = load i32*, i32** %40, align 8
  %3663 = load i16, i16* %38, align 2
  %3664 = zext i16 %3663 to i64
  %3665 = getelementptr inbounds i32, i32* %3662, i64 %3664
  %3666 = load i32, i32* %3665, align 4
  call void @bsW(%struct.EState* %3655, i32 %3661, i32 %3666)
  %3667 = load i16*, i16** %22, align 8
  %3668 = load i32, i32* %7, align 4
  %3669 = add nsw i32 %3668, 10
  %3670 = sext i32 %3669 to i64
  %3671 = getelementptr inbounds i16, i16* %3667, i64 %3670
  %3672 = load i16, i16* %3671, align 2
  store i16 %3672, i16* %38, align 2
  %3673 = load %struct.EState*, %struct.EState** %2, align 8
  %3674 = load i8*, i8** %39, align 8
  %3675 = load i16, i16* %38, align 2
  %3676 = zext i16 %3675 to i64
  %3677 = getelementptr inbounds i8, i8* %3674, i64 %3676
  %3678 = load i8, i8* %3677, align 1
  %3679 = zext i8 %3678 to i32
  %3680 = load i32*, i32** %40, align 8
  %3681 = load i16, i16* %38, align 2
  %3682 = zext i16 %3681 to i64
  %3683 = getelementptr inbounds i32, i32* %3680, i64 %3682
  %3684 = load i32, i32* %3683, align 4
  call void @bsW(%struct.EState* %3673, i32 %3679, i32 %3684)
  %3685 = load i16*, i16** %22, align 8
  %3686 = load i32, i32* %7, align 4
  %3687 = add nsw i32 %3686, 11
  %3688 = sext i32 %3687 to i64
  %3689 = getelementptr inbounds i16, i16* %3685, i64 %3688
  %3690 = load i16, i16* %3689, align 2
  store i16 %3690, i16* %38, align 2
  %3691 = load %struct.EState*, %struct.EState** %2, align 8
  %3692 = load i8*, i8** %39, align 8
  %3693 = load i16, i16* %38, align 2
  %3694 = zext i16 %3693 to i64
  %3695 = getelementptr inbounds i8, i8* %3692, i64 %3694
  %3696 = load i8, i8* %3695, align 1
  %3697 = zext i8 %3696 to i32
  %3698 = load i32*, i32** %40, align 8
  %3699 = load i16, i16* %38, align 2
  %3700 = zext i16 %3699 to i64
  %3701 = getelementptr inbounds i32, i32* %3698, i64 %3700
  %3702 = load i32, i32* %3701, align 4
  call void @bsW(%struct.EState* %3691, i32 %3697, i32 %3702)
  %3703 = load i16*, i16** %22, align 8
  %3704 = load i32, i32* %7, align 4
  %3705 = add nsw i32 %3704, 12
  %3706 = sext i32 %3705 to i64
  %3707 = getelementptr inbounds i16, i16* %3703, i64 %3706
  %3708 = load i16, i16* %3707, align 2
  store i16 %3708, i16* %38, align 2
  %3709 = load %struct.EState*, %struct.EState** %2, align 8
  %3710 = load i8*, i8** %39, align 8
  %3711 = load i16, i16* %38, align 2
  %3712 = zext i16 %3711 to i64
  %3713 = getelementptr inbounds i8, i8* %3710, i64 %3712
  %3714 = load i8, i8* %3713, align 1
  %3715 = zext i8 %3714 to i32
  %3716 = load i32*, i32** %40, align 8
  %3717 = load i16, i16* %38, align 2
  %3718 = zext i16 %3717 to i64
  %3719 = getelementptr inbounds i32, i32* %3716, i64 %3718
  %3720 = load i32, i32* %3719, align 4
  call void @bsW(%struct.EState* %3709, i32 %3715, i32 %3720)
  %3721 = load i16*, i16** %22, align 8
  %3722 = load i32, i32* %7, align 4
  %3723 = add nsw i32 %3722, 13
  %3724 = sext i32 %3723 to i64
  %3725 = getelementptr inbounds i16, i16* %3721, i64 %3724
  %3726 = load i16, i16* %3725, align 2
  store i16 %3726, i16* %38, align 2
  %3727 = load %struct.EState*, %struct.EState** %2, align 8
  %3728 = load i8*, i8** %39, align 8
  %3729 = load i16, i16* %38, align 2
  %3730 = zext i16 %3729 to i64
  %3731 = getelementptr inbounds i8, i8* %3728, i64 %3730
  %3732 = load i8, i8* %3731, align 1
  %3733 = zext i8 %3732 to i32
  %3734 = load i32*, i32** %40, align 8
  %3735 = load i16, i16* %38, align 2
  %3736 = zext i16 %3735 to i64
  %3737 = getelementptr inbounds i32, i32* %3734, i64 %3736
  %3738 = load i32, i32* %3737, align 4
  call void @bsW(%struct.EState* %3727, i32 %3733, i32 %3738)
  %3739 = load i16*, i16** %22, align 8
  %3740 = load i32, i32* %7, align 4
  %3741 = add nsw i32 %3740, 14
  %3742 = sext i32 %3741 to i64
  %3743 = getelementptr inbounds i16, i16* %3739, i64 %3742
  %3744 = load i16, i16* %3743, align 2
  store i16 %3744, i16* %38, align 2
  %3745 = load %struct.EState*, %struct.EState** %2, align 8
  %3746 = load i8*, i8** %39, align 8
  %3747 = load i16, i16* %38, align 2
  %3748 = zext i16 %3747 to i64
  %3749 = getelementptr inbounds i8, i8* %3746, i64 %3748
  %3750 = load i8, i8* %3749, align 1
  %3751 = zext i8 %3750 to i32
  %3752 = load i32*, i32** %40, align 8
  %3753 = load i16, i16* %38, align 2
  %3754 = zext i16 %3753 to i64
  %3755 = getelementptr inbounds i32, i32* %3752, i64 %3754
  %3756 = load i32, i32* %3755, align 4
  call void @bsW(%struct.EState* %3745, i32 %3751, i32 %3756)
  %3757 = load i16*, i16** %22, align 8
  %3758 = load i32, i32* %7, align 4
  %3759 = add nsw i32 %3758, 15
  %3760 = sext i32 %3759 to i64
  %3761 = getelementptr inbounds i16, i16* %3757, i64 %3760
  %3762 = load i16, i16* %3761, align 2
  store i16 %3762, i16* %38, align 2
  %3763 = load %struct.EState*, %struct.EState** %2, align 8
  %3764 = load i8*, i8** %39, align 8
  %3765 = load i16, i16* %38, align 2
  %3766 = zext i16 %3765 to i64
  %3767 = getelementptr inbounds i8, i8* %3764, i64 %3766
  %3768 = load i8, i8* %3767, align 1
  %3769 = zext i8 %3768 to i32
  %3770 = load i32*, i32** %40, align 8
  %3771 = load i16, i16* %38, align 2
  %3772 = zext i16 %3771 to i64
  %3773 = getelementptr inbounds i32, i32* %3770, i64 %3772
  %3774 = load i32, i32* %3773, align 4
  call void @bsW(%struct.EState* %3763, i32 %3769, i32 %3774)
  %3775 = load i16*, i16** %22, align 8
  %3776 = load i32, i32* %7, align 4
  %3777 = add nsw i32 %3776, 16
  %3778 = sext i32 %3777 to i64
  %3779 = getelementptr inbounds i16, i16* %3775, i64 %3778
  %3780 = load i16, i16* %3779, align 2
  store i16 %3780, i16* %38, align 2
  %3781 = load %struct.EState*, %struct.EState** %2, align 8
  %3782 = load i8*, i8** %39, align 8
  %3783 = load i16, i16* %38, align 2
  %3784 = zext i16 %3783 to i64
  %3785 = getelementptr inbounds i8, i8* %3782, i64 %3784
  %3786 = load i8, i8* %3785, align 1
  %3787 = zext i8 %3786 to i32
  %3788 = load i32*, i32** %40, align 8
  %3789 = load i16, i16* %38, align 2
  %3790 = zext i16 %3789 to i64
  %3791 = getelementptr inbounds i32, i32* %3788, i64 %3790
  %3792 = load i32, i32* %3791, align 4
  call void @bsW(%struct.EState* %3781, i32 %3787, i32 %3792)
  %3793 = load i16*, i16** %22, align 8
  %3794 = load i32, i32* %7, align 4
  %3795 = add nsw i32 %3794, 17
  %3796 = sext i32 %3795 to i64
  %3797 = getelementptr inbounds i16, i16* %3793, i64 %3796
  %3798 = load i16, i16* %3797, align 2
  store i16 %3798, i16* %38, align 2
  %3799 = load %struct.EState*, %struct.EState** %2, align 8
  %3800 = load i8*, i8** %39, align 8
  %3801 = load i16, i16* %38, align 2
  %3802 = zext i16 %3801 to i64
  %3803 = getelementptr inbounds i8, i8* %3800, i64 %3802
  %3804 = load i8, i8* %3803, align 1
  %3805 = zext i8 %3804 to i32
  %3806 = load i32*, i32** %40, align 8
  %3807 = load i16, i16* %38, align 2
  %3808 = zext i16 %3807 to i64
  %3809 = getelementptr inbounds i32, i32* %3806, i64 %3808
  %3810 = load i32, i32* %3809, align 4
  call void @bsW(%struct.EState* %3799, i32 %3805, i32 %3810)
  %3811 = load i16*, i16** %22, align 8
  %3812 = load i32, i32* %7, align 4
  %3813 = add nsw i32 %3812, 18
  %3814 = sext i32 %3813 to i64
  %3815 = getelementptr inbounds i16, i16* %3811, i64 %3814
  %3816 = load i16, i16* %3815, align 2
  store i16 %3816, i16* %38, align 2
  %3817 = load %struct.EState*, %struct.EState** %2, align 8
  %3818 = load i8*, i8** %39, align 8
  %3819 = load i16, i16* %38, align 2
  %3820 = zext i16 %3819 to i64
  %3821 = getelementptr inbounds i8, i8* %3818, i64 %3820
  %3822 = load i8, i8* %3821, align 1
  %3823 = zext i8 %3822 to i32
  %3824 = load i32*, i32** %40, align 8
  %3825 = load i16, i16* %38, align 2
  %3826 = zext i16 %3825 to i64
  %3827 = getelementptr inbounds i32, i32* %3824, i64 %3826
  %3828 = load i32, i32* %3827, align 4
  call void @bsW(%struct.EState* %3817, i32 %3823, i32 %3828)
  %3829 = load i16*, i16** %22, align 8
  %3830 = load i32, i32* %7, align 4
  %3831 = add nsw i32 %3830, 19
  %3832 = sext i32 %3831 to i64
  %3833 = getelementptr inbounds i16, i16* %3829, i64 %3832
  %3834 = load i16, i16* %3833, align 2
  store i16 %3834, i16* %38, align 2
  %3835 = load %struct.EState*, %struct.EState** %2, align 8
  %3836 = load i8*, i8** %39, align 8
  %3837 = load i16, i16* %38, align 2
  %3838 = zext i16 %3837 to i64
  %3839 = getelementptr inbounds i8, i8* %3836, i64 %3838
  %3840 = load i8, i8* %3839, align 1
  %3841 = zext i8 %3840 to i32
  %3842 = load i32*, i32** %40, align 8
  %3843 = load i16, i16* %38, align 2
  %3844 = zext i16 %3843 to i64
  %3845 = getelementptr inbounds i32, i32* %3842, i64 %3844
  %3846 = load i32, i32* %3845, align 4
  call void @bsW(%struct.EState* %3835, i32 %3841, i32 %3846)
  %3847 = load i16*, i16** %22, align 8
  %3848 = load i32, i32* %7, align 4
  %3849 = add nsw i32 %3848, 20
  %3850 = sext i32 %3849 to i64
  %3851 = getelementptr inbounds i16, i16* %3847, i64 %3850
  %3852 = load i16, i16* %3851, align 2
  store i16 %3852, i16* %38, align 2
  %3853 = load %struct.EState*, %struct.EState** %2, align 8
  %3854 = load i8*, i8** %39, align 8
  %3855 = load i16, i16* %38, align 2
  %3856 = zext i16 %3855 to i64
  %3857 = getelementptr inbounds i8, i8* %3854, i64 %3856
  %3858 = load i8, i8* %3857, align 1
  %3859 = zext i8 %3858 to i32
  %3860 = load i32*, i32** %40, align 8
  %3861 = load i16, i16* %38, align 2
  %3862 = zext i16 %3861 to i64
  %3863 = getelementptr inbounds i32, i32* %3860, i64 %3862
  %3864 = load i32, i32* %3863, align 4
  call void @bsW(%struct.EState* %3853, i32 %3859, i32 %3864)
  %3865 = load i16*, i16** %22, align 8
  %3866 = load i32, i32* %7, align 4
  %3867 = add nsw i32 %3866, 21
  %3868 = sext i32 %3867 to i64
  %3869 = getelementptr inbounds i16, i16* %3865, i64 %3868
  %3870 = load i16, i16* %3869, align 2
  store i16 %3870, i16* %38, align 2
  %3871 = load %struct.EState*, %struct.EState** %2, align 8
  %3872 = load i8*, i8** %39, align 8
  %3873 = load i16, i16* %38, align 2
  %3874 = zext i16 %3873 to i64
  %3875 = getelementptr inbounds i8, i8* %3872, i64 %3874
  %3876 = load i8, i8* %3875, align 1
  %3877 = zext i8 %3876 to i32
  %3878 = load i32*, i32** %40, align 8
  %3879 = load i16, i16* %38, align 2
  %3880 = zext i16 %3879 to i64
  %3881 = getelementptr inbounds i32, i32* %3878, i64 %3880
  %3882 = load i32, i32* %3881, align 4
  call void @bsW(%struct.EState* %3871, i32 %3877, i32 %3882)
  %3883 = load i16*, i16** %22, align 8
  %3884 = load i32, i32* %7, align 4
  %3885 = add nsw i32 %3884, 22
  %3886 = sext i32 %3885 to i64
  %3887 = getelementptr inbounds i16, i16* %3883, i64 %3886
  %3888 = load i16, i16* %3887, align 2
  store i16 %3888, i16* %38, align 2
  %3889 = load %struct.EState*, %struct.EState** %2, align 8
  %3890 = load i8*, i8** %39, align 8
  %3891 = load i16, i16* %38, align 2
  %3892 = zext i16 %3891 to i64
  %3893 = getelementptr inbounds i8, i8* %3890, i64 %3892
  %3894 = load i8, i8* %3893, align 1
  %3895 = zext i8 %3894 to i32
  %3896 = load i32*, i32** %40, align 8
  %3897 = load i16, i16* %38, align 2
  %3898 = zext i16 %3897 to i64
  %3899 = getelementptr inbounds i32, i32* %3896, i64 %3898
  %3900 = load i32, i32* %3899, align 4
  call void @bsW(%struct.EState* %3889, i32 %3895, i32 %3900)
  %3901 = load i16*, i16** %22, align 8
  %3902 = load i32, i32* %7, align 4
  %3903 = add nsw i32 %3902, 23
  %3904 = sext i32 %3903 to i64
  %3905 = getelementptr inbounds i16, i16* %3901, i64 %3904
  %3906 = load i16, i16* %3905, align 2
  store i16 %3906, i16* %38, align 2
  %3907 = load %struct.EState*, %struct.EState** %2, align 8
  %3908 = load i8*, i8** %39, align 8
  %3909 = load i16, i16* %38, align 2
  %3910 = zext i16 %3909 to i64
  %3911 = getelementptr inbounds i8, i8* %3908, i64 %3910
  %3912 = load i8, i8* %3911, align 1
  %3913 = zext i8 %3912 to i32
  %3914 = load i32*, i32** %40, align 8
  %3915 = load i16, i16* %38, align 2
  %3916 = zext i16 %3915 to i64
  %3917 = getelementptr inbounds i32, i32* %3914, i64 %3916
  %3918 = load i32, i32* %3917, align 4
  call void @bsW(%struct.EState* %3907, i32 %3913, i32 %3918)
  %3919 = load i16*, i16** %22, align 8
  %3920 = load i32, i32* %7, align 4
  %3921 = add nsw i32 %3920, 24
  %3922 = sext i32 %3921 to i64
  %3923 = getelementptr inbounds i16, i16* %3919, i64 %3922
  %3924 = load i16, i16* %3923, align 2
  store i16 %3924, i16* %38, align 2
  %3925 = load %struct.EState*, %struct.EState** %2, align 8
  %3926 = load i8*, i8** %39, align 8
  %3927 = load i16, i16* %38, align 2
  %3928 = zext i16 %3927 to i64
  %3929 = getelementptr inbounds i8, i8* %3926, i64 %3928
  %3930 = load i8, i8* %3929, align 1
  %3931 = zext i8 %3930 to i32
  %3932 = load i32*, i32** %40, align 8
  %3933 = load i16, i16* %38, align 2
  %3934 = zext i16 %3933 to i64
  %3935 = getelementptr inbounds i32, i32* %3932, i64 %3934
  %3936 = load i32, i32* %3935, align 4
  call void @bsW(%struct.EState* %3925, i32 %3931, i32 %3936)
  %3937 = load i16*, i16** %22, align 8
  %3938 = load i32, i32* %7, align 4
  %3939 = add nsw i32 %3938, 25
  %3940 = sext i32 %3939 to i64
  %3941 = getelementptr inbounds i16, i16* %3937, i64 %3940
  %3942 = load i16, i16* %3941, align 2
  store i16 %3942, i16* %38, align 2
  %3943 = load %struct.EState*, %struct.EState** %2, align 8
  %3944 = load i8*, i8** %39, align 8
  %3945 = load i16, i16* %38, align 2
  %3946 = zext i16 %3945 to i64
  %3947 = getelementptr inbounds i8, i8* %3944, i64 %3946
  %3948 = load i8, i8* %3947, align 1
  %3949 = zext i8 %3948 to i32
  %3950 = load i32*, i32** %40, align 8
  %3951 = load i16, i16* %38, align 2
  %3952 = zext i16 %3951 to i64
  %3953 = getelementptr inbounds i32, i32* %3950, i64 %3952
  %3954 = load i32, i32* %3953, align 4
  call void @bsW(%struct.EState* %3943, i32 %3949, i32 %3954)
  %3955 = load i16*, i16** %22, align 8
  %3956 = load i32, i32* %7, align 4
  %3957 = add nsw i32 %3956, 26
  %3958 = sext i32 %3957 to i64
  %3959 = getelementptr inbounds i16, i16* %3955, i64 %3958
  %3960 = load i16, i16* %3959, align 2
  store i16 %3960, i16* %38, align 2
  %3961 = load %struct.EState*, %struct.EState** %2, align 8
  %3962 = load i8*, i8** %39, align 8
  %3963 = load i16, i16* %38, align 2
  %3964 = zext i16 %3963 to i64
  %3965 = getelementptr inbounds i8, i8* %3962, i64 %3964
  %3966 = load i8, i8* %3965, align 1
  %3967 = zext i8 %3966 to i32
  %3968 = load i32*, i32** %40, align 8
  %3969 = load i16, i16* %38, align 2
  %3970 = zext i16 %3969 to i64
  %3971 = getelementptr inbounds i32, i32* %3968, i64 %3970
  %3972 = load i32, i32* %3971, align 4
  call void @bsW(%struct.EState* %3961, i32 %3967, i32 %3972)
  %3973 = load i16*, i16** %22, align 8
  %3974 = load i32, i32* %7, align 4
  %3975 = add nsw i32 %3974, 27
  %3976 = sext i32 %3975 to i64
  %3977 = getelementptr inbounds i16, i16* %3973, i64 %3976
  %3978 = load i16, i16* %3977, align 2
  store i16 %3978, i16* %38, align 2
  %3979 = load %struct.EState*, %struct.EState** %2, align 8
  %3980 = load i8*, i8** %39, align 8
  %3981 = load i16, i16* %38, align 2
  %3982 = zext i16 %3981 to i64
  %3983 = getelementptr inbounds i8, i8* %3980, i64 %3982
  %3984 = load i8, i8* %3983, align 1
  %3985 = zext i8 %3984 to i32
  %3986 = load i32*, i32** %40, align 8
  %3987 = load i16, i16* %38, align 2
  %3988 = zext i16 %3987 to i64
  %3989 = getelementptr inbounds i32, i32* %3986, i64 %3988
  %3990 = load i32, i32* %3989, align 4
  call void @bsW(%struct.EState* %3979, i32 %3985, i32 %3990)
  %3991 = load i16*, i16** %22, align 8
  %3992 = load i32, i32* %7, align 4
  %3993 = add nsw i32 %3992, 28
  %3994 = sext i32 %3993 to i64
  %3995 = getelementptr inbounds i16, i16* %3991, i64 %3994
  %3996 = load i16, i16* %3995, align 2
  store i16 %3996, i16* %38, align 2
  %3997 = load %struct.EState*, %struct.EState** %2, align 8
  %3998 = load i8*, i8** %39, align 8
  %3999 = load i16, i16* %38, align 2
  %4000 = zext i16 %3999 to i64
  %4001 = getelementptr inbounds i8, i8* %3998, i64 %4000
  %4002 = load i8, i8* %4001, align 1
  %4003 = zext i8 %4002 to i32
  %4004 = load i32*, i32** %40, align 8
  %4005 = load i16, i16* %38, align 2
  %4006 = zext i16 %4005 to i64
  %4007 = getelementptr inbounds i32, i32* %4004, i64 %4006
  %4008 = load i32, i32* %4007, align 4
  call void @bsW(%struct.EState* %3997, i32 %4003, i32 %4008)
  %4009 = load i16*, i16** %22, align 8
  %4010 = load i32, i32* %7, align 4
  %4011 = add nsw i32 %4010, 29
  %4012 = sext i32 %4011 to i64
  %4013 = getelementptr inbounds i16, i16* %4009, i64 %4012
  %4014 = load i16, i16* %4013, align 2
  store i16 %4014, i16* %38, align 2
  %4015 = load %struct.EState*, %struct.EState** %2, align 8
  %4016 = load i8*, i8** %39, align 8
  %4017 = load i16, i16* %38, align 2
  %4018 = zext i16 %4017 to i64
  %4019 = getelementptr inbounds i8, i8* %4016, i64 %4018
  %4020 = load i8, i8* %4019, align 1
  %4021 = zext i8 %4020 to i32
  %4022 = load i32*, i32** %40, align 8
  %4023 = load i16, i16* %38, align 2
  %4024 = zext i16 %4023 to i64
  %4025 = getelementptr inbounds i32, i32* %4022, i64 %4024
  %4026 = load i32, i32* %4025, align 4
  call void @bsW(%struct.EState* %4015, i32 %4021, i32 %4026)
  %4027 = load i16*, i16** %22, align 8
  %4028 = load i32, i32* %7, align 4
  %4029 = add nsw i32 %4028, 30
  %4030 = sext i32 %4029 to i64
  %4031 = getelementptr inbounds i16, i16* %4027, i64 %4030
  %4032 = load i16, i16* %4031, align 2
  store i16 %4032, i16* %38, align 2
  %4033 = load %struct.EState*, %struct.EState** %2, align 8
  %4034 = load i8*, i8** %39, align 8
  %4035 = load i16, i16* %38, align 2
  %4036 = zext i16 %4035 to i64
  %4037 = getelementptr inbounds i8, i8* %4034, i64 %4036
  %4038 = load i8, i8* %4037, align 1
  %4039 = zext i8 %4038 to i32
  %4040 = load i32*, i32** %40, align 8
  %4041 = load i16, i16* %38, align 2
  %4042 = zext i16 %4041 to i64
  %4043 = getelementptr inbounds i32, i32* %4040, i64 %4042
  %4044 = load i32, i32* %4043, align 4
  call void @bsW(%struct.EState* %4033, i32 %4039, i32 %4044)
  %4045 = load i16*, i16** %22, align 8
  %4046 = load i32, i32* %7, align 4
  %4047 = add nsw i32 %4046, 31
  %4048 = sext i32 %4047 to i64
  %4049 = getelementptr inbounds i16, i16* %4045, i64 %4048
  %4050 = load i16, i16* %4049, align 2
  store i16 %4050, i16* %38, align 2
  %4051 = load %struct.EState*, %struct.EState** %2, align 8
  %4052 = load i8*, i8** %39, align 8
  %4053 = load i16, i16* %38, align 2
  %4054 = zext i16 %4053 to i64
  %4055 = getelementptr inbounds i8, i8* %4052, i64 %4054
  %4056 = load i8, i8* %4055, align 1
  %4057 = zext i8 %4056 to i32
  %4058 = load i32*, i32** %40, align 8
  %4059 = load i16, i16* %38, align 2
  %4060 = zext i16 %4059 to i64
  %4061 = getelementptr inbounds i32, i32* %4058, i64 %4060
  %4062 = load i32, i32* %4061, align 4
  call void @bsW(%struct.EState* %4051, i32 %4057, i32 %4062)
  %4063 = load i16*, i16** %22, align 8
  %4064 = load i32, i32* %7, align 4
  %4065 = add nsw i32 %4064, 32
  %4066 = sext i32 %4065 to i64
  %4067 = getelementptr inbounds i16, i16* %4063, i64 %4066
  %4068 = load i16, i16* %4067, align 2
  store i16 %4068, i16* %38, align 2
  %4069 = load %struct.EState*, %struct.EState** %2, align 8
  %4070 = load i8*, i8** %39, align 8
  %4071 = load i16, i16* %38, align 2
  %4072 = zext i16 %4071 to i64
  %4073 = getelementptr inbounds i8, i8* %4070, i64 %4072
  %4074 = load i8, i8* %4073, align 1
  %4075 = zext i8 %4074 to i32
  %4076 = load i32*, i32** %40, align 8
  %4077 = load i16, i16* %38, align 2
  %4078 = zext i16 %4077 to i64
  %4079 = getelementptr inbounds i32, i32* %4076, i64 %4078
  %4080 = load i32, i32* %4079, align 4
  call void @bsW(%struct.EState* %4069, i32 %4075, i32 %4080)
  %4081 = load i16*, i16** %22, align 8
  %4082 = load i32, i32* %7, align 4
  %4083 = add nsw i32 %4082, 33
  %4084 = sext i32 %4083 to i64
  %4085 = getelementptr inbounds i16, i16* %4081, i64 %4084
  %4086 = load i16, i16* %4085, align 2
  store i16 %4086, i16* %38, align 2
  %4087 = load %struct.EState*, %struct.EState** %2, align 8
  %4088 = load i8*, i8** %39, align 8
  %4089 = load i16, i16* %38, align 2
  %4090 = zext i16 %4089 to i64
  %4091 = getelementptr inbounds i8, i8* %4088, i64 %4090
  %4092 = load i8, i8* %4091, align 1
  %4093 = zext i8 %4092 to i32
  %4094 = load i32*, i32** %40, align 8
  %4095 = load i16, i16* %38, align 2
  %4096 = zext i16 %4095 to i64
  %4097 = getelementptr inbounds i32, i32* %4094, i64 %4096
  %4098 = load i32, i32* %4097, align 4
  call void @bsW(%struct.EState* %4087, i32 %4093, i32 %4098)
  %4099 = load i16*, i16** %22, align 8
  %4100 = load i32, i32* %7, align 4
  %4101 = add nsw i32 %4100, 34
  %4102 = sext i32 %4101 to i64
  %4103 = getelementptr inbounds i16, i16* %4099, i64 %4102
  %4104 = load i16, i16* %4103, align 2
  store i16 %4104, i16* %38, align 2
  %4105 = load %struct.EState*, %struct.EState** %2, align 8
  %4106 = load i8*, i8** %39, align 8
  %4107 = load i16, i16* %38, align 2
  %4108 = zext i16 %4107 to i64
  %4109 = getelementptr inbounds i8, i8* %4106, i64 %4108
  %4110 = load i8, i8* %4109, align 1
  %4111 = zext i8 %4110 to i32
  %4112 = load i32*, i32** %40, align 8
  %4113 = load i16, i16* %38, align 2
  %4114 = zext i16 %4113 to i64
  %4115 = getelementptr inbounds i32, i32* %4112, i64 %4114
  %4116 = load i32, i32* %4115, align 4
  call void @bsW(%struct.EState* %4105, i32 %4111, i32 %4116)
  %4117 = load i16*, i16** %22, align 8
  %4118 = load i32, i32* %7, align 4
  %4119 = add nsw i32 %4118, 35
  %4120 = sext i32 %4119 to i64
  %4121 = getelementptr inbounds i16, i16* %4117, i64 %4120
  %4122 = load i16, i16* %4121, align 2
  store i16 %4122, i16* %38, align 2
  %4123 = load %struct.EState*, %struct.EState** %2, align 8
  %4124 = load i8*, i8** %39, align 8
  %4125 = load i16, i16* %38, align 2
  %4126 = zext i16 %4125 to i64
  %4127 = getelementptr inbounds i8, i8* %4124, i64 %4126
  %4128 = load i8, i8* %4127, align 1
  %4129 = zext i8 %4128 to i32
  %4130 = load i32*, i32** %40, align 8
  %4131 = load i16, i16* %38, align 2
  %4132 = zext i16 %4131 to i64
  %4133 = getelementptr inbounds i32, i32* %4130, i64 %4132
  %4134 = load i32, i32* %4133, align 4
  call void @bsW(%struct.EState* %4123, i32 %4129, i32 %4134)
  %4135 = load i16*, i16** %22, align 8
  %4136 = load i32, i32* %7, align 4
  %4137 = add nsw i32 %4136, 36
  %4138 = sext i32 %4137 to i64
  %4139 = getelementptr inbounds i16, i16* %4135, i64 %4138
  %4140 = load i16, i16* %4139, align 2
  store i16 %4140, i16* %38, align 2
  %4141 = load %struct.EState*, %struct.EState** %2, align 8
  %4142 = load i8*, i8** %39, align 8
  %4143 = load i16, i16* %38, align 2
  %4144 = zext i16 %4143 to i64
  %4145 = getelementptr inbounds i8, i8* %4142, i64 %4144
  %4146 = load i8, i8* %4145, align 1
  %4147 = zext i8 %4146 to i32
  %4148 = load i32*, i32** %40, align 8
  %4149 = load i16, i16* %38, align 2
  %4150 = zext i16 %4149 to i64
  %4151 = getelementptr inbounds i32, i32* %4148, i64 %4150
  %4152 = load i32, i32* %4151, align 4
  call void @bsW(%struct.EState* %4141, i32 %4147, i32 %4152)
  %4153 = load i16*, i16** %22, align 8
  %4154 = load i32, i32* %7, align 4
  %4155 = add nsw i32 %4154, 37
  %4156 = sext i32 %4155 to i64
  %4157 = getelementptr inbounds i16, i16* %4153, i64 %4156
  %4158 = load i16, i16* %4157, align 2
  store i16 %4158, i16* %38, align 2
  %4159 = load %struct.EState*, %struct.EState** %2, align 8
  %4160 = load i8*, i8** %39, align 8
  %4161 = load i16, i16* %38, align 2
  %4162 = zext i16 %4161 to i64
  %4163 = getelementptr inbounds i8, i8* %4160, i64 %4162
  %4164 = load i8, i8* %4163, align 1
  %4165 = zext i8 %4164 to i32
  %4166 = load i32*, i32** %40, align 8
  %4167 = load i16, i16* %38, align 2
  %4168 = zext i16 %4167 to i64
  %4169 = getelementptr inbounds i32, i32* %4166, i64 %4168
  %4170 = load i32, i32* %4169, align 4
  call void @bsW(%struct.EState* %4159, i32 %4165, i32 %4170)
  %4171 = load i16*, i16** %22, align 8
  %4172 = load i32, i32* %7, align 4
  %4173 = add nsw i32 %4172, 38
  %4174 = sext i32 %4173 to i64
  %4175 = getelementptr inbounds i16, i16* %4171, i64 %4174
  %4176 = load i16, i16* %4175, align 2
  store i16 %4176, i16* %38, align 2
  %4177 = load %struct.EState*, %struct.EState** %2, align 8
  %4178 = load i8*, i8** %39, align 8
  %4179 = load i16, i16* %38, align 2
  %4180 = zext i16 %4179 to i64
  %4181 = getelementptr inbounds i8, i8* %4178, i64 %4180
  %4182 = load i8, i8* %4181, align 1
  %4183 = zext i8 %4182 to i32
  %4184 = load i32*, i32** %40, align 8
  %4185 = load i16, i16* %38, align 2
  %4186 = zext i16 %4185 to i64
  %4187 = getelementptr inbounds i32, i32* %4184, i64 %4186
  %4188 = load i32, i32* %4187, align 4
  call void @bsW(%struct.EState* %4177, i32 %4183, i32 %4188)
  %4189 = load i16*, i16** %22, align 8
  %4190 = load i32, i32* %7, align 4
  %4191 = add nsw i32 %4190, 39
  %4192 = sext i32 %4191 to i64
  %4193 = getelementptr inbounds i16, i16* %4189, i64 %4192
  %4194 = load i16, i16* %4193, align 2
  store i16 %4194, i16* %38, align 2
  %4195 = load %struct.EState*, %struct.EState** %2, align 8
  %4196 = load i8*, i8** %39, align 8
  %4197 = load i16, i16* %38, align 2
  %4198 = zext i16 %4197 to i64
  %4199 = getelementptr inbounds i8, i8* %4196, i64 %4198
  %4200 = load i8, i8* %4199, align 1
  %4201 = zext i8 %4200 to i32
  %4202 = load i32*, i32** %40, align 8
  %4203 = load i16, i16* %38, align 2
  %4204 = zext i16 %4203 to i64
  %4205 = getelementptr inbounds i32, i32* %4202, i64 %4204
  %4206 = load i32, i32* %4205, align 4
  call void @bsW(%struct.EState* %4195, i32 %4201, i32 %4206)
  %4207 = load i16*, i16** %22, align 8
  %4208 = load i32, i32* %7, align 4
  %4209 = add nsw i32 %4208, 40
  %4210 = sext i32 %4209 to i64
  %4211 = getelementptr inbounds i16, i16* %4207, i64 %4210
  %4212 = load i16, i16* %4211, align 2
  store i16 %4212, i16* %38, align 2
  %4213 = load %struct.EState*, %struct.EState** %2, align 8
  %4214 = load i8*, i8** %39, align 8
  %4215 = load i16, i16* %38, align 2
  %4216 = zext i16 %4215 to i64
  %4217 = getelementptr inbounds i8, i8* %4214, i64 %4216
  %4218 = load i8, i8* %4217, align 1
  %4219 = zext i8 %4218 to i32
  %4220 = load i32*, i32** %40, align 8
  %4221 = load i16, i16* %38, align 2
  %4222 = zext i16 %4221 to i64
  %4223 = getelementptr inbounds i32, i32* %4220, i64 %4222
  %4224 = load i32, i32* %4223, align 4
  call void @bsW(%struct.EState* %4213, i32 %4219, i32 %4224)
  %4225 = load i16*, i16** %22, align 8
  %4226 = load i32, i32* %7, align 4
  %4227 = add nsw i32 %4226, 41
  %4228 = sext i32 %4227 to i64
  %4229 = getelementptr inbounds i16, i16* %4225, i64 %4228
  %4230 = load i16, i16* %4229, align 2
  store i16 %4230, i16* %38, align 2
  %4231 = load %struct.EState*, %struct.EState** %2, align 8
  %4232 = load i8*, i8** %39, align 8
  %4233 = load i16, i16* %38, align 2
  %4234 = zext i16 %4233 to i64
  %4235 = getelementptr inbounds i8, i8* %4232, i64 %4234
  %4236 = load i8, i8* %4235, align 1
  %4237 = zext i8 %4236 to i32
  %4238 = load i32*, i32** %40, align 8
  %4239 = load i16, i16* %38, align 2
  %4240 = zext i16 %4239 to i64
  %4241 = getelementptr inbounds i32, i32* %4238, i64 %4240
  %4242 = load i32, i32* %4241, align 4
  call void @bsW(%struct.EState* %4231, i32 %4237, i32 %4242)
  %4243 = load i16*, i16** %22, align 8
  %4244 = load i32, i32* %7, align 4
  %4245 = add nsw i32 %4244, 42
  %4246 = sext i32 %4245 to i64
  %4247 = getelementptr inbounds i16, i16* %4243, i64 %4246
  %4248 = load i16, i16* %4247, align 2
  store i16 %4248, i16* %38, align 2
  %4249 = load %struct.EState*, %struct.EState** %2, align 8
  %4250 = load i8*, i8** %39, align 8
  %4251 = load i16, i16* %38, align 2
  %4252 = zext i16 %4251 to i64
  %4253 = getelementptr inbounds i8, i8* %4250, i64 %4252
  %4254 = load i8, i8* %4253, align 1
  %4255 = zext i8 %4254 to i32
  %4256 = load i32*, i32** %40, align 8
  %4257 = load i16, i16* %38, align 2
  %4258 = zext i16 %4257 to i64
  %4259 = getelementptr inbounds i32, i32* %4256, i64 %4258
  %4260 = load i32, i32* %4259, align 4
  call void @bsW(%struct.EState* %4249, i32 %4255, i32 %4260)
  %4261 = load i16*, i16** %22, align 8
  %4262 = load i32, i32* %7, align 4
  %4263 = add nsw i32 %4262, 43
  %4264 = sext i32 %4263 to i64
  %4265 = getelementptr inbounds i16, i16* %4261, i64 %4264
  %4266 = load i16, i16* %4265, align 2
  store i16 %4266, i16* %38, align 2
  %4267 = load %struct.EState*, %struct.EState** %2, align 8
  %4268 = load i8*, i8** %39, align 8
  %4269 = load i16, i16* %38, align 2
  %4270 = zext i16 %4269 to i64
  %4271 = getelementptr inbounds i8, i8* %4268, i64 %4270
  %4272 = load i8, i8* %4271, align 1
  %4273 = zext i8 %4272 to i32
  %4274 = load i32*, i32** %40, align 8
  %4275 = load i16, i16* %38, align 2
  %4276 = zext i16 %4275 to i64
  %4277 = getelementptr inbounds i32, i32* %4274, i64 %4276
  %4278 = load i32, i32* %4277, align 4
  call void @bsW(%struct.EState* %4267, i32 %4273, i32 %4278)
  %4279 = load i16*, i16** %22, align 8
  %4280 = load i32, i32* %7, align 4
  %4281 = add nsw i32 %4280, 44
  %4282 = sext i32 %4281 to i64
  %4283 = getelementptr inbounds i16, i16* %4279, i64 %4282
  %4284 = load i16, i16* %4283, align 2
  store i16 %4284, i16* %38, align 2
  %4285 = load %struct.EState*, %struct.EState** %2, align 8
  %4286 = load i8*, i8** %39, align 8
  %4287 = load i16, i16* %38, align 2
  %4288 = zext i16 %4287 to i64
  %4289 = getelementptr inbounds i8, i8* %4286, i64 %4288
  %4290 = load i8, i8* %4289, align 1
  %4291 = zext i8 %4290 to i32
  %4292 = load i32*, i32** %40, align 8
  %4293 = load i16, i16* %38, align 2
  %4294 = zext i16 %4293 to i64
  %4295 = getelementptr inbounds i32, i32* %4292, i64 %4294
  %4296 = load i32, i32* %4295, align 4
  call void @bsW(%struct.EState* %4285, i32 %4291, i32 %4296)
  %4297 = load i16*, i16** %22, align 8
  %4298 = load i32, i32* %7, align 4
  %4299 = add nsw i32 %4298, 45
  %4300 = sext i32 %4299 to i64
  %4301 = getelementptr inbounds i16, i16* %4297, i64 %4300
  %4302 = load i16, i16* %4301, align 2
  store i16 %4302, i16* %38, align 2
  %4303 = load %struct.EState*, %struct.EState** %2, align 8
  %4304 = load i8*, i8** %39, align 8
  %4305 = load i16, i16* %38, align 2
  %4306 = zext i16 %4305 to i64
  %4307 = getelementptr inbounds i8, i8* %4304, i64 %4306
  %4308 = load i8, i8* %4307, align 1
  %4309 = zext i8 %4308 to i32
  %4310 = load i32*, i32** %40, align 8
  %4311 = load i16, i16* %38, align 2
  %4312 = zext i16 %4311 to i64
  %4313 = getelementptr inbounds i32, i32* %4310, i64 %4312
  %4314 = load i32, i32* %4313, align 4
  call void @bsW(%struct.EState* %4303, i32 %4309, i32 %4314)
  %4315 = load i16*, i16** %22, align 8
  %4316 = load i32, i32* %7, align 4
  %4317 = add nsw i32 %4316, 46
  %4318 = sext i32 %4317 to i64
  %4319 = getelementptr inbounds i16, i16* %4315, i64 %4318
  %4320 = load i16, i16* %4319, align 2
  store i16 %4320, i16* %38, align 2
  %4321 = load %struct.EState*, %struct.EState** %2, align 8
  %4322 = load i8*, i8** %39, align 8
  %4323 = load i16, i16* %38, align 2
  %4324 = zext i16 %4323 to i64
  %4325 = getelementptr inbounds i8, i8* %4322, i64 %4324
  %4326 = load i8, i8* %4325, align 1
  %4327 = zext i8 %4326 to i32
  %4328 = load i32*, i32** %40, align 8
  %4329 = load i16, i16* %38, align 2
  %4330 = zext i16 %4329 to i64
  %4331 = getelementptr inbounds i32, i32* %4328, i64 %4330
  %4332 = load i32, i32* %4331, align 4
  call void @bsW(%struct.EState* %4321, i32 %4327, i32 %4332)
  %4333 = load i16*, i16** %22, align 8
  %4334 = load i32, i32* %7, align 4
  %4335 = add nsw i32 %4334, 47
  %4336 = sext i32 %4335 to i64
  %4337 = getelementptr inbounds i16, i16* %4333, i64 %4336
  %4338 = load i16, i16* %4337, align 2
  store i16 %4338, i16* %38, align 2
  %4339 = load %struct.EState*, %struct.EState** %2, align 8
  %4340 = load i8*, i8** %39, align 8
  %4341 = load i16, i16* %38, align 2
  %4342 = zext i16 %4341 to i64
  %4343 = getelementptr inbounds i8, i8* %4340, i64 %4342
  %4344 = load i8, i8* %4343, align 1
  %4345 = zext i8 %4344 to i32
  %4346 = load i32*, i32** %40, align 8
  %4347 = load i16, i16* %38, align 2
  %4348 = zext i16 %4347 to i64
  %4349 = getelementptr inbounds i32, i32* %4346, i64 %4348
  %4350 = load i32, i32* %4349, align 4
  call void @bsW(%struct.EState* %4339, i32 %4345, i32 %4350)
  %4351 = load i16*, i16** %22, align 8
  %4352 = load i32, i32* %7, align 4
  %4353 = add nsw i32 %4352, 48
  %4354 = sext i32 %4353 to i64
  %4355 = getelementptr inbounds i16, i16* %4351, i64 %4354
  %4356 = load i16, i16* %4355, align 2
  store i16 %4356, i16* %38, align 2
  %4357 = load %struct.EState*, %struct.EState** %2, align 8
  %4358 = load i8*, i8** %39, align 8
  %4359 = load i16, i16* %38, align 2
  %4360 = zext i16 %4359 to i64
  %4361 = getelementptr inbounds i8, i8* %4358, i64 %4360
  %4362 = load i8, i8* %4361, align 1
  %4363 = zext i8 %4362 to i32
  %4364 = load i32*, i32** %40, align 8
  %4365 = load i16, i16* %38, align 2
  %4366 = zext i16 %4365 to i64
  %4367 = getelementptr inbounds i32, i32* %4364, i64 %4366
  %4368 = load i32, i32* %4367, align 4
  call void @bsW(%struct.EState* %4357, i32 %4363, i32 %4368)
  %4369 = load i16*, i16** %22, align 8
  %4370 = load i32, i32* %7, align 4
  %4371 = add nsw i32 %4370, 49
  %4372 = sext i32 %4371 to i64
  %4373 = getelementptr inbounds i16, i16* %4369, i64 %4372
  %4374 = load i16, i16* %4373, align 2
  store i16 %4374, i16* %38, align 2
  %4375 = load %struct.EState*, %struct.EState** %2, align 8
  %4376 = load i8*, i8** %39, align 8
  %4377 = load i16, i16* %38, align 2
  %4378 = zext i16 %4377 to i64
  %4379 = getelementptr inbounds i8, i8* %4376, i64 %4378
  %4380 = load i8, i8* %4379, align 1
  %4381 = zext i8 %4380 to i32
  %4382 = load i32*, i32** %40, align 8
  %4383 = load i16, i16* %38, align 2
  %4384 = zext i16 %4383 to i64
  %4385 = getelementptr inbounds i32, i32* %4382, i64 %4384
  %4386 = load i32, i32* %4385, align 4
  call void @bsW(%struct.EState* %4375, i32 %4381, i32 %4386)
  br label %4436

4387:                                             ; preds = %3458, %3455
  %4388 = load i32, i32* %7, align 4
  store i32 %4388, i32* %5, align 4
  br label %4389

4389:                                             ; preds = %4432, %4387
  %4390 = load i32, i32* %5, align 4
  %4391 = load i32, i32* %8, align 4
  %4392 = icmp sle i32 %4390, %4391
  br i1 %4392, label %4393, label %4435

4393:                                             ; preds = %4389
  %4394 = load %struct.EState*, %struct.EState** %2, align 8
  %4395 = load %struct.EState*, %struct.EState** %2, align 8
  %4396 = getelementptr inbounds %struct.EState, %struct.EState* %4395, i32 0, i32 35
  %4397 = load %struct.EState*, %struct.EState** %2, align 8
  %4398 = getelementptr inbounds %struct.EState, %struct.EState* %4397, i32 0, i32 33
  %4399 = load i32, i32* %17, align 4
  %4400 = sext i32 %4399 to i64
  %4401 = getelementptr inbounds [18002 x i8], [18002 x i8]* %4398, i64 0, i64 %4400
  %4402 = load i8, i8* %4401, align 1
  %4403 = zext i8 %4402 to i64
  %4404 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %4396, i64 0, i64 %4403
  %4405 = load i16*, i16** %22, align 8
  %4406 = load i32, i32* %5, align 4
  %4407 = sext i32 %4406 to i64
  %4408 = getelementptr inbounds i16, i16* %4405, i64 %4407
  %4409 = load i16, i16* %4408, align 2
  %4410 = zext i16 %4409 to i64
  %4411 = getelementptr inbounds [258 x i8], [258 x i8]* %4404, i64 0, i64 %4410
  %4412 = load i8, i8* %4411, align 1
  %4413 = zext i8 %4412 to i32
  %4414 = load %struct.EState*, %struct.EState** %2, align 8
  %4415 = getelementptr inbounds %struct.EState, %struct.EState* %4414, i32 0, i32 36
  %4416 = load %struct.EState*, %struct.EState** %2, align 8
  %4417 = getelementptr inbounds %struct.EState, %struct.EState* %4416, i32 0, i32 33
  %4418 = load i32, i32* %17, align 4
  %4419 = sext i32 %4418 to i64
  %4420 = getelementptr inbounds [18002 x i8], [18002 x i8]* %4417, i64 0, i64 %4419
  %4421 = load i8, i8* %4420, align 1
  %4422 = zext i8 %4421 to i64
  %4423 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %4415, i64 0, i64 %4422
  %4424 = load i16*, i16** %22, align 8
  %4425 = load i32, i32* %5, align 4
  %4426 = sext i32 %4425 to i64
  %4427 = getelementptr inbounds i16, i16* %4424, i64 %4426
  %4428 = load i16, i16* %4427, align 2
  %4429 = zext i16 %4428 to i64
  %4430 = getelementptr inbounds [258 x i32], [258 x i32]* %4423, i64 0, i64 %4429
  %4431 = load i32, i32* %4430, align 4
  call void @bsW(%struct.EState* %4394, i32 %4413, i32 %4431)
  br label %4432

4432:                                             ; preds = %4393
  %4433 = load i32, i32* %5, align 4
  %4434 = add nsw i32 %4433, 1
  store i32 %4434, i32* %5, align 4
  br label %4389

4435:                                             ; preds = %4389
  br label %4436

4436:                                             ; preds = %4435, %3464
  %4437 = load i32, i32* %8, align 4
  %4438 = add nsw i32 %4437, 1
  store i32 %4438, i32* %7, align 4
  %4439 = load i32, i32* %17, align 4
  %4440 = add nsw i32 %4439, 1
  store i32 %4440, i32* %17, align 4
  br label %3423

4441:                                             ; preds = %3429
  %4442 = load i32, i32* %17, align 4
  %4443 = load i32, i32* %13, align 4
  %4444 = icmp eq i32 %4442, %4443
  br i1 %4444, label %4446, label %4445

4445:                                             ; preds = %4441
  call void @BZ2_bz__AssertH__fail(i32 3007)
  br label %4446

4446:                                             ; preds = %4445, %4441
  %4447 = load %struct.EState*, %struct.EState** %2, align 8
  %4448 = getelementptr inbounds %struct.EState, %struct.EState* %4447, i32 0, i32 28
  %4449 = load i32, i32* %4448, align 8
  %4450 = icmp sge i32 %4449, 3
  br i1 %4450, label %4451, label %4459

4451:                                             ; preds = %4446
  %4452 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %4453 = load %struct.EState*, %struct.EState** %2, align 8
  %4454 = getelementptr inbounds %struct.EState, %struct.EState* %4453, i32 0, i32 19
  %4455 = load i32, i32* %4454, align 4
  %4456 = load i32, i32* %19, align 4
  %4457 = sub nsw i32 %4455, %4456
  %4458 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4452, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.63, i64 0, i64 0), i32 %4457)
  br label %4459

4459:                                             ; preds = %4451, %4446
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @bsFinishWrite(%struct.EState* %0) #0 {
  %2 = alloca %struct.EState*, align 8
  store %struct.EState* %0, %struct.EState** %2, align 8
  br label %3

3:                                                ; preds = %8, %1
  %4 = load %struct.EState*, %struct.EState** %2, align 8
  %5 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 25
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %34

8:                                                ; preds = %3
  %9 = load %struct.EState*, %struct.EState** %2, align 8
  %10 = getelementptr inbounds %struct.EState, %struct.EState* %9, i32 0, i32 24
  %11 = load i32, i32* %10, align 8
  %12 = lshr i32 %11, 24
  %13 = trunc i32 %12 to i8
  %14 = load %struct.EState*, %struct.EState** %2, align 8
  %15 = getelementptr inbounds %struct.EState, %struct.EState* %14, i32 0, i32 11
  %16 = load i8*, i8** %15, align 8
  %17 = load %struct.EState*, %struct.EState** %2, align 8
  %18 = getelementptr inbounds %struct.EState, %struct.EState* %17, i32 0, i32 19
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %16, i64 %20
  store i8 %13, i8* %21, align 1
  %22 = load %struct.EState*, %struct.EState** %2, align 8
  %23 = getelementptr inbounds %struct.EState, %struct.EState* %22, i32 0, i32 19
  %24 = load i32, i32* %23, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %23, align 4
  %26 = load %struct.EState*, %struct.EState** %2, align 8
  %27 = getelementptr inbounds %struct.EState, %struct.EState* %26, i32 0, i32 24
  %28 = load i32, i32* %27, align 8
  %29 = shl i32 %28, 8
  store i32 %29, i32* %27, align 8
  %30 = load %struct.EState*, %struct.EState** %2, align 8
  %31 = getelementptr inbounds %struct.EState, %struct.EState* %30, i32 0, i32 25
  %32 = load i32, i32* %31, align 4
  %33 = sub nsw i32 %32, 8
  store i32 %33, i32* %31, align 4
  br label %3

34:                                               ; preds = %3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_decompress(%struct.DState* %0) #0 {
  %2 = alloca %struct.DState*, align 8
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.bz_stream*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca [6 x i8], align 1
  %56 = alloca i8, align 1
  %57 = alloca i8, align 1
  %58 = alloca i32, align 4
  %59 = alloca i32, align 4
  %60 = alloca i32, align 4
  %61 = alloca i32, align 4
  %62 = alloca i32, align 4
  %63 = alloca i32, align 4
  %64 = alloca i32, align 4
  %65 = alloca i32, align 4
  %66 = alloca i32, align 4
  %67 = alloca i32, align 4
  %68 = alloca i32, align 4
  %69 = alloca i32, align 4
  %70 = alloca i32, align 4
  %71 = alloca i32, align 4
  %72 = alloca i32, align 4
  %73 = alloca i32, align 4
  %74 = alloca i32, align 4
  %75 = alloca i32, align 4
  %76 = alloca i32, align 4
  %77 = alloca i32, align 4
  %78 = alloca i32, align 4
  %79 = alloca i32, align 4
  %80 = alloca i32, align 4
  %81 = alloca i32, align 4
  %82 = alloca i32, align 4
  %83 = alloca i32, align 4
  %84 = alloca i32, align 4
  %85 = alloca i32, align 4
  %86 = alloca i32, align 4
  %87 = alloca i32, align 4
  store %struct.DState* %0, %struct.DState** %2, align 8
  %88 = load %struct.DState*, %struct.DState** %2, align 8
  %89 = getelementptr inbounds %struct.DState, %struct.DState* %88, i32 0, i32 0
  %90 = load %struct.bz_stream*, %struct.bz_stream** %89, align 8
  store %struct.bz_stream* %90, %struct.bz_stream** %7, align 8
  %91 = load %struct.DState*, %struct.DState** %2, align 8
  %92 = getelementptr inbounds %struct.DState, %struct.DState* %91, i32 0, i32 1
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 10
  br i1 %94, label %95, label %144

95:                                               ; preds = %1
  %96 = load %struct.DState*, %struct.DState** %2, align 8
  %97 = getelementptr inbounds %struct.DState, %struct.DState* %96, i32 0, i32 40
  store i32 0, i32* %97, align 4
  %98 = load %struct.DState*, %struct.DState** %2, align 8
  %99 = getelementptr inbounds %struct.DState, %struct.DState* %98, i32 0, i32 41
  store i32 0, i32* %99, align 8
  %100 = load %struct.DState*, %struct.DState** %2, align 8
  %101 = getelementptr inbounds %struct.DState, %struct.DState* %100, i32 0, i32 42
  store i32 0, i32* %101, align 4
  %102 = load %struct.DState*, %struct.DState** %2, align 8
  %103 = getelementptr inbounds %struct.DState, %struct.DState* %102, i32 0, i32 43
  store i32 0, i32* %103, align 8
  %104 = load %struct.DState*, %struct.DState** %2, align 8
  %105 = getelementptr inbounds %struct.DState, %struct.DState* %104, i32 0, i32 44
  store i32 0, i32* %105, align 4
  %106 = load %struct.DState*, %struct.DState** %2, align 8
  %107 = getelementptr inbounds %struct.DState, %struct.DState* %106, i32 0, i32 45
  store i32 0, i32* %107, align 8
  %108 = load %struct.DState*, %struct.DState** %2, align 8
  %109 = getelementptr inbounds %struct.DState, %struct.DState* %108, i32 0, i32 46
  store i32 0, i32* %109, align 4
  %110 = load %struct.DState*, %struct.DState** %2, align 8
  %111 = getelementptr inbounds %struct.DState, %struct.DState* %110, i32 0, i32 47
  store i32 0, i32* %111, align 8
  %112 = load %struct.DState*, %struct.DState** %2, align 8
  %113 = getelementptr inbounds %struct.DState, %struct.DState* %112, i32 0, i32 48
  store i32 0, i32* %113, align 4
  %114 = load %struct.DState*, %struct.DState** %2, align 8
  %115 = getelementptr inbounds %struct.DState, %struct.DState* %114, i32 0, i32 49
  store i32 0, i32* %115, align 8
  %116 = load %struct.DState*, %struct.DState** %2, align 8
  %117 = getelementptr inbounds %struct.DState, %struct.DState* %116, i32 0, i32 50
  store i32 0, i32* %117, align 4
  %118 = load %struct.DState*, %struct.DState** %2, align 8
  %119 = getelementptr inbounds %struct.DState, %struct.DState* %118, i32 0, i32 51
  store i32 0, i32* %119, align 8
  %120 = load %struct.DState*, %struct.DState** %2, align 8
  %121 = getelementptr inbounds %struct.DState, %struct.DState* %120, i32 0, i32 52
  store i32 0, i32* %121, align 4
  %122 = load %struct.DState*, %struct.DState** %2, align 8
  %123 = getelementptr inbounds %struct.DState, %struct.DState* %122, i32 0, i32 53
  store i32 0, i32* %123, align 8
  %124 = load %struct.DState*, %struct.DState** %2, align 8
  %125 = getelementptr inbounds %struct.DState, %struct.DState* %124, i32 0, i32 54
  store i32 0, i32* %125, align 4
  %126 = load %struct.DState*, %struct.DState** %2, align 8
  %127 = getelementptr inbounds %struct.DState, %struct.DState* %126, i32 0, i32 55
  store i32 0, i32* %127, align 8
  %128 = load %struct.DState*, %struct.DState** %2, align 8
  %129 = getelementptr inbounds %struct.DState, %struct.DState* %128, i32 0, i32 56
  store i32 0, i32* %129, align 4
  %130 = load %struct.DState*, %struct.DState** %2, align 8
  %131 = getelementptr inbounds %struct.DState, %struct.DState* %130, i32 0, i32 57
  store i32 0, i32* %131, align 8
  %132 = load %struct.DState*, %struct.DState** %2, align 8
  %133 = getelementptr inbounds %struct.DState, %struct.DState* %132, i32 0, i32 58
  store i32 0, i32* %133, align 4
  %134 = load %struct.DState*, %struct.DState** %2, align 8
  %135 = getelementptr inbounds %struct.DState, %struct.DState* %134, i32 0, i32 59
  store i32 0, i32* %135, align 8
  %136 = load %struct.DState*, %struct.DState** %2, align 8
  %137 = getelementptr inbounds %struct.DState, %struct.DState* %136, i32 0, i32 60
  store i32 0, i32* %137, align 4
  %138 = load %struct.DState*, %struct.DState** %2, align 8
  %139 = getelementptr inbounds %struct.DState, %struct.DState* %138, i32 0, i32 61
  store i32* null, i32** %139, align 8
  %140 = load %struct.DState*, %struct.DState** %2, align 8
  %141 = getelementptr inbounds %struct.DState, %struct.DState* %140, i32 0, i32 62
  store i32* null, i32** %141, align 8
  %142 = load %struct.DState*, %struct.DState** %2, align 8
  %143 = getelementptr inbounds %struct.DState, %struct.DState* %142, i32 0, i32 63
  store i32* null, i32** %143, align 8
  br label %144

144:                                              ; preds = %95, %1
  %145 = load %struct.DState*, %struct.DState** %2, align 8
  %146 = getelementptr inbounds %struct.DState, %struct.DState* %145, i32 0, i32 40
  %147 = load i32, i32* %146, align 4
  store i32 %147, i32* %8, align 4
  %148 = load %struct.DState*, %struct.DState** %2, align 8
  %149 = getelementptr inbounds %struct.DState, %struct.DState* %148, i32 0, i32 41
  %150 = load i32, i32* %149, align 8
  store i32 %150, i32* %9, align 4
  %151 = load %struct.DState*, %struct.DState** %2, align 8
  %152 = getelementptr inbounds %struct.DState, %struct.DState* %151, i32 0, i32 42
  %153 = load i32, i32* %152, align 4
  store i32 %153, i32* %10, align 4
  %154 = load %struct.DState*, %struct.DState** %2, align 8
  %155 = getelementptr inbounds %struct.DState, %struct.DState* %154, i32 0, i32 43
  %156 = load i32, i32* %155, align 8
  store i32 %156, i32* %11, align 4
  %157 = load %struct.DState*, %struct.DState** %2, align 8
  %158 = getelementptr inbounds %struct.DState, %struct.DState* %157, i32 0, i32 44
  %159 = load i32, i32* %158, align 4
  store i32 %159, i32* %12, align 4
  %160 = load %struct.DState*, %struct.DState** %2, align 8
  %161 = getelementptr inbounds %struct.DState, %struct.DState* %160, i32 0, i32 45
  %162 = load i32, i32* %161, align 8
  store i32 %162, i32* %13, align 4
  %163 = load %struct.DState*, %struct.DState** %2, align 8
  %164 = getelementptr inbounds %struct.DState, %struct.DState* %163, i32 0, i32 46
  %165 = load i32, i32* %164, align 4
  store i32 %165, i32* %14, align 4
  %166 = load %struct.DState*, %struct.DState** %2, align 8
  %167 = getelementptr inbounds %struct.DState, %struct.DState* %166, i32 0, i32 47
  %168 = load i32, i32* %167, align 8
  store i32 %168, i32* %15, align 4
  %169 = load %struct.DState*, %struct.DState** %2, align 8
  %170 = getelementptr inbounds %struct.DState, %struct.DState* %169, i32 0, i32 48
  %171 = load i32, i32* %170, align 4
  store i32 %171, i32* %16, align 4
  %172 = load %struct.DState*, %struct.DState** %2, align 8
  %173 = getelementptr inbounds %struct.DState, %struct.DState* %172, i32 0, i32 49
  %174 = load i32, i32* %173, align 8
  store i32 %174, i32* %17, align 4
  %175 = load %struct.DState*, %struct.DState** %2, align 8
  %176 = getelementptr inbounds %struct.DState, %struct.DState* %175, i32 0, i32 50
  %177 = load i32, i32* %176, align 4
  store i32 %177, i32* %18, align 4
  %178 = load %struct.DState*, %struct.DState** %2, align 8
  %179 = getelementptr inbounds %struct.DState, %struct.DState* %178, i32 0, i32 51
  %180 = load i32, i32* %179, align 8
  store i32 %180, i32* %19, align 4
  %181 = load %struct.DState*, %struct.DState** %2, align 8
  %182 = getelementptr inbounds %struct.DState, %struct.DState* %181, i32 0, i32 52
  %183 = load i32, i32* %182, align 4
  store i32 %183, i32* %20, align 4
  %184 = load %struct.DState*, %struct.DState** %2, align 8
  %185 = getelementptr inbounds %struct.DState, %struct.DState* %184, i32 0, i32 53
  %186 = load i32, i32* %185, align 8
  store i32 %186, i32* %21, align 4
  %187 = load %struct.DState*, %struct.DState** %2, align 8
  %188 = getelementptr inbounds %struct.DState, %struct.DState* %187, i32 0, i32 54
  %189 = load i32, i32* %188, align 4
  store i32 %189, i32* %22, align 4
  %190 = load %struct.DState*, %struct.DState** %2, align 8
  %191 = getelementptr inbounds %struct.DState, %struct.DState* %190, i32 0, i32 55
  %192 = load i32, i32* %191, align 8
  store i32 %192, i32* %23, align 4
  %193 = load %struct.DState*, %struct.DState** %2, align 8
  %194 = getelementptr inbounds %struct.DState, %struct.DState* %193, i32 0, i32 56
  %195 = load i32, i32* %194, align 4
  store i32 %195, i32* %24, align 4
  %196 = load %struct.DState*, %struct.DState** %2, align 8
  %197 = getelementptr inbounds %struct.DState, %struct.DState* %196, i32 0, i32 57
  %198 = load i32, i32* %197, align 8
  store i32 %198, i32* %25, align 4
  %199 = load %struct.DState*, %struct.DState** %2, align 8
  %200 = getelementptr inbounds %struct.DState, %struct.DState* %199, i32 0, i32 58
  %201 = load i32, i32* %200, align 4
  store i32 %201, i32* %26, align 4
  %202 = load %struct.DState*, %struct.DState** %2, align 8
  %203 = getelementptr inbounds %struct.DState, %struct.DState* %202, i32 0, i32 59
  %204 = load i32, i32* %203, align 8
  store i32 %204, i32* %27, align 4
  %205 = load %struct.DState*, %struct.DState** %2, align 8
  %206 = getelementptr inbounds %struct.DState, %struct.DState* %205, i32 0, i32 60
  %207 = load i32, i32* %206, align 4
  store i32 %207, i32* %28, align 4
  %208 = load %struct.DState*, %struct.DState** %2, align 8
  %209 = getelementptr inbounds %struct.DState, %struct.DState* %208, i32 0, i32 61
  %210 = load i32*, i32** %209, align 8
  store i32* %210, i32** %29, align 8
  %211 = load %struct.DState*, %struct.DState** %2, align 8
  %212 = getelementptr inbounds %struct.DState, %struct.DState* %211, i32 0, i32 62
  %213 = load i32*, i32** %212, align 8
  store i32* %213, i32** %30, align 8
  %214 = load %struct.DState*, %struct.DState** %2, align 8
  %215 = getelementptr inbounds %struct.DState, %struct.DState* %214, i32 0, i32 63
  %216 = load i32*, i32** %215, align 8
  store i32* %216, i32** %31, align 8
  store i32 0, i32* %4, align 4
  %217 = load %struct.DState*, %struct.DState** %2, align 8
  %218 = getelementptr inbounds %struct.DState, %struct.DState* %217, i32 0, i32 1
  %219 = load i32, i32* %218, align 8
  switch i32 %219, label %5715 [
    i32 10, label %220
    i32 11, label %309
    i32 12, label %398
    i32 13, label %487
    i32 14, label %663
    i32 15, label %757
    i32 16, label %846
    i32 17, label %935
    i32 18, label %1024
    i32 19, label %1113
    i32 20, label %1219
    i32 21, label %1312
    i32 22, label %1405
    i32 23, label %1498
    i32 24, label %1591
    i32 25, label %1679
    i32 26, label %1772
    i32 27, label %1865
    i32 28, label %1979
    i32 29, label %2112
    i32 30, label %2229
    i32 31, label %2319
    i32 32, label %2412
    i32 33, label %2583
    i32 34, label %2679
    i32 35, label %2768
    i32 36, label %3081
    i32 37, label %3186
    i32 38, label %3381
    i32 39, label %3486
    i32 40, label %4047
    i32 41, label %4152
    i32 42, label %4894
    i32 43, label %4983
    i32 44, label %5072
    i32 45, label %5161
    i32 46, label %5250
    i32 47, label %5341
    i32 48, label %5434
    i32 49, label %5527
    i32 50, label %5620
  ]

220:                                              ; preds = %144
  %221 = load %struct.DState*, %struct.DState** %2, align 8
  %222 = getelementptr inbounds %struct.DState, %struct.DState* %221, i32 0, i32 1
  store i32 10, i32* %222, align 8
  br label %223

223:                                              ; preds = %220, %302
  %224 = load %struct.DState*, %struct.DState** %2, align 8
  %225 = getelementptr inbounds %struct.DState, %struct.DState* %224, i32 0, i32 8
  %226 = load i32, i32* %225, align 4
  %227 = icmp sge i32 %226, 8
  br i1 %227, label %228, label %244

228:                                              ; preds = %223
  %229 = load %struct.DState*, %struct.DState** %2, align 8
  %230 = getelementptr inbounds %struct.DState, %struct.DState* %229, i32 0, i32 7
  %231 = load i32, i32* %230, align 8
  %232 = load %struct.DState*, %struct.DState** %2, align 8
  %233 = getelementptr inbounds %struct.DState, %struct.DState* %232, i32 0, i32 8
  %234 = load i32, i32* %233, align 4
  %235 = sub nsw i32 %234, 8
  %236 = lshr i32 %231, %235
  %237 = and i32 %236, 255
  store i32 %237, i32* %32, align 4
  %238 = load %struct.DState*, %struct.DState** %2, align 8
  %239 = getelementptr inbounds %struct.DState, %struct.DState* %238, i32 0, i32 8
  %240 = load i32, i32* %239, align 4
  %241 = sub nsw i32 %240, 8
  store i32 %241, i32* %239, align 4
  %242 = load i32, i32* %32, align 4
  %243 = trunc i32 %242 to i8
  store i8 %243, i8* %3, align 1
  br label %303

244:                                              ; preds = %223
  %245 = load %struct.DState*, %struct.DState** %2, align 8
  %246 = getelementptr inbounds %struct.DState, %struct.DState* %245, i32 0, i32 0
  %247 = load %struct.bz_stream*, %struct.bz_stream** %246, align 8
  %248 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %247, i32 0, i32 1
  %249 = load i32, i32* %248, align 8
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %244
  store i32 0, i32* %4, align 4
  br label %5717

252:                                              ; preds = %244
  %253 = load %struct.DState*, %struct.DState** %2, align 8
  %254 = getelementptr inbounds %struct.DState, %struct.DState* %253, i32 0, i32 7
  %255 = load i32, i32* %254, align 8
  %256 = shl i32 %255, 8
  %257 = load %struct.DState*, %struct.DState** %2, align 8
  %258 = getelementptr inbounds %struct.DState, %struct.DState* %257, i32 0, i32 0
  %259 = load %struct.bz_stream*, %struct.bz_stream** %258, align 8
  %260 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %259, i32 0, i32 0
  %261 = load i8*, i8** %260, align 8
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i32
  %264 = or i32 %256, %263
  %265 = load %struct.DState*, %struct.DState** %2, align 8
  %266 = getelementptr inbounds %struct.DState, %struct.DState* %265, i32 0, i32 7
  store i32 %264, i32* %266, align 8
  %267 = load %struct.DState*, %struct.DState** %2, align 8
  %268 = getelementptr inbounds %struct.DState, %struct.DState* %267, i32 0, i32 8
  %269 = load i32, i32* %268, align 4
  %270 = add nsw i32 %269, 8
  store i32 %270, i32* %268, align 4
  %271 = load %struct.DState*, %struct.DState** %2, align 8
  %272 = getelementptr inbounds %struct.DState, %struct.DState* %271, i32 0, i32 0
  %273 = load %struct.bz_stream*, %struct.bz_stream** %272, align 8
  %274 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %273, i32 0, i32 0
  %275 = load i8*, i8** %274, align 8
  %276 = getelementptr inbounds i8, i8* %275, i32 1
  store i8* %276, i8** %274, align 8
  %277 = load %struct.DState*, %struct.DState** %2, align 8
  %278 = getelementptr inbounds %struct.DState, %struct.DState* %277, i32 0, i32 0
  %279 = load %struct.bz_stream*, %struct.bz_stream** %278, align 8
  %280 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %279, i32 0, i32 1
  %281 = load i32, i32* %280, align 8
  %282 = add i32 %281, -1
  store i32 %282, i32* %280, align 8
  %283 = load %struct.DState*, %struct.DState** %2, align 8
  %284 = getelementptr inbounds %struct.DState, %struct.DState* %283, i32 0, i32 0
  %285 = load %struct.bz_stream*, %struct.bz_stream** %284, align 8
  %286 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %285, i32 0, i32 2
  %287 = load i32, i32* %286, align 4
  %288 = add i32 %287, 1
  store i32 %288, i32* %286, align 4
  %289 = load %struct.DState*, %struct.DState** %2, align 8
  %290 = getelementptr inbounds %struct.DState, %struct.DState* %289, i32 0, i32 0
  %291 = load %struct.bz_stream*, %struct.bz_stream** %290, align 8
  %292 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %291, i32 0, i32 2
  %293 = load i32, i32* %292, align 4
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %302

295:                                              ; preds = %252
  %296 = load %struct.DState*, %struct.DState** %2, align 8
  %297 = getelementptr inbounds %struct.DState, %struct.DState* %296, i32 0, i32 0
  %298 = load %struct.bz_stream*, %struct.bz_stream** %297, align 8
  %299 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %298, i32 0, i32 3
  %300 = load i32, i32* %299, align 8
  %301 = add i32 %300, 1
  store i32 %301, i32* %299, align 8
  br label %302

302:                                              ; preds = %295, %252
  br label %223

303:                                              ; preds = %228
  %304 = load i8, i8* %3, align 1
  %305 = zext i8 %304 to i32
  %306 = icmp ne i32 %305, 66
  br i1 %306, label %307, label %308

307:                                              ; preds = %303
  store i32 -5, i32* %4, align 4
  br label %5717

308:                                              ; preds = %303
  br label %309

309:                                              ; preds = %144, %308
  %310 = load %struct.DState*, %struct.DState** %2, align 8
  %311 = getelementptr inbounds %struct.DState, %struct.DState* %310, i32 0, i32 1
  store i32 11, i32* %311, align 8
  br label %312

312:                                              ; preds = %309, %391
  %313 = load %struct.DState*, %struct.DState** %2, align 8
  %314 = getelementptr inbounds %struct.DState, %struct.DState* %313, i32 0, i32 8
  %315 = load i32, i32* %314, align 4
  %316 = icmp sge i32 %315, 8
  br i1 %316, label %317, label %333

317:                                              ; preds = %312
  %318 = load %struct.DState*, %struct.DState** %2, align 8
  %319 = getelementptr inbounds %struct.DState, %struct.DState* %318, i32 0, i32 7
  %320 = load i32, i32* %319, align 8
  %321 = load %struct.DState*, %struct.DState** %2, align 8
  %322 = getelementptr inbounds %struct.DState, %struct.DState* %321, i32 0, i32 8
  %323 = load i32, i32* %322, align 4
  %324 = sub nsw i32 %323, 8
  %325 = lshr i32 %320, %324
  %326 = and i32 %325, 255
  store i32 %326, i32* %33, align 4
  %327 = load %struct.DState*, %struct.DState** %2, align 8
  %328 = getelementptr inbounds %struct.DState, %struct.DState* %327, i32 0, i32 8
  %329 = load i32, i32* %328, align 4
  %330 = sub nsw i32 %329, 8
  store i32 %330, i32* %328, align 4
  %331 = load i32, i32* %33, align 4
  %332 = trunc i32 %331 to i8
  store i8 %332, i8* %3, align 1
  br label %392

333:                                              ; preds = %312
  %334 = load %struct.DState*, %struct.DState** %2, align 8
  %335 = getelementptr inbounds %struct.DState, %struct.DState* %334, i32 0, i32 0
  %336 = load %struct.bz_stream*, %struct.bz_stream** %335, align 8
  %337 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %336, i32 0, i32 1
  %338 = load i32, i32* %337, align 8
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %341

340:                                              ; preds = %333
  store i32 0, i32* %4, align 4
  br label %5717

341:                                              ; preds = %333
  %342 = load %struct.DState*, %struct.DState** %2, align 8
  %343 = getelementptr inbounds %struct.DState, %struct.DState* %342, i32 0, i32 7
  %344 = load i32, i32* %343, align 8
  %345 = shl i32 %344, 8
  %346 = load %struct.DState*, %struct.DState** %2, align 8
  %347 = getelementptr inbounds %struct.DState, %struct.DState* %346, i32 0, i32 0
  %348 = load %struct.bz_stream*, %struct.bz_stream** %347, align 8
  %349 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %348, i32 0, i32 0
  %350 = load i8*, i8** %349, align 8
  %351 = load i8, i8* %350, align 1
  %352 = zext i8 %351 to i32
  %353 = or i32 %345, %352
  %354 = load %struct.DState*, %struct.DState** %2, align 8
  %355 = getelementptr inbounds %struct.DState, %struct.DState* %354, i32 0, i32 7
  store i32 %353, i32* %355, align 8
  %356 = load %struct.DState*, %struct.DState** %2, align 8
  %357 = getelementptr inbounds %struct.DState, %struct.DState* %356, i32 0, i32 8
  %358 = load i32, i32* %357, align 4
  %359 = add nsw i32 %358, 8
  store i32 %359, i32* %357, align 4
  %360 = load %struct.DState*, %struct.DState** %2, align 8
  %361 = getelementptr inbounds %struct.DState, %struct.DState* %360, i32 0, i32 0
  %362 = load %struct.bz_stream*, %struct.bz_stream** %361, align 8
  %363 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %362, i32 0, i32 0
  %364 = load i8*, i8** %363, align 8
  %365 = getelementptr inbounds i8, i8* %364, i32 1
  store i8* %365, i8** %363, align 8
  %366 = load %struct.DState*, %struct.DState** %2, align 8
  %367 = getelementptr inbounds %struct.DState, %struct.DState* %366, i32 0, i32 0
  %368 = load %struct.bz_stream*, %struct.bz_stream** %367, align 8
  %369 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %368, i32 0, i32 1
  %370 = load i32, i32* %369, align 8
  %371 = add i32 %370, -1
  store i32 %371, i32* %369, align 8
  %372 = load %struct.DState*, %struct.DState** %2, align 8
  %373 = getelementptr inbounds %struct.DState, %struct.DState* %372, i32 0, i32 0
  %374 = load %struct.bz_stream*, %struct.bz_stream** %373, align 8
  %375 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %374, i32 0, i32 2
  %376 = load i32, i32* %375, align 4
  %377 = add i32 %376, 1
  store i32 %377, i32* %375, align 4
  %378 = load %struct.DState*, %struct.DState** %2, align 8
  %379 = getelementptr inbounds %struct.DState, %struct.DState* %378, i32 0, i32 0
  %380 = load %struct.bz_stream*, %struct.bz_stream** %379, align 8
  %381 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %380, i32 0, i32 2
  %382 = load i32, i32* %381, align 4
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %384, label %391

384:                                              ; preds = %341
  %385 = load %struct.DState*, %struct.DState** %2, align 8
  %386 = getelementptr inbounds %struct.DState, %struct.DState* %385, i32 0, i32 0
  %387 = load %struct.bz_stream*, %struct.bz_stream** %386, align 8
  %388 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %387, i32 0, i32 3
  %389 = load i32, i32* %388, align 8
  %390 = add i32 %389, 1
  store i32 %390, i32* %388, align 8
  br label %391

391:                                              ; preds = %384, %341
  br label %312

392:                                              ; preds = %317
  %393 = load i8, i8* %3, align 1
  %394 = zext i8 %393 to i32
  %395 = icmp ne i32 %394, 90
  br i1 %395, label %396, label %397

396:                                              ; preds = %392
  store i32 -5, i32* %4, align 4
  br label %5717

397:                                              ; preds = %392
  br label %398

398:                                              ; preds = %144, %397
  %399 = load %struct.DState*, %struct.DState** %2, align 8
  %400 = getelementptr inbounds %struct.DState, %struct.DState* %399, i32 0, i32 1
  store i32 12, i32* %400, align 8
  br label %401

401:                                              ; preds = %398, %480
  %402 = load %struct.DState*, %struct.DState** %2, align 8
  %403 = getelementptr inbounds %struct.DState, %struct.DState* %402, i32 0, i32 8
  %404 = load i32, i32* %403, align 4
  %405 = icmp sge i32 %404, 8
  br i1 %405, label %406, label %422

406:                                              ; preds = %401
  %407 = load %struct.DState*, %struct.DState** %2, align 8
  %408 = getelementptr inbounds %struct.DState, %struct.DState* %407, i32 0, i32 7
  %409 = load i32, i32* %408, align 8
  %410 = load %struct.DState*, %struct.DState** %2, align 8
  %411 = getelementptr inbounds %struct.DState, %struct.DState* %410, i32 0, i32 8
  %412 = load i32, i32* %411, align 4
  %413 = sub nsw i32 %412, 8
  %414 = lshr i32 %409, %413
  %415 = and i32 %414, 255
  store i32 %415, i32* %34, align 4
  %416 = load %struct.DState*, %struct.DState** %2, align 8
  %417 = getelementptr inbounds %struct.DState, %struct.DState* %416, i32 0, i32 8
  %418 = load i32, i32* %417, align 4
  %419 = sub nsw i32 %418, 8
  store i32 %419, i32* %417, align 4
  %420 = load i32, i32* %34, align 4
  %421 = trunc i32 %420 to i8
  store i8 %421, i8* %3, align 1
  br label %481

422:                                              ; preds = %401
  %423 = load %struct.DState*, %struct.DState** %2, align 8
  %424 = getelementptr inbounds %struct.DState, %struct.DState* %423, i32 0, i32 0
  %425 = load %struct.bz_stream*, %struct.bz_stream** %424, align 8
  %426 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %425, i32 0, i32 1
  %427 = load i32, i32* %426, align 8
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %429, label %430

429:                                              ; preds = %422
  store i32 0, i32* %4, align 4
  br label %5717

430:                                              ; preds = %422
  %431 = load %struct.DState*, %struct.DState** %2, align 8
  %432 = getelementptr inbounds %struct.DState, %struct.DState* %431, i32 0, i32 7
  %433 = load i32, i32* %432, align 8
  %434 = shl i32 %433, 8
  %435 = load %struct.DState*, %struct.DState** %2, align 8
  %436 = getelementptr inbounds %struct.DState, %struct.DState* %435, i32 0, i32 0
  %437 = load %struct.bz_stream*, %struct.bz_stream** %436, align 8
  %438 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %437, i32 0, i32 0
  %439 = load i8*, i8** %438, align 8
  %440 = load i8, i8* %439, align 1
  %441 = zext i8 %440 to i32
  %442 = or i32 %434, %441
  %443 = load %struct.DState*, %struct.DState** %2, align 8
  %444 = getelementptr inbounds %struct.DState, %struct.DState* %443, i32 0, i32 7
  store i32 %442, i32* %444, align 8
  %445 = load %struct.DState*, %struct.DState** %2, align 8
  %446 = getelementptr inbounds %struct.DState, %struct.DState* %445, i32 0, i32 8
  %447 = load i32, i32* %446, align 4
  %448 = add nsw i32 %447, 8
  store i32 %448, i32* %446, align 4
  %449 = load %struct.DState*, %struct.DState** %2, align 8
  %450 = getelementptr inbounds %struct.DState, %struct.DState* %449, i32 0, i32 0
  %451 = load %struct.bz_stream*, %struct.bz_stream** %450, align 8
  %452 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %451, i32 0, i32 0
  %453 = load i8*, i8** %452, align 8
  %454 = getelementptr inbounds i8, i8* %453, i32 1
  store i8* %454, i8** %452, align 8
  %455 = load %struct.DState*, %struct.DState** %2, align 8
  %456 = getelementptr inbounds %struct.DState, %struct.DState* %455, i32 0, i32 0
  %457 = load %struct.bz_stream*, %struct.bz_stream** %456, align 8
  %458 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %457, i32 0, i32 1
  %459 = load i32, i32* %458, align 8
  %460 = add i32 %459, -1
  store i32 %460, i32* %458, align 8
  %461 = load %struct.DState*, %struct.DState** %2, align 8
  %462 = getelementptr inbounds %struct.DState, %struct.DState* %461, i32 0, i32 0
  %463 = load %struct.bz_stream*, %struct.bz_stream** %462, align 8
  %464 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %463, i32 0, i32 2
  %465 = load i32, i32* %464, align 4
  %466 = add i32 %465, 1
  store i32 %466, i32* %464, align 4
  %467 = load %struct.DState*, %struct.DState** %2, align 8
  %468 = getelementptr inbounds %struct.DState, %struct.DState* %467, i32 0, i32 0
  %469 = load %struct.bz_stream*, %struct.bz_stream** %468, align 8
  %470 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %469, i32 0, i32 2
  %471 = load i32, i32* %470, align 4
  %472 = icmp eq i32 %471, 0
  br i1 %472, label %473, label %480

473:                                              ; preds = %430
  %474 = load %struct.DState*, %struct.DState** %2, align 8
  %475 = getelementptr inbounds %struct.DState, %struct.DState* %474, i32 0, i32 0
  %476 = load %struct.bz_stream*, %struct.bz_stream** %475, align 8
  %477 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %476, i32 0, i32 3
  %478 = load i32, i32* %477, align 8
  %479 = add i32 %478, 1
  store i32 %479, i32* %477, align 8
  br label %480

480:                                              ; preds = %473, %430
  br label %401

481:                                              ; preds = %406
  %482 = load i8, i8* %3, align 1
  %483 = zext i8 %482 to i32
  %484 = icmp ne i32 %483, 104
  br i1 %484, label %485, label %486

485:                                              ; preds = %481
  store i32 -5, i32* %4, align 4
  br label %5717

486:                                              ; preds = %481
  br label %487

487:                                              ; preds = %144, %486
  %488 = load %struct.DState*, %struct.DState** %2, align 8
  %489 = getelementptr inbounds %struct.DState, %struct.DState* %488, i32 0, i32 1
  store i32 13, i32* %489, align 8
  br label %490

490:                                              ; preds = %487, %570
  %491 = load %struct.DState*, %struct.DState** %2, align 8
  %492 = getelementptr inbounds %struct.DState, %struct.DState* %491, i32 0, i32 8
  %493 = load i32, i32* %492, align 4
  %494 = icmp sge i32 %493, 8
  br i1 %494, label %495, label %512

495:                                              ; preds = %490
  %496 = load %struct.DState*, %struct.DState** %2, align 8
  %497 = getelementptr inbounds %struct.DState, %struct.DState* %496, i32 0, i32 7
  %498 = load i32, i32* %497, align 8
  %499 = load %struct.DState*, %struct.DState** %2, align 8
  %500 = getelementptr inbounds %struct.DState, %struct.DState* %499, i32 0, i32 8
  %501 = load i32, i32* %500, align 4
  %502 = sub nsw i32 %501, 8
  %503 = lshr i32 %498, %502
  %504 = and i32 %503, 255
  store i32 %504, i32* %35, align 4
  %505 = load %struct.DState*, %struct.DState** %2, align 8
  %506 = getelementptr inbounds %struct.DState, %struct.DState* %505, i32 0, i32 8
  %507 = load i32, i32* %506, align 4
  %508 = sub nsw i32 %507, 8
  store i32 %508, i32* %506, align 4
  %509 = load i32, i32* %35, align 4
  %510 = load %struct.DState*, %struct.DState** %2, align 8
  %511 = getelementptr inbounds %struct.DState, %struct.DState* %510, i32 0, i32 9
  store i32 %509, i32* %511, align 8
  br label %571

512:                                              ; preds = %490
  %513 = load %struct.DState*, %struct.DState** %2, align 8
  %514 = getelementptr inbounds %struct.DState, %struct.DState* %513, i32 0, i32 0
  %515 = load %struct.bz_stream*, %struct.bz_stream** %514, align 8
  %516 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %515, i32 0, i32 1
  %517 = load i32, i32* %516, align 8
  %518 = icmp eq i32 %517, 0
  br i1 %518, label %519, label %520

519:                                              ; preds = %512
  store i32 0, i32* %4, align 4
  br label %5717

520:                                              ; preds = %512
  %521 = load %struct.DState*, %struct.DState** %2, align 8
  %522 = getelementptr inbounds %struct.DState, %struct.DState* %521, i32 0, i32 7
  %523 = load i32, i32* %522, align 8
  %524 = shl i32 %523, 8
  %525 = load %struct.DState*, %struct.DState** %2, align 8
  %526 = getelementptr inbounds %struct.DState, %struct.DState* %525, i32 0, i32 0
  %527 = load %struct.bz_stream*, %struct.bz_stream** %526, align 8
  %528 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %527, i32 0, i32 0
  %529 = load i8*, i8** %528, align 8
  %530 = load i8, i8* %529, align 1
  %531 = zext i8 %530 to i32
  %532 = or i32 %524, %531
  %533 = load %struct.DState*, %struct.DState** %2, align 8
  %534 = getelementptr inbounds %struct.DState, %struct.DState* %533, i32 0, i32 7
  store i32 %532, i32* %534, align 8
  %535 = load %struct.DState*, %struct.DState** %2, align 8
  %536 = getelementptr inbounds %struct.DState, %struct.DState* %535, i32 0, i32 8
  %537 = load i32, i32* %536, align 4
  %538 = add nsw i32 %537, 8
  store i32 %538, i32* %536, align 4
  %539 = load %struct.DState*, %struct.DState** %2, align 8
  %540 = getelementptr inbounds %struct.DState, %struct.DState* %539, i32 0, i32 0
  %541 = load %struct.bz_stream*, %struct.bz_stream** %540, align 8
  %542 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %541, i32 0, i32 0
  %543 = load i8*, i8** %542, align 8
  %544 = getelementptr inbounds i8, i8* %543, i32 1
  store i8* %544, i8** %542, align 8
  %545 = load %struct.DState*, %struct.DState** %2, align 8
  %546 = getelementptr inbounds %struct.DState, %struct.DState* %545, i32 0, i32 0
  %547 = load %struct.bz_stream*, %struct.bz_stream** %546, align 8
  %548 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %547, i32 0, i32 1
  %549 = load i32, i32* %548, align 8
  %550 = add i32 %549, -1
  store i32 %550, i32* %548, align 8
  %551 = load %struct.DState*, %struct.DState** %2, align 8
  %552 = getelementptr inbounds %struct.DState, %struct.DState* %551, i32 0, i32 0
  %553 = load %struct.bz_stream*, %struct.bz_stream** %552, align 8
  %554 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %553, i32 0, i32 2
  %555 = load i32, i32* %554, align 4
  %556 = add i32 %555, 1
  store i32 %556, i32* %554, align 4
  %557 = load %struct.DState*, %struct.DState** %2, align 8
  %558 = getelementptr inbounds %struct.DState, %struct.DState* %557, i32 0, i32 0
  %559 = load %struct.bz_stream*, %struct.bz_stream** %558, align 8
  %560 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %559, i32 0, i32 2
  %561 = load i32, i32* %560, align 4
  %562 = icmp eq i32 %561, 0
  br i1 %562, label %563, label %570

563:                                              ; preds = %520
  %564 = load %struct.DState*, %struct.DState** %2, align 8
  %565 = getelementptr inbounds %struct.DState, %struct.DState* %564, i32 0, i32 0
  %566 = load %struct.bz_stream*, %struct.bz_stream** %565, align 8
  %567 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %566, i32 0, i32 3
  %568 = load i32, i32* %567, align 8
  %569 = add i32 %568, 1
  store i32 %569, i32* %567, align 8
  br label %570

570:                                              ; preds = %563, %520
  br label %490

571:                                              ; preds = %495
  %572 = load %struct.DState*, %struct.DState** %2, align 8
  %573 = getelementptr inbounds %struct.DState, %struct.DState* %572, i32 0, i32 9
  %574 = load i32, i32* %573, align 8
  %575 = icmp slt i32 %574, 49
  br i1 %575, label %581, label %576

576:                                              ; preds = %571
  %577 = load %struct.DState*, %struct.DState** %2, align 8
  %578 = getelementptr inbounds %struct.DState, %struct.DState* %577, i32 0, i32 9
  %579 = load i32, i32* %578, align 8
  %580 = icmp sgt i32 %579, 57
  br i1 %580, label %581, label %582

581:                                              ; preds = %576, %571
  store i32 -5, i32* %4, align 4
  br label %5717

582:                                              ; preds = %576
  %583 = load %struct.DState*, %struct.DState** %2, align 8
  %584 = getelementptr inbounds %struct.DState, %struct.DState* %583, i32 0, i32 9
  %585 = load i32, i32* %584, align 8
  %586 = sub nsw i32 %585, 48
  store i32 %586, i32* %584, align 8
  %587 = load %struct.DState*, %struct.DState** %2, align 8
  %588 = getelementptr inbounds %struct.DState, %struct.DState* %587, i32 0, i32 10
  %589 = load i8, i8* %588, align 4
  %590 = icmp ne i8 %589, 0
  br i1 %590, label %591, label %638

591:                                              ; preds = %582
  %592 = load %struct.bz_stream*, %struct.bz_stream** %7, align 8
  %593 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %592, i32 0, i32 9
  %594 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %593, align 8
  %595 = load %struct.bz_stream*, %struct.bz_stream** %7, align 8
  %596 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %595, i32 0, i32 11
  %597 = load i8*, i8** %596, align 8
  %598 = load %struct.DState*, %struct.DState** %2, align 8
  %599 = getelementptr inbounds %struct.DState, %struct.DState* %598, i32 0, i32 9
  %600 = load i32, i32* %599, align 8
  %601 = mul nsw i32 %600, 100000
  %602 = sext i32 %601 to i64
  %603 = mul i64 %602, 2
  %604 = trunc i64 %603 to i32
  %605 = call i8* %594(i8* %597, i32 %604, i32 1)
  %606 = bitcast i8* %605 to i16*
  %607 = load %struct.DState*, %struct.DState** %2, align 8
  %608 = getelementptr inbounds %struct.DState, %struct.DState* %607, i32 0, i32 21
  store i16* %606, i16** %608, align 8
  %609 = load %struct.bz_stream*, %struct.bz_stream** %7, align 8
  %610 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %609, i32 0, i32 9
  %611 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %610, align 8
  %612 = load %struct.bz_stream*, %struct.bz_stream** %7, align 8
  %613 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %612, i32 0, i32 11
  %614 = load i8*, i8** %613, align 8
  %615 = load %struct.DState*, %struct.DState** %2, align 8
  %616 = getelementptr inbounds %struct.DState, %struct.DState* %615, i32 0, i32 9
  %617 = load i32, i32* %616, align 8
  %618 = mul nsw i32 %617, 100000
  %619 = add nsw i32 1, %618
  %620 = ashr i32 %619, 1
  %621 = sext i32 %620 to i64
  %622 = mul i64 %621, 1
  %623 = trunc i64 %622 to i32
  %624 = call i8* %611(i8* %614, i32 %623, i32 1)
  %625 = load %struct.DState*, %struct.DState** %2, align 8
  %626 = getelementptr inbounds %struct.DState, %struct.DState* %625, i32 0, i32 22
  store i8* %624, i8** %626, align 8
  %627 = load %struct.DState*, %struct.DState** %2, align 8
  %628 = getelementptr inbounds %struct.DState, %struct.DState* %627, i32 0, i32 21
  %629 = load i16*, i16** %628, align 8
  %630 = icmp eq i16* %629, null
  br i1 %630, label %636, label %631

631:                                              ; preds = %591
  %632 = load %struct.DState*, %struct.DState** %2, align 8
  %633 = getelementptr inbounds %struct.DState, %struct.DState* %632, i32 0, i32 22
  %634 = load i8*, i8** %633, align 8
  %635 = icmp eq i8* %634, null
  br i1 %635, label %636, label %637

636:                                              ; preds = %631, %591
  store i32 -3, i32* %4, align 4
  br label %5717

637:                                              ; preds = %631
  br label %662

638:                                              ; preds = %582
  %639 = load %struct.bz_stream*, %struct.bz_stream** %7, align 8
  %640 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %639, i32 0, i32 9
  %641 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %640, align 8
  %642 = load %struct.bz_stream*, %struct.bz_stream** %7, align 8
  %643 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %642, i32 0, i32 11
  %644 = load i8*, i8** %643, align 8
  %645 = load %struct.DState*, %struct.DState** %2, align 8
  %646 = getelementptr inbounds %struct.DState, %struct.DState* %645, i32 0, i32 9
  %647 = load i32, i32* %646, align 8
  %648 = mul nsw i32 %647, 100000
  %649 = sext i32 %648 to i64
  %650 = mul i64 %649, 4
  %651 = trunc i64 %650 to i32
  %652 = call i8* %641(i8* %644, i32 %651, i32 1)
  %653 = bitcast i8* %652 to i32*
  %654 = load %struct.DState*, %struct.DState** %2, align 8
  %655 = getelementptr inbounds %struct.DState, %struct.DState* %654, i32 0, i32 20
  store i32* %653, i32** %655, align 8
  %656 = load %struct.DState*, %struct.DState** %2, align 8
  %657 = getelementptr inbounds %struct.DState, %struct.DState* %656, i32 0, i32 20
  %658 = load i32*, i32** %657, align 8
  %659 = icmp eq i32* %658, null
  br i1 %659, label %660, label %661

660:                                              ; preds = %638
  store i32 -3, i32* %4, align 4
  br label %5717

661:                                              ; preds = %638
  br label %662

662:                                              ; preds = %661, %637
  br label %663

663:                                              ; preds = %144, %662
  %664 = load %struct.DState*, %struct.DState** %2, align 8
  %665 = getelementptr inbounds %struct.DState, %struct.DState* %664, i32 0, i32 1
  store i32 14, i32* %665, align 8
  br label %666

666:                                              ; preds = %663, %745
  %667 = load %struct.DState*, %struct.DState** %2, align 8
  %668 = getelementptr inbounds %struct.DState, %struct.DState* %667, i32 0, i32 8
  %669 = load i32, i32* %668, align 4
  %670 = icmp sge i32 %669, 8
  br i1 %670, label %671, label %687

671:                                              ; preds = %666
  %672 = load %struct.DState*, %struct.DState** %2, align 8
  %673 = getelementptr inbounds %struct.DState, %struct.DState* %672, i32 0, i32 7
  %674 = load i32, i32* %673, align 8
  %675 = load %struct.DState*, %struct.DState** %2, align 8
  %676 = getelementptr inbounds %struct.DState, %struct.DState* %675, i32 0, i32 8
  %677 = load i32, i32* %676, align 4
  %678 = sub nsw i32 %677, 8
  %679 = lshr i32 %674, %678
  %680 = and i32 %679, 255
  store i32 %680, i32* %36, align 4
  %681 = load %struct.DState*, %struct.DState** %2, align 8
  %682 = getelementptr inbounds %struct.DState, %struct.DState* %681, i32 0, i32 8
  %683 = load i32, i32* %682, align 4
  %684 = sub nsw i32 %683, 8
  store i32 %684, i32* %682, align 4
  %685 = load i32, i32* %36, align 4
  %686 = trunc i32 %685 to i8
  store i8 %686, i8* %3, align 1
  br label %746

687:                                              ; preds = %666
  %688 = load %struct.DState*, %struct.DState** %2, align 8
  %689 = getelementptr inbounds %struct.DState, %struct.DState* %688, i32 0, i32 0
  %690 = load %struct.bz_stream*, %struct.bz_stream** %689, align 8
  %691 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %690, i32 0, i32 1
  %692 = load i32, i32* %691, align 8
  %693 = icmp eq i32 %692, 0
  br i1 %693, label %694, label %695

694:                                              ; preds = %687
  store i32 0, i32* %4, align 4
  br label %5717

695:                                              ; preds = %687
  %696 = load %struct.DState*, %struct.DState** %2, align 8
  %697 = getelementptr inbounds %struct.DState, %struct.DState* %696, i32 0, i32 7
  %698 = load i32, i32* %697, align 8
  %699 = shl i32 %698, 8
  %700 = load %struct.DState*, %struct.DState** %2, align 8
  %701 = getelementptr inbounds %struct.DState, %struct.DState* %700, i32 0, i32 0
  %702 = load %struct.bz_stream*, %struct.bz_stream** %701, align 8
  %703 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %702, i32 0, i32 0
  %704 = load i8*, i8** %703, align 8
  %705 = load i8, i8* %704, align 1
  %706 = zext i8 %705 to i32
  %707 = or i32 %699, %706
  %708 = load %struct.DState*, %struct.DState** %2, align 8
  %709 = getelementptr inbounds %struct.DState, %struct.DState* %708, i32 0, i32 7
  store i32 %707, i32* %709, align 8
  %710 = load %struct.DState*, %struct.DState** %2, align 8
  %711 = getelementptr inbounds %struct.DState, %struct.DState* %710, i32 0, i32 8
  %712 = load i32, i32* %711, align 4
  %713 = add nsw i32 %712, 8
  store i32 %713, i32* %711, align 4
  %714 = load %struct.DState*, %struct.DState** %2, align 8
  %715 = getelementptr inbounds %struct.DState, %struct.DState* %714, i32 0, i32 0
  %716 = load %struct.bz_stream*, %struct.bz_stream** %715, align 8
  %717 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %716, i32 0, i32 0
  %718 = load i8*, i8** %717, align 8
  %719 = getelementptr inbounds i8, i8* %718, i32 1
  store i8* %719, i8** %717, align 8
  %720 = load %struct.DState*, %struct.DState** %2, align 8
  %721 = getelementptr inbounds %struct.DState, %struct.DState* %720, i32 0, i32 0
  %722 = load %struct.bz_stream*, %struct.bz_stream** %721, align 8
  %723 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %722, i32 0, i32 1
  %724 = load i32, i32* %723, align 8
  %725 = add i32 %724, -1
  store i32 %725, i32* %723, align 8
  %726 = load %struct.DState*, %struct.DState** %2, align 8
  %727 = getelementptr inbounds %struct.DState, %struct.DState* %726, i32 0, i32 0
  %728 = load %struct.bz_stream*, %struct.bz_stream** %727, align 8
  %729 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %728, i32 0, i32 2
  %730 = load i32, i32* %729, align 4
  %731 = add i32 %730, 1
  store i32 %731, i32* %729, align 4
  %732 = load %struct.DState*, %struct.DState** %2, align 8
  %733 = getelementptr inbounds %struct.DState, %struct.DState* %732, i32 0, i32 0
  %734 = load %struct.bz_stream*, %struct.bz_stream** %733, align 8
  %735 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %734, i32 0, i32 2
  %736 = load i32, i32* %735, align 4
  %737 = icmp eq i32 %736, 0
  br i1 %737, label %738, label %745

738:                                              ; preds = %695
  %739 = load %struct.DState*, %struct.DState** %2, align 8
  %740 = getelementptr inbounds %struct.DState, %struct.DState* %739, i32 0, i32 0
  %741 = load %struct.bz_stream*, %struct.bz_stream** %740, align 8
  %742 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %741, i32 0, i32 3
  %743 = load i32, i32* %742, align 8
  %744 = add i32 %743, 1
  store i32 %744, i32* %742, align 8
  br label %745

745:                                              ; preds = %738, %695
  br label %666

746:                                              ; preds = %671
  %747 = load i8, i8* %3, align 1
  %748 = zext i8 %747 to i32
  %749 = icmp eq i32 %748, 23
  br i1 %749, label %750, label %751

750:                                              ; preds = %746
  br label %4893

751:                                              ; preds = %746
  %752 = load i8, i8* %3, align 1
  %753 = zext i8 %752 to i32
  %754 = icmp ne i32 %753, 49
  br i1 %754, label %755, label %756

755:                                              ; preds = %751
  store i32 -4, i32* %4, align 4
  br label %5717

756:                                              ; preds = %751
  br label %757

757:                                              ; preds = %144, %756
  %758 = load %struct.DState*, %struct.DState** %2, align 8
  %759 = getelementptr inbounds %struct.DState, %struct.DState* %758, i32 0, i32 1
  store i32 15, i32* %759, align 8
  br label %760

760:                                              ; preds = %757, %839
  %761 = load %struct.DState*, %struct.DState** %2, align 8
  %762 = getelementptr inbounds %struct.DState, %struct.DState* %761, i32 0, i32 8
  %763 = load i32, i32* %762, align 4
  %764 = icmp sge i32 %763, 8
  br i1 %764, label %765, label %781

765:                                              ; preds = %760
  %766 = load %struct.DState*, %struct.DState** %2, align 8
  %767 = getelementptr inbounds %struct.DState, %struct.DState* %766, i32 0, i32 7
  %768 = load i32, i32* %767, align 8
  %769 = load %struct.DState*, %struct.DState** %2, align 8
  %770 = getelementptr inbounds %struct.DState, %struct.DState* %769, i32 0, i32 8
  %771 = load i32, i32* %770, align 4
  %772 = sub nsw i32 %771, 8
  %773 = lshr i32 %768, %772
  %774 = and i32 %773, 255
  store i32 %774, i32* %37, align 4
  %775 = load %struct.DState*, %struct.DState** %2, align 8
  %776 = getelementptr inbounds %struct.DState, %struct.DState* %775, i32 0, i32 8
  %777 = load i32, i32* %776, align 4
  %778 = sub nsw i32 %777, 8
  store i32 %778, i32* %776, align 4
  %779 = load i32, i32* %37, align 4
  %780 = trunc i32 %779 to i8
  store i8 %780, i8* %3, align 1
  br label %840

781:                                              ; preds = %760
  %782 = load %struct.DState*, %struct.DState** %2, align 8
  %783 = getelementptr inbounds %struct.DState, %struct.DState* %782, i32 0, i32 0
  %784 = load %struct.bz_stream*, %struct.bz_stream** %783, align 8
  %785 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %784, i32 0, i32 1
  %786 = load i32, i32* %785, align 8
  %787 = icmp eq i32 %786, 0
  br i1 %787, label %788, label %789

788:                                              ; preds = %781
  store i32 0, i32* %4, align 4
  br label %5717

789:                                              ; preds = %781
  %790 = load %struct.DState*, %struct.DState** %2, align 8
  %791 = getelementptr inbounds %struct.DState, %struct.DState* %790, i32 0, i32 7
  %792 = load i32, i32* %791, align 8
  %793 = shl i32 %792, 8
  %794 = load %struct.DState*, %struct.DState** %2, align 8
  %795 = getelementptr inbounds %struct.DState, %struct.DState* %794, i32 0, i32 0
  %796 = load %struct.bz_stream*, %struct.bz_stream** %795, align 8
  %797 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %796, i32 0, i32 0
  %798 = load i8*, i8** %797, align 8
  %799 = load i8, i8* %798, align 1
  %800 = zext i8 %799 to i32
  %801 = or i32 %793, %800
  %802 = load %struct.DState*, %struct.DState** %2, align 8
  %803 = getelementptr inbounds %struct.DState, %struct.DState* %802, i32 0, i32 7
  store i32 %801, i32* %803, align 8
  %804 = load %struct.DState*, %struct.DState** %2, align 8
  %805 = getelementptr inbounds %struct.DState, %struct.DState* %804, i32 0, i32 8
  %806 = load i32, i32* %805, align 4
  %807 = add nsw i32 %806, 8
  store i32 %807, i32* %805, align 4
  %808 = load %struct.DState*, %struct.DState** %2, align 8
  %809 = getelementptr inbounds %struct.DState, %struct.DState* %808, i32 0, i32 0
  %810 = load %struct.bz_stream*, %struct.bz_stream** %809, align 8
  %811 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %810, i32 0, i32 0
  %812 = load i8*, i8** %811, align 8
  %813 = getelementptr inbounds i8, i8* %812, i32 1
  store i8* %813, i8** %811, align 8
  %814 = load %struct.DState*, %struct.DState** %2, align 8
  %815 = getelementptr inbounds %struct.DState, %struct.DState* %814, i32 0, i32 0
  %816 = load %struct.bz_stream*, %struct.bz_stream** %815, align 8
  %817 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %816, i32 0, i32 1
  %818 = load i32, i32* %817, align 8
  %819 = add i32 %818, -1
  store i32 %819, i32* %817, align 8
  %820 = load %struct.DState*, %struct.DState** %2, align 8
  %821 = getelementptr inbounds %struct.DState, %struct.DState* %820, i32 0, i32 0
  %822 = load %struct.bz_stream*, %struct.bz_stream** %821, align 8
  %823 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %822, i32 0, i32 2
  %824 = load i32, i32* %823, align 4
  %825 = add i32 %824, 1
  store i32 %825, i32* %823, align 4
  %826 = load %struct.DState*, %struct.DState** %2, align 8
  %827 = getelementptr inbounds %struct.DState, %struct.DState* %826, i32 0, i32 0
  %828 = load %struct.bz_stream*, %struct.bz_stream** %827, align 8
  %829 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %828, i32 0, i32 2
  %830 = load i32, i32* %829, align 4
  %831 = icmp eq i32 %830, 0
  br i1 %831, label %832, label %839

832:                                              ; preds = %789
  %833 = load %struct.DState*, %struct.DState** %2, align 8
  %834 = getelementptr inbounds %struct.DState, %struct.DState* %833, i32 0, i32 0
  %835 = load %struct.bz_stream*, %struct.bz_stream** %834, align 8
  %836 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %835, i32 0, i32 3
  %837 = load i32, i32* %836, align 8
  %838 = add i32 %837, 1
  store i32 %838, i32* %836, align 8
  br label %839

839:                                              ; preds = %832, %789
  br label %760

840:                                              ; preds = %765
  %841 = load i8, i8* %3, align 1
  %842 = zext i8 %841 to i32
  %843 = icmp ne i32 %842, 65
  br i1 %843, label %844, label %845

844:                                              ; preds = %840
  store i32 -4, i32* %4, align 4
  br label %5717

845:                                              ; preds = %840
  br label %846

846:                                              ; preds = %144, %845
  %847 = load %struct.DState*, %struct.DState** %2, align 8
  %848 = getelementptr inbounds %struct.DState, %struct.DState* %847, i32 0, i32 1
  store i32 16, i32* %848, align 8
  br label %849

849:                                              ; preds = %846, %928
  %850 = load %struct.DState*, %struct.DState** %2, align 8
  %851 = getelementptr inbounds %struct.DState, %struct.DState* %850, i32 0, i32 8
  %852 = load i32, i32* %851, align 4
  %853 = icmp sge i32 %852, 8
  br i1 %853, label %854, label %870

854:                                              ; preds = %849
  %855 = load %struct.DState*, %struct.DState** %2, align 8
  %856 = getelementptr inbounds %struct.DState, %struct.DState* %855, i32 0, i32 7
  %857 = load i32, i32* %856, align 8
  %858 = load %struct.DState*, %struct.DState** %2, align 8
  %859 = getelementptr inbounds %struct.DState, %struct.DState* %858, i32 0, i32 8
  %860 = load i32, i32* %859, align 4
  %861 = sub nsw i32 %860, 8
  %862 = lshr i32 %857, %861
  %863 = and i32 %862, 255
  store i32 %863, i32* %38, align 4
  %864 = load %struct.DState*, %struct.DState** %2, align 8
  %865 = getelementptr inbounds %struct.DState, %struct.DState* %864, i32 0, i32 8
  %866 = load i32, i32* %865, align 4
  %867 = sub nsw i32 %866, 8
  store i32 %867, i32* %865, align 4
  %868 = load i32, i32* %38, align 4
  %869 = trunc i32 %868 to i8
  store i8 %869, i8* %3, align 1
  br label %929

870:                                              ; preds = %849
  %871 = load %struct.DState*, %struct.DState** %2, align 8
  %872 = getelementptr inbounds %struct.DState, %struct.DState* %871, i32 0, i32 0
  %873 = load %struct.bz_stream*, %struct.bz_stream** %872, align 8
  %874 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %873, i32 0, i32 1
  %875 = load i32, i32* %874, align 8
  %876 = icmp eq i32 %875, 0
  br i1 %876, label %877, label %878

877:                                              ; preds = %870
  store i32 0, i32* %4, align 4
  br label %5717

878:                                              ; preds = %870
  %879 = load %struct.DState*, %struct.DState** %2, align 8
  %880 = getelementptr inbounds %struct.DState, %struct.DState* %879, i32 0, i32 7
  %881 = load i32, i32* %880, align 8
  %882 = shl i32 %881, 8
  %883 = load %struct.DState*, %struct.DState** %2, align 8
  %884 = getelementptr inbounds %struct.DState, %struct.DState* %883, i32 0, i32 0
  %885 = load %struct.bz_stream*, %struct.bz_stream** %884, align 8
  %886 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %885, i32 0, i32 0
  %887 = load i8*, i8** %886, align 8
  %888 = load i8, i8* %887, align 1
  %889 = zext i8 %888 to i32
  %890 = or i32 %882, %889
  %891 = load %struct.DState*, %struct.DState** %2, align 8
  %892 = getelementptr inbounds %struct.DState, %struct.DState* %891, i32 0, i32 7
  store i32 %890, i32* %892, align 8
  %893 = load %struct.DState*, %struct.DState** %2, align 8
  %894 = getelementptr inbounds %struct.DState, %struct.DState* %893, i32 0, i32 8
  %895 = load i32, i32* %894, align 4
  %896 = add nsw i32 %895, 8
  store i32 %896, i32* %894, align 4
  %897 = load %struct.DState*, %struct.DState** %2, align 8
  %898 = getelementptr inbounds %struct.DState, %struct.DState* %897, i32 0, i32 0
  %899 = load %struct.bz_stream*, %struct.bz_stream** %898, align 8
  %900 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %899, i32 0, i32 0
  %901 = load i8*, i8** %900, align 8
  %902 = getelementptr inbounds i8, i8* %901, i32 1
  store i8* %902, i8** %900, align 8
  %903 = load %struct.DState*, %struct.DState** %2, align 8
  %904 = getelementptr inbounds %struct.DState, %struct.DState* %903, i32 0, i32 0
  %905 = load %struct.bz_stream*, %struct.bz_stream** %904, align 8
  %906 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %905, i32 0, i32 1
  %907 = load i32, i32* %906, align 8
  %908 = add i32 %907, -1
  store i32 %908, i32* %906, align 8
  %909 = load %struct.DState*, %struct.DState** %2, align 8
  %910 = getelementptr inbounds %struct.DState, %struct.DState* %909, i32 0, i32 0
  %911 = load %struct.bz_stream*, %struct.bz_stream** %910, align 8
  %912 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %911, i32 0, i32 2
  %913 = load i32, i32* %912, align 4
  %914 = add i32 %913, 1
  store i32 %914, i32* %912, align 4
  %915 = load %struct.DState*, %struct.DState** %2, align 8
  %916 = getelementptr inbounds %struct.DState, %struct.DState* %915, i32 0, i32 0
  %917 = load %struct.bz_stream*, %struct.bz_stream** %916, align 8
  %918 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %917, i32 0, i32 2
  %919 = load i32, i32* %918, align 4
  %920 = icmp eq i32 %919, 0
  br i1 %920, label %921, label %928

921:                                              ; preds = %878
  %922 = load %struct.DState*, %struct.DState** %2, align 8
  %923 = getelementptr inbounds %struct.DState, %struct.DState* %922, i32 0, i32 0
  %924 = load %struct.bz_stream*, %struct.bz_stream** %923, align 8
  %925 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %924, i32 0, i32 3
  %926 = load i32, i32* %925, align 8
  %927 = add i32 %926, 1
  store i32 %927, i32* %925, align 8
  br label %928

928:                                              ; preds = %921, %878
  br label %849

929:                                              ; preds = %854
  %930 = load i8, i8* %3, align 1
  %931 = zext i8 %930 to i32
  %932 = icmp ne i32 %931, 89
  br i1 %932, label %933, label %934

933:                                              ; preds = %929
  store i32 -4, i32* %4, align 4
  br label %5717

934:                                              ; preds = %929
  br label %935

935:                                              ; preds = %144, %934
  %936 = load %struct.DState*, %struct.DState** %2, align 8
  %937 = getelementptr inbounds %struct.DState, %struct.DState* %936, i32 0, i32 1
  store i32 17, i32* %937, align 8
  br label %938

938:                                              ; preds = %935, %1017
  %939 = load %struct.DState*, %struct.DState** %2, align 8
  %940 = getelementptr inbounds %struct.DState, %struct.DState* %939, i32 0, i32 8
  %941 = load i32, i32* %940, align 4
  %942 = icmp sge i32 %941, 8
  br i1 %942, label %943, label %959

943:                                              ; preds = %938
  %944 = load %struct.DState*, %struct.DState** %2, align 8
  %945 = getelementptr inbounds %struct.DState, %struct.DState* %944, i32 0, i32 7
  %946 = load i32, i32* %945, align 8
  %947 = load %struct.DState*, %struct.DState** %2, align 8
  %948 = getelementptr inbounds %struct.DState, %struct.DState* %947, i32 0, i32 8
  %949 = load i32, i32* %948, align 4
  %950 = sub nsw i32 %949, 8
  %951 = lshr i32 %946, %950
  %952 = and i32 %951, 255
  store i32 %952, i32* %39, align 4
  %953 = load %struct.DState*, %struct.DState** %2, align 8
  %954 = getelementptr inbounds %struct.DState, %struct.DState* %953, i32 0, i32 8
  %955 = load i32, i32* %954, align 4
  %956 = sub nsw i32 %955, 8
  store i32 %956, i32* %954, align 4
  %957 = load i32, i32* %39, align 4
  %958 = trunc i32 %957 to i8
  store i8 %958, i8* %3, align 1
  br label %1018

959:                                              ; preds = %938
  %960 = load %struct.DState*, %struct.DState** %2, align 8
  %961 = getelementptr inbounds %struct.DState, %struct.DState* %960, i32 0, i32 0
  %962 = load %struct.bz_stream*, %struct.bz_stream** %961, align 8
  %963 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %962, i32 0, i32 1
  %964 = load i32, i32* %963, align 8
  %965 = icmp eq i32 %964, 0
  br i1 %965, label %966, label %967

966:                                              ; preds = %959
  store i32 0, i32* %4, align 4
  br label %5717

967:                                              ; preds = %959
  %968 = load %struct.DState*, %struct.DState** %2, align 8
  %969 = getelementptr inbounds %struct.DState, %struct.DState* %968, i32 0, i32 7
  %970 = load i32, i32* %969, align 8
  %971 = shl i32 %970, 8
  %972 = load %struct.DState*, %struct.DState** %2, align 8
  %973 = getelementptr inbounds %struct.DState, %struct.DState* %972, i32 0, i32 0
  %974 = load %struct.bz_stream*, %struct.bz_stream** %973, align 8
  %975 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %974, i32 0, i32 0
  %976 = load i8*, i8** %975, align 8
  %977 = load i8, i8* %976, align 1
  %978 = zext i8 %977 to i32
  %979 = or i32 %971, %978
  %980 = load %struct.DState*, %struct.DState** %2, align 8
  %981 = getelementptr inbounds %struct.DState, %struct.DState* %980, i32 0, i32 7
  store i32 %979, i32* %981, align 8
  %982 = load %struct.DState*, %struct.DState** %2, align 8
  %983 = getelementptr inbounds %struct.DState, %struct.DState* %982, i32 0, i32 8
  %984 = load i32, i32* %983, align 4
  %985 = add nsw i32 %984, 8
  store i32 %985, i32* %983, align 4
  %986 = load %struct.DState*, %struct.DState** %2, align 8
  %987 = getelementptr inbounds %struct.DState, %struct.DState* %986, i32 0, i32 0
  %988 = load %struct.bz_stream*, %struct.bz_stream** %987, align 8
  %989 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %988, i32 0, i32 0
  %990 = load i8*, i8** %989, align 8
  %991 = getelementptr inbounds i8, i8* %990, i32 1
  store i8* %991, i8** %989, align 8
  %992 = load %struct.DState*, %struct.DState** %2, align 8
  %993 = getelementptr inbounds %struct.DState, %struct.DState* %992, i32 0, i32 0
  %994 = load %struct.bz_stream*, %struct.bz_stream** %993, align 8
  %995 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %994, i32 0, i32 1
  %996 = load i32, i32* %995, align 8
  %997 = add i32 %996, -1
  store i32 %997, i32* %995, align 8
  %998 = load %struct.DState*, %struct.DState** %2, align 8
  %999 = getelementptr inbounds %struct.DState, %struct.DState* %998, i32 0, i32 0
  %1000 = load %struct.bz_stream*, %struct.bz_stream** %999, align 8
  %1001 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1000, i32 0, i32 2
  %1002 = load i32, i32* %1001, align 4
  %1003 = add i32 %1002, 1
  store i32 %1003, i32* %1001, align 4
  %1004 = load %struct.DState*, %struct.DState** %2, align 8
  %1005 = getelementptr inbounds %struct.DState, %struct.DState* %1004, i32 0, i32 0
  %1006 = load %struct.bz_stream*, %struct.bz_stream** %1005, align 8
  %1007 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1006, i32 0, i32 2
  %1008 = load i32, i32* %1007, align 4
  %1009 = icmp eq i32 %1008, 0
  br i1 %1009, label %1010, label %1017

1010:                                             ; preds = %967
  %1011 = load %struct.DState*, %struct.DState** %2, align 8
  %1012 = getelementptr inbounds %struct.DState, %struct.DState* %1011, i32 0, i32 0
  %1013 = load %struct.bz_stream*, %struct.bz_stream** %1012, align 8
  %1014 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1013, i32 0, i32 3
  %1015 = load i32, i32* %1014, align 8
  %1016 = add i32 %1015, 1
  store i32 %1016, i32* %1014, align 8
  br label %1017

1017:                                             ; preds = %1010, %967
  br label %938

1018:                                             ; preds = %943
  %1019 = load i8, i8* %3, align 1
  %1020 = zext i8 %1019 to i32
  %1021 = icmp ne i32 %1020, 38
  br i1 %1021, label %1022, label %1023

1022:                                             ; preds = %1018
  store i32 -4, i32* %4, align 4
  br label %5717

1023:                                             ; preds = %1018
  br label %1024

1024:                                             ; preds = %144, %1023
  %1025 = load %struct.DState*, %struct.DState** %2, align 8
  %1026 = getelementptr inbounds %struct.DState, %struct.DState* %1025, i32 0, i32 1
  store i32 18, i32* %1026, align 8
  br label %1027

1027:                                             ; preds = %1024, %1106
  %1028 = load %struct.DState*, %struct.DState** %2, align 8
  %1029 = getelementptr inbounds %struct.DState, %struct.DState* %1028, i32 0, i32 8
  %1030 = load i32, i32* %1029, align 4
  %1031 = icmp sge i32 %1030, 8
  br i1 %1031, label %1032, label %1048

1032:                                             ; preds = %1027
  %1033 = load %struct.DState*, %struct.DState** %2, align 8
  %1034 = getelementptr inbounds %struct.DState, %struct.DState* %1033, i32 0, i32 7
  %1035 = load i32, i32* %1034, align 8
  %1036 = load %struct.DState*, %struct.DState** %2, align 8
  %1037 = getelementptr inbounds %struct.DState, %struct.DState* %1036, i32 0, i32 8
  %1038 = load i32, i32* %1037, align 4
  %1039 = sub nsw i32 %1038, 8
  %1040 = lshr i32 %1035, %1039
  %1041 = and i32 %1040, 255
  store i32 %1041, i32* %40, align 4
  %1042 = load %struct.DState*, %struct.DState** %2, align 8
  %1043 = getelementptr inbounds %struct.DState, %struct.DState* %1042, i32 0, i32 8
  %1044 = load i32, i32* %1043, align 4
  %1045 = sub nsw i32 %1044, 8
  store i32 %1045, i32* %1043, align 4
  %1046 = load i32, i32* %40, align 4
  %1047 = trunc i32 %1046 to i8
  store i8 %1047, i8* %3, align 1
  br label %1107

1048:                                             ; preds = %1027
  %1049 = load %struct.DState*, %struct.DState** %2, align 8
  %1050 = getelementptr inbounds %struct.DState, %struct.DState* %1049, i32 0, i32 0
  %1051 = load %struct.bz_stream*, %struct.bz_stream** %1050, align 8
  %1052 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1051, i32 0, i32 1
  %1053 = load i32, i32* %1052, align 8
  %1054 = icmp eq i32 %1053, 0
  br i1 %1054, label %1055, label %1056

1055:                                             ; preds = %1048
  store i32 0, i32* %4, align 4
  br label %5717

1056:                                             ; preds = %1048
  %1057 = load %struct.DState*, %struct.DState** %2, align 8
  %1058 = getelementptr inbounds %struct.DState, %struct.DState* %1057, i32 0, i32 7
  %1059 = load i32, i32* %1058, align 8
  %1060 = shl i32 %1059, 8
  %1061 = load %struct.DState*, %struct.DState** %2, align 8
  %1062 = getelementptr inbounds %struct.DState, %struct.DState* %1061, i32 0, i32 0
  %1063 = load %struct.bz_stream*, %struct.bz_stream** %1062, align 8
  %1064 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1063, i32 0, i32 0
  %1065 = load i8*, i8** %1064, align 8
  %1066 = load i8, i8* %1065, align 1
  %1067 = zext i8 %1066 to i32
  %1068 = or i32 %1060, %1067
  %1069 = load %struct.DState*, %struct.DState** %2, align 8
  %1070 = getelementptr inbounds %struct.DState, %struct.DState* %1069, i32 0, i32 7
  store i32 %1068, i32* %1070, align 8
  %1071 = load %struct.DState*, %struct.DState** %2, align 8
  %1072 = getelementptr inbounds %struct.DState, %struct.DState* %1071, i32 0, i32 8
  %1073 = load i32, i32* %1072, align 4
  %1074 = add nsw i32 %1073, 8
  store i32 %1074, i32* %1072, align 4
  %1075 = load %struct.DState*, %struct.DState** %2, align 8
  %1076 = getelementptr inbounds %struct.DState, %struct.DState* %1075, i32 0, i32 0
  %1077 = load %struct.bz_stream*, %struct.bz_stream** %1076, align 8
  %1078 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1077, i32 0, i32 0
  %1079 = load i8*, i8** %1078, align 8
  %1080 = getelementptr inbounds i8, i8* %1079, i32 1
  store i8* %1080, i8** %1078, align 8
  %1081 = load %struct.DState*, %struct.DState** %2, align 8
  %1082 = getelementptr inbounds %struct.DState, %struct.DState* %1081, i32 0, i32 0
  %1083 = load %struct.bz_stream*, %struct.bz_stream** %1082, align 8
  %1084 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1083, i32 0, i32 1
  %1085 = load i32, i32* %1084, align 8
  %1086 = add i32 %1085, -1
  store i32 %1086, i32* %1084, align 8
  %1087 = load %struct.DState*, %struct.DState** %2, align 8
  %1088 = getelementptr inbounds %struct.DState, %struct.DState* %1087, i32 0, i32 0
  %1089 = load %struct.bz_stream*, %struct.bz_stream** %1088, align 8
  %1090 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1089, i32 0, i32 2
  %1091 = load i32, i32* %1090, align 4
  %1092 = add i32 %1091, 1
  store i32 %1092, i32* %1090, align 4
  %1093 = load %struct.DState*, %struct.DState** %2, align 8
  %1094 = getelementptr inbounds %struct.DState, %struct.DState* %1093, i32 0, i32 0
  %1095 = load %struct.bz_stream*, %struct.bz_stream** %1094, align 8
  %1096 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1095, i32 0, i32 2
  %1097 = load i32, i32* %1096, align 4
  %1098 = icmp eq i32 %1097, 0
  br i1 %1098, label %1099, label %1106

1099:                                             ; preds = %1056
  %1100 = load %struct.DState*, %struct.DState** %2, align 8
  %1101 = getelementptr inbounds %struct.DState, %struct.DState* %1100, i32 0, i32 0
  %1102 = load %struct.bz_stream*, %struct.bz_stream** %1101, align 8
  %1103 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1102, i32 0, i32 3
  %1104 = load i32, i32* %1103, align 8
  %1105 = add i32 %1104, 1
  store i32 %1105, i32* %1103, align 8
  br label %1106

1106:                                             ; preds = %1099, %1056
  br label %1027

1107:                                             ; preds = %1032
  %1108 = load i8, i8* %3, align 1
  %1109 = zext i8 %1108 to i32
  %1110 = icmp ne i32 %1109, 83
  br i1 %1110, label %1111, label %1112

1111:                                             ; preds = %1107
  store i32 -4, i32* %4, align 4
  br label %5717

1112:                                             ; preds = %1107
  br label %1113

1113:                                             ; preds = %144, %1112
  %1114 = load %struct.DState*, %struct.DState** %2, align 8
  %1115 = getelementptr inbounds %struct.DState, %struct.DState* %1114, i32 0, i32 1
  store i32 19, i32* %1115, align 8
  br label %1116

1116:                                             ; preds = %1113, %1195
  %1117 = load %struct.DState*, %struct.DState** %2, align 8
  %1118 = getelementptr inbounds %struct.DState, %struct.DState* %1117, i32 0, i32 8
  %1119 = load i32, i32* %1118, align 4
  %1120 = icmp sge i32 %1119, 8
  br i1 %1120, label %1121, label %1137

1121:                                             ; preds = %1116
  %1122 = load %struct.DState*, %struct.DState** %2, align 8
  %1123 = getelementptr inbounds %struct.DState, %struct.DState* %1122, i32 0, i32 7
  %1124 = load i32, i32* %1123, align 8
  %1125 = load %struct.DState*, %struct.DState** %2, align 8
  %1126 = getelementptr inbounds %struct.DState, %struct.DState* %1125, i32 0, i32 8
  %1127 = load i32, i32* %1126, align 4
  %1128 = sub nsw i32 %1127, 8
  %1129 = lshr i32 %1124, %1128
  %1130 = and i32 %1129, 255
  store i32 %1130, i32* %41, align 4
  %1131 = load %struct.DState*, %struct.DState** %2, align 8
  %1132 = getelementptr inbounds %struct.DState, %struct.DState* %1131, i32 0, i32 8
  %1133 = load i32, i32* %1132, align 4
  %1134 = sub nsw i32 %1133, 8
  store i32 %1134, i32* %1132, align 4
  %1135 = load i32, i32* %41, align 4
  %1136 = trunc i32 %1135 to i8
  store i8 %1136, i8* %3, align 1
  br label %1196

1137:                                             ; preds = %1116
  %1138 = load %struct.DState*, %struct.DState** %2, align 8
  %1139 = getelementptr inbounds %struct.DState, %struct.DState* %1138, i32 0, i32 0
  %1140 = load %struct.bz_stream*, %struct.bz_stream** %1139, align 8
  %1141 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1140, i32 0, i32 1
  %1142 = load i32, i32* %1141, align 8
  %1143 = icmp eq i32 %1142, 0
  br i1 %1143, label %1144, label %1145

1144:                                             ; preds = %1137
  store i32 0, i32* %4, align 4
  br label %5717

1145:                                             ; preds = %1137
  %1146 = load %struct.DState*, %struct.DState** %2, align 8
  %1147 = getelementptr inbounds %struct.DState, %struct.DState* %1146, i32 0, i32 7
  %1148 = load i32, i32* %1147, align 8
  %1149 = shl i32 %1148, 8
  %1150 = load %struct.DState*, %struct.DState** %2, align 8
  %1151 = getelementptr inbounds %struct.DState, %struct.DState* %1150, i32 0, i32 0
  %1152 = load %struct.bz_stream*, %struct.bz_stream** %1151, align 8
  %1153 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1152, i32 0, i32 0
  %1154 = load i8*, i8** %1153, align 8
  %1155 = load i8, i8* %1154, align 1
  %1156 = zext i8 %1155 to i32
  %1157 = or i32 %1149, %1156
  %1158 = load %struct.DState*, %struct.DState** %2, align 8
  %1159 = getelementptr inbounds %struct.DState, %struct.DState* %1158, i32 0, i32 7
  store i32 %1157, i32* %1159, align 8
  %1160 = load %struct.DState*, %struct.DState** %2, align 8
  %1161 = getelementptr inbounds %struct.DState, %struct.DState* %1160, i32 0, i32 8
  %1162 = load i32, i32* %1161, align 4
  %1163 = add nsw i32 %1162, 8
  store i32 %1163, i32* %1161, align 4
  %1164 = load %struct.DState*, %struct.DState** %2, align 8
  %1165 = getelementptr inbounds %struct.DState, %struct.DState* %1164, i32 0, i32 0
  %1166 = load %struct.bz_stream*, %struct.bz_stream** %1165, align 8
  %1167 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1166, i32 0, i32 0
  %1168 = load i8*, i8** %1167, align 8
  %1169 = getelementptr inbounds i8, i8* %1168, i32 1
  store i8* %1169, i8** %1167, align 8
  %1170 = load %struct.DState*, %struct.DState** %2, align 8
  %1171 = getelementptr inbounds %struct.DState, %struct.DState* %1170, i32 0, i32 0
  %1172 = load %struct.bz_stream*, %struct.bz_stream** %1171, align 8
  %1173 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1172, i32 0, i32 1
  %1174 = load i32, i32* %1173, align 8
  %1175 = add i32 %1174, -1
  store i32 %1175, i32* %1173, align 8
  %1176 = load %struct.DState*, %struct.DState** %2, align 8
  %1177 = getelementptr inbounds %struct.DState, %struct.DState* %1176, i32 0, i32 0
  %1178 = load %struct.bz_stream*, %struct.bz_stream** %1177, align 8
  %1179 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1178, i32 0, i32 2
  %1180 = load i32, i32* %1179, align 4
  %1181 = add i32 %1180, 1
  store i32 %1181, i32* %1179, align 4
  %1182 = load %struct.DState*, %struct.DState** %2, align 8
  %1183 = getelementptr inbounds %struct.DState, %struct.DState* %1182, i32 0, i32 0
  %1184 = load %struct.bz_stream*, %struct.bz_stream** %1183, align 8
  %1185 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1184, i32 0, i32 2
  %1186 = load i32, i32* %1185, align 4
  %1187 = icmp eq i32 %1186, 0
  br i1 %1187, label %1188, label %1195

1188:                                             ; preds = %1145
  %1189 = load %struct.DState*, %struct.DState** %2, align 8
  %1190 = getelementptr inbounds %struct.DState, %struct.DState* %1189, i32 0, i32 0
  %1191 = load %struct.bz_stream*, %struct.bz_stream** %1190, align 8
  %1192 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1191, i32 0, i32 3
  %1193 = load i32, i32* %1192, align 8
  %1194 = add i32 %1193, 1
  store i32 %1194, i32* %1192, align 8
  br label %1195

1195:                                             ; preds = %1188, %1145
  br label %1116

1196:                                             ; preds = %1121
  %1197 = load i8, i8* %3, align 1
  %1198 = zext i8 %1197 to i32
  %1199 = icmp ne i32 %1198, 89
  br i1 %1199, label %1200, label %1201

1200:                                             ; preds = %1196
  store i32 -4, i32* %4, align 4
  br label %5717

1201:                                             ; preds = %1196
  %1202 = load %struct.DState*, %struct.DState** %2, align 8
  %1203 = getelementptr inbounds %struct.DState, %struct.DState* %1202, i32 0, i32 11
  %1204 = load i32, i32* %1203, align 8
  %1205 = add nsw i32 %1204, 1
  store i32 %1205, i32* %1203, align 8
  %1206 = load %struct.DState*, %struct.DState** %2, align 8
  %1207 = getelementptr inbounds %struct.DState, %struct.DState* %1206, i32 0, i32 12
  %1208 = load i32, i32* %1207, align 4
  %1209 = icmp sge i32 %1208, 2
  br i1 %1209, label %1210, label %1216

1210:                                             ; preds = %1201
  %1211 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1212 = load %struct.DState*, %struct.DState** %2, align 8
  %1213 = getelementptr inbounds %struct.DState, %struct.DState* %1212, i32 0, i32 11
  %1214 = load i32, i32* %1213, align 8
  %1215 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1211, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i32 %1214)
  br label %1216

1216:                                             ; preds = %1210, %1201
  %1217 = load %struct.DState*, %struct.DState** %2, align 8
  %1218 = getelementptr inbounds %struct.DState, %struct.DState* %1217, i32 0, i32 23
  store i32 0, i32* %1218, align 8
  br label %1219

1219:                                             ; preds = %144, %1216
  %1220 = load %struct.DState*, %struct.DState** %2, align 8
  %1221 = getelementptr inbounds %struct.DState, %struct.DState* %1220, i32 0, i32 1
  store i32 20, i32* %1221, align 8
  br label %1222

1222:                                             ; preds = %1219, %1301
  %1223 = load %struct.DState*, %struct.DState** %2, align 8
  %1224 = getelementptr inbounds %struct.DState, %struct.DState* %1223, i32 0, i32 8
  %1225 = load i32, i32* %1224, align 4
  %1226 = icmp sge i32 %1225, 8
  br i1 %1226, label %1227, label %1243

1227:                                             ; preds = %1222
  %1228 = load %struct.DState*, %struct.DState** %2, align 8
  %1229 = getelementptr inbounds %struct.DState, %struct.DState* %1228, i32 0, i32 7
  %1230 = load i32, i32* %1229, align 8
  %1231 = load %struct.DState*, %struct.DState** %2, align 8
  %1232 = getelementptr inbounds %struct.DState, %struct.DState* %1231, i32 0, i32 8
  %1233 = load i32, i32* %1232, align 4
  %1234 = sub nsw i32 %1233, 8
  %1235 = lshr i32 %1230, %1234
  %1236 = and i32 %1235, 255
  store i32 %1236, i32* %42, align 4
  %1237 = load %struct.DState*, %struct.DState** %2, align 8
  %1238 = getelementptr inbounds %struct.DState, %struct.DState* %1237, i32 0, i32 8
  %1239 = load i32, i32* %1238, align 4
  %1240 = sub nsw i32 %1239, 8
  store i32 %1240, i32* %1238, align 4
  %1241 = load i32, i32* %42, align 4
  %1242 = trunc i32 %1241 to i8
  store i8 %1242, i8* %3, align 1
  br label %1302

1243:                                             ; preds = %1222
  %1244 = load %struct.DState*, %struct.DState** %2, align 8
  %1245 = getelementptr inbounds %struct.DState, %struct.DState* %1244, i32 0, i32 0
  %1246 = load %struct.bz_stream*, %struct.bz_stream** %1245, align 8
  %1247 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1246, i32 0, i32 1
  %1248 = load i32, i32* %1247, align 8
  %1249 = icmp eq i32 %1248, 0
  br i1 %1249, label %1250, label %1251

1250:                                             ; preds = %1243
  store i32 0, i32* %4, align 4
  br label %5717

1251:                                             ; preds = %1243
  %1252 = load %struct.DState*, %struct.DState** %2, align 8
  %1253 = getelementptr inbounds %struct.DState, %struct.DState* %1252, i32 0, i32 7
  %1254 = load i32, i32* %1253, align 8
  %1255 = shl i32 %1254, 8
  %1256 = load %struct.DState*, %struct.DState** %2, align 8
  %1257 = getelementptr inbounds %struct.DState, %struct.DState* %1256, i32 0, i32 0
  %1258 = load %struct.bz_stream*, %struct.bz_stream** %1257, align 8
  %1259 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1258, i32 0, i32 0
  %1260 = load i8*, i8** %1259, align 8
  %1261 = load i8, i8* %1260, align 1
  %1262 = zext i8 %1261 to i32
  %1263 = or i32 %1255, %1262
  %1264 = load %struct.DState*, %struct.DState** %2, align 8
  %1265 = getelementptr inbounds %struct.DState, %struct.DState* %1264, i32 0, i32 7
  store i32 %1263, i32* %1265, align 8
  %1266 = load %struct.DState*, %struct.DState** %2, align 8
  %1267 = getelementptr inbounds %struct.DState, %struct.DState* %1266, i32 0, i32 8
  %1268 = load i32, i32* %1267, align 4
  %1269 = add nsw i32 %1268, 8
  store i32 %1269, i32* %1267, align 4
  %1270 = load %struct.DState*, %struct.DState** %2, align 8
  %1271 = getelementptr inbounds %struct.DState, %struct.DState* %1270, i32 0, i32 0
  %1272 = load %struct.bz_stream*, %struct.bz_stream** %1271, align 8
  %1273 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1272, i32 0, i32 0
  %1274 = load i8*, i8** %1273, align 8
  %1275 = getelementptr inbounds i8, i8* %1274, i32 1
  store i8* %1275, i8** %1273, align 8
  %1276 = load %struct.DState*, %struct.DState** %2, align 8
  %1277 = getelementptr inbounds %struct.DState, %struct.DState* %1276, i32 0, i32 0
  %1278 = load %struct.bz_stream*, %struct.bz_stream** %1277, align 8
  %1279 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1278, i32 0, i32 1
  %1280 = load i32, i32* %1279, align 8
  %1281 = add i32 %1280, -1
  store i32 %1281, i32* %1279, align 8
  %1282 = load %struct.DState*, %struct.DState** %2, align 8
  %1283 = getelementptr inbounds %struct.DState, %struct.DState* %1282, i32 0, i32 0
  %1284 = load %struct.bz_stream*, %struct.bz_stream** %1283, align 8
  %1285 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1284, i32 0, i32 2
  %1286 = load i32, i32* %1285, align 4
  %1287 = add i32 %1286, 1
  store i32 %1287, i32* %1285, align 4
  %1288 = load %struct.DState*, %struct.DState** %2, align 8
  %1289 = getelementptr inbounds %struct.DState, %struct.DState* %1288, i32 0, i32 0
  %1290 = load %struct.bz_stream*, %struct.bz_stream** %1289, align 8
  %1291 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1290, i32 0, i32 2
  %1292 = load i32, i32* %1291, align 4
  %1293 = icmp eq i32 %1292, 0
  br i1 %1293, label %1294, label %1301

1294:                                             ; preds = %1251
  %1295 = load %struct.DState*, %struct.DState** %2, align 8
  %1296 = getelementptr inbounds %struct.DState, %struct.DState* %1295, i32 0, i32 0
  %1297 = load %struct.bz_stream*, %struct.bz_stream** %1296, align 8
  %1298 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1297, i32 0, i32 3
  %1299 = load i32, i32* %1298, align 8
  %1300 = add i32 %1299, 1
  store i32 %1300, i32* %1298, align 8
  br label %1301

1301:                                             ; preds = %1294, %1251
  br label %1222

1302:                                             ; preds = %1227
  %1303 = load %struct.DState*, %struct.DState** %2, align 8
  %1304 = getelementptr inbounds %struct.DState, %struct.DState* %1303, i32 0, i32 23
  %1305 = load i32, i32* %1304, align 8
  %1306 = shl i32 %1305, 8
  %1307 = load i8, i8* %3, align 1
  %1308 = zext i8 %1307 to i32
  %1309 = or i32 %1306, %1308
  %1310 = load %struct.DState*, %struct.DState** %2, align 8
  %1311 = getelementptr inbounds %struct.DState, %struct.DState* %1310, i32 0, i32 23
  store i32 %1309, i32* %1311, align 8
  br label %1312

1312:                                             ; preds = %144, %1302
  %1313 = load %struct.DState*, %struct.DState** %2, align 8
  %1314 = getelementptr inbounds %struct.DState, %struct.DState* %1313, i32 0, i32 1
  store i32 21, i32* %1314, align 8
  br label %1315

1315:                                             ; preds = %1312, %1394
  %1316 = load %struct.DState*, %struct.DState** %2, align 8
  %1317 = getelementptr inbounds %struct.DState, %struct.DState* %1316, i32 0, i32 8
  %1318 = load i32, i32* %1317, align 4
  %1319 = icmp sge i32 %1318, 8
  br i1 %1319, label %1320, label %1336

1320:                                             ; preds = %1315
  %1321 = load %struct.DState*, %struct.DState** %2, align 8
  %1322 = getelementptr inbounds %struct.DState, %struct.DState* %1321, i32 0, i32 7
  %1323 = load i32, i32* %1322, align 8
  %1324 = load %struct.DState*, %struct.DState** %2, align 8
  %1325 = getelementptr inbounds %struct.DState, %struct.DState* %1324, i32 0, i32 8
  %1326 = load i32, i32* %1325, align 4
  %1327 = sub nsw i32 %1326, 8
  %1328 = lshr i32 %1323, %1327
  %1329 = and i32 %1328, 255
  store i32 %1329, i32* %43, align 4
  %1330 = load %struct.DState*, %struct.DState** %2, align 8
  %1331 = getelementptr inbounds %struct.DState, %struct.DState* %1330, i32 0, i32 8
  %1332 = load i32, i32* %1331, align 4
  %1333 = sub nsw i32 %1332, 8
  store i32 %1333, i32* %1331, align 4
  %1334 = load i32, i32* %43, align 4
  %1335 = trunc i32 %1334 to i8
  store i8 %1335, i8* %3, align 1
  br label %1395

1336:                                             ; preds = %1315
  %1337 = load %struct.DState*, %struct.DState** %2, align 8
  %1338 = getelementptr inbounds %struct.DState, %struct.DState* %1337, i32 0, i32 0
  %1339 = load %struct.bz_stream*, %struct.bz_stream** %1338, align 8
  %1340 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1339, i32 0, i32 1
  %1341 = load i32, i32* %1340, align 8
  %1342 = icmp eq i32 %1341, 0
  br i1 %1342, label %1343, label %1344

1343:                                             ; preds = %1336
  store i32 0, i32* %4, align 4
  br label %5717

1344:                                             ; preds = %1336
  %1345 = load %struct.DState*, %struct.DState** %2, align 8
  %1346 = getelementptr inbounds %struct.DState, %struct.DState* %1345, i32 0, i32 7
  %1347 = load i32, i32* %1346, align 8
  %1348 = shl i32 %1347, 8
  %1349 = load %struct.DState*, %struct.DState** %2, align 8
  %1350 = getelementptr inbounds %struct.DState, %struct.DState* %1349, i32 0, i32 0
  %1351 = load %struct.bz_stream*, %struct.bz_stream** %1350, align 8
  %1352 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1351, i32 0, i32 0
  %1353 = load i8*, i8** %1352, align 8
  %1354 = load i8, i8* %1353, align 1
  %1355 = zext i8 %1354 to i32
  %1356 = or i32 %1348, %1355
  %1357 = load %struct.DState*, %struct.DState** %2, align 8
  %1358 = getelementptr inbounds %struct.DState, %struct.DState* %1357, i32 0, i32 7
  store i32 %1356, i32* %1358, align 8
  %1359 = load %struct.DState*, %struct.DState** %2, align 8
  %1360 = getelementptr inbounds %struct.DState, %struct.DState* %1359, i32 0, i32 8
  %1361 = load i32, i32* %1360, align 4
  %1362 = add nsw i32 %1361, 8
  store i32 %1362, i32* %1360, align 4
  %1363 = load %struct.DState*, %struct.DState** %2, align 8
  %1364 = getelementptr inbounds %struct.DState, %struct.DState* %1363, i32 0, i32 0
  %1365 = load %struct.bz_stream*, %struct.bz_stream** %1364, align 8
  %1366 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1365, i32 0, i32 0
  %1367 = load i8*, i8** %1366, align 8
  %1368 = getelementptr inbounds i8, i8* %1367, i32 1
  store i8* %1368, i8** %1366, align 8
  %1369 = load %struct.DState*, %struct.DState** %2, align 8
  %1370 = getelementptr inbounds %struct.DState, %struct.DState* %1369, i32 0, i32 0
  %1371 = load %struct.bz_stream*, %struct.bz_stream** %1370, align 8
  %1372 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1371, i32 0, i32 1
  %1373 = load i32, i32* %1372, align 8
  %1374 = add i32 %1373, -1
  store i32 %1374, i32* %1372, align 8
  %1375 = load %struct.DState*, %struct.DState** %2, align 8
  %1376 = getelementptr inbounds %struct.DState, %struct.DState* %1375, i32 0, i32 0
  %1377 = load %struct.bz_stream*, %struct.bz_stream** %1376, align 8
  %1378 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1377, i32 0, i32 2
  %1379 = load i32, i32* %1378, align 4
  %1380 = add i32 %1379, 1
  store i32 %1380, i32* %1378, align 4
  %1381 = load %struct.DState*, %struct.DState** %2, align 8
  %1382 = getelementptr inbounds %struct.DState, %struct.DState* %1381, i32 0, i32 0
  %1383 = load %struct.bz_stream*, %struct.bz_stream** %1382, align 8
  %1384 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1383, i32 0, i32 2
  %1385 = load i32, i32* %1384, align 4
  %1386 = icmp eq i32 %1385, 0
  br i1 %1386, label %1387, label %1394

1387:                                             ; preds = %1344
  %1388 = load %struct.DState*, %struct.DState** %2, align 8
  %1389 = getelementptr inbounds %struct.DState, %struct.DState* %1388, i32 0, i32 0
  %1390 = load %struct.bz_stream*, %struct.bz_stream** %1389, align 8
  %1391 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1390, i32 0, i32 3
  %1392 = load i32, i32* %1391, align 8
  %1393 = add i32 %1392, 1
  store i32 %1393, i32* %1391, align 8
  br label %1394

1394:                                             ; preds = %1387, %1344
  br label %1315

1395:                                             ; preds = %1320
  %1396 = load %struct.DState*, %struct.DState** %2, align 8
  %1397 = getelementptr inbounds %struct.DState, %struct.DState* %1396, i32 0, i32 23
  %1398 = load i32, i32* %1397, align 8
  %1399 = shl i32 %1398, 8
  %1400 = load i8, i8* %3, align 1
  %1401 = zext i8 %1400 to i32
  %1402 = or i32 %1399, %1401
  %1403 = load %struct.DState*, %struct.DState** %2, align 8
  %1404 = getelementptr inbounds %struct.DState, %struct.DState* %1403, i32 0, i32 23
  store i32 %1402, i32* %1404, align 8
  br label %1405

1405:                                             ; preds = %144, %1395
  %1406 = load %struct.DState*, %struct.DState** %2, align 8
  %1407 = getelementptr inbounds %struct.DState, %struct.DState* %1406, i32 0, i32 1
  store i32 22, i32* %1407, align 8
  br label %1408

1408:                                             ; preds = %1405, %1487
  %1409 = load %struct.DState*, %struct.DState** %2, align 8
  %1410 = getelementptr inbounds %struct.DState, %struct.DState* %1409, i32 0, i32 8
  %1411 = load i32, i32* %1410, align 4
  %1412 = icmp sge i32 %1411, 8
  br i1 %1412, label %1413, label %1429

1413:                                             ; preds = %1408
  %1414 = load %struct.DState*, %struct.DState** %2, align 8
  %1415 = getelementptr inbounds %struct.DState, %struct.DState* %1414, i32 0, i32 7
  %1416 = load i32, i32* %1415, align 8
  %1417 = load %struct.DState*, %struct.DState** %2, align 8
  %1418 = getelementptr inbounds %struct.DState, %struct.DState* %1417, i32 0, i32 8
  %1419 = load i32, i32* %1418, align 4
  %1420 = sub nsw i32 %1419, 8
  %1421 = lshr i32 %1416, %1420
  %1422 = and i32 %1421, 255
  store i32 %1422, i32* %44, align 4
  %1423 = load %struct.DState*, %struct.DState** %2, align 8
  %1424 = getelementptr inbounds %struct.DState, %struct.DState* %1423, i32 0, i32 8
  %1425 = load i32, i32* %1424, align 4
  %1426 = sub nsw i32 %1425, 8
  store i32 %1426, i32* %1424, align 4
  %1427 = load i32, i32* %44, align 4
  %1428 = trunc i32 %1427 to i8
  store i8 %1428, i8* %3, align 1
  br label %1488

1429:                                             ; preds = %1408
  %1430 = load %struct.DState*, %struct.DState** %2, align 8
  %1431 = getelementptr inbounds %struct.DState, %struct.DState* %1430, i32 0, i32 0
  %1432 = load %struct.bz_stream*, %struct.bz_stream** %1431, align 8
  %1433 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1432, i32 0, i32 1
  %1434 = load i32, i32* %1433, align 8
  %1435 = icmp eq i32 %1434, 0
  br i1 %1435, label %1436, label %1437

1436:                                             ; preds = %1429
  store i32 0, i32* %4, align 4
  br label %5717

1437:                                             ; preds = %1429
  %1438 = load %struct.DState*, %struct.DState** %2, align 8
  %1439 = getelementptr inbounds %struct.DState, %struct.DState* %1438, i32 0, i32 7
  %1440 = load i32, i32* %1439, align 8
  %1441 = shl i32 %1440, 8
  %1442 = load %struct.DState*, %struct.DState** %2, align 8
  %1443 = getelementptr inbounds %struct.DState, %struct.DState* %1442, i32 0, i32 0
  %1444 = load %struct.bz_stream*, %struct.bz_stream** %1443, align 8
  %1445 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1444, i32 0, i32 0
  %1446 = load i8*, i8** %1445, align 8
  %1447 = load i8, i8* %1446, align 1
  %1448 = zext i8 %1447 to i32
  %1449 = or i32 %1441, %1448
  %1450 = load %struct.DState*, %struct.DState** %2, align 8
  %1451 = getelementptr inbounds %struct.DState, %struct.DState* %1450, i32 0, i32 7
  store i32 %1449, i32* %1451, align 8
  %1452 = load %struct.DState*, %struct.DState** %2, align 8
  %1453 = getelementptr inbounds %struct.DState, %struct.DState* %1452, i32 0, i32 8
  %1454 = load i32, i32* %1453, align 4
  %1455 = add nsw i32 %1454, 8
  store i32 %1455, i32* %1453, align 4
  %1456 = load %struct.DState*, %struct.DState** %2, align 8
  %1457 = getelementptr inbounds %struct.DState, %struct.DState* %1456, i32 0, i32 0
  %1458 = load %struct.bz_stream*, %struct.bz_stream** %1457, align 8
  %1459 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1458, i32 0, i32 0
  %1460 = load i8*, i8** %1459, align 8
  %1461 = getelementptr inbounds i8, i8* %1460, i32 1
  store i8* %1461, i8** %1459, align 8
  %1462 = load %struct.DState*, %struct.DState** %2, align 8
  %1463 = getelementptr inbounds %struct.DState, %struct.DState* %1462, i32 0, i32 0
  %1464 = load %struct.bz_stream*, %struct.bz_stream** %1463, align 8
  %1465 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1464, i32 0, i32 1
  %1466 = load i32, i32* %1465, align 8
  %1467 = add i32 %1466, -1
  store i32 %1467, i32* %1465, align 8
  %1468 = load %struct.DState*, %struct.DState** %2, align 8
  %1469 = getelementptr inbounds %struct.DState, %struct.DState* %1468, i32 0, i32 0
  %1470 = load %struct.bz_stream*, %struct.bz_stream** %1469, align 8
  %1471 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1470, i32 0, i32 2
  %1472 = load i32, i32* %1471, align 4
  %1473 = add i32 %1472, 1
  store i32 %1473, i32* %1471, align 4
  %1474 = load %struct.DState*, %struct.DState** %2, align 8
  %1475 = getelementptr inbounds %struct.DState, %struct.DState* %1474, i32 0, i32 0
  %1476 = load %struct.bz_stream*, %struct.bz_stream** %1475, align 8
  %1477 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1476, i32 0, i32 2
  %1478 = load i32, i32* %1477, align 4
  %1479 = icmp eq i32 %1478, 0
  br i1 %1479, label %1480, label %1487

1480:                                             ; preds = %1437
  %1481 = load %struct.DState*, %struct.DState** %2, align 8
  %1482 = getelementptr inbounds %struct.DState, %struct.DState* %1481, i32 0, i32 0
  %1483 = load %struct.bz_stream*, %struct.bz_stream** %1482, align 8
  %1484 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1483, i32 0, i32 3
  %1485 = load i32, i32* %1484, align 8
  %1486 = add i32 %1485, 1
  store i32 %1486, i32* %1484, align 8
  br label %1487

1487:                                             ; preds = %1480, %1437
  br label %1408

1488:                                             ; preds = %1413
  %1489 = load %struct.DState*, %struct.DState** %2, align 8
  %1490 = getelementptr inbounds %struct.DState, %struct.DState* %1489, i32 0, i32 23
  %1491 = load i32, i32* %1490, align 8
  %1492 = shl i32 %1491, 8
  %1493 = load i8, i8* %3, align 1
  %1494 = zext i8 %1493 to i32
  %1495 = or i32 %1492, %1494
  %1496 = load %struct.DState*, %struct.DState** %2, align 8
  %1497 = getelementptr inbounds %struct.DState, %struct.DState* %1496, i32 0, i32 23
  store i32 %1495, i32* %1497, align 8
  br label %1498

1498:                                             ; preds = %144, %1488
  %1499 = load %struct.DState*, %struct.DState** %2, align 8
  %1500 = getelementptr inbounds %struct.DState, %struct.DState* %1499, i32 0, i32 1
  store i32 23, i32* %1500, align 8
  br label %1501

1501:                                             ; preds = %1498, %1580
  %1502 = load %struct.DState*, %struct.DState** %2, align 8
  %1503 = getelementptr inbounds %struct.DState, %struct.DState* %1502, i32 0, i32 8
  %1504 = load i32, i32* %1503, align 4
  %1505 = icmp sge i32 %1504, 8
  br i1 %1505, label %1506, label %1522

1506:                                             ; preds = %1501
  %1507 = load %struct.DState*, %struct.DState** %2, align 8
  %1508 = getelementptr inbounds %struct.DState, %struct.DState* %1507, i32 0, i32 7
  %1509 = load i32, i32* %1508, align 8
  %1510 = load %struct.DState*, %struct.DState** %2, align 8
  %1511 = getelementptr inbounds %struct.DState, %struct.DState* %1510, i32 0, i32 8
  %1512 = load i32, i32* %1511, align 4
  %1513 = sub nsw i32 %1512, 8
  %1514 = lshr i32 %1509, %1513
  %1515 = and i32 %1514, 255
  store i32 %1515, i32* %45, align 4
  %1516 = load %struct.DState*, %struct.DState** %2, align 8
  %1517 = getelementptr inbounds %struct.DState, %struct.DState* %1516, i32 0, i32 8
  %1518 = load i32, i32* %1517, align 4
  %1519 = sub nsw i32 %1518, 8
  store i32 %1519, i32* %1517, align 4
  %1520 = load i32, i32* %45, align 4
  %1521 = trunc i32 %1520 to i8
  store i8 %1521, i8* %3, align 1
  br label %1581

1522:                                             ; preds = %1501
  %1523 = load %struct.DState*, %struct.DState** %2, align 8
  %1524 = getelementptr inbounds %struct.DState, %struct.DState* %1523, i32 0, i32 0
  %1525 = load %struct.bz_stream*, %struct.bz_stream** %1524, align 8
  %1526 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1525, i32 0, i32 1
  %1527 = load i32, i32* %1526, align 8
  %1528 = icmp eq i32 %1527, 0
  br i1 %1528, label %1529, label %1530

1529:                                             ; preds = %1522
  store i32 0, i32* %4, align 4
  br label %5717

1530:                                             ; preds = %1522
  %1531 = load %struct.DState*, %struct.DState** %2, align 8
  %1532 = getelementptr inbounds %struct.DState, %struct.DState* %1531, i32 0, i32 7
  %1533 = load i32, i32* %1532, align 8
  %1534 = shl i32 %1533, 8
  %1535 = load %struct.DState*, %struct.DState** %2, align 8
  %1536 = getelementptr inbounds %struct.DState, %struct.DState* %1535, i32 0, i32 0
  %1537 = load %struct.bz_stream*, %struct.bz_stream** %1536, align 8
  %1538 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1537, i32 0, i32 0
  %1539 = load i8*, i8** %1538, align 8
  %1540 = load i8, i8* %1539, align 1
  %1541 = zext i8 %1540 to i32
  %1542 = or i32 %1534, %1541
  %1543 = load %struct.DState*, %struct.DState** %2, align 8
  %1544 = getelementptr inbounds %struct.DState, %struct.DState* %1543, i32 0, i32 7
  store i32 %1542, i32* %1544, align 8
  %1545 = load %struct.DState*, %struct.DState** %2, align 8
  %1546 = getelementptr inbounds %struct.DState, %struct.DState* %1545, i32 0, i32 8
  %1547 = load i32, i32* %1546, align 4
  %1548 = add nsw i32 %1547, 8
  store i32 %1548, i32* %1546, align 4
  %1549 = load %struct.DState*, %struct.DState** %2, align 8
  %1550 = getelementptr inbounds %struct.DState, %struct.DState* %1549, i32 0, i32 0
  %1551 = load %struct.bz_stream*, %struct.bz_stream** %1550, align 8
  %1552 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1551, i32 0, i32 0
  %1553 = load i8*, i8** %1552, align 8
  %1554 = getelementptr inbounds i8, i8* %1553, i32 1
  store i8* %1554, i8** %1552, align 8
  %1555 = load %struct.DState*, %struct.DState** %2, align 8
  %1556 = getelementptr inbounds %struct.DState, %struct.DState* %1555, i32 0, i32 0
  %1557 = load %struct.bz_stream*, %struct.bz_stream** %1556, align 8
  %1558 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1557, i32 0, i32 1
  %1559 = load i32, i32* %1558, align 8
  %1560 = add i32 %1559, -1
  store i32 %1560, i32* %1558, align 8
  %1561 = load %struct.DState*, %struct.DState** %2, align 8
  %1562 = getelementptr inbounds %struct.DState, %struct.DState* %1561, i32 0, i32 0
  %1563 = load %struct.bz_stream*, %struct.bz_stream** %1562, align 8
  %1564 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1563, i32 0, i32 2
  %1565 = load i32, i32* %1564, align 4
  %1566 = add i32 %1565, 1
  store i32 %1566, i32* %1564, align 4
  %1567 = load %struct.DState*, %struct.DState** %2, align 8
  %1568 = getelementptr inbounds %struct.DState, %struct.DState* %1567, i32 0, i32 0
  %1569 = load %struct.bz_stream*, %struct.bz_stream** %1568, align 8
  %1570 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1569, i32 0, i32 2
  %1571 = load i32, i32* %1570, align 4
  %1572 = icmp eq i32 %1571, 0
  br i1 %1572, label %1573, label %1580

1573:                                             ; preds = %1530
  %1574 = load %struct.DState*, %struct.DState** %2, align 8
  %1575 = getelementptr inbounds %struct.DState, %struct.DState* %1574, i32 0, i32 0
  %1576 = load %struct.bz_stream*, %struct.bz_stream** %1575, align 8
  %1577 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1576, i32 0, i32 3
  %1578 = load i32, i32* %1577, align 8
  %1579 = add i32 %1578, 1
  store i32 %1579, i32* %1577, align 8
  br label %1580

1580:                                             ; preds = %1573, %1530
  br label %1501

1581:                                             ; preds = %1506
  %1582 = load %struct.DState*, %struct.DState** %2, align 8
  %1583 = getelementptr inbounds %struct.DState, %struct.DState* %1582, i32 0, i32 23
  %1584 = load i32, i32* %1583, align 8
  %1585 = shl i32 %1584, 8
  %1586 = load i8, i8* %3, align 1
  %1587 = zext i8 %1586 to i32
  %1588 = or i32 %1585, %1587
  %1589 = load %struct.DState*, %struct.DState** %2, align 8
  %1590 = getelementptr inbounds %struct.DState, %struct.DState* %1589, i32 0, i32 23
  store i32 %1588, i32* %1590, align 8
  br label %1591

1591:                                             ; preds = %144, %1581
  %1592 = load %struct.DState*, %struct.DState** %2, align 8
  %1593 = getelementptr inbounds %struct.DState, %struct.DState* %1592, i32 0, i32 1
  store i32 24, i32* %1593, align 8
  br label %1594

1594:                                             ; preds = %1591, %1675
  %1595 = load %struct.DState*, %struct.DState** %2, align 8
  %1596 = getelementptr inbounds %struct.DState, %struct.DState* %1595, i32 0, i32 8
  %1597 = load i32, i32* %1596, align 4
  %1598 = icmp sge i32 %1597, 1
  br i1 %1598, label %1599, label %1617

1599:                                             ; preds = %1594
  %1600 = load %struct.DState*, %struct.DState** %2, align 8
  %1601 = getelementptr inbounds %struct.DState, %struct.DState* %1600, i32 0, i32 7
  %1602 = load i32, i32* %1601, align 8
  %1603 = load %struct.DState*, %struct.DState** %2, align 8
  %1604 = getelementptr inbounds %struct.DState, %struct.DState* %1603, i32 0, i32 8
  %1605 = load i32, i32* %1604, align 4
  %1606 = sub nsw i32 %1605, 1
  %1607 = lshr i32 %1602, %1606
  %1608 = and i32 %1607, 1
  store i32 %1608, i32* %46, align 4
  %1609 = load %struct.DState*, %struct.DState** %2, align 8
  %1610 = getelementptr inbounds %struct.DState, %struct.DState* %1609, i32 0, i32 8
  %1611 = load i32, i32* %1610, align 4
  %1612 = sub nsw i32 %1611, 1
  store i32 %1612, i32* %1610, align 4
  %1613 = load i32, i32* %46, align 4
  %1614 = trunc i32 %1613 to i8
  %1615 = load %struct.DState*, %struct.DState** %2, align 8
  %1616 = getelementptr inbounds %struct.DState, %struct.DState* %1615, i32 0, i32 4
  store i8 %1614, i8* %1616, align 4
  br label %1676

1617:                                             ; preds = %1594
  %1618 = load %struct.DState*, %struct.DState** %2, align 8
  %1619 = getelementptr inbounds %struct.DState, %struct.DState* %1618, i32 0, i32 0
  %1620 = load %struct.bz_stream*, %struct.bz_stream** %1619, align 8
  %1621 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1620, i32 0, i32 1
  %1622 = load i32, i32* %1621, align 8
  %1623 = icmp eq i32 %1622, 0
  br i1 %1623, label %1624, label %1625

1624:                                             ; preds = %1617
  store i32 0, i32* %4, align 4
  br label %5717

1625:                                             ; preds = %1617
  %1626 = load %struct.DState*, %struct.DState** %2, align 8
  %1627 = getelementptr inbounds %struct.DState, %struct.DState* %1626, i32 0, i32 7
  %1628 = load i32, i32* %1627, align 8
  %1629 = shl i32 %1628, 8
  %1630 = load %struct.DState*, %struct.DState** %2, align 8
  %1631 = getelementptr inbounds %struct.DState, %struct.DState* %1630, i32 0, i32 0
  %1632 = load %struct.bz_stream*, %struct.bz_stream** %1631, align 8
  %1633 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1632, i32 0, i32 0
  %1634 = load i8*, i8** %1633, align 8
  %1635 = load i8, i8* %1634, align 1
  %1636 = zext i8 %1635 to i32
  %1637 = or i32 %1629, %1636
  %1638 = load %struct.DState*, %struct.DState** %2, align 8
  %1639 = getelementptr inbounds %struct.DState, %struct.DState* %1638, i32 0, i32 7
  store i32 %1637, i32* %1639, align 8
  %1640 = load %struct.DState*, %struct.DState** %2, align 8
  %1641 = getelementptr inbounds %struct.DState, %struct.DState* %1640, i32 0, i32 8
  %1642 = load i32, i32* %1641, align 4
  %1643 = add nsw i32 %1642, 8
  store i32 %1643, i32* %1641, align 4
  %1644 = load %struct.DState*, %struct.DState** %2, align 8
  %1645 = getelementptr inbounds %struct.DState, %struct.DState* %1644, i32 0, i32 0
  %1646 = load %struct.bz_stream*, %struct.bz_stream** %1645, align 8
  %1647 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1646, i32 0, i32 0
  %1648 = load i8*, i8** %1647, align 8
  %1649 = getelementptr inbounds i8, i8* %1648, i32 1
  store i8* %1649, i8** %1647, align 8
  %1650 = load %struct.DState*, %struct.DState** %2, align 8
  %1651 = getelementptr inbounds %struct.DState, %struct.DState* %1650, i32 0, i32 0
  %1652 = load %struct.bz_stream*, %struct.bz_stream** %1651, align 8
  %1653 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1652, i32 0, i32 1
  %1654 = load i32, i32* %1653, align 8
  %1655 = add i32 %1654, -1
  store i32 %1655, i32* %1653, align 8
  %1656 = load %struct.DState*, %struct.DState** %2, align 8
  %1657 = getelementptr inbounds %struct.DState, %struct.DState* %1656, i32 0, i32 0
  %1658 = load %struct.bz_stream*, %struct.bz_stream** %1657, align 8
  %1659 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1658, i32 0, i32 2
  %1660 = load i32, i32* %1659, align 4
  %1661 = add i32 %1660, 1
  store i32 %1661, i32* %1659, align 4
  %1662 = load %struct.DState*, %struct.DState** %2, align 8
  %1663 = getelementptr inbounds %struct.DState, %struct.DState* %1662, i32 0, i32 0
  %1664 = load %struct.bz_stream*, %struct.bz_stream** %1663, align 8
  %1665 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1664, i32 0, i32 2
  %1666 = load i32, i32* %1665, align 4
  %1667 = icmp eq i32 %1666, 0
  br i1 %1667, label %1668, label %1675

1668:                                             ; preds = %1625
  %1669 = load %struct.DState*, %struct.DState** %2, align 8
  %1670 = getelementptr inbounds %struct.DState, %struct.DState* %1669, i32 0, i32 0
  %1671 = load %struct.bz_stream*, %struct.bz_stream** %1670, align 8
  %1672 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1671, i32 0, i32 3
  %1673 = load i32, i32* %1672, align 8
  %1674 = add i32 %1673, 1
  store i32 %1674, i32* %1672, align 8
  br label %1675

1675:                                             ; preds = %1668, %1625
  br label %1594

1676:                                             ; preds = %1599
  %1677 = load %struct.DState*, %struct.DState** %2, align 8
  %1678 = getelementptr inbounds %struct.DState, %struct.DState* %1677, i32 0, i32 13
  store i32 0, i32* %1678, align 8
  br label %1679

1679:                                             ; preds = %144, %1676
  %1680 = load %struct.DState*, %struct.DState** %2, align 8
  %1681 = getelementptr inbounds %struct.DState, %struct.DState* %1680, i32 0, i32 1
  store i32 25, i32* %1681, align 8
  br label %1682

1682:                                             ; preds = %1679, %1761
  %1683 = load %struct.DState*, %struct.DState** %2, align 8
  %1684 = getelementptr inbounds %struct.DState, %struct.DState* %1683, i32 0, i32 8
  %1685 = load i32, i32* %1684, align 4
  %1686 = icmp sge i32 %1685, 8
  br i1 %1686, label %1687, label %1703

1687:                                             ; preds = %1682
  %1688 = load %struct.DState*, %struct.DState** %2, align 8
  %1689 = getelementptr inbounds %struct.DState, %struct.DState* %1688, i32 0, i32 7
  %1690 = load i32, i32* %1689, align 8
  %1691 = load %struct.DState*, %struct.DState** %2, align 8
  %1692 = getelementptr inbounds %struct.DState, %struct.DState* %1691, i32 0, i32 8
  %1693 = load i32, i32* %1692, align 4
  %1694 = sub nsw i32 %1693, 8
  %1695 = lshr i32 %1690, %1694
  %1696 = and i32 %1695, 255
  store i32 %1696, i32* %47, align 4
  %1697 = load %struct.DState*, %struct.DState** %2, align 8
  %1698 = getelementptr inbounds %struct.DState, %struct.DState* %1697, i32 0, i32 8
  %1699 = load i32, i32* %1698, align 4
  %1700 = sub nsw i32 %1699, 8
  store i32 %1700, i32* %1698, align 4
  %1701 = load i32, i32* %47, align 4
  %1702 = trunc i32 %1701 to i8
  store i8 %1702, i8* %3, align 1
  br label %1762

1703:                                             ; preds = %1682
  %1704 = load %struct.DState*, %struct.DState** %2, align 8
  %1705 = getelementptr inbounds %struct.DState, %struct.DState* %1704, i32 0, i32 0
  %1706 = load %struct.bz_stream*, %struct.bz_stream** %1705, align 8
  %1707 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1706, i32 0, i32 1
  %1708 = load i32, i32* %1707, align 8
  %1709 = icmp eq i32 %1708, 0
  br i1 %1709, label %1710, label %1711

1710:                                             ; preds = %1703
  store i32 0, i32* %4, align 4
  br label %5717

1711:                                             ; preds = %1703
  %1712 = load %struct.DState*, %struct.DState** %2, align 8
  %1713 = getelementptr inbounds %struct.DState, %struct.DState* %1712, i32 0, i32 7
  %1714 = load i32, i32* %1713, align 8
  %1715 = shl i32 %1714, 8
  %1716 = load %struct.DState*, %struct.DState** %2, align 8
  %1717 = getelementptr inbounds %struct.DState, %struct.DState* %1716, i32 0, i32 0
  %1718 = load %struct.bz_stream*, %struct.bz_stream** %1717, align 8
  %1719 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1718, i32 0, i32 0
  %1720 = load i8*, i8** %1719, align 8
  %1721 = load i8, i8* %1720, align 1
  %1722 = zext i8 %1721 to i32
  %1723 = or i32 %1715, %1722
  %1724 = load %struct.DState*, %struct.DState** %2, align 8
  %1725 = getelementptr inbounds %struct.DState, %struct.DState* %1724, i32 0, i32 7
  store i32 %1723, i32* %1725, align 8
  %1726 = load %struct.DState*, %struct.DState** %2, align 8
  %1727 = getelementptr inbounds %struct.DState, %struct.DState* %1726, i32 0, i32 8
  %1728 = load i32, i32* %1727, align 4
  %1729 = add nsw i32 %1728, 8
  store i32 %1729, i32* %1727, align 4
  %1730 = load %struct.DState*, %struct.DState** %2, align 8
  %1731 = getelementptr inbounds %struct.DState, %struct.DState* %1730, i32 0, i32 0
  %1732 = load %struct.bz_stream*, %struct.bz_stream** %1731, align 8
  %1733 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1732, i32 0, i32 0
  %1734 = load i8*, i8** %1733, align 8
  %1735 = getelementptr inbounds i8, i8* %1734, i32 1
  store i8* %1735, i8** %1733, align 8
  %1736 = load %struct.DState*, %struct.DState** %2, align 8
  %1737 = getelementptr inbounds %struct.DState, %struct.DState* %1736, i32 0, i32 0
  %1738 = load %struct.bz_stream*, %struct.bz_stream** %1737, align 8
  %1739 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1738, i32 0, i32 1
  %1740 = load i32, i32* %1739, align 8
  %1741 = add i32 %1740, -1
  store i32 %1741, i32* %1739, align 8
  %1742 = load %struct.DState*, %struct.DState** %2, align 8
  %1743 = getelementptr inbounds %struct.DState, %struct.DState* %1742, i32 0, i32 0
  %1744 = load %struct.bz_stream*, %struct.bz_stream** %1743, align 8
  %1745 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1744, i32 0, i32 2
  %1746 = load i32, i32* %1745, align 4
  %1747 = add i32 %1746, 1
  store i32 %1747, i32* %1745, align 4
  %1748 = load %struct.DState*, %struct.DState** %2, align 8
  %1749 = getelementptr inbounds %struct.DState, %struct.DState* %1748, i32 0, i32 0
  %1750 = load %struct.bz_stream*, %struct.bz_stream** %1749, align 8
  %1751 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1750, i32 0, i32 2
  %1752 = load i32, i32* %1751, align 4
  %1753 = icmp eq i32 %1752, 0
  br i1 %1753, label %1754, label %1761

1754:                                             ; preds = %1711
  %1755 = load %struct.DState*, %struct.DState** %2, align 8
  %1756 = getelementptr inbounds %struct.DState, %struct.DState* %1755, i32 0, i32 0
  %1757 = load %struct.bz_stream*, %struct.bz_stream** %1756, align 8
  %1758 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1757, i32 0, i32 3
  %1759 = load i32, i32* %1758, align 8
  %1760 = add i32 %1759, 1
  store i32 %1760, i32* %1758, align 8
  br label %1761

1761:                                             ; preds = %1754, %1711
  br label %1682

1762:                                             ; preds = %1687
  %1763 = load %struct.DState*, %struct.DState** %2, align 8
  %1764 = getelementptr inbounds %struct.DState, %struct.DState* %1763, i32 0, i32 13
  %1765 = load i32, i32* %1764, align 8
  %1766 = shl i32 %1765, 8
  %1767 = load i8, i8* %3, align 1
  %1768 = zext i8 %1767 to i32
  %1769 = or i32 %1766, %1768
  %1770 = load %struct.DState*, %struct.DState** %2, align 8
  %1771 = getelementptr inbounds %struct.DState, %struct.DState* %1770, i32 0, i32 13
  store i32 %1769, i32* %1771, align 8
  br label %1772

1772:                                             ; preds = %144, %1762
  %1773 = load %struct.DState*, %struct.DState** %2, align 8
  %1774 = getelementptr inbounds %struct.DState, %struct.DState* %1773, i32 0, i32 1
  store i32 26, i32* %1774, align 8
  br label %1775

1775:                                             ; preds = %1772, %1854
  %1776 = load %struct.DState*, %struct.DState** %2, align 8
  %1777 = getelementptr inbounds %struct.DState, %struct.DState* %1776, i32 0, i32 8
  %1778 = load i32, i32* %1777, align 4
  %1779 = icmp sge i32 %1778, 8
  br i1 %1779, label %1780, label %1796

1780:                                             ; preds = %1775
  %1781 = load %struct.DState*, %struct.DState** %2, align 8
  %1782 = getelementptr inbounds %struct.DState, %struct.DState* %1781, i32 0, i32 7
  %1783 = load i32, i32* %1782, align 8
  %1784 = load %struct.DState*, %struct.DState** %2, align 8
  %1785 = getelementptr inbounds %struct.DState, %struct.DState* %1784, i32 0, i32 8
  %1786 = load i32, i32* %1785, align 4
  %1787 = sub nsw i32 %1786, 8
  %1788 = lshr i32 %1783, %1787
  %1789 = and i32 %1788, 255
  store i32 %1789, i32* %48, align 4
  %1790 = load %struct.DState*, %struct.DState** %2, align 8
  %1791 = getelementptr inbounds %struct.DState, %struct.DState* %1790, i32 0, i32 8
  %1792 = load i32, i32* %1791, align 4
  %1793 = sub nsw i32 %1792, 8
  store i32 %1793, i32* %1791, align 4
  %1794 = load i32, i32* %48, align 4
  %1795 = trunc i32 %1794 to i8
  store i8 %1795, i8* %3, align 1
  br label %1855

1796:                                             ; preds = %1775
  %1797 = load %struct.DState*, %struct.DState** %2, align 8
  %1798 = getelementptr inbounds %struct.DState, %struct.DState* %1797, i32 0, i32 0
  %1799 = load %struct.bz_stream*, %struct.bz_stream** %1798, align 8
  %1800 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1799, i32 0, i32 1
  %1801 = load i32, i32* %1800, align 8
  %1802 = icmp eq i32 %1801, 0
  br i1 %1802, label %1803, label %1804

1803:                                             ; preds = %1796
  store i32 0, i32* %4, align 4
  br label %5717

1804:                                             ; preds = %1796
  %1805 = load %struct.DState*, %struct.DState** %2, align 8
  %1806 = getelementptr inbounds %struct.DState, %struct.DState* %1805, i32 0, i32 7
  %1807 = load i32, i32* %1806, align 8
  %1808 = shl i32 %1807, 8
  %1809 = load %struct.DState*, %struct.DState** %2, align 8
  %1810 = getelementptr inbounds %struct.DState, %struct.DState* %1809, i32 0, i32 0
  %1811 = load %struct.bz_stream*, %struct.bz_stream** %1810, align 8
  %1812 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1811, i32 0, i32 0
  %1813 = load i8*, i8** %1812, align 8
  %1814 = load i8, i8* %1813, align 1
  %1815 = zext i8 %1814 to i32
  %1816 = or i32 %1808, %1815
  %1817 = load %struct.DState*, %struct.DState** %2, align 8
  %1818 = getelementptr inbounds %struct.DState, %struct.DState* %1817, i32 0, i32 7
  store i32 %1816, i32* %1818, align 8
  %1819 = load %struct.DState*, %struct.DState** %2, align 8
  %1820 = getelementptr inbounds %struct.DState, %struct.DState* %1819, i32 0, i32 8
  %1821 = load i32, i32* %1820, align 4
  %1822 = add nsw i32 %1821, 8
  store i32 %1822, i32* %1820, align 4
  %1823 = load %struct.DState*, %struct.DState** %2, align 8
  %1824 = getelementptr inbounds %struct.DState, %struct.DState* %1823, i32 0, i32 0
  %1825 = load %struct.bz_stream*, %struct.bz_stream** %1824, align 8
  %1826 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1825, i32 0, i32 0
  %1827 = load i8*, i8** %1826, align 8
  %1828 = getelementptr inbounds i8, i8* %1827, i32 1
  store i8* %1828, i8** %1826, align 8
  %1829 = load %struct.DState*, %struct.DState** %2, align 8
  %1830 = getelementptr inbounds %struct.DState, %struct.DState* %1829, i32 0, i32 0
  %1831 = load %struct.bz_stream*, %struct.bz_stream** %1830, align 8
  %1832 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1831, i32 0, i32 1
  %1833 = load i32, i32* %1832, align 8
  %1834 = add i32 %1833, -1
  store i32 %1834, i32* %1832, align 8
  %1835 = load %struct.DState*, %struct.DState** %2, align 8
  %1836 = getelementptr inbounds %struct.DState, %struct.DState* %1835, i32 0, i32 0
  %1837 = load %struct.bz_stream*, %struct.bz_stream** %1836, align 8
  %1838 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1837, i32 0, i32 2
  %1839 = load i32, i32* %1838, align 4
  %1840 = add i32 %1839, 1
  store i32 %1840, i32* %1838, align 4
  %1841 = load %struct.DState*, %struct.DState** %2, align 8
  %1842 = getelementptr inbounds %struct.DState, %struct.DState* %1841, i32 0, i32 0
  %1843 = load %struct.bz_stream*, %struct.bz_stream** %1842, align 8
  %1844 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1843, i32 0, i32 2
  %1845 = load i32, i32* %1844, align 4
  %1846 = icmp eq i32 %1845, 0
  br i1 %1846, label %1847, label %1854

1847:                                             ; preds = %1804
  %1848 = load %struct.DState*, %struct.DState** %2, align 8
  %1849 = getelementptr inbounds %struct.DState, %struct.DState* %1848, i32 0, i32 0
  %1850 = load %struct.bz_stream*, %struct.bz_stream** %1849, align 8
  %1851 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1850, i32 0, i32 3
  %1852 = load i32, i32* %1851, align 8
  %1853 = add i32 %1852, 1
  store i32 %1853, i32* %1851, align 8
  br label %1854

1854:                                             ; preds = %1847, %1804
  br label %1775

1855:                                             ; preds = %1780
  %1856 = load %struct.DState*, %struct.DState** %2, align 8
  %1857 = getelementptr inbounds %struct.DState, %struct.DState* %1856, i32 0, i32 13
  %1858 = load i32, i32* %1857, align 8
  %1859 = shl i32 %1858, 8
  %1860 = load i8, i8* %3, align 1
  %1861 = zext i8 %1860 to i32
  %1862 = or i32 %1859, %1861
  %1863 = load %struct.DState*, %struct.DState** %2, align 8
  %1864 = getelementptr inbounds %struct.DState, %struct.DState* %1863, i32 0, i32 13
  store i32 %1862, i32* %1864, align 8
  br label %1865

1865:                                             ; preds = %144, %1855
  %1866 = load %struct.DState*, %struct.DState** %2, align 8
  %1867 = getelementptr inbounds %struct.DState, %struct.DState* %1866, i32 0, i32 1
  store i32 27, i32* %1867, align 8
  br label %1868

1868:                                             ; preds = %1865, %1947
  %1869 = load %struct.DState*, %struct.DState** %2, align 8
  %1870 = getelementptr inbounds %struct.DState, %struct.DState* %1869, i32 0, i32 8
  %1871 = load i32, i32* %1870, align 4
  %1872 = icmp sge i32 %1871, 8
  br i1 %1872, label %1873, label %1889

1873:                                             ; preds = %1868
  %1874 = load %struct.DState*, %struct.DState** %2, align 8
  %1875 = getelementptr inbounds %struct.DState, %struct.DState* %1874, i32 0, i32 7
  %1876 = load i32, i32* %1875, align 8
  %1877 = load %struct.DState*, %struct.DState** %2, align 8
  %1878 = getelementptr inbounds %struct.DState, %struct.DState* %1877, i32 0, i32 8
  %1879 = load i32, i32* %1878, align 4
  %1880 = sub nsw i32 %1879, 8
  %1881 = lshr i32 %1876, %1880
  %1882 = and i32 %1881, 255
  store i32 %1882, i32* %49, align 4
  %1883 = load %struct.DState*, %struct.DState** %2, align 8
  %1884 = getelementptr inbounds %struct.DState, %struct.DState* %1883, i32 0, i32 8
  %1885 = load i32, i32* %1884, align 4
  %1886 = sub nsw i32 %1885, 8
  store i32 %1886, i32* %1884, align 4
  %1887 = load i32, i32* %49, align 4
  %1888 = trunc i32 %1887 to i8
  store i8 %1888, i8* %3, align 1
  br label %1948

1889:                                             ; preds = %1868
  %1890 = load %struct.DState*, %struct.DState** %2, align 8
  %1891 = getelementptr inbounds %struct.DState, %struct.DState* %1890, i32 0, i32 0
  %1892 = load %struct.bz_stream*, %struct.bz_stream** %1891, align 8
  %1893 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1892, i32 0, i32 1
  %1894 = load i32, i32* %1893, align 8
  %1895 = icmp eq i32 %1894, 0
  br i1 %1895, label %1896, label %1897

1896:                                             ; preds = %1889
  store i32 0, i32* %4, align 4
  br label %5717

1897:                                             ; preds = %1889
  %1898 = load %struct.DState*, %struct.DState** %2, align 8
  %1899 = getelementptr inbounds %struct.DState, %struct.DState* %1898, i32 0, i32 7
  %1900 = load i32, i32* %1899, align 8
  %1901 = shl i32 %1900, 8
  %1902 = load %struct.DState*, %struct.DState** %2, align 8
  %1903 = getelementptr inbounds %struct.DState, %struct.DState* %1902, i32 0, i32 0
  %1904 = load %struct.bz_stream*, %struct.bz_stream** %1903, align 8
  %1905 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1904, i32 0, i32 0
  %1906 = load i8*, i8** %1905, align 8
  %1907 = load i8, i8* %1906, align 1
  %1908 = zext i8 %1907 to i32
  %1909 = or i32 %1901, %1908
  %1910 = load %struct.DState*, %struct.DState** %2, align 8
  %1911 = getelementptr inbounds %struct.DState, %struct.DState* %1910, i32 0, i32 7
  store i32 %1909, i32* %1911, align 8
  %1912 = load %struct.DState*, %struct.DState** %2, align 8
  %1913 = getelementptr inbounds %struct.DState, %struct.DState* %1912, i32 0, i32 8
  %1914 = load i32, i32* %1913, align 4
  %1915 = add nsw i32 %1914, 8
  store i32 %1915, i32* %1913, align 4
  %1916 = load %struct.DState*, %struct.DState** %2, align 8
  %1917 = getelementptr inbounds %struct.DState, %struct.DState* %1916, i32 0, i32 0
  %1918 = load %struct.bz_stream*, %struct.bz_stream** %1917, align 8
  %1919 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1918, i32 0, i32 0
  %1920 = load i8*, i8** %1919, align 8
  %1921 = getelementptr inbounds i8, i8* %1920, i32 1
  store i8* %1921, i8** %1919, align 8
  %1922 = load %struct.DState*, %struct.DState** %2, align 8
  %1923 = getelementptr inbounds %struct.DState, %struct.DState* %1922, i32 0, i32 0
  %1924 = load %struct.bz_stream*, %struct.bz_stream** %1923, align 8
  %1925 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1924, i32 0, i32 1
  %1926 = load i32, i32* %1925, align 8
  %1927 = add i32 %1926, -1
  store i32 %1927, i32* %1925, align 8
  %1928 = load %struct.DState*, %struct.DState** %2, align 8
  %1929 = getelementptr inbounds %struct.DState, %struct.DState* %1928, i32 0, i32 0
  %1930 = load %struct.bz_stream*, %struct.bz_stream** %1929, align 8
  %1931 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1930, i32 0, i32 2
  %1932 = load i32, i32* %1931, align 4
  %1933 = add i32 %1932, 1
  store i32 %1933, i32* %1931, align 4
  %1934 = load %struct.DState*, %struct.DState** %2, align 8
  %1935 = getelementptr inbounds %struct.DState, %struct.DState* %1934, i32 0, i32 0
  %1936 = load %struct.bz_stream*, %struct.bz_stream** %1935, align 8
  %1937 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1936, i32 0, i32 2
  %1938 = load i32, i32* %1937, align 4
  %1939 = icmp eq i32 %1938, 0
  br i1 %1939, label %1940, label %1947

1940:                                             ; preds = %1897
  %1941 = load %struct.DState*, %struct.DState** %2, align 8
  %1942 = getelementptr inbounds %struct.DState, %struct.DState* %1941, i32 0, i32 0
  %1943 = load %struct.bz_stream*, %struct.bz_stream** %1942, align 8
  %1944 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1943, i32 0, i32 3
  %1945 = load i32, i32* %1944, align 8
  %1946 = add i32 %1945, 1
  store i32 %1946, i32* %1944, align 8
  br label %1947

1947:                                             ; preds = %1940, %1897
  br label %1868

1948:                                             ; preds = %1873
  %1949 = load %struct.DState*, %struct.DState** %2, align 8
  %1950 = getelementptr inbounds %struct.DState, %struct.DState* %1949, i32 0, i32 13
  %1951 = load i32, i32* %1950, align 8
  %1952 = shl i32 %1951, 8
  %1953 = load i8, i8* %3, align 1
  %1954 = zext i8 %1953 to i32
  %1955 = or i32 %1952, %1954
  %1956 = load %struct.DState*, %struct.DState** %2, align 8
  %1957 = getelementptr inbounds %struct.DState, %struct.DState* %1956, i32 0, i32 13
  store i32 %1955, i32* %1957, align 8
  %1958 = load %struct.DState*, %struct.DState** %2, align 8
  %1959 = getelementptr inbounds %struct.DState, %struct.DState* %1958, i32 0, i32 13
  %1960 = load i32, i32* %1959, align 8
  %1961 = icmp slt i32 %1960, 0
  br i1 %1961, label %1962, label %1963

1962:                                             ; preds = %1948
  store i32 -4, i32* %4, align 4
  br label %5717

1963:                                             ; preds = %1948
  %1964 = load %struct.DState*, %struct.DState** %2, align 8
  %1965 = getelementptr inbounds %struct.DState, %struct.DState* %1964, i32 0, i32 13
  %1966 = load i32, i32* %1965, align 8
  %1967 = load %struct.DState*, %struct.DState** %2, align 8
  %1968 = getelementptr inbounds %struct.DState, %struct.DState* %1967, i32 0, i32 9
  %1969 = load i32, i32* %1968, align 8
  %1970 = mul nsw i32 100000, %1969
  %1971 = add nsw i32 10, %1970
  %1972 = icmp sgt i32 %1966, %1971
  br i1 %1972, label %1973, label %1974

1973:                                             ; preds = %1963
  store i32 -4, i32* %4, align 4
  br label %5717

1974:                                             ; preds = %1963
  store i32 0, i32* %8, align 4
  br label %1975

1975:                                             ; preds = %2079, %1974
  %1976 = load i32, i32* %8, align 4
  %1977 = icmp slt i32 %1976, 16
  br i1 %1977, label %1978, label %2082

1978:                                             ; preds = %1975
  br label %1979

1979:                                             ; preds = %144, %1978
  %1980 = load %struct.DState*, %struct.DState** %2, align 8
  %1981 = getelementptr inbounds %struct.DState, %struct.DState* %1980, i32 0, i32 1
  store i32 28, i32* %1981, align 8
  br label %1982

1982:                                             ; preds = %1979, %2061
  %1983 = load %struct.DState*, %struct.DState** %2, align 8
  %1984 = getelementptr inbounds %struct.DState, %struct.DState* %1983, i32 0, i32 8
  %1985 = load i32, i32* %1984, align 4
  %1986 = icmp sge i32 %1985, 1
  br i1 %1986, label %1987, label %2003

1987:                                             ; preds = %1982
  %1988 = load %struct.DState*, %struct.DState** %2, align 8
  %1989 = getelementptr inbounds %struct.DState, %struct.DState* %1988, i32 0, i32 7
  %1990 = load i32, i32* %1989, align 8
  %1991 = load %struct.DState*, %struct.DState** %2, align 8
  %1992 = getelementptr inbounds %struct.DState, %struct.DState* %1991, i32 0, i32 8
  %1993 = load i32, i32* %1992, align 4
  %1994 = sub nsw i32 %1993, 1
  %1995 = lshr i32 %1990, %1994
  %1996 = and i32 %1995, 1
  store i32 %1996, i32* %50, align 4
  %1997 = load %struct.DState*, %struct.DState** %2, align 8
  %1998 = getelementptr inbounds %struct.DState, %struct.DState* %1997, i32 0, i32 8
  %1999 = load i32, i32* %1998, align 4
  %2000 = sub nsw i32 %1999, 1
  store i32 %2000, i32* %1998, align 4
  %2001 = load i32, i32* %50, align 4
  %2002 = trunc i32 %2001 to i8
  store i8 %2002, i8* %3, align 1
  br label %2062

2003:                                             ; preds = %1982
  %2004 = load %struct.DState*, %struct.DState** %2, align 8
  %2005 = getelementptr inbounds %struct.DState, %struct.DState* %2004, i32 0, i32 0
  %2006 = load %struct.bz_stream*, %struct.bz_stream** %2005, align 8
  %2007 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2006, i32 0, i32 1
  %2008 = load i32, i32* %2007, align 8
  %2009 = icmp eq i32 %2008, 0
  br i1 %2009, label %2010, label %2011

2010:                                             ; preds = %2003
  store i32 0, i32* %4, align 4
  br label %5717

2011:                                             ; preds = %2003
  %2012 = load %struct.DState*, %struct.DState** %2, align 8
  %2013 = getelementptr inbounds %struct.DState, %struct.DState* %2012, i32 0, i32 7
  %2014 = load i32, i32* %2013, align 8
  %2015 = shl i32 %2014, 8
  %2016 = load %struct.DState*, %struct.DState** %2, align 8
  %2017 = getelementptr inbounds %struct.DState, %struct.DState* %2016, i32 0, i32 0
  %2018 = load %struct.bz_stream*, %struct.bz_stream** %2017, align 8
  %2019 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2018, i32 0, i32 0
  %2020 = load i8*, i8** %2019, align 8
  %2021 = load i8, i8* %2020, align 1
  %2022 = zext i8 %2021 to i32
  %2023 = or i32 %2015, %2022
  %2024 = load %struct.DState*, %struct.DState** %2, align 8
  %2025 = getelementptr inbounds %struct.DState, %struct.DState* %2024, i32 0, i32 7
  store i32 %2023, i32* %2025, align 8
  %2026 = load %struct.DState*, %struct.DState** %2, align 8
  %2027 = getelementptr inbounds %struct.DState, %struct.DState* %2026, i32 0, i32 8
  %2028 = load i32, i32* %2027, align 4
  %2029 = add nsw i32 %2028, 8
  store i32 %2029, i32* %2027, align 4
  %2030 = load %struct.DState*, %struct.DState** %2, align 8
  %2031 = getelementptr inbounds %struct.DState, %struct.DState* %2030, i32 0, i32 0
  %2032 = load %struct.bz_stream*, %struct.bz_stream** %2031, align 8
  %2033 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2032, i32 0, i32 0
  %2034 = load i8*, i8** %2033, align 8
  %2035 = getelementptr inbounds i8, i8* %2034, i32 1
  store i8* %2035, i8** %2033, align 8
  %2036 = load %struct.DState*, %struct.DState** %2, align 8
  %2037 = getelementptr inbounds %struct.DState, %struct.DState* %2036, i32 0, i32 0
  %2038 = load %struct.bz_stream*, %struct.bz_stream** %2037, align 8
  %2039 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2038, i32 0, i32 1
  %2040 = load i32, i32* %2039, align 8
  %2041 = add i32 %2040, -1
  store i32 %2041, i32* %2039, align 8
  %2042 = load %struct.DState*, %struct.DState** %2, align 8
  %2043 = getelementptr inbounds %struct.DState, %struct.DState* %2042, i32 0, i32 0
  %2044 = load %struct.bz_stream*, %struct.bz_stream** %2043, align 8
  %2045 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2044, i32 0, i32 2
  %2046 = load i32, i32* %2045, align 4
  %2047 = add i32 %2046, 1
  store i32 %2047, i32* %2045, align 4
  %2048 = load %struct.DState*, %struct.DState** %2, align 8
  %2049 = getelementptr inbounds %struct.DState, %struct.DState* %2048, i32 0, i32 0
  %2050 = load %struct.bz_stream*, %struct.bz_stream** %2049, align 8
  %2051 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2050, i32 0, i32 2
  %2052 = load i32, i32* %2051, align 4
  %2053 = icmp eq i32 %2052, 0
  br i1 %2053, label %2054, label %2061

2054:                                             ; preds = %2011
  %2055 = load %struct.DState*, %struct.DState** %2, align 8
  %2056 = getelementptr inbounds %struct.DState, %struct.DState* %2055, i32 0, i32 0
  %2057 = load %struct.bz_stream*, %struct.bz_stream** %2056, align 8
  %2058 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2057, i32 0, i32 3
  %2059 = load i32, i32* %2058, align 8
  %2060 = add i32 %2059, 1
  store i32 %2060, i32* %2058, align 8
  br label %2061

2061:                                             ; preds = %2054, %2011
  br label %1982

2062:                                             ; preds = %1987
  %2063 = load i8, i8* %3, align 1
  %2064 = zext i8 %2063 to i32
  %2065 = icmp eq i32 %2064, 1
  br i1 %2065, label %2066, label %2072

2066:                                             ; preds = %2062
  %2067 = load %struct.DState*, %struct.DState** %2, align 8
  %2068 = getelementptr inbounds %struct.DState, %struct.DState* %2067, i32 0, i32 29
  %2069 = load i32, i32* %8, align 4
  %2070 = sext i32 %2069 to i64
  %2071 = getelementptr inbounds [16 x i8], [16 x i8]* %2068, i64 0, i64 %2070
  store i8 1, i8* %2071, align 1
  br label %2078

2072:                                             ; preds = %2062
  %2073 = load %struct.DState*, %struct.DState** %2, align 8
  %2074 = getelementptr inbounds %struct.DState, %struct.DState* %2073, i32 0, i32 29
  %2075 = load i32, i32* %8, align 4
  %2076 = sext i32 %2075 to i64
  %2077 = getelementptr inbounds [16 x i8], [16 x i8]* %2074, i64 0, i64 %2076
  store i8 0, i8* %2077, align 1
  br label %2078

2078:                                             ; preds = %2072, %2066
  br label %2079

2079:                                             ; preds = %2078
  %2080 = load i32, i32* %8, align 4
  %2081 = add nsw i32 %2080, 1
  store i32 %2081, i32* %8, align 4
  br label %1975

2082:                                             ; preds = %1975
  store i32 0, i32* %8, align 4
  br label %2083

2083:                                             ; preds = %2092, %2082
  %2084 = load i32, i32* %8, align 4
  %2085 = icmp slt i32 %2084, 256
  br i1 %2085, label %2086, label %2095

2086:                                             ; preds = %2083
  %2087 = load %struct.DState*, %struct.DState** %2, align 8
  %2088 = getelementptr inbounds %struct.DState, %struct.DState* %2087, i32 0, i32 28
  %2089 = load i32, i32* %8, align 4
  %2090 = sext i32 %2089 to i64
  %2091 = getelementptr inbounds [256 x i8], [256 x i8]* %2088, i64 0, i64 %2090
  store i8 0, i8* %2091, align 1
  br label %2092

2092:                                             ; preds = %2086
  %2093 = load i32, i32* %8, align 4
  %2094 = add nsw i32 %2093, 1
  store i32 %2094, i32* %8, align 4
  br label %2083

2095:                                             ; preds = %2083
  store i32 0, i32* %8, align 4
  br label %2096

2096:                                             ; preds = %2214, %2095
  %2097 = load i32, i32* %8, align 4
  %2098 = icmp slt i32 %2097, 16
  br i1 %2098, label %2099, label %2217

2099:                                             ; preds = %2096
  %2100 = load %struct.DState*, %struct.DState** %2, align 8
  %2101 = getelementptr inbounds %struct.DState, %struct.DState* %2100, i32 0, i32 29
  %2102 = load i32, i32* %8, align 4
  %2103 = sext i32 %2102 to i64
  %2104 = getelementptr inbounds [16 x i8], [16 x i8]* %2101, i64 0, i64 %2103
  %2105 = load i8, i8* %2104, align 1
  %2106 = icmp ne i8 %2105, 0
  br i1 %2106, label %2107, label %2213

2107:                                             ; preds = %2099
  store i32 0, i32* %9, align 4
  br label %2108

2108:                                             ; preds = %2209, %2107
  %2109 = load i32, i32* %9, align 4
  %2110 = icmp slt i32 %2109, 16
  br i1 %2110, label %2111, label %2212

2111:                                             ; preds = %2108
  br label %2112

2112:                                             ; preds = %144, %2111
  %2113 = load %struct.DState*, %struct.DState** %2, align 8
  %2114 = getelementptr inbounds %struct.DState, %struct.DState* %2113, i32 0, i32 1
  store i32 29, i32* %2114, align 8
  br label %2115

2115:                                             ; preds = %2112, %2194
  %2116 = load %struct.DState*, %struct.DState** %2, align 8
  %2117 = getelementptr inbounds %struct.DState, %struct.DState* %2116, i32 0, i32 8
  %2118 = load i32, i32* %2117, align 4
  %2119 = icmp sge i32 %2118, 1
  br i1 %2119, label %2120, label %2136

2120:                                             ; preds = %2115
  %2121 = load %struct.DState*, %struct.DState** %2, align 8
  %2122 = getelementptr inbounds %struct.DState, %struct.DState* %2121, i32 0, i32 7
  %2123 = load i32, i32* %2122, align 8
  %2124 = load %struct.DState*, %struct.DState** %2, align 8
  %2125 = getelementptr inbounds %struct.DState, %struct.DState* %2124, i32 0, i32 8
  %2126 = load i32, i32* %2125, align 4
  %2127 = sub nsw i32 %2126, 1
  %2128 = lshr i32 %2123, %2127
  %2129 = and i32 %2128, 1
  store i32 %2129, i32* %51, align 4
  %2130 = load %struct.DState*, %struct.DState** %2, align 8
  %2131 = getelementptr inbounds %struct.DState, %struct.DState* %2130, i32 0, i32 8
  %2132 = load i32, i32* %2131, align 4
  %2133 = sub nsw i32 %2132, 1
  store i32 %2133, i32* %2131, align 4
  %2134 = load i32, i32* %51, align 4
  %2135 = trunc i32 %2134 to i8
  store i8 %2135, i8* %3, align 1
  br label %2195

2136:                                             ; preds = %2115
  %2137 = load %struct.DState*, %struct.DState** %2, align 8
  %2138 = getelementptr inbounds %struct.DState, %struct.DState* %2137, i32 0, i32 0
  %2139 = load %struct.bz_stream*, %struct.bz_stream** %2138, align 8
  %2140 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2139, i32 0, i32 1
  %2141 = load i32, i32* %2140, align 8
  %2142 = icmp eq i32 %2141, 0
  br i1 %2142, label %2143, label %2144

2143:                                             ; preds = %2136
  store i32 0, i32* %4, align 4
  br label %5717

2144:                                             ; preds = %2136
  %2145 = load %struct.DState*, %struct.DState** %2, align 8
  %2146 = getelementptr inbounds %struct.DState, %struct.DState* %2145, i32 0, i32 7
  %2147 = load i32, i32* %2146, align 8
  %2148 = shl i32 %2147, 8
  %2149 = load %struct.DState*, %struct.DState** %2, align 8
  %2150 = getelementptr inbounds %struct.DState, %struct.DState* %2149, i32 0, i32 0
  %2151 = load %struct.bz_stream*, %struct.bz_stream** %2150, align 8
  %2152 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2151, i32 0, i32 0
  %2153 = load i8*, i8** %2152, align 8
  %2154 = load i8, i8* %2153, align 1
  %2155 = zext i8 %2154 to i32
  %2156 = or i32 %2148, %2155
  %2157 = load %struct.DState*, %struct.DState** %2, align 8
  %2158 = getelementptr inbounds %struct.DState, %struct.DState* %2157, i32 0, i32 7
  store i32 %2156, i32* %2158, align 8
  %2159 = load %struct.DState*, %struct.DState** %2, align 8
  %2160 = getelementptr inbounds %struct.DState, %struct.DState* %2159, i32 0, i32 8
  %2161 = load i32, i32* %2160, align 4
  %2162 = add nsw i32 %2161, 8
  store i32 %2162, i32* %2160, align 4
  %2163 = load %struct.DState*, %struct.DState** %2, align 8
  %2164 = getelementptr inbounds %struct.DState, %struct.DState* %2163, i32 0, i32 0
  %2165 = load %struct.bz_stream*, %struct.bz_stream** %2164, align 8
  %2166 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2165, i32 0, i32 0
  %2167 = load i8*, i8** %2166, align 8
  %2168 = getelementptr inbounds i8, i8* %2167, i32 1
  store i8* %2168, i8** %2166, align 8
  %2169 = load %struct.DState*, %struct.DState** %2, align 8
  %2170 = getelementptr inbounds %struct.DState, %struct.DState* %2169, i32 0, i32 0
  %2171 = load %struct.bz_stream*, %struct.bz_stream** %2170, align 8
  %2172 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2171, i32 0, i32 1
  %2173 = load i32, i32* %2172, align 8
  %2174 = add i32 %2173, -1
  store i32 %2174, i32* %2172, align 8
  %2175 = load %struct.DState*, %struct.DState** %2, align 8
  %2176 = getelementptr inbounds %struct.DState, %struct.DState* %2175, i32 0, i32 0
  %2177 = load %struct.bz_stream*, %struct.bz_stream** %2176, align 8
  %2178 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2177, i32 0, i32 2
  %2179 = load i32, i32* %2178, align 4
  %2180 = add i32 %2179, 1
  store i32 %2180, i32* %2178, align 4
  %2181 = load %struct.DState*, %struct.DState** %2, align 8
  %2182 = getelementptr inbounds %struct.DState, %struct.DState* %2181, i32 0, i32 0
  %2183 = load %struct.bz_stream*, %struct.bz_stream** %2182, align 8
  %2184 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2183, i32 0, i32 2
  %2185 = load i32, i32* %2184, align 4
  %2186 = icmp eq i32 %2185, 0
  br i1 %2186, label %2187, label %2194

2187:                                             ; preds = %2144
  %2188 = load %struct.DState*, %struct.DState** %2, align 8
  %2189 = getelementptr inbounds %struct.DState, %struct.DState* %2188, i32 0, i32 0
  %2190 = load %struct.bz_stream*, %struct.bz_stream** %2189, align 8
  %2191 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2190, i32 0, i32 3
  %2192 = load i32, i32* %2191, align 8
  %2193 = add i32 %2192, 1
  store i32 %2193, i32* %2191, align 8
  br label %2194

2194:                                             ; preds = %2187, %2144
  br label %2115

2195:                                             ; preds = %2120
  %2196 = load i8, i8* %3, align 1
  %2197 = zext i8 %2196 to i32
  %2198 = icmp eq i32 %2197, 1
  br i1 %2198, label %2199, label %2208

2199:                                             ; preds = %2195
  %2200 = load %struct.DState*, %struct.DState** %2, align 8
  %2201 = getelementptr inbounds %struct.DState, %struct.DState* %2200, i32 0, i32 28
  %2202 = load i32, i32* %8, align 4
  %2203 = mul nsw i32 %2202, 16
  %2204 = load i32, i32* %9, align 4
  %2205 = add nsw i32 %2203, %2204
  %2206 = sext i32 %2205 to i64
  %2207 = getelementptr inbounds [256 x i8], [256 x i8]* %2201, i64 0, i64 %2206
  store i8 1, i8* %2207, align 1
  br label %2208

2208:                                             ; preds = %2199, %2195
  br label %2209

2209:                                             ; preds = %2208
  %2210 = load i32, i32* %9, align 4
  %2211 = add nsw i32 %2210, 1
  store i32 %2211, i32* %9, align 4
  br label %2108

2212:                                             ; preds = %2108
  br label %2213

2213:                                             ; preds = %2212, %2099
  br label %2214

2214:                                             ; preds = %2213
  %2215 = load i32, i32* %8, align 4
  %2216 = add nsw i32 %2215, 1
  store i32 %2216, i32* %8, align 4
  br label %2096

2217:                                             ; preds = %2096
  %2218 = load %struct.DState*, %struct.DState** %2, align 8
  call void @makeMaps_d(%struct.DState* %2218)
  %2219 = load %struct.DState*, %struct.DState** %2, align 8
  %2220 = getelementptr inbounds %struct.DState, %struct.DState* %2219, i32 0, i32 27
  %2221 = load i32, i32* %2220, align 8
  %2222 = icmp eq i32 %2221, 0
  br i1 %2222, label %2223, label %2224

2223:                                             ; preds = %2217
  store i32 -4, i32* %4, align 4
  br label %5717

2224:                                             ; preds = %2217
  %2225 = load %struct.DState*, %struct.DState** %2, align 8
  %2226 = getelementptr inbounds %struct.DState, %struct.DState* %2225, i32 0, i32 27
  %2227 = load i32, i32* %2226, align 8
  %2228 = add nsw i32 %2227, 2
  store i32 %2228, i32* %11, align 4
  br label %2229

2229:                                             ; preds = %144, %2224
  %2230 = load %struct.DState*, %struct.DState** %2, align 8
  %2231 = getelementptr inbounds %struct.DState, %struct.DState* %2230, i32 0, i32 1
  store i32 30, i32* %2231, align 8
  br label %2232

2232:                                             ; preds = %2229, %2310
  %2233 = load %struct.DState*, %struct.DState** %2, align 8
  %2234 = getelementptr inbounds %struct.DState, %struct.DState* %2233, i32 0, i32 8
  %2235 = load i32, i32* %2234, align 4
  %2236 = icmp sge i32 %2235, 3
  br i1 %2236, label %2237, label %2252

2237:                                             ; preds = %2232
  %2238 = load %struct.DState*, %struct.DState** %2, align 8
  %2239 = getelementptr inbounds %struct.DState, %struct.DState* %2238, i32 0, i32 7
  %2240 = load i32, i32* %2239, align 8
  %2241 = load %struct.DState*, %struct.DState** %2, align 8
  %2242 = getelementptr inbounds %struct.DState, %struct.DState* %2241, i32 0, i32 8
  %2243 = load i32, i32* %2242, align 4
  %2244 = sub nsw i32 %2243, 3
  %2245 = lshr i32 %2240, %2244
  %2246 = and i32 %2245, 7
  store i32 %2246, i32* %52, align 4
  %2247 = load %struct.DState*, %struct.DState** %2, align 8
  %2248 = getelementptr inbounds %struct.DState, %struct.DState* %2247, i32 0, i32 8
  %2249 = load i32, i32* %2248, align 4
  %2250 = sub nsw i32 %2249, 3
  store i32 %2250, i32* %2248, align 4
  %2251 = load i32, i32* %52, align 4
  store i32 %2251, i32* %12, align 4
  br label %2311

2252:                                             ; preds = %2232
  %2253 = load %struct.DState*, %struct.DState** %2, align 8
  %2254 = getelementptr inbounds %struct.DState, %struct.DState* %2253, i32 0, i32 0
  %2255 = load %struct.bz_stream*, %struct.bz_stream** %2254, align 8
  %2256 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2255, i32 0, i32 1
  %2257 = load i32, i32* %2256, align 8
  %2258 = icmp eq i32 %2257, 0
  br i1 %2258, label %2259, label %2260

2259:                                             ; preds = %2252
  store i32 0, i32* %4, align 4
  br label %5717

2260:                                             ; preds = %2252
  %2261 = load %struct.DState*, %struct.DState** %2, align 8
  %2262 = getelementptr inbounds %struct.DState, %struct.DState* %2261, i32 0, i32 7
  %2263 = load i32, i32* %2262, align 8
  %2264 = shl i32 %2263, 8
  %2265 = load %struct.DState*, %struct.DState** %2, align 8
  %2266 = getelementptr inbounds %struct.DState, %struct.DState* %2265, i32 0, i32 0
  %2267 = load %struct.bz_stream*, %struct.bz_stream** %2266, align 8
  %2268 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2267, i32 0, i32 0
  %2269 = load i8*, i8** %2268, align 8
  %2270 = load i8, i8* %2269, align 1
  %2271 = zext i8 %2270 to i32
  %2272 = or i32 %2264, %2271
  %2273 = load %struct.DState*, %struct.DState** %2, align 8
  %2274 = getelementptr inbounds %struct.DState, %struct.DState* %2273, i32 0, i32 7
  store i32 %2272, i32* %2274, align 8
  %2275 = load %struct.DState*, %struct.DState** %2, align 8
  %2276 = getelementptr inbounds %struct.DState, %struct.DState* %2275, i32 0, i32 8
  %2277 = load i32, i32* %2276, align 4
  %2278 = add nsw i32 %2277, 8
  store i32 %2278, i32* %2276, align 4
  %2279 = load %struct.DState*, %struct.DState** %2, align 8
  %2280 = getelementptr inbounds %struct.DState, %struct.DState* %2279, i32 0, i32 0
  %2281 = load %struct.bz_stream*, %struct.bz_stream** %2280, align 8
  %2282 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2281, i32 0, i32 0
  %2283 = load i8*, i8** %2282, align 8
  %2284 = getelementptr inbounds i8, i8* %2283, i32 1
  store i8* %2284, i8** %2282, align 8
  %2285 = load %struct.DState*, %struct.DState** %2, align 8
  %2286 = getelementptr inbounds %struct.DState, %struct.DState* %2285, i32 0, i32 0
  %2287 = load %struct.bz_stream*, %struct.bz_stream** %2286, align 8
  %2288 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2287, i32 0, i32 1
  %2289 = load i32, i32* %2288, align 8
  %2290 = add i32 %2289, -1
  store i32 %2290, i32* %2288, align 8
  %2291 = load %struct.DState*, %struct.DState** %2, align 8
  %2292 = getelementptr inbounds %struct.DState, %struct.DState* %2291, i32 0, i32 0
  %2293 = load %struct.bz_stream*, %struct.bz_stream** %2292, align 8
  %2294 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2293, i32 0, i32 2
  %2295 = load i32, i32* %2294, align 4
  %2296 = add i32 %2295, 1
  store i32 %2296, i32* %2294, align 4
  %2297 = load %struct.DState*, %struct.DState** %2, align 8
  %2298 = getelementptr inbounds %struct.DState, %struct.DState* %2297, i32 0, i32 0
  %2299 = load %struct.bz_stream*, %struct.bz_stream** %2298, align 8
  %2300 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2299, i32 0, i32 2
  %2301 = load i32, i32* %2300, align 4
  %2302 = icmp eq i32 %2301, 0
  br i1 %2302, label %2303, label %2310

2303:                                             ; preds = %2260
  %2304 = load %struct.DState*, %struct.DState** %2, align 8
  %2305 = getelementptr inbounds %struct.DState, %struct.DState* %2304, i32 0, i32 0
  %2306 = load %struct.bz_stream*, %struct.bz_stream** %2305, align 8
  %2307 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2306, i32 0, i32 3
  %2308 = load i32, i32* %2307, align 8
  %2309 = add i32 %2308, 1
  store i32 %2309, i32* %2307, align 8
  br label %2310

2310:                                             ; preds = %2303, %2260
  br label %2232

2311:                                             ; preds = %2237
  %2312 = load i32, i32* %12, align 4
  %2313 = icmp slt i32 %2312, 2
  br i1 %2313, label %2317, label %2314

2314:                                             ; preds = %2311
  %2315 = load i32, i32* %12, align 4
  %2316 = icmp sgt i32 %2315, 6
  br i1 %2316, label %2317, label %2318

2317:                                             ; preds = %2314, %2311
  store i32 -4, i32* %4, align 4
  br label %5717

2318:                                             ; preds = %2314
  br label %2319

2319:                                             ; preds = %144, %2318
  %2320 = load %struct.DState*, %struct.DState** %2, align 8
  %2321 = getelementptr inbounds %struct.DState, %struct.DState* %2320, i32 0, i32 1
  store i32 31, i32* %2321, align 8
  br label %2322

2322:                                             ; preds = %2319, %2400
  %2323 = load %struct.DState*, %struct.DState** %2, align 8
  %2324 = getelementptr inbounds %struct.DState, %struct.DState* %2323, i32 0, i32 8
  %2325 = load i32, i32* %2324, align 4
  %2326 = icmp sge i32 %2325, 15
  br i1 %2326, label %2327, label %2342

2327:                                             ; preds = %2322
  %2328 = load %struct.DState*, %struct.DState** %2, align 8
  %2329 = getelementptr inbounds %struct.DState, %struct.DState* %2328, i32 0, i32 7
  %2330 = load i32, i32* %2329, align 8
  %2331 = load %struct.DState*, %struct.DState** %2, align 8
  %2332 = getelementptr inbounds %struct.DState, %struct.DState* %2331, i32 0, i32 8
  %2333 = load i32, i32* %2332, align 4
  %2334 = sub nsw i32 %2333, 15
  %2335 = lshr i32 %2330, %2334
  %2336 = and i32 %2335, 32767
  store i32 %2336, i32* %53, align 4
  %2337 = load %struct.DState*, %struct.DState** %2, align 8
  %2338 = getelementptr inbounds %struct.DState, %struct.DState* %2337, i32 0, i32 8
  %2339 = load i32, i32* %2338, align 4
  %2340 = sub nsw i32 %2339, 15
  store i32 %2340, i32* %2338, align 4
  %2341 = load i32, i32* %53, align 4
  store i32 %2341, i32* %13, align 4
  br label %2401

2342:                                             ; preds = %2322
  %2343 = load %struct.DState*, %struct.DState** %2, align 8
  %2344 = getelementptr inbounds %struct.DState, %struct.DState* %2343, i32 0, i32 0
  %2345 = load %struct.bz_stream*, %struct.bz_stream** %2344, align 8
  %2346 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2345, i32 0, i32 1
  %2347 = load i32, i32* %2346, align 8
  %2348 = icmp eq i32 %2347, 0
  br i1 %2348, label %2349, label %2350

2349:                                             ; preds = %2342
  store i32 0, i32* %4, align 4
  br label %5717

2350:                                             ; preds = %2342
  %2351 = load %struct.DState*, %struct.DState** %2, align 8
  %2352 = getelementptr inbounds %struct.DState, %struct.DState* %2351, i32 0, i32 7
  %2353 = load i32, i32* %2352, align 8
  %2354 = shl i32 %2353, 8
  %2355 = load %struct.DState*, %struct.DState** %2, align 8
  %2356 = getelementptr inbounds %struct.DState, %struct.DState* %2355, i32 0, i32 0
  %2357 = load %struct.bz_stream*, %struct.bz_stream** %2356, align 8
  %2358 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2357, i32 0, i32 0
  %2359 = load i8*, i8** %2358, align 8
  %2360 = load i8, i8* %2359, align 1
  %2361 = zext i8 %2360 to i32
  %2362 = or i32 %2354, %2361
  %2363 = load %struct.DState*, %struct.DState** %2, align 8
  %2364 = getelementptr inbounds %struct.DState, %struct.DState* %2363, i32 0, i32 7
  store i32 %2362, i32* %2364, align 8
  %2365 = load %struct.DState*, %struct.DState** %2, align 8
  %2366 = getelementptr inbounds %struct.DState, %struct.DState* %2365, i32 0, i32 8
  %2367 = load i32, i32* %2366, align 4
  %2368 = add nsw i32 %2367, 8
  store i32 %2368, i32* %2366, align 4
  %2369 = load %struct.DState*, %struct.DState** %2, align 8
  %2370 = getelementptr inbounds %struct.DState, %struct.DState* %2369, i32 0, i32 0
  %2371 = load %struct.bz_stream*, %struct.bz_stream** %2370, align 8
  %2372 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2371, i32 0, i32 0
  %2373 = load i8*, i8** %2372, align 8
  %2374 = getelementptr inbounds i8, i8* %2373, i32 1
  store i8* %2374, i8** %2372, align 8
  %2375 = load %struct.DState*, %struct.DState** %2, align 8
  %2376 = getelementptr inbounds %struct.DState, %struct.DState* %2375, i32 0, i32 0
  %2377 = load %struct.bz_stream*, %struct.bz_stream** %2376, align 8
  %2378 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2377, i32 0, i32 1
  %2379 = load i32, i32* %2378, align 8
  %2380 = add i32 %2379, -1
  store i32 %2380, i32* %2378, align 8
  %2381 = load %struct.DState*, %struct.DState** %2, align 8
  %2382 = getelementptr inbounds %struct.DState, %struct.DState* %2381, i32 0, i32 0
  %2383 = load %struct.bz_stream*, %struct.bz_stream** %2382, align 8
  %2384 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2383, i32 0, i32 2
  %2385 = load i32, i32* %2384, align 4
  %2386 = add i32 %2385, 1
  store i32 %2386, i32* %2384, align 4
  %2387 = load %struct.DState*, %struct.DState** %2, align 8
  %2388 = getelementptr inbounds %struct.DState, %struct.DState* %2387, i32 0, i32 0
  %2389 = load %struct.bz_stream*, %struct.bz_stream** %2388, align 8
  %2390 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2389, i32 0, i32 2
  %2391 = load i32, i32* %2390, align 4
  %2392 = icmp eq i32 %2391, 0
  br i1 %2392, label %2393, label %2400

2393:                                             ; preds = %2350
  %2394 = load %struct.DState*, %struct.DState** %2, align 8
  %2395 = getelementptr inbounds %struct.DState, %struct.DState* %2394, i32 0, i32 0
  %2396 = load %struct.bz_stream*, %struct.bz_stream** %2395, align 8
  %2397 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2396, i32 0, i32 3
  %2398 = load i32, i32* %2397, align 8
  %2399 = add i32 %2398, 1
  store i32 %2399, i32* %2397, align 8
  br label %2400

2400:                                             ; preds = %2393, %2350
  br label %2322

2401:                                             ; preds = %2327
  %2402 = load i32, i32* %13, align 4
  %2403 = icmp slt i32 %2402, 1
  br i1 %2403, label %2404, label %2405

2404:                                             ; preds = %2401
  store i32 -4, i32* %4, align 4
  br label %5717

2405:                                             ; preds = %2401
  store i32 0, i32* %8, align 4
  br label %2406

2406:                                             ; preds = %2516, %2405
  %2407 = load i32, i32* %8, align 4
  %2408 = load i32, i32* %13, align 4
  %2409 = icmp slt i32 %2407, %2408
  br i1 %2409, label %2410, label %2519

2410:                                             ; preds = %2406
  store i32 0, i32* %9, align 4
  br label %2411

2411:                                             ; preds = %2410, %2507
  br label %2412

2412:                                             ; preds = %144, %2411
  %2413 = load %struct.DState*, %struct.DState** %2, align 8
  %2414 = getelementptr inbounds %struct.DState, %struct.DState* %2413, i32 0, i32 1
  store i32 32, i32* %2414, align 8
  br label %2415

2415:                                             ; preds = %2412, %2494
  %2416 = load %struct.DState*, %struct.DState** %2, align 8
  %2417 = getelementptr inbounds %struct.DState, %struct.DState* %2416, i32 0, i32 8
  %2418 = load i32, i32* %2417, align 4
  %2419 = icmp sge i32 %2418, 1
  br i1 %2419, label %2420, label %2436

2420:                                             ; preds = %2415
  %2421 = load %struct.DState*, %struct.DState** %2, align 8
  %2422 = getelementptr inbounds %struct.DState, %struct.DState* %2421, i32 0, i32 7
  %2423 = load i32, i32* %2422, align 8
  %2424 = load %struct.DState*, %struct.DState** %2, align 8
  %2425 = getelementptr inbounds %struct.DState, %struct.DState* %2424, i32 0, i32 8
  %2426 = load i32, i32* %2425, align 4
  %2427 = sub nsw i32 %2426, 1
  %2428 = lshr i32 %2423, %2427
  %2429 = and i32 %2428, 1
  store i32 %2429, i32* %54, align 4
  %2430 = load %struct.DState*, %struct.DState** %2, align 8
  %2431 = getelementptr inbounds %struct.DState, %struct.DState* %2430, i32 0, i32 8
  %2432 = load i32, i32* %2431, align 4
  %2433 = sub nsw i32 %2432, 1
  store i32 %2433, i32* %2431, align 4
  %2434 = load i32, i32* %54, align 4
  %2435 = trunc i32 %2434 to i8
  store i8 %2435, i8* %3, align 1
  br label %2495

2436:                                             ; preds = %2415
  %2437 = load %struct.DState*, %struct.DState** %2, align 8
  %2438 = getelementptr inbounds %struct.DState, %struct.DState* %2437, i32 0, i32 0
  %2439 = load %struct.bz_stream*, %struct.bz_stream** %2438, align 8
  %2440 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2439, i32 0, i32 1
  %2441 = load i32, i32* %2440, align 8
  %2442 = icmp eq i32 %2441, 0
  br i1 %2442, label %2443, label %2444

2443:                                             ; preds = %2436
  store i32 0, i32* %4, align 4
  br label %5717

2444:                                             ; preds = %2436
  %2445 = load %struct.DState*, %struct.DState** %2, align 8
  %2446 = getelementptr inbounds %struct.DState, %struct.DState* %2445, i32 0, i32 7
  %2447 = load i32, i32* %2446, align 8
  %2448 = shl i32 %2447, 8
  %2449 = load %struct.DState*, %struct.DState** %2, align 8
  %2450 = getelementptr inbounds %struct.DState, %struct.DState* %2449, i32 0, i32 0
  %2451 = load %struct.bz_stream*, %struct.bz_stream** %2450, align 8
  %2452 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2451, i32 0, i32 0
  %2453 = load i8*, i8** %2452, align 8
  %2454 = load i8, i8* %2453, align 1
  %2455 = zext i8 %2454 to i32
  %2456 = or i32 %2448, %2455
  %2457 = load %struct.DState*, %struct.DState** %2, align 8
  %2458 = getelementptr inbounds %struct.DState, %struct.DState* %2457, i32 0, i32 7
  store i32 %2456, i32* %2458, align 8
  %2459 = load %struct.DState*, %struct.DState** %2, align 8
  %2460 = getelementptr inbounds %struct.DState, %struct.DState* %2459, i32 0, i32 8
  %2461 = load i32, i32* %2460, align 4
  %2462 = add nsw i32 %2461, 8
  store i32 %2462, i32* %2460, align 4
  %2463 = load %struct.DState*, %struct.DState** %2, align 8
  %2464 = getelementptr inbounds %struct.DState, %struct.DState* %2463, i32 0, i32 0
  %2465 = load %struct.bz_stream*, %struct.bz_stream** %2464, align 8
  %2466 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2465, i32 0, i32 0
  %2467 = load i8*, i8** %2466, align 8
  %2468 = getelementptr inbounds i8, i8* %2467, i32 1
  store i8* %2468, i8** %2466, align 8
  %2469 = load %struct.DState*, %struct.DState** %2, align 8
  %2470 = getelementptr inbounds %struct.DState, %struct.DState* %2469, i32 0, i32 0
  %2471 = load %struct.bz_stream*, %struct.bz_stream** %2470, align 8
  %2472 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2471, i32 0, i32 1
  %2473 = load i32, i32* %2472, align 8
  %2474 = add i32 %2473, -1
  store i32 %2474, i32* %2472, align 8
  %2475 = load %struct.DState*, %struct.DState** %2, align 8
  %2476 = getelementptr inbounds %struct.DState, %struct.DState* %2475, i32 0, i32 0
  %2477 = load %struct.bz_stream*, %struct.bz_stream** %2476, align 8
  %2478 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2477, i32 0, i32 2
  %2479 = load i32, i32* %2478, align 4
  %2480 = add i32 %2479, 1
  store i32 %2480, i32* %2478, align 4
  %2481 = load %struct.DState*, %struct.DState** %2, align 8
  %2482 = getelementptr inbounds %struct.DState, %struct.DState* %2481, i32 0, i32 0
  %2483 = load %struct.bz_stream*, %struct.bz_stream** %2482, align 8
  %2484 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2483, i32 0, i32 2
  %2485 = load i32, i32* %2484, align 4
  %2486 = icmp eq i32 %2485, 0
  br i1 %2486, label %2487, label %2494

2487:                                             ; preds = %2444
  %2488 = load %struct.DState*, %struct.DState** %2, align 8
  %2489 = getelementptr inbounds %struct.DState, %struct.DState* %2488, i32 0, i32 0
  %2490 = load %struct.bz_stream*, %struct.bz_stream** %2489, align 8
  %2491 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2490, i32 0, i32 3
  %2492 = load i32, i32* %2491, align 8
  %2493 = add i32 %2492, 1
  store i32 %2493, i32* %2491, align 8
  br label %2494

2494:                                             ; preds = %2487, %2444
  br label %2415

2495:                                             ; preds = %2420
  %2496 = load i8, i8* %3, align 1
  %2497 = zext i8 %2496 to i32
  %2498 = icmp eq i32 %2497, 0
  br i1 %2498, label %2499, label %2500

2499:                                             ; preds = %2495
  br label %2508

2500:                                             ; preds = %2495
  %2501 = load i32, i32* %9, align 4
  %2502 = add nsw i32 %2501, 1
  store i32 %2502, i32* %9, align 4
  %2503 = load i32, i32* %9, align 4
  %2504 = load i32, i32* %12, align 4
  %2505 = icmp sge i32 %2503, %2504
  br i1 %2505, label %2506, label %2507

2506:                                             ; preds = %2500
  store i32 -4, i32* %4, align 4
  br label %5717

2507:                                             ; preds = %2500
  br label %2411

2508:                                             ; preds = %2499
  %2509 = load i32, i32* %9, align 4
  %2510 = trunc i32 %2509 to i8
  %2511 = load %struct.DState*, %struct.DState** %2, align 8
  %2512 = getelementptr inbounds %struct.DState, %struct.DState* %2511, i32 0, i32 34
  %2513 = load i32, i32* %8, align 4
  %2514 = sext i32 %2513 to i64
  %2515 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2512, i64 0, i64 %2514
  store i8 %2510, i8* %2515, align 1
  br label %2516

2516:                                             ; preds = %2508
  %2517 = load i32, i32* %8, align 4
  %2518 = add nsw i32 %2517, 1
  store i32 %2518, i32* %8, align 4
  br label %2406

2519:                                             ; preds = %2406
  store i8 0, i8* %57, align 1
  br label %2520

2520:                                             ; preds = %2530, %2519
  %2521 = load i8, i8* %57, align 1
  %2522 = zext i8 %2521 to i32
  %2523 = load i32, i32* %12, align 4
  %2524 = icmp slt i32 %2522, %2523
  br i1 %2524, label %2525, label %2533

2525:                                             ; preds = %2520
  %2526 = load i8, i8* %57, align 1
  %2527 = load i8, i8* %57, align 1
  %2528 = zext i8 %2527 to i64
  %2529 = getelementptr inbounds [6 x i8], [6 x i8]* %55, i64 0, i64 %2528
  store i8 %2526, i8* %2529, align 1
  br label %2530

2530:                                             ; preds = %2525
  %2531 = load i8, i8* %57, align 1
  %2532 = add i8 %2531, 1
  store i8 %2532, i8* %57, align 1
  br label %2520

2533:                                             ; preds = %2520
  store i32 0, i32* %8, align 4
  br label %2534

2534:                                             ; preds = %2574, %2533
  %2535 = load i32, i32* %8, align 4
  %2536 = load i32, i32* %13, align 4
  %2537 = icmp slt i32 %2535, %2536
  br i1 %2537, label %2538, label %2577

2538:                                             ; preds = %2534
  %2539 = load %struct.DState*, %struct.DState** %2, align 8
  %2540 = getelementptr inbounds %struct.DState, %struct.DState* %2539, i32 0, i32 34
  %2541 = load i32, i32* %8, align 4
  %2542 = sext i32 %2541 to i64
  %2543 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2540, i64 0, i64 %2542
  %2544 = load i8, i8* %2543, align 1
  store i8 %2544, i8* %57, align 1
  %2545 = load i8, i8* %57, align 1
  %2546 = zext i8 %2545 to i64
  %2547 = getelementptr inbounds [6 x i8], [6 x i8]* %55, i64 0, i64 %2546
  %2548 = load i8, i8* %2547, align 1
  store i8 %2548, i8* %56, align 1
  br label %2549

2549:                                             ; preds = %2553, %2538
  %2550 = load i8, i8* %57, align 1
  %2551 = zext i8 %2550 to i32
  %2552 = icmp sgt i32 %2551, 0
  br i1 %2552, label %2553, label %2565

2553:                                             ; preds = %2549
  %2554 = load i8, i8* %57, align 1
  %2555 = zext i8 %2554 to i32
  %2556 = sub nsw i32 %2555, 1
  %2557 = sext i32 %2556 to i64
  %2558 = getelementptr inbounds [6 x i8], [6 x i8]* %55, i64 0, i64 %2557
  %2559 = load i8, i8* %2558, align 1
  %2560 = load i8, i8* %57, align 1
  %2561 = zext i8 %2560 to i64
  %2562 = getelementptr inbounds [6 x i8], [6 x i8]* %55, i64 0, i64 %2561
  store i8 %2559, i8* %2562, align 1
  %2563 = load i8, i8* %57, align 1
  %2564 = add i8 %2563, -1
  store i8 %2564, i8* %57, align 1
  br label %2549

2565:                                             ; preds = %2549
  %2566 = load i8, i8* %56, align 1
  %2567 = getelementptr inbounds [6 x i8], [6 x i8]* %55, i64 0, i64 0
  store i8 %2566, i8* %2567, align 1
  %2568 = load i8, i8* %56, align 1
  %2569 = load %struct.DState*, %struct.DState** %2, align 8
  %2570 = getelementptr inbounds %struct.DState, %struct.DState* %2569, i32 0, i32 33
  %2571 = load i32, i32* %8, align 4
  %2572 = sext i32 %2571 to i64
  %2573 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2570, i64 0, i64 %2572
  store i8 %2568, i8* %2573, align 1
  br label %2574

2574:                                             ; preds = %2565
  %2575 = load i32, i32* %8, align 4
  %2576 = add nsw i32 %2575, 1
  store i32 %2576, i32* %8, align 4
  br label %2534

2577:                                             ; preds = %2534
  store i32 0, i32* %10, align 4
  br label %2578

2578:                                             ; preds = %2877, %2577
  %2579 = load i32, i32* %10, align 4
  %2580 = load i32, i32* %12, align 4
  %2581 = icmp slt i32 %2579, %2580
  br i1 %2581, label %2582, label %2880

2582:                                             ; preds = %2578
  br label %2583

2583:                                             ; preds = %144, %2582
  %2584 = load %struct.DState*, %struct.DState** %2, align 8
  %2585 = getelementptr inbounds %struct.DState, %struct.DState* %2584, i32 0, i32 1
  store i32 33, i32* %2585, align 8
  br label %2586

2586:                                             ; preds = %2583, %2664
  %2587 = load %struct.DState*, %struct.DState** %2, align 8
  %2588 = getelementptr inbounds %struct.DState, %struct.DState* %2587, i32 0, i32 8
  %2589 = load i32, i32* %2588, align 4
  %2590 = icmp sge i32 %2589, 5
  br i1 %2590, label %2591, label %2606

2591:                                             ; preds = %2586
  %2592 = load %struct.DState*, %struct.DState** %2, align 8
  %2593 = getelementptr inbounds %struct.DState, %struct.DState* %2592, i32 0, i32 7
  %2594 = load i32, i32* %2593, align 8
  %2595 = load %struct.DState*, %struct.DState** %2, align 8
  %2596 = getelementptr inbounds %struct.DState, %struct.DState* %2595, i32 0, i32 8
  %2597 = load i32, i32* %2596, align 4
  %2598 = sub nsw i32 %2597, 5
  %2599 = lshr i32 %2594, %2598
  %2600 = and i32 %2599, 31
  store i32 %2600, i32* %58, align 4
  %2601 = load %struct.DState*, %struct.DState** %2, align 8
  %2602 = getelementptr inbounds %struct.DState, %struct.DState* %2601, i32 0, i32 8
  %2603 = load i32, i32* %2602, align 4
  %2604 = sub nsw i32 %2603, 5
  store i32 %2604, i32* %2602, align 4
  %2605 = load i32, i32* %58, align 4
  store i32 %2605, i32* %22, align 4
  br label %2665

2606:                                             ; preds = %2586
  %2607 = load %struct.DState*, %struct.DState** %2, align 8
  %2608 = getelementptr inbounds %struct.DState, %struct.DState* %2607, i32 0, i32 0
  %2609 = load %struct.bz_stream*, %struct.bz_stream** %2608, align 8
  %2610 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2609, i32 0, i32 1
  %2611 = load i32, i32* %2610, align 8
  %2612 = icmp eq i32 %2611, 0
  br i1 %2612, label %2613, label %2614

2613:                                             ; preds = %2606
  store i32 0, i32* %4, align 4
  br label %5717

2614:                                             ; preds = %2606
  %2615 = load %struct.DState*, %struct.DState** %2, align 8
  %2616 = getelementptr inbounds %struct.DState, %struct.DState* %2615, i32 0, i32 7
  %2617 = load i32, i32* %2616, align 8
  %2618 = shl i32 %2617, 8
  %2619 = load %struct.DState*, %struct.DState** %2, align 8
  %2620 = getelementptr inbounds %struct.DState, %struct.DState* %2619, i32 0, i32 0
  %2621 = load %struct.bz_stream*, %struct.bz_stream** %2620, align 8
  %2622 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2621, i32 0, i32 0
  %2623 = load i8*, i8** %2622, align 8
  %2624 = load i8, i8* %2623, align 1
  %2625 = zext i8 %2624 to i32
  %2626 = or i32 %2618, %2625
  %2627 = load %struct.DState*, %struct.DState** %2, align 8
  %2628 = getelementptr inbounds %struct.DState, %struct.DState* %2627, i32 0, i32 7
  store i32 %2626, i32* %2628, align 8
  %2629 = load %struct.DState*, %struct.DState** %2, align 8
  %2630 = getelementptr inbounds %struct.DState, %struct.DState* %2629, i32 0, i32 8
  %2631 = load i32, i32* %2630, align 4
  %2632 = add nsw i32 %2631, 8
  store i32 %2632, i32* %2630, align 4
  %2633 = load %struct.DState*, %struct.DState** %2, align 8
  %2634 = getelementptr inbounds %struct.DState, %struct.DState* %2633, i32 0, i32 0
  %2635 = load %struct.bz_stream*, %struct.bz_stream** %2634, align 8
  %2636 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2635, i32 0, i32 0
  %2637 = load i8*, i8** %2636, align 8
  %2638 = getelementptr inbounds i8, i8* %2637, i32 1
  store i8* %2638, i8** %2636, align 8
  %2639 = load %struct.DState*, %struct.DState** %2, align 8
  %2640 = getelementptr inbounds %struct.DState, %struct.DState* %2639, i32 0, i32 0
  %2641 = load %struct.bz_stream*, %struct.bz_stream** %2640, align 8
  %2642 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2641, i32 0, i32 1
  %2643 = load i32, i32* %2642, align 8
  %2644 = add i32 %2643, -1
  store i32 %2644, i32* %2642, align 8
  %2645 = load %struct.DState*, %struct.DState** %2, align 8
  %2646 = getelementptr inbounds %struct.DState, %struct.DState* %2645, i32 0, i32 0
  %2647 = load %struct.bz_stream*, %struct.bz_stream** %2646, align 8
  %2648 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2647, i32 0, i32 2
  %2649 = load i32, i32* %2648, align 4
  %2650 = add i32 %2649, 1
  store i32 %2650, i32* %2648, align 4
  %2651 = load %struct.DState*, %struct.DState** %2, align 8
  %2652 = getelementptr inbounds %struct.DState, %struct.DState* %2651, i32 0, i32 0
  %2653 = load %struct.bz_stream*, %struct.bz_stream** %2652, align 8
  %2654 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2653, i32 0, i32 2
  %2655 = load i32, i32* %2654, align 4
  %2656 = icmp eq i32 %2655, 0
  br i1 %2656, label %2657, label %2664

2657:                                             ; preds = %2614
  %2658 = load %struct.DState*, %struct.DState** %2, align 8
  %2659 = getelementptr inbounds %struct.DState, %struct.DState* %2658, i32 0, i32 0
  %2660 = load %struct.bz_stream*, %struct.bz_stream** %2659, align 8
  %2661 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2660, i32 0, i32 3
  %2662 = load i32, i32* %2661, align 8
  %2663 = add i32 %2662, 1
  store i32 %2663, i32* %2661, align 8
  br label %2664

2664:                                             ; preds = %2657, %2614
  br label %2586

2665:                                             ; preds = %2591
  store i32 0, i32* %8, align 4
  br label %2666

2666:                                             ; preds = %2873, %2665
  %2667 = load i32, i32* %8, align 4
  %2668 = load i32, i32* %11, align 4
  %2669 = icmp slt i32 %2667, %2668
  br i1 %2669, label %2670, label %2876

2670:                                             ; preds = %2666
  br label %2671

2671:                                             ; preds = %2670, %2861
  %2672 = load i32, i32* %22, align 4
  %2673 = icmp slt i32 %2672, 1
  br i1 %2673, label %2677, label %2674

2674:                                             ; preds = %2671
  %2675 = load i32, i32* %22, align 4
  %2676 = icmp sgt i32 %2675, 20
  br i1 %2676, label %2677, label %2678

2677:                                             ; preds = %2674, %2671
  store i32 -4, i32* %4, align 4
  br label %5717

2678:                                             ; preds = %2674
  br label %2679

2679:                                             ; preds = %144, %2678
  %2680 = load %struct.DState*, %struct.DState** %2, align 8
  %2681 = getelementptr inbounds %struct.DState, %struct.DState* %2680, i32 0, i32 1
  store i32 34, i32* %2681, align 8
  br label %2682

2682:                                             ; preds = %2679, %2761
  %2683 = load %struct.DState*, %struct.DState** %2, align 8
  %2684 = getelementptr inbounds %struct.DState, %struct.DState* %2683, i32 0, i32 8
  %2685 = load i32, i32* %2684, align 4
  %2686 = icmp sge i32 %2685, 1
  br i1 %2686, label %2687, label %2703

2687:                                             ; preds = %2682
  %2688 = load %struct.DState*, %struct.DState** %2, align 8
  %2689 = getelementptr inbounds %struct.DState, %struct.DState* %2688, i32 0, i32 7
  %2690 = load i32, i32* %2689, align 8
  %2691 = load %struct.DState*, %struct.DState** %2, align 8
  %2692 = getelementptr inbounds %struct.DState, %struct.DState* %2691, i32 0, i32 8
  %2693 = load i32, i32* %2692, align 4
  %2694 = sub nsw i32 %2693, 1
  %2695 = lshr i32 %2690, %2694
  %2696 = and i32 %2695, 1
  store i32 %2696, i32* %59, align 4
  %2697 = load %struct.DState*, %struct.DState** %2, align 8
  %2698 = getelementptr inbounds %struct.DState, %struct.DState* %2697, i32 0, i32 8
  %2699 = load i32, i32* %2698, align 4
  %2700 = sub nsw i32 %2699, 1
  store i32 %2700, i32* %2698, align 4
  %2701 = load i32, i32* %59, align 4
  %2702 = trunc i32 %2701 to i8
  store i8 %2702, i8* %3, align 1
  br label %2762

2703:                                             ; preds = %2682
  %2704 = load %struct.DState*, %struct.DState** %2, align 8
  %2705 = getelementptr inbounds %struct.DState, %struct.DState* %2704, i32 0, i32 0
  %2706 = load %struct.bz_stream*, %struct.bz_stream** %2705, align 8
  %2707 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2706, i32 0, i32 1
  %2708 = load i32, i32* %2707, align 8
  %2709 = icmp eq i32 %2708, 0
  br i1 %2709, label %2710, label %2711

2710:                                             ; preds = %2703
  store i32 0, i32* %4, align 4
  br label %5717

2711:                                             ; preds = %2703
  %2712 = load %struct.DState*, %struct.DState** %2, align 8
  %2713 = getelementptr inbounds %struct.DState, %struct.DState* %2712, i32 0, i32 7
  %2714 = load i32, i32* %2713, align 8
  %2715 = shl i32 %2714, 8
  %2716 = load %struct.DState*, %struct.DState** %2, align 8
  %2717 = getelementptr inbounds %struct.DState, %struct.DState* %2716, i32 0, i32 0
  %2718 = load %struct.bz_stream*, %struct.bz_stream** %2717, align 8
  %2719 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2718, i32 0, i32 0
  %2720 = load i8*, i8** %2719, align 8
  %2721 = load i8, i8* %2720, align 1
  %2722 = zext i8 %2721 to i32
  %2723 = or i32 %2715, %2722
  %2724 = load %struct.DState*, %struct.DState** %2, align 8
  %2725 = getelementptr inbounds %struct.DState, %struct.DState* %2724, i32 0, i32 7
  store i32 %2723, i32* %2725, align 8
  %2726 = load %struct.DState*, %struct.DState** %2, align 8
  %2727 = getelementptr inbounds %struct.DState, %struct.DState* %2726, i32 0, i32 8
  %2728 = load i32, i32* %2727, align 4
  %2729 = add nsw i32 %2728, 8
  store i32 %2729, i32* %2727, align 4
  %2730 = load %struct.DState*, %struct.DState** %2, align 8
  %2731 = getelementptr inbounds %struct.DState, %struct.DState* %2730, i32 0, i32 0
  %2732 = load %struct.bz_stream*, %struct.bz_stream** %2731, align 8
  %2733 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2732, i32 0, i32 0
  %2734 = load i8*, i8** %2733, align 8
  %2735 = getelementptr inbounds i8, i8* %2734, i32 1
  store i8* %2735, i8** %2733, align 8
  %2736 = load %struct.DState*, %struct.DState** %2, align 8
  %2737 = getelementptr inbounds %struct.DState, %struct.DState* %2736, i32 0, i32 0
  %2738 = load %struct.bz_stream*, %struct.bz_stream** %2737, align 8
  %2739 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2738, i32 0, i32 1
  %2740 = load i32, i32* %2739, align 8
  %2741 = add i32 %2740, -1
  store i32 %2741, i32* %2739, align 8
  %2742 = load %struct.DState*, %struct.DState** %2, align 8
  %2743 = getelementptr inbounds %struct.DState, %struct.DState* %2742, i32 0, i32 0
  %2744 = load %struct.bz_stream*, %struct.bz_stream** %2743, align 8
  %2745 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2744, i32 0, i32 2
  %2746 = load i32, i32* %2745, align 4
  %2747 = add i32 %2746, 1
  store i32 %2747, i32* %2745, align 4
  %2748 = load %struct.DState*, %struct.DState** %2, align 8
  %2749 = getelementptr inbounds %struct.DState, %struct.DState* %2748, i32 0, i32 0
  %2750 = load %struct.bz_stream*, %struct.bz_stream** %2749, align 8
  %2751 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2750, i32 0, i32 2
  %2752 = load i32, i32* %2751, align 4
  %2753 = icmp eq i32 %2752, 0
  br i1 %2753, label %2754, label %2761

2754:                                             ; preds = %2711
  %2755 = load %struct.DState*, %struct.DState** %2, align 8
  %2756 = getelementptr inbounds %struct.DState, %struct.DState* %2755, i32 0, i32 0
  %2757 = load %struct.bz_stream*, %struct.bz_stream** %2756, align 8
  %2758 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2757, i32 0, i32 3
  %2759 = load i32, i32* %2758, align 8
  %2760 = add i32 %2759, 1
  store i32 %2760, i32* %2758, align 8
  br label %2761

2761:                                             ; preds = %2754, %2711
  br label %2682

2762:                                             ; preds = %2687
  %2763 = load i8, i8* %3, align 1
  %2764 = zext i8 %2763 to i32
  %2765 = icmp eq i32 %2764, 0
  br i1 %2765, label %2766, label %2767

2766:                                             ; preds = %2762
  br label %2862

2767:                                             ; preds = %2762
  br label %2768

2768:                                             ; preds = %144, %2767
  %2769 = load %struct.DState*, %struct.DState** %2, align 8
  %2770 = getelementptr inbounds %struct.DState, %struct.DState* %2769, i32 0, i32 1
  store i32 35, i32* %2770, align 8
  br label %2771

2771:                                             ; preds = %2768, %2850
  %2772 = load %struct.DState*, %struct.DState** %2, align 8
  %2773 = getelementptr inbounds %struct.DState, %struct.DState* %2772, i32 0, i32 8
  %2774 = load i32, i32* %2773, align 4
  %2775 = icmp sge i32 %2774, 1
  br i1 %2775, label %2776, label %2792

2776:                                             ; preds = %2771
  %2777 = load %struct.DState*, %struct.DState** %2, align 8
  %2778 = getelementptr inbounds %struct.DState, %struct.DState* %2777, i32 0, i32 7
  %2779 = load i32, i32* %2778, align 8
  %2780 = load %struct.DState*, %struct.DState** %2, align 8
  %2781 = getelementptr inbounds %struct.DState, %struct.DState* %2780, i32 0, i32 8
  %2782 = load i32, i32* %2781, align 4
  %2783 = sub nsw i32 %2782, 1
  %2784 = lshr i32 %2779, %2783
  %2785 = and i32 %2784, 1
  store i32 %2785, i32* %60, align 4
  %2786 = load %struct.DState*, %struct.DState** %2, align 8
  %2787 = getelementptr inbounds %struct.DState, %struct.DState* %2786, i32 0, i32 8
  %2788 = load i32, i32* %2787, align 4
  %2789 = sub nsw i32 %2788, 1
  store i32 %2789, i32* %2787, align 4
  %2790 = load i32, i32* %60, align 4
  %2791 = trunc i32 %2790 to i8
  store i8 %2791, i8* %3, align 1
  br label %2851

2792:                                             ; preds = %2771
  %2793 = load %struct.DState*, %struct.DState** %2, align 8
  %2794 = getelementptr inbounds %struct.DState, %struct.DState* %2793, i32 0, i32 0
  %2795 = load %struct.bz_stream*, %struct.bz_stream** %2794, align 8
  %2796 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2795, i32 0, i32 1
  %2797 = load i32, i32* %2796, align 8
  %2798 = icmp eq i32 %2797, 0
  br i1 %2798, label %2799, label %2800

2799:                                             ; preds = %2792
  store i32 0, i32* %4, align 4
  br label %5717

2800:                                             ; preds = %2792
  %2801 = load %struct.DState*, %struct.DState** %2, align 8
  %2802 = getelementptr inbounds %struct.DState, %struct.DState* %2801, i32 0, i32 7
  %2803 = load i32, i32* %2802, align 8
  %2804 = shl i32 %2803, 8
  %2805 = load %struct.DState*, %struct.DState** %2, align 8
  %2806 = getelementptr inbounds %struct.DState, %struct.DState* %2805, i32 0, i32 0
  %2807 = load %struct.bz_stream*, %struct.bz_stream** %2806, align 8
  %2808 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2807, i32 0, i32 0
  %2809 = load i8*, i8** %2808, align 8
  %2810 = load i8, i8* %2809, align 1
  %2811 = zext i8 %2810 to i32
  %2812 = or i32 %2804, %2811
  %2813 = load %struct.DState*, %struct.DState** %2, align 8
  %2814 = getelementptr inbounds %struct.DState, %struct.DState* %2813, i32 0, i32 7
  store i32 %2812, i32* %2814, align 8
  %2815 = load %struct.DState*, %struct.DState** %2, align 8
  %2816 = getelementptr inbounds %struct.DState, %struct.DState* %2815, i32 0, i32 8
  %2817 = load i32, i32* %2816, align 4
  %2818 = add nsw i32 %2817, 8
  store i32 %2818, i32* %2816, align 4
  %2819 = load %struct.DState*, %struct.DState** %2, align 8
  %2820 = getelementptr inbounds %struct.DState, %struct.DState* %2819, i32 0, i32 0
  %2821 = load %struct.bz_stream*, %struct.bz_stream** %2820, align 8
  %2822 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2821, i32 0, i32 0
  %2823 = load i8*, i8** %2822, align 8
  %2824 = getelementptr inbounds i8, i8* %2823, i32 1
  store i8* %2824, i8** %2822, align 8
  %2825 = load %struct.DState*, %struct.DState** %2, align 8
  %2826 = getelementptr inbounds %struct.DState, %struct.DState* %2825, i32 0, i32 0
  %2827 = load %struct.bz_stream*, %struct.bz_stream** %2826, align 8
  %2828 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2827, i32 0, i32 1
  %2829 = load i32, i32* %2828, align 8
  %2830 = add i32 %2829, -1
  store i32 %2830, i32* %2828, align 8
  %2831 = load %struct.DState*, %struct.DState** %2, align 8
  %2832 = getelementptr inbounds %struct.DState, %struct.DState* %2831, i32 0, i32 0
  %2833 = load %struct.bz_stream*, %struct.bz_stream** %2832, align 8
  %2834 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2833, i32 0, i32 2
  %2835 = load i32, i32* %2834, align 4
  %2836 = add i32 %2835, 1
  store i32 %2836, i32* %2834, align 4
  %2837 = load %struct.DState*, %struct.DState** %2, align 8
  %2838 = getelementptr inbounds %struct.DState, %struct.DState* %2837, i32 0, i32 0
  %2839 = load %struct.bz_stream*, %struct.bz_stream** %2838, align 8
  %2840 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2839, i32 0, i32 2
  %2841 = load i32, i32* %2840, align 4
  %2842 = icmp eq i32 %2841, 0
  br i1 %2842, label %2843, label %2850

2843:                                             ; preds = %2800
  %2844 = load %struct.DState*, %struct.DState** %2, align 8
  %2845 = getelementptr inbounds %struct.DState, %struct.DState* %2844, i32 0, i32 0
  %2846 = load %struct.bz_stream*, %struct.bz_stream** %2845, align 8
  %2847 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2846, i32 0, i32 3
  %2848 = load i32, i32* %2847, align 8
  %2849 = add i32 %2848, 1
  store i32 %2849, i32* %2847, align 8
  br label %2850

2850:                                             ; preds = %2843, %2800
  br label %2771

2851:                                             ; preds = %2776
  %2852 = load i8, i8* %3, align 1
  %2853 = zext i8 %2852 to i32
  %2854 = icmp eq i32 %2853, 0
  br i1 %2854, label %2855, label %2858

2855:                                             ; preds = %2851
  %2856 = load i32, i32* %22, align 4
  %2857 = add nsw i32 %2856, 1
  store i32 %2857, i32* %22, align 4
  br label %2861

2858:                                             ; preds = %2851
  %2859 = load i32, i32* %22, align 4
  %2860 = add nsw i32 %2859, -1
  store i32 %2860, i32* %22, align 4
  br label %2861

2861:                                             ; preds = %2858, %2855
  br label %2671

2862:                                             ; preds = %2766
  %2863 = load i32, i32* %22, align 4
  %2864 = trunc i32 %2863 to i8
  %2865 = load %struct.DState*, %struct.DState** %2, align 8
  %2866 = getelementptr inbounds %struct.DState, %struct.DState* %2865, i32 0, i32 35
  %2867 = load i32, i32* %10, align 4
  %2868 = sext i32 %2867 to i64
  %2869 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2866, i64 0, i64 %2868
  %2870 = load i32, i32* %8, align 4
  %2871 = sext i32 %2870 to i64
  %2872 = getelementptr inbounds [258 x i8], [258 x i8]* %2869, i64 0, i64 %2871
  store i8 %2864, i8* %2872, align 1
  br label %2873

2873:                                             ; preds = %2862
  %2874 = load i32, i32* %8, align 4
  %2875 = add nsw i32 %2874, 1
  store i32 %2875, i32* %8, align 4
  br label %2666

2876:                                             ; preds = %2666
  br label %2877

2877:                                             ; preds = %2876
  %2878 = load i32, i32* %10, align 4
  %2879 = add nsw i32 %2878, 1
  store i32 %2879, i32* %10, align 4
  br label %2578

2880:                                             ; preds = %2578
  store i32 0, i32* %10, align 4
  br label %2881

2881:                                             ; preds = %2976, %2880
  %2882 = load i32, i32* %10, align 4
  %2883 = load i32, i32* %12, align 4
  %2884 = icmp slt i32 %2882, %2883
  br i1 %2884, label %2885, label %2979

2885:                                             ; preds = %2881
  store i32 32, i32* %5, align 4
  store i32 0, i32* %6, align 4
  store i32 0, i32* %8, align 4
  br label %2886

2886:                                             ; preds = %2939, %2885
  %2887 = load i32, i32* %8, align 4
  %2888 = load i32, i32* %11, align 4
  %2889 = icmp slt i32 %2887, %2888
  br i1 %2889, label %2890, label %2942

2890:                                             ; preds = %2886
  %2891 = load %struct.DState*, %struct.DState** %2, align 8
  %2892 = getelementptr inbounds %struct.DState, %struct.DState* %2891, i32 0, i32 35
  %2893 = load i32, i32* %10, align 4
  %2894 = sext i32 %2893 to i64
  %2895 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2892, i64 0, i64 %2894
  %2896 = load i32, i32* %8, align 4
  %2897 = sext i32 %2896 to i64
  %2898 = getelementptr inbounds [258 x i8], [258 x i8]* %2895, i64 0, i64 %2897
  %2899 = load i8, i8* %2898, align 1
  %2900 = zext i8 %2899 to i32
  %2901 = load i32, i32* %6, align 4
  %2902 = icmp sgt i32 %2900, %2901
  br i1 %2902, label %2903, label %2914

2903:                                             ; preds = %2890
  %2904 = load %struct.DState*, %struct.DState** %2, align 8
  %2905 = getelementptr inbounds %struct.DState, %struct.DState* %2904, i32 0, i32 35
  %2906 = load i32, i32* %10, align 4
  %2907 = sext i32 %2906 to i64
  %2908 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2905, i64 0, i64 %2907
  %2909 = load i32, i32* %8, align 4
  %2910 = sext i32 %2909 to i64
  %2911 = getelementptr inbounds [258 x i8], [258 x i8]* %2908, i64 0, i64 %2910
  %2912 = load i8, i8* %2911, align 1
  %2913 = zext i8 %2912 to i32
  store i32 %2913, i32* %6, align 4
  br label %2914

2914:                                             ; preds = %2903, %2890
  %2915 = load %struct.DState*, %struct.DState** %2, align 8
  %2916 = getelementptr inbounds %struct.DState, %struct.DState* %2915, i32 0, i32 35
  %2917 = load i32, i32* %10, align 4
  %2918 = sext i32 %2917 to i64
  %2919 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2916, i64 0, i64 %2918
  %2920 = load i32, i32* %8, align 4
  %2921 = sext i32 %2920 to i64
  %2922 = getelementptr inbounds [258 x i8], [258 x i8]* %2919, i64 0, i64 %2921
  %2923 = load i8, i8* %2922, align 1
  %2924 = zext i8 %2923 to i32
  %2925 = load i32, i32* %5, align 4
  %2926 = icmp slt i32 %2924, %2925
  br i1 %2926, label %2927, label %2938

2927:                                             ; preds = %2914
  %2928 = load %struct.DState*, %struct.DState** %2, align 8
  %2929 = getelementptr inbounds %struct.DState, %struct.DState* %2928, i32 0, i32 35
  %2930 = load i32, i32* %10, align 4
  %2931 = sext i32 %2930 to i64
  %2932 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2929, i64 0, i64 %2931
  %2933 = load i32, i32* %8, align 4
  %2934 = sext i32 %2933 to i64
  %2935 = getelementptr inbounds [258 x i8], [258 x i8]* %2932, i64 0, i64 %2934
  %2936 = load i8, i8* %2935, align 1
  %2937 = zext i8 %2936 to i32
  store i32 %2937, i32* %5, align 4
  br label %2938

2938:                                             ; preds = %2927, %2914
  br label %2939

2939:                                             ; preds = %2938
  %2940 = load i32, i32* %8, align 4
  %2941 = add nsw i32 %2940, 1
  store i32 %2941, i32* %8, align 4
  br label %2886

2942:                                             ; preds = %2886
  %2943 = load %struct.DState*, %struct.DState** %2, align 8
  %2944 = getelementptr inbounds %struct.DState, %struct.DState* %2943, i32 0, i32 36
  %2945 = load i32, i32* %10, align 4
  %2946 = sext i32 %2945 to i64
  %2947 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2944, i64 0, i64 %2946
  %2948 = getelementptr inbounds [258 x i32], [258 x i32]* %2947, i64 0, i64 0
  %2949 = load %struct.DState*, %struct.DState** %2, align 8
  %2950 = getelementptr inbounds %struct.DState, %struct.DState* %2949, i32 0, i32 37
  %2951 = load i32, i32* %10, align 4
  %2952 = sext i32 %2951 to i64
  %2953 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2950, i64 0, i64 %2952
  %2954 = getelementptr inbounds [258 x i32], [258 x i32]* %2953, i64 0, i64 0
  %2955 = load %struct.DState*, %struct.DState** %2, align 8
  %2956 = getelementptr inbounds %struct.DState, %struct.DState* %2955, i32 0, i32 38
  %2957 = load i32, i32* %10, align 4
  %2958 = sext i32 %2957 to i64
  %2959 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2956, i64 0, i64 %2958
  %2960 = getelementptr inbounds [258 x i32], [258 x i32]* %2959, i64 0, i64 0
  %2961 = load %struct.DState*, %struct.DState** %2, align 8
  %2962 = getelementptr inbounds %struct.DState, %struct.DState* %2961, i32 0, i32 35
  %2963 = load i32, i32* %10, align 4
  %2964 = sext i32 %2963 to i64
  %2965 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2962, i64 0, i64 %2964
  %2966 = getelementptr inbounds [258 x i8], [258 x i8]* %2965, i64 0, i64 0
  %2967 = load i32, i32* %5, align 4
  %2968 = load i32, i32* %6, align 4
  %2969 = load i32, i32* %11, align 4
  call void @BZ2_hbCreateDecodeTables(i32* %2948, i32* %2954, i32* %2960, i8* %2966, i32 %2967, i32 %2968, i32 %2969)
  %2970 = load i32, i32* %5, align 4
  %2971 = load %struct.DState*, %struct.DState** %2, align 8
  %2972 = getelementptr inbounds %struct.DState, %struct.DState* %2971, i32 0, i32 39
  %2973 = load i32, i32* %10, align 4
  %2974 = sext i32 %2973 to i64
  %2975 = getelementptr inbounds [6 x i32], [6 x i32]* %2972, i64 0, i64 %2974
  store i32 %2970, i32* %2975, align 4
  br label %2976

2976:                                             ; preds = %2942
  %2977 = load i32, i32* %10, align 4
  %2978 = add nsw i32 %2977, 1
  store i32 %2978, i32* %10, align 4
  br label %2881

2979:                                             ; preds = %2881
  %2980 = load %struct.DState*, %struct.DState** %2, align 8
  %2981 = getelementptr inbounds %struct.DState, %struct.DState* %2980, i32 0, i32 27
  %2982 = load i32, i32* %2981, align 8
  %2983 = add nsw i32 %2982, 1
  store i32 %2983, i32* %14, align 4
  %2984 = load %struct.DState*, %struct.DState** %2, align 8
  %2985 = getelementptr inbounds %struct.DState, %struct.DState* %2984, i32 0, i32 9
  %2986 = load i32, i32* %2985, align 8
  %2987 = mul nsw i32 100000, %2986
  store i32 %2987, i32* %18, align 4
  store i32 -1, i32* %15, align 4
  store i32 0, i32* %16, align 4
  store i32 0, i32* %8, align 4
  br label %2988

2988:                                             ; preds = %2997, %2979
  %2989 = load i32, i32* %8, align 4
  %2990 = icmp sle i32 %2989, 255
  br i1 %2990, label %2991, label %3000

2991:                                             ; preds = %2988
  %2992 = load %struct.DState*, %struct.DState** %2, align 8
  %2993 = getelementptr inbounds %struct.DState, %struct.DState* %2992, i32 0, i32 16
  %2994 = load i32, i32* %8, align 4
  %2995 = sext i32 %2994 to i64
  %2996 = getelementptr inbounds [256 x i32], [256 x i32]* %2993, i64 0, i64 %2995
  store i32 0, i32* %2996, align 4
  br label %2997

2997:                                             ; preds = %2991
  %2998 = load i32, i32* %8, align 4
  %2999 = add nsw i32 %2998, 1
  store i32 %2999, i32* %8, align 4
  br label %2988

3000:                                             ; preds = %2988
  store i32 4095, i32* %63, align 4
  store i32 15, i32* %61, align 4
  br label %3001

3001:                                             ; preds = %3032, %3000
  %3002 = load i32, i32* %61, align 4
  %3003 = icmp sge i32 %3002, 0
  br i1 %3003, label %3004, label %3035

3004:                                             ; preds = %3001
  store i32 15, i32* %62, align 4
  br label %3005

3005:                                             ; preds = %3021, %3004
  %3006 = load i32, i32* %62, align 4
  %3007 = icmp sge i32 %3006, 0
  br i1 %3007, label %3008, label %3024

3008:                                             ; preds = %3005
  %3009 = load i32, i32* %61, align 4
  %3010 = mul nsw i32 %3009, 16
  %3011 = load i32, i32* %62, align 4
  %3012 = add nsw i32 %3010, %3011
  %3013 = trunc i32 %3012 to i8
  %3014 = load %struct.DState*, %struct.DState** %2, align 8
  %3015 = getelementptr inbounds %struct.DState, %struct.DState* %3014, i32 0, i32 31
  %3016 = load i32, i32* %63, align 4
  %3017 = sext i32 %3016 to i64
  %3018 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3015, i64 0, i64 %3017
  store i8 %3013, i8* %3018, align 1
  %3019 = load i32, i32* %63, align 4
  %3020 = add nsw i32 %3019, -1
  store i32 %3020, i32* %63, align 4
  br label %3021

3021:                                             ; preds = %3008
  %3022 = load i32, i32* %62, align 4
  %3023 = add nsw i32 %3022, -1
  store i32 %3023, i32* %62, align 4
  br label %3005

3024:                                             ; preds = %3005
  %3025 = load i32, i32* %63, align 4
  %3026 = add nsw i32 %3025, 1
  %3027 = load %struct.DState*, %struct.DState** %2, align 8
  %3028 = getelementptr inbounds %struct.DState, %struct.DState* %3027, i32 0, i32 32
  %3029 = load i32, i32* %61, align 4
  %3030 = sext i32 %3029 to i64
  %3031 = getelementptr inbounds [16 x i32], [16 x i32]* %3028, i64 0, i64 %3030
  store i32 %3026, i32* %3031, align 4
  br label %3032

3032:                                             ; preds = %3024
  %3033 = load i32, i32* %61, align 4
  %3034 = add nsw i32 %3033, -1
  store i32 %3034, i32* %61, align 4
  br label %3001

3035:                                             ; preds = %3001
  store i32 0, i32* %19, align 4
  %3036 = load i32, i32* %16, align 4
  %3037 = icmp eq i32 %3036, 0
  br i1 %3037, label %3038, label %3077

3038:                                             ; preds = %3035
  %3039 = load i32, i32* %15, align 4
  %3040 = add nsw i32 %3039, 1
  store i32 %3040, i32* %15, align 4
  %3041 = load i32, i32* %15, align 4
  %3042 = load i32, i32* %13, align 4
  %3043 = icmp sge i32 %3041, %3042
  br i1 %3043, label %3044, label %3045

3044:                                             ; preds = %3038
  store i32 -4, i32* %4, align 4
  br label %5717

3045:                                             ; preds = %3038
  store i32 50, i32* %16, align 4
  %3046 = load %struct.DState*, %struct.DState** %2, align 8
  %3047 = getelementptr inbounds %struct.DState, %struct.DState* %3046, i32 0, i32 33
  %3048 = load i32, i32* %15, align 4
  %3049 = sext i32 %3048 to i64
  %3050 = getelementptr inbounds [18002 x i8], [18002 x i8]* %3047, i64 0, i64 %3049
  %3051 = load i8, i8* %3050, align 1
  %3052 = zext i8 %3051 to i32
  store i32 %3052, i32* %27, align 4
  %3053 = load %struct.DState*, %struct.DState** %2, align 8
  %3054 = getelementptr inbounds %struct.DState, %struct.DState* %3053, i32 0, i32 39
  %3055 = load i32, i32* %27, align 4
  %3056 = sext i32 %3055 to i64
  %3057 = getelementptr inbounds [6 x i32], [6 x i32]* %3054, i64 0, i64 %3056
  %3058 = load i32, i32* %3057, align 4
  store i32 %3058, i32* %28, align 4
  %3059 = load %struct.DState*, %struct.DState** %2, align 8
  %3060 = getelementptr inbounds %struct.DState, %struct.DState* %3059, i32 0, i32 36
  %3061 = load i32, i32* %27, align 4
  %3062 = sext i32 %3061 to i64
  %3063 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %3060, i64 0, i64 %3062
  %3064 = getelementptr inbounds [258 x i32], [258 x i32]* %3063, i64 0, i64 0
  store i32* %3064, i32** %29, align 8
  %3065 = load %struct.DState*, %struct.DState** %2, align 8
  %3066 = getelementptr inbounds %struct.DState, %struct.DState* %3065, i32 0, i32 38
  %3067 = load i32, i32* %27, align 4
  %3068 = sext i32 %3067 to i64
  %3069 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %3066, i64 0, i64 %3068
  %3070 = getelementptr inbounds [258 x i32], [258 x i32]* %3069, i64 0, i64 0
  store i32* %3070, i32** %31, align 8
  %3071 = load %struct.DState*, %struct.DState** %2, align 8
  %3072 = getelementptr inbounds %struct.DState, %struct.DState* %3071, i32 0, i32 37
  %3073 = load i32, i32* %27, align 4
  %3074 = sext i32 %3073 to i64
  %3075 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %3072, i64 0, i64 %3074
  %3076 = getelementptr inbounds [258 x i32], [258 x i32]* %3075, i64 0, i64 0
  store i32* %3076, i32** %30, align 8
  br label %3077

3077:                                             ; preds = %3045, %3035
  %3078 = load i32, i32* %16, align 4
  %3079 = add nsw i32 %3078, -1
  store i32 %3079, i32* %16, align 4
  %3080 = load i32, i32* %28, align 4
  store i32 %3080, i32* %24, align 4
  br label %3081

3081:                                             ; preds = %144, %3077
  %3082 = load %struct.DState*, %struct.DState** %2, align 8
  %3083 = getelementptr inbounds %struct.DState, %struct.DState* %3082, i32 0, i32 1
  store i32 36, i32* %3083, align 8
  br label %3084

3084:                                             ; preds = %3081, %3168
  %3085 = load %struct.DState*, %struct.DState** %2, align 8
  %3086 = getelementptr inbounds %struct.DState, %struct.DState* %3085, i32 0, i32 8
  %3087 = load i32, i32* %3086, align 4
  %3088 = load i32, i32* %24, align 4
  %3089 = icmp sge i32 %3087, %3088
  br i1 %3089, label %3090, label %3110

3090:                                             ; preds = %3084
  %3091 = load %struct.DState*, %struct.DState** %2, align 8
  %3092 = getelementptr inbounds %struct.DState, %struct.DState* %3091, i32 0, i32 7
  %3093 = load i32, i32* %3092, align 8
  %3094 = load %struct.DState*, %struct.DState** %2, align 8
  %3095 = getelementptr inbounds %struct.DState, %struct.DState* %3094, i32 0, i32 8
  %3096 = load i32, i32* %3095, align 4
  %3097 = load i32, i32* %24, align 4
  %3098 = sub nsw i32 %3096, %3097
  %3099 = lshr i32 %3093, %3098
  %3100 = load i32, i32* %24, align 4
  %3101 = shl i32 1, %3100
  %3102 = sub nsw i32 %3101, 1
  %3103 = and i32 %3099, %3102
  store i32 %3103, i32* %64, align 4
  %3104 = load i32, i32* %24, align 4
  %3105 = load %struct.DState*, %struct.DState** %2, align 8
  %3106 = getelementptr inbounds %struct.DState, %struct.DState* %3105, i32 0, i32 8
  %3107 = load i32, i32* %3106, align 4
  %3108 = sub nsw i32 %3107, %3104
  store i32 %3108, i32* %3106, align 4
  %3109 = load i32, i32* %64, align 4
  store i32 %3109, i32* %25, align 4
  br label %3169

3110:                                             ; preds = %3084
  %3111 = load %struct.DState*, %struct.DState** %2, align 8
  %3112 = getelementptr inbounds %struct.DState, %struct.DState* %3111, i32 0, i32 0
  %3113 = load %struct.bz_stream*, %struct.bz_stream** %3112, align 8
  %3114 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3113, i32 0, i32 1
  %3115 = load i32, i32* %3114, align 8
  %3116 = icmp eq i32 %3115, 0
  br i1 %3116, label %3117, label %3118

3117:                                             ; preds = %3110
  store i32 0, i32* %4, align 4
  br label %5717

3118:                                             ; preds = %3110
  %3119 = load %struct.DState*, %struct.DState** %2, align 8
  %3120 = getelementptr inbounds %struct.DState, %struct.DState* %3119, i32 0, i32 7
  %3121 = load i32, i32* %3120, align 8
  %3122 = shl i32 %3121, 8
  %3123 = load %struct.DState*, %struct.DState** %2, align 8
  %3124 = getelementptr inbounds %struct.DState, %struct.DState* %3123, i32 0, i32 0
  %3125 = load %struct.bz_stream*, %struct.bz_stream** %3124, align 8
  %3126 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3125, i32 0, i32 0
  %3127 = load i8*, i8** %3126, align 8
  %3128 = load i8, i8* %3127, align 1
  %3129 = zext i8 %3128 to i32
  %3130 = or i32 %3122, %3129
  %3131 = load %struct.DState*, %struct.DState** %2, align 8
  %3132 = getelementptr inbounds %struct.DState, %struct.DState* %3131, i32 0, i32 7
  store i32 %3130, i32* %3132, align 8
  %3133 = load %struct.DState*, %struct.DState** %2, align 8
  %3134 = getelementptr inbounds %struct.DState, %struct.DState* %3133, i32 0, i32 8
  %3135 = load i32, i32* %3134, align 4
  %3136 = add nsw i32 %3135, 8
  store i32 %3136, i32* %3134, align 4
  %3137 = load %struct.DState*, %struct.DState** %2, align 8
  %3138 = getelementptr inbounds %struct.DState, %struct.DState* %3137, i32 0, i32 0
  %3139 = load %struct.bz_stream*, %struct.bz_stream** %3138, align 8
  %3140 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3139, i32 0, i32 0
  %3141 = load i8*, i8** %3140, align 8
  %3142 = getelementptr inbounds i8, i8* %3141, i32 1
  store i8* %3142, i8** %3140, align 8
  %3143 = load %struct.DState*, %struct.DState** %2, align 8
  %3144 = getelementptr inbounds %struct.DState, %struct.DState* %3143, i32 0, i32 0
  %3145 = load %struct.bz_stream*, %struct.bz_stream** %3144, align 8
  %3146 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3145, i32 0, i32 1
  %3147 = load i32, i32* %3146, align 8
  %3148 = add i32 %3147, -1
  store i32 %3148, i32* %3146, align 8
  %3149 = load %struct.DState*, %struct.DState** %2, align 8
  %3150 = getelementptr inbounds %struct.DState, %struct.DState* %3149, i32 0, i32 0
  %3151 = load %struct.bz_stream*, %struct.bz_stream** %3150, align 8
  %3152 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3151, i32 0, i32 2
  %3153 = load i32, i32* %3152, align 4
  %3154 = add i32 %3153, 1
  store i32 %3154, i32* %3152, align 4
  %3155 = load %struct.DState*, %struct.DState** %2, align 8
  %3156 = getelementptr inbounds %struct.DState, %struct.DState* %3155, i32 0, i32 0
  %3157 = load %struct.bz_stream*, %struct.bz_stream** %3156, align 8
  %3158 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3157, i32 0, i32 2
  %3159 = load i32, i32* %3158, align 4
  %3160 = icmp eq i32 %3159, 0
  br i1 %3160, label %3161, label %3168

3161:                                             ; preds = %3118
  %3162 = load %struct.DState*, %struct.DState** %2, align 8
  %3163 = getelementptr inbounds %struct.DState, %struct.DState* %3162, i32 0, i32 0
  %3164 = load %struct.bz_stream*, %struct.bz_stream** %3163, align 8
  %3165 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3164, i32 0, i32 3
  %3166 = load i32, i32* %3165, align 8
  %3167 = add i32 %3166, 1
  store i32 %3167, i32* %3165, align 8
  br label %3168

3168:                                             ; preds = %3161, %3118
  br label %3084

3169:                                             ; preds = %3090
  br label %3170

3170:                                             ; preds = %3169, %3268
  %3171 = load i32, i32* %24, align 4
  %3172 = icmp sgt i32 %3171, 20
  br i1 %3172, label %3173, label %3174

3173:                                             ; preds = %3170
  store i32 -4, i32* %4, align 4
  br label %5717

3174:                                             ; preds = %3170
  %3175 = load i32, i32* %25, align 4
  %3176 = load i32*, i32** %29, align 8
  %3177 = load i32, i32* %24, align 4
  %3178 = sext i32 %3177 to i64
  %3179 = getelementptr inbounds i32, i32* %3176, i64 %3178
  %3180 = load i32, i32* %3179, align 4
  %3181 = icmp sle i32 %3175, %3180
  br i1 %3181, label %3182, label %3183

3182:                                             ; preds = %3174
  br label %3273

3183:                                             ; preds = %3174
  %3184 = load i32, i32* %24, align 4
  %3185 = add nsw i32 %3184, 1
  store i32 %3185, i32* %24, align 4
  br label %3186

3186:                                             ; preds = %144, %3183
  %3187 = load %struct.DState*, %struct.DState** %2, align 8
  %3188 = getelementptr inbounds %struct.DState, %struct.DState* %3187, i32 0, i32 1
  store i32 37, i32* %3188, align 8
  br label %3189

3189:                                             ; preds = %3186, %3267
  %3190 = load %struct.DState*, %struct.DState** %2, align 8
  %3191 = getelementptr inbounds %struct.DState, %struct.DState* %3190, i32 0, i32 8
  %3192 = load i32, i32* %3191, align 4
  %3193 = icmp sge i32 %3192, 1
  br i1 %3193, label %3194, label %3209

3194:                                             ; preds = %3189
  %3195 = load %struct.DState*, %struct.DState** %2, align 8
  %3196 = getelementptr inbounds %struct.DState, %struct.DState* %3195, i32 0, i32 7
  %3197 = load i32, i32* %3196, align 8
  %3198 = load %struct.DState*, %struct.DState** %2, align 8
  %3199 = getelementptr inbounds %struct.DState, %struct.DState* %3198, i32 0, i32 8
  %3200 = load i32, i32* %3199, align 4
  %3201 = sub nsw i32 %3200, 1
  %3202 = lshr i32 %3197, %3201
  %3203 = and i32 %3202, 1
  store i32 %3203, i32* %65, align 4
  %3204 = load %struct.DState*, %struct.DState** %2, align 8
  %3205 = getelementptr inbounds %struct.DState, %struct.DState* %3204, i32 0, i32 8
  %3206 = load i32, i32* %3205, align 4
  %3207 = sub nsw i32 %3206, 1
  store i32 %3207, i32* %3205, align 4
  %3208 = load i32, i32* %65, align 4
  store i32 %3208, i32* %26, align 4
  br label %3268

3209:                                             ; preds = %3189
  %3210 = load %struct.DState*, %struct.DState** %2, align 8
  %3211 = getelementptr inbounds %struct.DState, %struct.DState* %3210, i32 0, i32 0
  %3212 = load %struct.bz_stream*, %struct.bz_stream** %3211, align 8
  %3213 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3212, i32 0, i32 1
  %3214 = load i32, i32* %3213, align 8
  %3215 = icmp eq i32 %3214, 0
  br i1 %3215, label %3216, label %3217

3216:                                             ; preds = %3209
  store i32 0, i32* %4, align 4
  br label %5717

3217:                                             ; preds = %3209
  %3218 = load %struct.DState*, %struct.DState** %2, align 8
  %3219 = getelementptr inbounds %struct.DState, %struct.DState* %3218, i32 0, i32 7
  %3220 = load i32, i32* %3219, align 8
  %3221 = shl i32 %3220, 8
  %3222 = load %struct.DState*, %struct.DState** %2, align 8
  %3223 = getelementptr inbounds %struct.DState, %struct.DState* %3222, i32 0, i32 0
  %3224 = load %struct.bz_stream*, %struct.bz_stream** %3223, align 8
  %3225 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3224, i32 0, i32 0
  %3226 = load i8*, i8** %3225, align 8
  %3227 = load i8, i8* %3226, align 1
  %3228 = zext i8 %3227 to i32
  %3229 = or i32 %3221, %3228
  %3230 = load %struct.DState*, %struct.DState** %2, align 8
  %3231 = getelementptr inbounds %struct.DState, %struct.DState* %3230, i32 0, i32 7
  store i32 %3229, i32* %3231, align 8
  %3232 = load %struct.DState*, %struct.DState** %2, align 8
  %3233 = getelementptr inbounds %struct.DState, %struct.DState* %3232, i32 0, i32 8
  %3234 = load i32, i32* %3233, align 4
  %3235 = add nsw i32 %3234, 8
  store i32 %3235, i32* %3233, align 4
  %3236 = load %struct.DState*, %struct.DState** %2, align 8
  %3237 = getelementptr inbounds %struct.DState, %struct.DState* %3236, i32 0, i32 0
  %3238 = load %struct.bz_stream*, %struct.bz_stream** %3237, align 8
  %3239 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3238, i32 0, i32 0
  %3240 = load i8*, i8** %3239, align 8
  %3241 = getelementptr inbounds i8, i8* %3240, i32 1
  store i8* %3241, i8** %3239, align 8
  %3242 = load %struct.DState*, %struct.DState** %2, align 8
  %3243 = getelementptr inbounds %struct.DState, %struct.DState* %3242, i32 0, i32 0
  %3244 = load %struct.bz_stream*, %struct.bz_stream** %3243, align 8
  %3245 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3244, i32 0, i32 1
  %3246 = load i32, i32* %3245, align 8
  %3247 = add i32 %3246, -1
  store i32 %3247, i32* %3245, align 8
  %3248 = load %struct.DState*, %struct.DState** %2, align 8
  %3249 = getelementptr inbounds %struct.DState, %struct.DState* %3248, i32 0, i32 0
  %3250 = load %struct.bz_stream*, %struct.bz_stream** %3249, align 8
  %3251 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3250, i32 0, i32 2
  %3252 = load i32, i32* %3251, align 4
  %3253 = add i32 %3252, 1
  store i32 %3253, i32* %3251, align 4
  %3254 = load %struct.DState*, %struct.DState** %2, align 8
  %3255 = getelementptr inbounds %struct.DState, %struct.DState* %3254, i32 0, i32 0
  %3256 = load %struct.bz_stream*, %struct.bz_stream** %3255, align 8
  %3257 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3256, i32 0, i32 2
  %3258 = load i32, i32* %3257, align 4
  %3259 = icmp eq i32 %3258, 0
  br i1 %3259, label %3260, label %3267

3260:                                             ; preds = %3217
  %3261 = load %struct.DState*, %struct.DState** %2, align 8
  %3262 = getelementptr inbounds %struct.DState, %struct.DState* %3261, i32 0, i32 0
  %3263 = load %struct.bz_stream*, %struct.bz_stream** %3262, align 8
  %3264 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3263, i32 0, i32 3
  %3265 = load i32, i32* %3264, align 8
  %3266 = add i32 %3265, 1
  store i32 %3266, i32* %3264, align 8
  br label %3267

3267:                                             ; preds = %3260, %3217
  br label %3189

3268:                                             ; preds = %3194
  %3269 = load i32, i32* %25, align 4
  %3270 = shl i32 %3269, 1
  %3271 = load i32, i32* %26, align 4
  %3272 = or i32 %3270, %3271
  store i32 %3272, i32* %25, align 4
  br label %3170

3273:                                             ; preds = %3182
  %3274 = load i32, i32* %25, align 4
  %3275 = load i32*, i32** %30, align 8
  %3276 = load i32, i32* %24, align 4
  %3277 = sext i32 %3276 to i64
  %3278 = getelementptr inbounds i32, i32* %3275, i64 %3277
  %3279 = load i32, i32* %3278, align 4
  %3280 = sub nsw i32 %3274, %3279
  %3281 = icmp slt i32 %3280, 0
  br i1 %3281, label %3291, label %3282

3282:                                             ; preds = %3273
  %3283 = load i32, i32* %25, align 4
  %3284 = load i32*, i32** %30, align 8
  %3285 = load i32, i32* %24, align 4
  %3286 = sext i32 %3285 to i64
  %3287 = getelementptr inbounds i32, i32* %3284, i64 %3286
  %3288 = load i32, i32* %3287, align 4
  %3289 = sub nsw i32 %3283, %3288
  %3290 = icmp sge i32 %3289, 258
  br i1 %3290, label %3291, label %3292

3291:                                             ; preds = %3282, %3273
  store i32 -4, i32* %4, align 4
  br label %5717

3292:                                             ; preds = %3282
  %3293 = load i32*, i32** %31, align 8
  %3294 = load i32, i32* %25, align 4
  %3295 = load i32*, i32** %30, align 8
  %3296 = load i32, i32* %24, align 4
  %3297 = sext i32 %3296 to i64
  %3298 = getelementptr inbounds i32, i32* %3295, i64 %3297
  %3299 = load i32, i32* %3298, align 4
  %3300 = sub nsw i32 %3294, %3299
  %3301 = sext i32 %3300 to i64
  %3302 = getelementptr inbounds i32, i32* %3293, i64 %3301
  %3303 = load i32, i32* %3302, align 4
  store i32 %3303, i32* %17, align 4
  br label %3304

3304:                                             ; preds = %3292, %3687, %4258
  %3305 = load i32, i32* %17, align 4
  %3306 = load i32, i32* %14, align 4
  %3307 = icmp eq i32 %3305, %3306
  br i1 %3307, label %3308, label %3309

3308:                                             ; preds = %3304
  br label %4270

3309:                                             ; preds = %3304
  %3310 = load i32, i32* %17, align 4
  %3311 = icmp eq i32 %3310, 0
  br i1 %3311, label %3315, label %3312

3312:                                             ; preds = %3309
  %3313 = load i32, i32* %17, align 4
  %3314 = icmp eq i32 %3313, 1
  br i1 %3314, label %3315, label %3688

3315:                                             ; preds = %3312, %3309
  store i32 -1, i32* %20, align 4
  store i32 1, i32* %21, align 4
  br label %3316

3316:                                             ; preds = %3610, %3315
  %3317 = load i32, i32* %17, align 4
  %3318 = icmp eq i32 %3317, 0
  br i1 %3318, label %3319, label %3324

3319:                                             ; preds = %3316
  %3320 = load i32, i32* %20, align 4
  %3321 = load i32, i32* %21, align 4
  %3322 = mul nsw i32 1, %3321
  %3323 = add nsw i32 %3320, %3322
  store i32 %3323, i32* %20, align 4
  br label %3333

3324:                                             ; preds = %3316
  %3325 = load i32, i32* %17, align 4
  %3326 = icmp eq i32 %3325, 1
  br i1 %3326, label %3327, label %3332

3327:                                             ; preds = %3324
  %3328 = load i32, i32* %20, align 4
  %3329 = load i32, i32* %21, align 4
  %3330 = mul nsw i32 2, %3329
  %3331 = add nsw i32 %3328, %3330
  store i32 %3331, i32* %20, align 4
  br label %3332

3332:                                             ; preds = %3327, %3324
  br label %3333

3333:                                             ; preds = %3332, %3319
  %3334 = load i32, i32* %21, align 4
  %3335 = mul nsw i32 %3334, 2
  store i32 %3335, i32* %21, align 4
  %3336 = load i32, i32* %16, align 4
  %3337 = icmp eq i32 %3336, 0
  br i1 %3337, label %3338, label %3377

3338:                                             ; preds = %3333
  %3339 = load i32, i32* %15, align 4
  %3340 = add nsw i32 %3339, 1
  store i32 %3340, i32* %15, align 4
  %3341 = load i32, i32* %15, align 4
  %3342 = load i32, i32* %13, align 4
  %3343 = icmp sge i32 %3341, %3342
  br i1 %3343, label %3344, label %3345

3344:                                             ; preds = %3338
  store i32 -4, i32* %4, align 4
  br label %5717

3345:                                             ; preds = %3338
  store i32 50, i32* %16, align 4
  %3346 = load %struct.DState*, %struct.DState** %2, align 8
  %3347 = getelementptr inbounds %struct.DState, %struct.DState* %3346, i32 0, i32 33
  %3348 = load i32, i32* %15, align 4
  %3349 = sext i32 %3348 to i64
  %3350 = getelementptr inbounds [18002 x i8], [18002 x i8]* %3347, i64 0, i64 %3349
  %3351 = load i8, i8* %3350, align 1
  %3352 = zext i8 %3351 to i32
  store i32 %3352, i32* %27, align 4
  %3353 = load %struct.DState*, %struct.DState** %2, align 8
  %3354 = getelementptr inbounds %struct.DState, %struct.DState* %3353, i32 0, i32 39
  %3355 = load i32, i32* %27, align 4
  %3356 = sext i32 %3355 to i64
  %3357 = getelementptr inbounds [6 x i32], [6 x i32]* %3354, i64 0, i64 %3356
  %3358 = load i32, i32* %3357, align 4
  store i32 %3358, i32* %28, align 4
  %3359 = load %struct.DState*, %struct.DState** %2, align 8
  %3360 = getelementptr inbounds %struct.DState, %struct.DState* %3359, i32 0, i32 36
  %3361 = load i32, i32* %27, align 4
  %3362 = sext i32 %3361 to i64
  %3363 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %3360, i64 0, i64 %3362
  %3364 = getelementptr inbounds [258 x i32], [258 x i32]* %3363, i64 0, i64 0
  store i32* %3364, i32** %29, align 8
  %3365 = load %struct.DState*, %struct.DState** %2, align 8
  %3366 = getelementptr inbounds %struct.DState, %struct.DState* %3365, i32 0, i32 38
  %3367 = load i32, i32* %27, align 4
  %3368 = sext i32 %3367 to i64
  %3369 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %3366, i64 0, i64 %3368
  %3370 = getelementptr inbounds [258 x i32], [258 x i32]* %3369, i64 0, i64 0
  store i32* %3370, i32** %31, align 8
  %3371 = load %struct.DState*, %struct.DState** %2, align 8
  %3372 = getelementptr inbounds %struct.DState, %struct.DState* %3371, i32 0, i32 37
  %3373 = load i32, i32* %27, align 4
  %3374 = sext i32 %3373 to i64
  %3375 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %3372, i64 0, i64 %3374
  %3376 = getelementptr inbounds [258 x i32], [258 x i32]* %3375, i64 0, i64 0
  store i32* %3376, i32** %30, align 8
  br label %3377

3377:                                             ; preds = %3345, %3333
  %3378 = load i32, i32* %16, align 4
  %3379 = add nsw i32 %3378, -1
  store i32 %3379, i32* %16, align 4
  %3380 = load i32, i32* %28, align 4
  store i32 %3380, i32* %24, align 4
  br label %3381

3381:                                             ; preds = %144, %3377
  %3382 = load %struct.DState*, %struct.DState** %2, align 8
  %3383 = getelementptr inbounds %struct.DState, %struct.DState* %3382, i32 0, i32 1
  store i32 38, i32* %3383, align 8
  br label %3384

3384:                                             ; preds = %3381, %3468
  %3385 = load %struct.DState*, %struct.DState** %2, align 8
  %3386 = getelementptr inbounds %struct.DState, %struct.DState* %3385, i32 0, i32 8
  %3387 = load i32, i32* %3386, align 4
  %3388 = load i32, i32* %24, align 4
  %3389 = icmp sge i32 %3387, %3388
  br i1 %3389, label %3390, label %3410

3390:                                             ; preds = %3384
  %3391 = load %struct.DState*, %struct.DState** %2, align 8
  %3392 = getelementptr inbounds %struct.DState, %struct.DState* %3391, i32 0, i32 7
  %3393 = load i32, i32* %3392, align 8
  %3394 = load %struct.DState*, %struct.DState** %2, align 8
  %3395 = getelementptr inbounds %struct.DState, %struct.DState* %3394, i32 0, i32 8
  %3396 = load i32, i32* %3395, align 4
  %3397 = load i32, i32* %24, align 4
  %3398 = sub nsw i32 %3396, %3397
  %3399 = lshr i32 %3393, %3398
  %3400 = load i32, i32* %24, align 4
  %3401 = shl i32 1, %3400
  %3402 = sub nsw i32 %3401, 1
  %3403 = and i32 %3399, %3402
  store i32 %3403, i32* %66, align 4
  %3404 = load i32, i32* %24, align 4
  %3405 = load %struct.DState*, %struct.DState** %2, align 8
  %3406 = getelementptr inbounds %struct.DState, %struct.DState* %3405, i32 0, i32 8
  %3407 = load i32, i32* %3406, align 4
  %3408 = sub nsw i32 %3407, %3404
  store i32 %3408, i32* %3406, align 4
  %3409 = load i32, i32* %66, align 4
  store i32 %3409, i32* %25, align 4
  br label %3469

3410:                                             ; preds = %3384
  %3411 = load %struct.DState*, %struct.DState** %2, align 8
  %3412 = getelementptr inbounds %struct.DState, %struct.DState* %3411, i32 0, i32 0
  %3413 = load %struct.bz_stream*, %struct.bz_stream** %3412, align 8
  %3414 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3413, i32 0, i32 1
  %3415 = load i32, i32* %3414, align 8
  %3416 = icmp eq i32 %3415, 0
  br i1 %3416, label %3417, label %3418

3417:                                             ; preds = %3410
  store i32 0, i32* %4, align 4
  br label %5717

3418:                                             ; preds = %3410
  %3419 = load %struct.DState*, %struct.DState** %2, align 8
  %3420 = getelementptr inbounds %struct.DState, %struct.DState* %3419, i32 0, i32 7
  %3421 = load i32, i32* %3420, align 8
  %3422 = shl i32 %3421, 8
  %3423 = load %struct.DState*, %struct.DState** %2, align 8
  %3424 = getelementptr inbounds %struct.DState, %struct.DState* %3423, i32 0, i32 0
  %3425 = load %struct.bz_stream*, %struct.bz_stream** %3424, align 8
  %3426 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3425, i32 0, i32 0
  %3427 = load i8*, i8** %3426, align 8
  %3428 = load i8, i8* %3427, align 1
  %3429 = zext i8 %3428 to i32
  %3430 = or i32 %3422, %3429
  %3431 = load %struct.DState*, %struct.DState** %2, align 8
  %3432 = getelementptr inbounds %struct.DState, %struct.DState* %3431, i32 0, i32 7
  store i32 %3430, i32* %3432, align 8
  %3433 = load %struct.DState*, %struct.DState** %2, align 8
  %3434 = getelementptr inbounds %struct.DState, %struct.DState* %3433, i32 0, i32 8
  %3435 = load i32, i32* %3434, align 4
  %3436 = add nsw i32 %3435, 8
  store i32 %3436, i32* %3434, align 4
  %3437 = load %struct.DState*, %struct.DState** %2, align 8
  %3438 = getelementptr inbounds %struct.DState, %struct.DState* %3437, i32 0, i32 0
  %3439 = load %struct.bz_stream*, %struct.bz_stream** %3438, align 8
  %3440 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3439, i32 0, i32 0
  %3441 = load i8*, i8** %3440, align 8
  %3442 = getelementptr inbounds i8, i8* %3441, i32 1
  store i8* %3442, i8** %3440, align 8
  %3443 = load %struct.DState*, %struct.DState** %2, align 8
  %3444 = getelementptr inbounds %struct.DState, %struct.DState* %3443, i32 0, i32 0
  %3445 = load %struct.bz_stream*, %struct.bz_stream** %3444, align 8
  %3446 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3445, i32 0, i32 1
  %3447 = load i32, i32* %3446, align 8
  %3448 = add i32 %3447, -1
  store i32 %3448, i32* %3446, align 8
  %3449 = load %struct.DState*, %struct.DState** %2, align 8
  %3450 = getelementptr inbounds %struct.DState, %struct.DState* %3449, i32 0, i32 0
  %3451 = load %struct.bz_stream*, %struct.bz_stream** %3450, align 8
  %3452 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3451, i32 0, i32 2
  %3453 = load i32, i32* %3452, align 4
  %3454 = add i32 %3453, 1
  store i32 %3454, i32* %3452, align 4
  %3455 = load %struct.DState*, %struct.DState** %2, align 8
  %3456 = getelementptr inbounds %struct.DState, %struct.DState* %3455, i32 0, i32 0
  %3457 = load %struct.bz_stream*, %struct.bz_stream** %3456, align 8
  %3458 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3457, i32 0, i32 2
  %3459 = load i32, i32* %3458, align 4
  %3460 = icmp eq i32 %3459, 0
  br i1 %3460, label %3461, label %3468

3461:                                             ; preds = %3418
  %3462 = load %struct.DState*, %struct.DState** %2, align 8
  %3463 = getelementptr inbounds %struct.DState, %struct.DState* %3462, i32 0, i32 0
  %3464 = load %struct.bz_stream*, %struct.bz_stream** %3463, align 8
  %3465 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3464, i32 0, i32 3
  %3466 = load i32, i32* %3465, align 8
  %3467 = add i32 %3466, 1
  store i32 %3467, i32* %3465, align 8
  br label %3468

3468:                                             ; preds = %3461, %3418
  br label %3384

3469:                                             ; preds = %3390
  br label %3470

3470:                                             ; preds = %3469, %3568
  %3471 = load i32, i32* %24, align 4
  %3472 = icmp sgt i32 %3471, 20
  br i1 %3472, label %3473, label %3474

3473:                                             ; preds = %3470
  store i32 -4, i32* %4, align 4
  br label %5717

3474:                                             ; preds = %3470
  %3475 = load i32, i32* %25, align 4
  %3476 = load i32*, i32** %29, align 8
  %3477 = load i32, i32* %24, align 4
  %3478 = sext i32 %3477 to i64
  %3479 = getelementptr inbounds i32, i32* %3476, i64 %3478
  %3480 = load i32, i32* %3479, align 4
  %3481 = icmp sle i32 %3475, %3480
  br i1 %3481, label %3482, label %3483

3482:                                             ; preds = %3474
  br label %3573

3483:                                             ; preds = %3474
  %3484 = load i32, i32* %24, align 4
  %3485 = add nsw i32 %3484, 1
  store i32 %3485, i32* %24, align 4
  br label %3486

3486:                                             ; preds = %144, %3483
  %3487 = load %struct.DState*, %struct.DState** %2, align 8
  %3488 = getelementptr inbounds %struct.DState, %struct.DState* %3487, i32 0, i32 1
  store i32 39, i32* %3488, align 8
  br label %3489

3489:                                             ; preds = %3486, %3567
  %3490 = load %struct.DState*, %struct.DState** %2, align 8
  %3491 = getelementptr inbounds %struct.DState, %struct.DState* %3490, i32 0, i32 8
  %3492 = load i32, i32* %3491, align 4
  %3493 = icmp sge i32 %3492, 1
  br i1 %3493, label %3494, label %3509

3494:                                             ; preds = %3489
  %3495 = load %struct.DState*, %struct.DState** %2, align 8
  %3496 = getelementptr inbounds %struct.DState, %struct.DState* %3495, i32 0, i32 7
  %3497 = load i32, i32* %3496, align 8
  %3498 = load %struct.DState*, %struct.DState** %2, align 8
  %3499 = getelementptr inbounds %struct.DState, %struct.DState* %3498, i32 0, i32 8
  %3500 = load i32, i32* %3499, align 4
  %3501 = sub nsw i32 %3500, 1
  %3502 = lshr i32 %3497, %3501
  %3503 = and i32 %3502, 1
  store i32 %3503, i32* %67, align 4
  %3504 = load %struct.DState*, %struct.DState** %2, align 8
  %3505 = getelementptr inbounds %struct.DState, %struct.DState* %3504, i32 0, i32 8
  %3506 = load i32, i32* %3505, align 4
  %3507 = sub nsw i32 %3506, 1
  store i32 %3507, i32* %3505, align 4
  %3508 = load i32, i32* %67, align 4
  store i32 %3508, i32* %26, align 4
  br label %3568

3509:                                             ; preds = %3489
  %3510 = load %struct.DState*, %struct.DState** %2, align 8
  %3511 = getelementptr inbounds %struct.DState, %struct.DState* %3510, i32 0, i32 0
  %3512 = load %struct.bz_stream*, %struct.bz_stream** %3511, align 8
  %3513 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3512, i32 0, i32 1
  %3514 = load i32, i32* %3513, align 8
  %3515 = icmp eq i32 %3514, 0
  br i1 %3515, label %3516, label %3517

3516:                                             ; preds = %3509
  store i32 0, i32* %4, align 4
  br label %5717

3517:                                             ; preds = %3509
  %3518 = load %struct.DState*, %struct.DState** %2, align 8
  %3519 = getelementptr inbounds %struct.DState, %struct.DState* %3518, i32 0, i32 7
  %3520 = load i32, i32* %3519, align 8
  %3521 = shl i32 %3520, 8
  %3522 = load %struct.DState*, %struct.DState** %2, align 8
  %3523 = getelementptr inbounds %struct.DState, %struct.DState* %3522, i32 0, i32 0
  %3524 = load %struct.bz_stream*, %struct.bz_stream** %3523, align 8
  %3525 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3524, i32 0, i32 0
  %3526 = load i8*, i8** %3525, align 8
  %3527 = load i8, i8* %3526, align 1
  %3528 = zext i8 %3527 to i32
  %3529 = or i32 %3521, %3528
  %3530 = load %struct.DState*, %struct.DState** %2, align 8
  %3531 = getelementptr inbounds %struct.DState, %struct.DState* %3530, i32 0, i32 7
  store i32 %3529, i32* %3531, align 8
  %3532 = load %struct.DState*, %struct.DState** %2, align 8
  %3533 = getelementptr inbounds %struct.DState, %struct.DState* %3532, i32 0, i32 8
  %3534 = load i32, i32* %3533, align 4
  %3535 = add nsw i32 %3534, 8
  store i32 %3535, i32* %3533, align 4
  %3536 = load %struct.DState*, %struct.DState** %2, align 8
  %3537 = getelementptr inbounds %struct.DState, %struct.DState* %3536, i32 0, i32 0
  %3538 = load %struct.bz_stream*, %struct.bz_stream** %3537, align 8
  %3539 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3538, i32 0, i32 0
  %3540 = load i8*, i8** %3539, align 8
  %3541 = getelementptr inbounds i8, i8* %3540, i32 1
  store i8* %3541, i8** %3539, align 8
  %3542 = load %struct.DState*, %struct.DState** %2, align 8
  %3543 = getelementptr inbounds %struct.DState, %struct.DState* %3542, i32 0, i32 0
  %3544 = load %struct.bz_stream*, %struct.bz_stream** %3543, align 8
  %3545 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3544, i32 0, i32 1
  %3546 = load i32, i32* %3545, align 8
  %3547 = add i32 %3546, -1
  store i32 %3547, i32* %3545, align 8
  %3548 = load %struct.DState*, %struct.DState** %2, align 8
  %3549 = getelementptr inbounds %struct.DState, %struct.DState* %3548, i32 0, i32 0
  %3550 = load %struct.bz_stream*, %struct.bz_stream** %3549, align 8
  %3551 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3550, i32 0, i32 2
  %3552 = load i32, i32* %3551, align 4
  %3553 = add i32 %3552, 1
  store i32 %3553, i32* %3551, align 4
  %3554 = load %struct.DState*, %struct.DState** %2, align 8
  %3555 = getelementptr inbounds %struct.DState, %struct.DState* %3554, i32 0, i32 0
  %3556 = load %struct.bz_stream*, %struct.bz_stream** %3555, align 8
  %3557 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3556, i32 0, i32 2
  %3558 = load i32, i32* %3557, align 4
  %3559 = icmp eq i32 %3558, 0
  br i1 %3559, label %3560, label %3567

3560:                                             ; preds = %3517
  %3561 = load %struct.DState*, %struct.DState** %2, align 8
  %3562 = getelementptr inbounds %struct.DState, %struct.DState* %3561, i32 0, i32 0
  %3563 = load %struct.bz_stream*, %struct.bz_stream** %3562, align 8
  %3564 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3563, i32 0, i32 3
  %3565 = load i32, i32* %3564, align 8
  %3566 = add i32 %3565, 1
  store i32 %3566, i32* %3564, align 8
  br label %3567

3567:                                             ; preds = %3560, %3517
  br label %3489

3568:                                             ; preds = %3494
  %3569 = load i32, i32* %25, align 4
  %3570 = shl i32 %3569, 1
  %3571 = load i32, i32* %26, align 4
  %3572 = or i32 %3570, %3571
  store i32 %3572, i32* %25, align 4
  br label %3470

3573:                                             ; preds = %3482
  %3574 = load i32, i32* %25, align 4
  %3575 = load i32*, i32** %30, align 8
  %3576 = load i32, i32* %24, align 4
  %3577 = sext i32 %3576 to i64
  %3578 = getelementptr inbounds i32, i32* %3575, i64 %3577
  %3579 = load i32, i32* %3578, align 4
  %3580 = sub nsw i32 %3574, %3579
  %3581 = icmp slt i32 %3580, 0
  br i1 %3581, label %3591, label %3582

3582:                                             ; preds = %3573
  %3583 = load i32, i32* %25, align 4
  %3584 = load i32*, i32** %30, align 8
  %3585 = load i32, i32* %24, align 4
  %3586 = sext i32 %3585 to i64
  %3587 = getelementptr inbounds i32, i32* %3584, i64 %3586
  %3588 = load i32, i32* %3587, align 4
  %3589 = sub nsw i32 %3583, %3588
  %3590 = icmp sge i32 %3589, 258
  br i1 %3590, label %3591, label %3592

3591:                                             ; preds = %3582, %3573
  store i32 -4, i32* %4, align 4
  br label %5717

3592:                                             ; preds = %3582
  %3593 = load i32*, i32** %31, align 8
  %3594 = load i32, i32* %25, align 4
  %3595 = load i32*, i32** %30, align 8
  %3596 = load i32, i32* %24, align 4
  %3597 = sext i32 %3596 to i64
  %3598 = getelementptr inbounds i32, i32* %3595, i64 %3597
  %3599 = load i32, i32* %3598, align 4
  %3600 = sub nsw i32 %3594, %3599
  %3601 = sext i32 %3600 to i64
  %3602 = getelementptr inbounds i32, i32* %3593, i64 %3601
  %3603 = load i32, i32* %3602, align 4
  store i32 %3603, i32* %17, align 4
  br label %3604

3604:                                             ; preds = %3592
  %3605 = load i32, i32* %17, align 4
  %3606 = icmp eq i32 %3605, 0
  br i1 %3606, label %3610, label %3607

3607:                                             ; preds = %3604
  %3608 = load i32, i32* %17, align 4
  %3609 = icmp eq i32 %3608, 1
  br label %3610

3610:                                             ; preds = %3607, %3604
  %3611 = phi i1 [ true, %3604 ], [ %3609, %3607 ]
  br i1 %3611, label %3316, label %3612

3612:                                             ; preds = %3610
  %3613 = load i32, i32* %20, align 4
  %3614 = add nsw i32 %3613, 1
  store i32 %3614, i32* %20, align 4
  %3615 = load %struct.DState*, %struct.DState** %2, align 8
  %3616 = getelementptr inbounds %struct.DState, %struct.DState* %3615, i32 0, i32 30
  %3617 = load %struct.DState*, %struct.DState** %2, align 8
  %3618 = getelementptr inbounds %struct.DState, %struct.DState* %3617, i32 0, i32 31
  %3619 = load %struct.DState*, %struct.DState** %2, align 8
  %3620 = getelementptr inbounds %struct.DState, %struct.DState* %3619, i32 0, i32 32
  %3621 = getelementptr inbounds [16 x i32], [16 x i32]* %3620, i64 0, i64 0
  %3622 = load i32, i32* %3621, align 4
  %3623 = sext i32 %3622 to i64
  %3624 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3618, i64 0, i64 %3623
  %3625 = load i8, i8* %3624, align 1
  %3626 = zext i8 %3625 to i64
  %3627 = getelementptr inbounds [256 x i8], [256 x i8]* %3616, i64 0, i64 %3626
  %3628 = load i8, i8* %3627, align 1
  store i8 %3628, i8* %3, align 1
  %3629 = load i32, i32* %20, align 4
  %3630 = load %struct.DState*, %struct.DState** %2, align 8
  %3631 = getelementptr inbounds %struct.DState, %struct.DState* %3630, i32 0, i32 16
  %3632 = load i8, i8* %3, align 1
  %3633 = zext i8 %3632 to i64
  %3634 = getelementptr inbounds [256 x i32], [256 x i32]* %3631, i64 0, i64 %3633
  %3635 = load i32, i32* %3634, align 4
  %3636 = add nsw i32 %3635, %3629
  store i32 %3636, i32* %3634, align 4
  %3637 = load %struct.DState*, %struct.DState** %2, align 8
  %3638 = getelementptr inbounds %struct.DState, %struct.DState* %3637, i32 0, i32 10
  %3639 = load i8, i8* %3638, align 4
  %3640 = icmp ne i8 %3639, 0
  br i1 %3640, label %3641, label %3664

3641:                                             ; preds = %3612
  br label %3642

3642:                                             ; preds = %3650, %3641
  %3643 = load i32, i32* %20, align 4
  %3644 = icmp sgt i32 %3643, 0
  br i1 %3644, label %3645, label %3663

3645:                                             ; preds = %3642
  %3646 = load i32, i32* %19, align 4
  %3647 = load i32, i32* %18, align 4
  %3648 = icmp sge i32 %3646, %3647
  br i1 %3648, label %3649, label %3650

3649:                                             ; preds = %3645
  store i32 -4, i32* %4, align 4
  br label %5717

3650:                                             ; preds = %3645
  %3651 = load i8, i8* %3, align 1
  %3652 = zext i8 %3651 to i16
  %3653 = load %struct.DState*, %struct.DState** %2, align 8
  %3654 = getelementptr inbounds %struct.DState, %struct.DState* %3653, i32 0, i32 21
  %3655 = load i16*, i16** %3654, align 8
  %3656 = load i32, i32* %19, align 4
  %3657 = sext i32 %3656 to i64
  %3658 = getelementptr inbounds i16, i16* %3655, i64 %3657
  store i16 %3652, i16* %3658, align 2
  %3659 = load i32, i32* %19, align 4
  %3660 = add nsw i32 %3659, 1
  store i32 %3660, i32* %19, align 4
  %3661 = load i32, i32* %20, align 4
  %3662 = add nsw i32 %3661, -1
  store i32 %3662, i32* %20, align 4
  br label %3642

3663:                                             ; preds = %3642
  br label %3687

3664:                                             ; preds = %3612
  br label %3665

3665:                                             ; preds = %3673, %3664
  %3666 = load i32, i32* %20, align 4
  %3667 = icmp sgt i32 %3666, 0
  br i1 %3667, label %3668, label %3686

3668:                                             ; preds = %3665
  %3669 = load i32, i32* %19, align 4
  %3670 = load i32, i32* %18, align 4
  %3671 = icmp sge i32 %3669, %3670
  br i1 %3671, label %3672, label %3673

3672:                                             ; preds = %3668
  store i32 -4, i32* %4, align 4
  br label %5717

3673:                                             ; preds = %3668
  %3674 = load i8, i8* %3, align 1
  %3675 = zext i8 %3674 to i32
  %3676 = load %struct.DState*, %struct.DState** %2, align 8
  %3677 = getelementptr inbounds %struct.DState, %struct.DState* %3676, i32 0, i32 20
  %3678 = load i32*, i32** %3677, align 8
  %3679 = load i32, i32* %19, align 4
  %3680 = sext i32 %3679 to i64
  %3681 = getelementptr inbounds i32, i32* %3678, i64 %3680
  store i32 %3675, i32* %3681, align 4
  %3682 = load i32, i32* %19, align 4
  %3683 = add nsw i32 %3682, 1
  store i32 %3683, i32* %19, align 4
  %3684 = load i32, i32* %20, align 4
  %3685 = add nsw i32 %3684, -1
  store i32 %3685, i32* %20, align 4
  br label %3665

3686:                                             ; preds = %3665
  br label %3687

3687:                                             ; preds = %3686, %3663
  br label %3304

3688:                                             ; preds = %3312
  %3689 = load i32, i32* %19, align 4
  %3690 = load i32, i32* %18, align 4
  %3691 = icmp sge i32 %3689, %3690
  br i1 %3691, label %3692, label %3693

3692:                                             ; preds = %3688
  store i32 -4, i32* %4, align 4
  br label %5717

3693:                                             ; preds = %3688
  %3694 = load i32, i32* %17, align 4
  %3695 = sub nsw i32 %3694, 1
  store i32 %3695, i32* %74, align 4
  %3696 = load i32, i32* %74, align 4
  %3697 = icmp ult i32 %3696, 16
  br i1 %3697, label %3698, label %3801

3698:                                             ; preds = %3693
  %3699 = load %struct.DState*, %struct.DState** %2, align 8
  %3700 = getelementptr inbounds %struct.DState, %struct.DState* %3699, i32 0, i32 32
  %3701 = getelementptr inbounds [16 x i32], [16 x i32]* %3700, i64 0, i64 0
  %3702 = load i32, i32* %3701, align 4
  store i32 %3702, i32* %71, align 4
  %3703 = load %struct.DState*, %struct.DState** %2, align 8
  %3704 = getelementptr inbounds %struct.DState, %struct.DState* %3703, i32 0, i32 31
  %3705 = load i32, i32* %71, align 4
  %3706 = load i32, i32* %74, align 4
  %3707 = add i32 %3705, %3706
  %3708 = zext i32 %3707 to i64
  %3709 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3704, i64 0, i64 %3708
  %3710 = load i8, i8* %3709, align 1
  store i8 %3710, i8* %3, align 1
  br label %3711

3711:                                             ; preds = %3714, %3698
  %3712 = load i32, i32* %74, align 4
  %3713 = icmp ugt i32 %3712, 3
  br i1 %3713, label %3714, label %3771

3714:                                             ; preds = %3711
  %3715 = load i32, i32* %71, align 4
  %3716 = load i32, i32* %74, align 4
  %3717 = add i32 %3715, %3716
  store i32 %3717, i32* %75, align 4
  %3718 = load %struct.DState*, %struct.DState** %2, align 8
  %3719 = getelementptr inbounds %struct.DState, %struct.DState* %3718, i32 0, i32 31
  %3720 = load i32, i32* %75, align 4
  %3721 = sub nsw i32 %3720, 1
  %3722 = sext i32 %3721 to i64
  %3723 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3719, i64 0, i64 %3722
  %3724 = load i8, i8* %3723, align 1
  %3725 = load %struct.DState*, %struct.DState** %2, align 8
  %3726 = getelementptr inbounds %struct.DState, %struct.DState* %3725, i32 0, i32 31
  %3727 = load i32, i32* %75, align 4
  %3728 = sext i32 %3727 to i64
  %3729 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3726, i64 0, i64 %3728
  store i8 %3724, i8* %3729, align 1
  %3730 = load %struct.DState*, %struct.DState** %2, align 8
  %3731 = getelementptr inbounds %struct.DState, %struct.DState* %3730, i32 0, i32 31
  %3732 = load i32, i32* %75, align 4
  %3733 = sub nsw i32 %3732, 2
  %3734 = sext i32 %3733 to i64
  %3735 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3731, i64 0, i64 %3734
  %3736 = load i8, i8* %3735, align 1
  %3737 = load %struct.DState*, %struct.DState** %2, align 8
  %3738 = getelementptr inbounds %struct.DState, %struct.DState* %3737, i32 0, i32 31
  %3739 = load i32, i32* %75, align 4
  %3740 = sub nsw i32 %3739, 1
  %3741 = sext i32 %3740 to i64
  %3742 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3738, i64 0, i64 %3741
  store i8 %3736, i8* %3742, align 1
  %3743 = load %struct.DState*, %struct.DState** %2, align 8
  %3744 = getelementptr inbounds %struct.DState, %struct.DState* %3743, i32 0, i32 31
  %3745 = load i32, i32* %75, align 4
  %3746 = sub nsw i32 %3745, 3
  %3747 = sext i32 %3746 to i64
  %3748 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3744, i64 0, i64 %3747
  %3749 = load i8, i8* %3748, align 1
  %3750 = load %struct.DState*, %struct.DState** %2, align 8
  %3751 = getelementptr inbounds %struct.DState, %struct.DState* %3750, i32 0, i32 31
  %3752 = load i32, i32* %75, align 4
  %3753 = sub nsw i32 %3752, 2
  %3754 = sext i32 %3753 to i64
  %3755 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3751, i64 0, i64 %3754
  store i8 %3749, i8* %3755, align 1
  %3756 = load %struct.DState*, %struct.DState** %2, align 8
  %3757 = getelementptr inbounds %struct.DState, %struct.DState* %3756, i32 0, i32 31
  %3758 = load i32, i32* %75, align 4
  %3759 = sub nsw i32 %3758, 4
  %3760 = sext i32 %3759 to i64
  %3761 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3757, i64 0, i64 %3760
  %3762 = load i8, i8* %3761, align 1
  %3763 = load %struct.DState*, %struct.DState** %2, align 8
  %3764 = getelementptr inbounds %struct.DState, %struct.DState* %3763, i32 0, i32 31
  %3765 = load i32, i32* %75, align 4
  %3766 = sub nsw i32 %3765, 3
  %3767 = sext i32 %3766 to i64
  %3768 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3764, i64 0, i64 %3767
  store i8 %3762, i8* %3768, align 1
  %3769 = load i32, i32* %74, align 4
  %3770 = sub i32 %3769, 4
  store i32 %3770, i32* %74, align 4
  br label %3711

3771:                                             ; preds = %3711
  br label %3772

3772:                                             ; preds = %3775, %3771
  %3773 = load i32, i32* %74, align 4
  %3774 = icmp ugt i32 %3773, 0
  br i1 %3774, label %3775, label %3794

3775:                                             ; preds = %3772
  %3776 = load %struct.DState*, %struct.DState** %2, align 8
  %3777 = getelementptr inbounds %struct.DState, %struct.DState* %3776, i32 0, i32 31
  %3778 = load i32, i32* %71, align 4
  %3779 = load i32, i32* %74, align 4
  %3780 = add i32 %3778, %3779
  %3781 = sub i32 %3780, 1
  %3782 = zext i32 %3781 to i64
  %3783 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3777, i64 0, i64 %3782
  %3784 = load i8, i8* %3783, align 1
  %3785 = load %struct.DState*, %struct.DState** %2, align 8
  %3786 = getelementptr inbounds %struct.DState, %struct.DState* %3785, i32 0, i32 31
  %3787 = load i32, i32* %71, align 4
  %3788 = load i32, i32* %74, align 4
  %3789 = add i32 %3787, %3788
  %3790 = zext i32 %3789 to i64
  %3791 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3786, i64 0, i64 %3790
  store i8 %3784, i8* %3791, align 1
  %3792 = load i32, i32* %74, align 4
  %3793 = add i32 %3792, -1
  store i32 %3793, i32* %74, align 4
  br label %3772

3794:                                             ; preds = %3772
  %3795 = load i8, i8* %3, align 1
  %3796 = load %struct.DState*, %struct.DState** %2, align 8
  %3797 = getelementptr inbounds %struct.DState, %struct.DState* %3796, i32 0, i32 31
  %3798 = load i32, i32* %71, align 4
  %3799 = sext i32 %3798 to i64
  %3800 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3797, i64 0, i64 %3799
  store i8 %3795, i8* %3800, align 1
  br label %3954

3801:                                             ; preds = %3693
  %3802 = load i32, i32* %74, align 4
  %3803 = udiv i32 %3802, 16
  store i32 %3803, i32* %72, align 4
  %3804 = load i32, i32* %74, align 4
  %3805 = urem i32 %3804, 16
  store i32 %3805, i32* %73, align 4
  %3806 = load %struct.DState*, %struct.DState** %2, align 8
  %3807 = getelementptr inbounds %struct.DState, %struct.DState* %3806, i32 0, i32 32
  %3808 = load i32, i32* %72, align 4
  %3809 = sext i32 %3808 to i64
  %3810 = getelementptr inbounds [16 x i32], [16 x i32]* %3807, i64 0, i64 %3809
  %3811 = load i32, i32* %3810, align 4
  %3812 = load i32, i32* %73, align 4
  %3813 = add nsw i32 %3811, %3812
  store i32 %3813, i32* %71, align 4
  %3814 = load %struct.DState*, %struct.DState** %2, align 8
  %3815 = getelementptr inbounds %struct.DState, %struct.DState* %3814, i32 0, i32 31
  %3816 = load i32, i32* %71, align 4
  %3817 = sext i32 %3816 to i64
  %3818 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3815, i64 0, i64 %3817
  %3819 = load i8, i8* %3818, align 1
  store i8 %3819, i8* %3, align 1
  br label %3820

3820:                                             ; preds = %3829, %3801
  %3821 = load i32, i32* %71, align 4
  %3822 = load %struct.DState*, %struct.DState** %2, align 8
  %3823 = getelementptr inbounds %struct.DState, %struct.DState* %3822, i32 0, i32 32
  %3824 = load i32, i32* %72, align 4
  %3825 = sext i32 %3824 to i64
  %3826 = getelementptr inbounds [16 x i32], [16 x i32]* %3823, i64 0, i64 %3825
  %3827 = load i32, i32* %3826, align 4
  %3828 = icmp sgt i32 %3821, %3827
  br i1 %3828, label %3829, label %3844

3829:                                             ; preds = %3820
  %3830 = load %struct.DState*, %struct.DState** %2, align 8
  %3831 = getelementptr inbounds %struct.DState, %struct.DState* %3830, i32 0, i32 31
  %3832 = load i32, i32* %71, align 4
  %3833 = sub nsw i32 %3832, 1
  %3834 = sext i32 %3833 to i64
  %3835 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3831, i64 0, i64 %3834
  %3836 = load i8, i8* %3835, align 1
  %3837 = load %struct.DState*, %struct.DState** %2, align 8
  %3838 = getelementptr inbounds %struct.DState, %struct.DState* %3837, i32 0, i32 31
  %3839 = load i32, i32* %71, align 4
  %3840 = sext i32 %3839 to i64
  %3841 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3838, i64 0, i64 %3840
  store i8 %3836, i8* %3841, align 1
  %3842 = load i32, i32* %71, align 4
  %3843 = add nsw i32 %3842, -1
  store i32 %3843, i32* %71, align 4
  br label %3820

3844:                                             ; preds = %3820
  %3845 = load %struct.DState*, %struct.DState** %2, align 8
  %3846 = getelementptr inbounds %struct.DState, %struct.DState* %3845, i32 0, i32 32
  %3847 = load i32, i32* %72, align 4
  %3848 = sext i32 %3847 to i64
  %3849 = getelementptr inbounds [16 x i32], [16 x i32]* %3846, i64 0, i64 %3848
  %3850 = load i32, i32* %3849, align 4
  %3851 = add nsw i32 %3850, 1
  store i32 %3851, i32* %3849, align 4
  br label %3852

3852:                                             ; preds = %3855, %3844
  %3853 = load i32, i32* %72, align 4
  %3854 = icmp sgt i32 %3853, 0
  br i1 %3854, label %3855, label %3889

3855:                                             ; preds = %3852
  %3856 = load %struct.DState*, %struct.DState** %2, align 8
  %3857 = getelementptr inbounds %struct.DState, %struct.DState* %3856, i32 0, i32 32
  %3858 = load i32, i32* %72, align 4
  %3859 = sext i32 %3858 to i64
  %3860 = getelementptr inbounds [16 x i32], [16 x i32]* %3857, i64 0, i64 %3859
  %3861 = load i32, i32* %3860, align 4
  %3862 = add nsw i32 %3861, -1
  store i32 %3862, i32* %3860, align 4
  %3863 = load %struct.DState*, %struct.DState** %2, align 8
  %3864 = getelementptr inbounds %struct.DState, %struct.DState* %3863, i32 0, i32 31
  %3865 = load %struct.DState*, %struct.DState** %2, align 8
  %3866 = getelementptr inbounds %struct.DState, %struct.DState* %3865, i32 0, i32 32
  %3867 = load i32, i32* %72, align 4
  %3868 = sub nsw i32 %3867, 1
  %3869 = sext i32 %3868 to i64
  %3870 = getelementptr inbounds [16 x i32], [16 x i32]* %3866, i64 0, i64 %3869
  %3871 = load i32, i32* %3870, align 4
  %3872 = add nsw i32 %3871, 16
  %3873 = sub nsw i32 %3872, 1
  %3874 = sext i32 %3873 to i64
  %3875 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3864, i64 0, i64 %3874
  %3876 = load i8, i8* %3875, align 1
  %3877 = load %struct.DState*, %struct.DState** %2, align 8
  %3878 = getelementptr inbounds %struct.DState, %struct.DState* %3877, i32 0, i32 31
  %3879 = load %struct.DState*, %struct.DState** %2, align 8
  %3880 = getelementptr inbounds %struct.DState, %struct.DState* %3879, i32 0, i32 32
  %3881 = load i32, i32* %72, align 4
  %3882 = sext i32 %3881 to i64
  %3883 = getelementptr inbounds [16 x i32], [16 x i32]* %3880, i64 0, i64 %3882
  %3884 = load i32, i32* %3883, align 4
  %3885 = sext i32 %3884 to i64
  %3886 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3878, i64 0, i64 %3885
  store i8 %3876, i8* %3886, align 1
  %3887 = load i32, i32* %72, align 4
  %3888 = add nsw i32 %3887, -1
  store i32 %3888, i32* %72, align 4
  br label %3852

3889:                                             ; preds = %3852
  %3890 = load %struct.DState*, %struct.DState** %2, align 8
  %3891 = getelementptr inbounds %struct.DState, %struct.DState* %3890, i32 0, i32 32
  %3892 = getelementptr inbounds [16 x i32], [16 x i32]* %3891, i64 0, i64 0
  %3893 = load i32, i32* %3892, align 4
  %3894 = add nsw i32 %3893, -1
  store i32 %3894, i32* %3892, align 4
  %3895 = load i8, i8* %3, align 1
  %3896 = load %struct.DState*, %struct.DState** %2, align 8
  %3897 = getelementptr inbounds %struct.DState, %struct.DState* %3896, i32 0, i32 31
  %3898 = load %struct.DState*, %struct.DState** %2, align 8
  %3899 = getelementptr inbounds %struct.DState, %struct.DState* %3898, i32 0, i32 32
  %3900 = getelementptr inbounds [16 x i32], [16 x i32]* %3899, i64 0, i64 0
  %3901 = load i32, i32* %3900, align 4
  %3902 = sext i32 %3901 to i64
  %3903 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3897, i64 0, i64 %3902
  store i8 %3895, i8* %3903, align 1
  %3904 = load %struct.DState*, %struct.DState** %2, align 8
  %3905 = getelementptr inbounds %struct.DState, %struct.DState* %3904, i32 0, i32 32
  %3906 = getelementptr inbounds [16 x i32], [16 x i32]* %3905, i64 0, i64 0
  %3907 = load i32, i32* %3906, align 4
  %3908 = icmp eq i32 %3907, 0
  br i1 %3908, label %3909, label %3953

3909:                                             ; preds = %3889
  store i32 4095, i32* %70, align 4
  store i32 15, i32* %68, align 4
  br label %3910

3910:                                             ; preds = %3949, %3909
  %3911 = load i32, i32* %68, align 4
  %3912 = icmp sge i32 %3911, 0
  br i1 %3912, label %3913, label %3952

3913:                                             ; preds = %3910
  store i32 15, i32* %69, align 4
  br label %3914

3914:                                             ; preds = %3938, %3913
  %3915 = load i32, i32* %69, align 4
  %3916 = icmp sge i32 %3915, 0
  br i1 %3916, label %3917, label %3941

3917:                                             ; preds = %3914
  %3918 = load %struct.DState*, %struct.DState** %2, align 8
  %3919 = getelementptr inbounds %struct.DState, %struct.DState* %3918, i32 0, i32 31
  %3920 = load %struct.DState*, %struct.DState** %2, align 8
  %3921 = getelementptr inbounds %struct.DState, %struct.DState* %3920, i32 0, i32 32
  %3922 = load i32, i32* %68, align 4
  %3923 = sext i32 %3922 to i64
  %3924 = getelementptr inbounds [16 x i32], [16 x i32]* %3921, i64 0, i64 %3923
  %3925 = load i32, i32* %3924, align 4
  %3926 = load i32, i32* %69, align 4
  %3927 = add nsw i32 %3925, %3926
  %3928 = sext i32 %3927 to i64
  %3929 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3919, i64 0, i64 %3928
  %3930 = load i8, i8* %3929, align 1
  %3931 = load %struct.DState*, %struct.DState** %2, align 8
  %3932 = getelementptr inbounds %struct.DState, %struct.DState* %3931, i32 0, i32 31
  %3933 = load i32, i32* %70, align 4
  %3934 = sext i32 %3933 to i64
  %3935 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3932, i64 0, i64 %3934
  store i8 %3930, i8* %3935, align 1
  %3936 = load i32, i32* %70, align 4
  %3937 = add nsw i32 %3936, -1
  store i32 %3937, i32* %70, align 4
  br label %3938

3938:                                             ; preds = %3917
  %3939 = load i32, i32* %69, align 4
  %3940 = add nsw i32 %3939, -1
  store i32 %3940, i32* %69, align 4
  br label %3914

3941:                                             ; preds = %3914
  %3942 = load i32, i32* %70, align 4
  %3943 = add nsw i32 %3942, 1
  %3944 = load %struct.DState*, %struct.DState** %2, align 8
  %3945 = getelementptr inbounds %struct.DState, %struct.DState* %3944, i32 0, i32 32
  %3946 = load i32, i32* %68, align 4
  %3947 = sext i32 %3946 to i64
  %3948 = getelementptr inbounds [16 x i32], [16 x i32]* %3945, i64 0, i64 %3947
  store i32 %3943, i32* %3948, align 4
  br label %3949

3949:                                             ; preds = %3941
  %3950 = load i32, i32* %68, align 4
  %3951 = add nsw i32 %3950, -1
  store i32 %3951, i32* %68, align 4
  br label %3910

3952:                                             ; preds = %3910
  br label %3953

3953:                                             ; preds = %3952, %3889
  br label %3954

3954:                                             ; preds = %3953, %3794
  %3955 = load %struct.DState*, %struct.DState** %2, align 8
  %3956 = getelementptr inbounds %struct.DState, %struct.DState* %3955, i32 0, i32 16
  %3957 = load %struct.DState*, %struct.DState** %2, align 8
  %3958 = getelementptr inbounds %struct.DState, %struct.DState* %3957, i32 0, i32 30
  %3959 = load i8, i8* %3, align 1
  %3960 = zext i8 %3959 to i64
  %3961 = getelementptr inbounds [256 x i8], [256 x i8]* %3958, i64 0, i64 %3960
  %3962 = load i8, i8* %3961, align 1
  %3963 = zext i8 %3962 to i64
  %3964 = getelementptr inbounds [256 x i32], [256 x i32]* %3956, i64 0, i64 %3963
  %3965 = load i32, i32* %3964, align 4
  %3966 = add nsw i32 %3965, 1
  store i32 %3966, i32* %3964, align 4
  %3967 = load %struct.DState*, %struct.DState** %2, align 8
  %3968 = getelementptr inbounds %struct.DState, %struct.DState* %3967, i32 0, i32 10
  %3969 = load i8, i8* %3968, align 4
  %3970 = icmp ne i8 %3969, 0
  br i1 %3970, label %3971, label %3985

3971:                                             ; preds = %3954
  %3972 = load %struct.DState*, %struct.DState** %2, align 8
  %3973 = getelementptr inbounds %struct.DState, %struct.DState* %3972, i32 0, i32 30
  %3974 = load i8, i8* %3, align 1
  %3975 = zext i8 %3974 to i64
  %3976 = getelementptr inbounds [256 x i8], [256 x i8]* %3973, i64 0, i64 %3975
  %3977 = load i8, i8* %3976, align 1
  %3978 = zext i8 %3977 to i16
  %3979 = load %struct.DState*, %struct.DState** %2, align 8
  %3980 = getelementptr inbounds %struct.DState, %struct.DState* %3979, i32 0, i32 21
  %3981 = load i16*, i16** %3980, align 8
  %3982 = load i32, i32* %19, align 4
  %3983 = sext i32 %3982 to i64
  %3984 = getelementptr inbounds i16, i16* %3981, i64 %3983
  store i16 %3978, i16* %3984, align 2
  br label %3999

3985:                                             ; preds = %3954
  %3986 = load %struct.DState*, %struct.DState** %2, align 8
  %3987 = getelementptr inbounds %struct.DState, %struct.DState* %3986, i32 0, i32 30
  %3988 = load i8, i8* %3, align 1
  %3989 = zext i8 %3988 to i64
  %3990 = getelementptr inbounds [256 x i8], [256 x i8]* %3987, i64 0, i64 %3989
  %3991 = load i8, i8* %3990, align 1
  %3992 = zext i8 %3991 to i32
  %3993 = load %struct.DState*, %struct.DState** %2, align 8
  %3994 = getelementptr inbounds %struct.DState, %struct.DState* %3993, i32 0, i32 20
  %3995 = load i32*, i32** %3994, align 8
  %3996 = load i32, i32* %19, align 4
  %3997 = sext i32 %3996 to i64
  %3998 = getelementptr inbounds i32, i32* %3995, i64 %3997
  store i32 %3992, i32* %3998, align 4
  br label %3999

3999:                                             ; preds = %3985, %3971
  %4000 = load i32, i32* %19, align 4
  %4001 = add nsw i32 %4000, 1
  store i32 %4001, i32* %19, align 4
  %4002 = load i32, i32* %16, align 4
  %4003 = icmp eq i32 %4002, 0
  br i1 %4003, label %4004, label %4043

4004:                                             ; preds = %3999
  %4005 = load i32, i32* %15, align 4
  %4006 = add nsw i32 %4005, 1
  store i32 %4006, i32* %15, align 4
  %4007 = load i32, i32* %15, align 4
  %4008 = load i32, i32* %13, align 4
  %4009 = icmp sge i32 %4007, %4008
  br i1 %4009, label %4010, label %4011

4010:                                             ; preds = %4004
  store i32 -4, i32* %4, align 4
  br label %5717

4011:                                             ; preds = %4004
  store i32 50, i32* %16, align 4
  %4012 = load %struct.DState*, %struct.DState** %2, align 8
  %4013 = getelementptr inbounds %struct.DState, %struct.DState* %4012, i32 0, i32 33
  %4014 = load i32, i32* %15, align 4
  %4015 = sext i32 %4014 to i64
  %4016 = getelementptr inbounds [18002 x i8], [18002 x i8]* %4013, i64 0, i64 %4015
  %4017 = load i8, i8* %4016, align 1
  %4018 = zext i8 %4017 to i32
  store i32 %4018, i32* %27, align 4
  %4019 = load %struct.DState*, %struct.DState** %2, align 8
  %4020 = getelementptr inbounds %struct.DState, %struct.DState* %4019, i32 0, i32 39
  %4021 = load i32, i32* %27, align 4
  %4022 = sext i32 %4021 to i64
  %4023 = getelementptr inbounds [6 x i32], [6 x i32]* %4020, i64 0, i64 %4022
  %4024 = load i32, i32* %4023, align 4
  store i32 %4024, i32* %28, align 4
  %4025 = load %struct.DState*, %struct.DState** %2, align 8
  %4026 = getelementptr inbounds %struct.DState, %struct.DState* %4025, i32 0, i32 36
  %4027 = load i32, i32* %27, align 4
  %4028 = sext i32 %4027 to i64
  %4029 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %4026, i64 0, i64 %4028
  %4030 = getelementptr inbounds [258 x i32], [258 x i32]* %4029, i64 0, i64 0
  store i32* %4030, i32** %29, align 8
  %4031 = load %struct.DState*, %struct.DState** %2, align 8
  %4032 = getelementptr inbounds %struct.DState, %struct.DState* %4031, i32 0, i32 38
  %4033 = load i32, i32* %27, align 4
  %4034 = sext i32 %4033 to i64
  %4035 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %4032, i64 0, i64 %4034
  %4036 = getelementptr inbounds [258 x i32], [258 x i32]* %4035, i64 0, i64 0
  store i32* %4036, i32** %31, align 8
  %4037 = load %struct.DState*, %struct.DState** %2, align 8
  %4038 = getelementptr inbounds %struct.DState, %struct.DState* %4037, i32 0, i32 37
  %4039 = load i32, i32* %27, align 4
  %4040 = sext i32 %4039 to i64
  %4041 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %4038, i64 0, i64 %4040
  %4042 = getelementptr inbounds [258 x i32], [258 x i32]* %4041, i64 0, i64 0
  store i32* %4042, i32** %30, align 8
  br label %4043

4043:                                             ; preds = %4011, %3999
  %4044 = load i32, i32* %16, align 4
  %4045 = add nsw i32 %4044, -1
  store i32 %4045, i32* %16, align 4
  %4046 = load i32, i32* %28, align 4
  store i32 %4046, i32* %24, align 4
  br label %4047

4047:                                             ; preds = %144, %4043
  %4048 = load %struct.DState*, %struct.DState** %2, align 8
  %4049 = getelementptr inbounds %struct.DState, %struct.DState* %4048, i32 0, i32 1
  store i32 40, i32* %4049, align 8
  br label %4050

4050:                                             ; preds = %4047, %4134
  %4051 = load %struct.DState*, %struct.DState** %2, align 8
  %4052 = getelementptr inbounds %struct.DState, %struct.DState* %4051, i32 0, i32 8
  %4053 = load i32, i32* %4052, align 4
  %4054 = load i32, i32* %24, align 4
  %4055 = icmp sge i32 %4053, %4054
  br i1 %4055, label %4056, label %4076

4056:                                             ; preds = %4050
  %4057 = load %struct.DState*, %struct.DState** %2, align 8
  %4058 = getelementptr inbounds %struct.DState, %struct.DState* %4057, i32 0, i32 7
  %4059 = load i32, i32* %4058, align 8
  %4060 = load %struct.DState*, %struct.DState** %2, align 8
  %4061 = getelementptr inbounds %struct.DState, %struct.DState* %4060, i32 0, i32 8
  %4062 = load i32, i32* %4061, align 4
  %4063 = load i32, i32* %24, align 4
  %4064 = sub nsw i32 %4062, %4063
  %4065 = lshr i32 %4059, %4064
  %4066 = load i32, i32* %24, align 4
  %4067 = shl i32 1, %4066
  %4068 = sub nsw i32 %4067, 1
  %4069 = and i32 %4065, %4068
  store i32 %4069, i32* %76, align 4
  %4070 = load i32, i32* %24, align 4
  %4071 = load %struct.DState*, %struct.DState** %2, align 8
  %4072 = getelementptr inbounds %struct.DState, %struct.DState* %4071, i32 0, i32 8
  %4073 = load i32, i32* %4072, align 4
  %4074 = sub nsw i32 %4073, %4070
  store i32 %4074, i32* %4072, align 4
  %4075 = load i32, i32* %76, align 4
  store i32 %4075, i32* %25, align 4
  br label %4135

4076:                                             ; preds = %4050
  %4077 = load %struct.DState*, %struct.DState** %2, align 8
  %4078 = getelementptr inbounds %struct.DState, %struct.DState* %4077, i32 0, i32 0
  %4079 = load %struct.bz_stream*, %struct.bz_stream** %4078, align 8
  %4080 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4079, i32 0, i32 1
  %4081 = load i32, i32* %4080, align 8
  %4082 = icmp eq i32 %4081, 0
  br i1 %4082, label %4083, label %4084

4083:                                             ; preds = %4076
  store i32 0, i32* %4, align 4
  br label %5717

4084:                                             ; preds = %4076
  %4085 = load %struct.DState*, %struct.DState** %2, align 8
  %4086 = getelementptr inbounds %struct.DState, %struct.DState* %4085, i32 0, i32 7
  %4087 = load i32, i32* %4086, align 8
  %4088 = shl i32 %4087, 8
  %4089 = load %struct.DState*, %struct.DState** %2, align 8
  %4090 = getelementptr inbounds %struct.DState, %struct.DState* %4089, i32 0, i32 0
  %4091 = load %struct.bz_stream*, %struct.bz_stream** %4090, align 8
  %4092 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4091, i32 0, i32 0
  %4093 = load i8*, i8** %4092, align 8
  %4094 = load i8, i8* %4093, align 1
  %4095 = zext i8 %4094 to i32
  %4096 = or i32 %4088, %4095
  %4097 = load %struct.DState*, %struct.DState** %2, align 8
  %4098 = getelementptr inbounds %struct.DState, %struct.DState* %4097, i32 0, i32 7
  store i32 %4096, i32* %4098, align 8
  %4099 = load %struct.DState*, %struct.DState** %2, align 8
  %4100 = getelementptr inbounds %struct.DState, %struct.DState* %4099, i32 0, i32 8
  %4101 = load i32, i32* %4100, align 4
  %4102 = add nsw i32 %4101, 8
  store i32 %4102, i32* %4100, align 4
  %4103 = load %struct.DState*, %struct.DState** %2, align 8
  %4104 = getelementptr inbounds %struct.DState, %struct.DState* %4103, i32 0, i32 0
  %4105 = load %struct.bz_stream*, %struct.bz_stream** %4104, align 8
  %4106 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4105, i32 0, i32 0
  %4107 = load i8*, i8** %4106, align 8
  %4108 = getelementptr inbounds i8, i8* %4107, i32 1
  store i8* %4108, i8** %4106, align 8
  %4109 = load %struct.DState*, %struct.DState** %2, align 8
  %4110 = getelementptr inbounds %struct.DState, %struct.DState* %4109, i32 0, i32 0
  %4111 = load %struct.bz_stream*, %struct.bz_stream** %4110, align 8
  %4112 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4111, i32 0, i32 1
  %4113 = load i32, i32* %4112, align 8
  %4114 = add i32 %4113, -1
  store i32 %4114, i32* %4112, align 8
  %4115 = load %struct.DState*, %struct.DState** %2, align 8
  %4116 = getelementptr inbounds %struct.DState, %struct.DState* %4115, i32 0, i32 0
  %4117 = load %struct.bz_stream*, %struct.bz_stream** %4116, align 8
  %4118 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4117, i32 0, i32 2
  %4119 = load i32, i32* %4118, align 4
  %4120 = add i32 %4119, 1
  store i32 %4120, i32* %4118, align 4
  %4121 = load %struct.DState*, %struct.DState** %2, align 8
  %4122 = getelementptr inbounds %struct.DState, %struct.DState* %4121, i32 0, i32 0
  %4123 = load %struct.bz_stream*, %struct.bz_stream** %4122, align 8
  %4124 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4123, i32 0, i32 2
  %4125 = load i32, i32* %4124, align 4
  %4126 = icmp eq i32 %4125, 0
  br i1 %4126, label %4127, label %4134

4127:                                             ; preds = %4084
  %4128 = load %struct.DState*, %struct.DState** %2, align 8
  %4129 = getelementptr inbounds %struct.DState, %struct.DState* %4128, i32 0, i32 0
  %4130 = load %struct.bz_stream*, %struct.bz_stream** %4129, align 8
  %4131 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4130, i32 0, i32 3
  %4132 = load i32, i32* %4131, align 8
  %4133 = add i32 %4132, 1
  store i32 %4133, i32* %4131, align 8
  br label %4134

4134:                                             ; preds = %4127, %4084
  br label %4050

4135:                                             ; preds = %4056
  br label %4136

4136:                                             ; preds = %4135, %4234
  %4137 = load i32, i32* %24, align 4
  %4138 = icmp sgt i32 %4137, 20
  br i1 %4138, label %4139, label %4140

4139:                                             ; preds = %4136
  store i32 -4, i32* %4, align 4
  br label %5717

4140:                                             ; preds = %4136
  %4141 = load i32, i32* %25, align 4
  %4142 = load i32*, i32** %29, align 8
  %4143 = load i32, i32* %24, align 4
  %4144 = sext i32 %4143 to i64
  %4145 = getelementptr inbounds i32, i32* %4142, i64 %4144
  %4146 = load i32, i32* %4145, align 4
  %4147 = icmp sle i32 %4141, %4146
  br i1 %4147, label %4148, label %4149

4148:                                             ; preds = %4140
  br label %4239

4149:                                             ; preds = %4140
  %4150 = load i32, i32* %24, align 4
  %4151 = add nsw i32 %4150, 1
  store i32 %4151, i32* %24, align 4
  br label %4152

4152:                                             ; preds = %144, %4149
  %4153 = load %struct.DState*, %struct.DState** %2, align 8
  %4154 = getelementptr inbounds %struct.DState, %struct.DState* %4153, i32 0, i32 1
  store i32 41, i32* %4154, align 8
  br label %4155

4155:                                             ; preds = %4152, %4233
  %4156 = load %struct.DState*, %struct.DState** %2, align 8
  %4157 = getelementptr inbounds %struct.DState, %struct.DState* %4156, i32 0, i32 8
  %4158 = load i32, i32* %4157, align 4
  %4159 = icmp sge i32 %4158, 1
  br i1 %4159, label %4160, label %4175

4160:                                             ; preds = %4155
  %4161 = load %struct.DState*, %struct.DState** %2, align 8
  %4162 = getelementptr inbounds %struct.DState, %struct.DState* %4161, i32 0, i32 7
  %4163 = load i32, i32* %4162, align 8
  %4164 = load %struct.DState*, %struct.DState** %2, align 8
  %4165 = getelementptr inbounds %struct.DState, %struct.DState* %4164, i32 0, i32 8
  %4166 = load i32, i32* %4165, align 4
  %4167 = sub nsw i32 %4166, 1
  %4168 = lshr i32 %4163, %4167
  %4169 = and i32 %4168, 1
  store i32 %4169, i32* %77, align 4
  %4170 = load %struct.DState*, %struct.DState** %2, align 8
  %4171 = getelementptr inbounds %struct.DState, %struct.DState* %4170, i32 0, i32 8
  %4172 = load i32, i32* %4171, align 4
  %4173 = sub nsw i32 %4172, 1
  store i32 %4173, i32* %4171, align 4
  %4174 = load i32, i32* %77, align 4
  store i32 %4174, i32* %26, align 4
  br label %4234

4175:                                             ; preds = %4155
  %4176 = load %struct.DState*, %struct.DState** %2, align 8
  %4177 = getelementptr inbounds %struct.DState, %struct.DState* %4176, i32 0, i32 0
  %4178 = load %struct.bz_stream*, %struct.bz_stream** %4177, align 8
  %4179 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4178, i32 0, i32 1
  %4180 = load i32, i32* %4179, align 8
  %4181 = icmp eq i32 %4180, 0
  br i1 %4181, label %4182, label %4183

4182:                                             ; preds = %4175
  store i32 0, i32* %4, align 4
  br label %5717

4183:                                             ; preds = %4175
  %4184 = load %struct.DState*, %struct.DState** %2, align 8
  %4185 = getelementptr inbounds %struct.DState, %struct.DState* %4184, i32 0, i32 7
  %4186 = load i32, i32* %4185, align 8
  %4187 = shl i32 %4186, 8
  %4188 = load %struct.DState*, %struct.DState** %2, align 8
  %4189 = getelementptr inbounds %struct.DState, %struct.DState* %4188, i32 0, i32 0
  %4190 = load %struct.bz_stream*, %struct.bz_stream** %4189, align 8
  %4191 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4190, i32 0, i32 0
  %4192 = load i8*, i8** %4191, align 8
  %4193 = load i8, i8* %4192, align 1
  %4194 = zext i8 %4193 to i32
  %4195 = or i32 %4187, %4194
  %4196 = load %struct.DState*, %struct.DState** %2, align 8
  %4197 = getelementptr inbounds %struct.DState, %struct.DState* %4196, i32 0, i32 7
  store i32 %4195, i32* %4197, align 8
  %4198 = load %struct.DState*, %struct.DState** %2, align 8
  %4199 = getelementptr inbounds %struct.DState, %struct.DState* %4198, i32 0, i32 8
  %4200 = load i32, i32* %4199, align 4
  %4201 = add nsw i32 %4200, 8
  store i32 %4201, i32* %4199, align 4
  %4202 = load %struct.DState*, %struct.DState** %2, align 8
  %4203 = getelementptr inbounds %struct.DState, %struct.DState* %4202, i32 0, i32 0
  %4204 = load %struct.bz_stream*, %struct.bz_stream** %4203, align 8
  %4205 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4204, i32 0, i32 0
  %4206 = load i8*, i8** %4205, align 8
  %4207 = getelementptr inbounds i8, i8* %4206, i32 1
  store i8* %4207, i8** %4205, align 8
  %4208 = load %struct.DState*, %struct.DState** %2, align 8
  %4209 = getelementptr inbounds %struct.DState, %struct.DState* %4208, i32 0, i32 0
  %4210 = load %struct.bz_stream*, %struct.bz_stream** %4209, align 8
  %4211 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4210, i32 0, i32 1
  %4212 = load i32, i32* %4211, align 8
  %4213 = add i32 %4212, -1
  store i32 %4213, i32* %4211, align 8
  %4214 = load %struct.DState*, %struct.DState** %2, align 8
  %4215 = getelementptr inbounds %struct.DState, %struct.DState* %4214, i32 0, i32 0
  %4216 = load %struct.bz_stream*, %struct.bz_stream** %4215, align 8
  %4217 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4216, i32 0, i32 2
  %4218 = load i32, i32* %4217, align 4
  %4219 = add i32 %4218, 1
  store i32 %4219, i32* %4217, align 4
  %4220 = load %struct.DState*, %struct.DState** %2, align 8
  %4221 = getelementptr inbounds %struct.DState, %struct.DState* %4220, i32 0, i32 0
  %4222 = load %struct.bz_stream*, %struct.bz_stream** %4221, align 8
  %4223 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4222, i32 0, i32 2
  %4224 = load i32, i32* %4223, align 4
  %4225 = icmp eq i32 %4224, 0
  br i1 %4225, label %4226, label %4233

4226:                                             ; preds = %4183
  %4227 = load %struct.DState*, %struct.DState** %2, align 8
  %4228 = getelementptr inbounds %struct.DState, %struct.DState* %4227, i32 0, i32 0
  %4229 = load %struct.bz_stream*, %struct.bz_stream** %4228, align 8
  %4230 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4229, i32 0, i32 3
  %4231 = load i32, i32* %4230, align 8
  %4232 = add i32 %4231, 1
  store i32 %4232, i32* %4230, align 8
  br label %4233

4233:                                             ; preds = %4226, %4183
  br label %4155

4234:                                             ; preds = %4160
  %4235 = load i32, i32* %25, align 4
  %4236 = shl i32 %4235, 1
  %4237 = load i32, i32* %26, align 4
  %4238 = or i32 %4236, %4237
  store i32 %4238, i32* %25, align 4
  br label %4136

4239:                                             ; preds = %4148
  %4240 = load i32, i32* %25, align 4
  %4241 = load i32*, i32** %30, align 8
  %4242 = load i32, i32* %24, align 4
  %4243 = sext i32 %4242 to i64
  %4244 = getelementptr inbounds i32, i32* %4241, i64 %4243
  %4245 = load i32, i32* %4244, align 4
  %4246 = sub nsw i32 %4240, %4245
  %4247 = icmp slt i32 %4246, 0
  br i1 %4247, label %4257, label %4248

4248:                                             ; preds = %4239
  %4249 = load i32, i32* %25, align 4
  %4250 = load i32*, i32** %30, align 8
  %4251 = load i32, i32* %24, align 4
  %4252 = sext i32 %4251 to i64
  %4253 = getelementptr inbounds i32, i32* %4250, i64 %4252
  %4254 = load i32, i32* %4253, align 4
  %4255 = sub nsw i32 %4249, %4254
  %4256 = icmp sge i32 %4255, 258
  br i1 %4256, label %4257, label %4258

4257:                                             ; preds = %4248, %4239
  store i32 -4, i32* %4, align 4
  br label %5717

4258:                                             ; preds = %4248
  %4259 = load i32*, i32** %31, align 8
  %4260 = load i32, i32* %25, align 4
  %4261 = load i32*, i32** %30, align 8
  %4262 = load i32, i32* %24, align 4
  %4263 = sext i32 %4262 to i64
  %4264 = getelementptr inbounds i32, i32* %4261, i64 %4263
  %4265 = load i32, i32* %4264, align 4
  %4266 = sub nsw i32 %4260, %4265
  %4267 = sext i32 %4266 to i64
  %4268 = getelementptr inbounds i32, i32* %4259, i64 %4267
  %4269 = load i32, i32* %4268, align 4
  store i32 %4269, i32* %17, align 4
  br label %3304

4270:                                             ; preds = %3308
  %4271 = load %struct.DState*, %struct.DState** %2, align 8
  %4272 = getelementptr inbounds %struct.DState, %struct.DState* %4271, i32 0, i32 13
  %4273 = load i32, i32* %4272, align 8
  %4274 = icmp slt i32 %4273, 0
  br i1 %4274, label %4281, label %4275

4275:                                             ; preds = %4270
  %4276 = load %struct.DState*, %struct.DState** %2, align 8
  %4277 = getelementptr inbounds %struct.DState, %struct.DState* %4276, i32 0, i32 13
  %4278 = load i32, i32* %4277, align 8
  %4279 = load i32, i32* %19, align 4
  %4280 = icmp sge i32 %4278, %4279
  br i1 %4280, label %4281, label %4282

4281:                                             ; preds = %4275, %4270
  store i32 -4, i32* %4, align 4
  br label %5717

4282:                                             ; preds = %4275
  %4283 = load %struct.DState*, %struct.DState** %2, align 8
  %4284 = getelementptr inbounds %struct.DState, %struct.DState* %4283, i32 0, i32 3
  store i32 0, i32* %4284, align 8
  %4285 = load %struct.DState*, %struct.DState** %2, align 8
  %4286 = getelementptr inbounds %struct.DState, %struct.DState* %4285, i32 0, i32 2
  store i8 0, i8* %4286, align 4
  %4287 = load %struct.DState*, %struct.DState** %2, align 8
  %4288 = getelementptr inbounds %struct.DState, %struct.DState* %4287, i32 0, i32 25
  store i32 -1, i32* %4288, align 8
  %4289 = load %struct.DState*, %struct.DState** %2, align 8
  %4290 = getelementptr inbounds %struct.DState, %struct.DState* %4289, i32 0, i32 1
  store i32 2, i32* %4290, align 8
  %4291 = load %struct.DState*, %struct.DState** %2, align 8
  %4292 = getelementptr inbounds %struct.DState, %struct.DState* %4291, i32 0, i32 12
  %4293 = load i32, i32* %4292, align 4
  %4294 = icmp sge i32 %4293, 2
  br i1 %4294, label %4295, label %4298

4295:                                             ; preds = %4282
  %4296 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %4297 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4296, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0))
  br label %4298

4298:                                             ; preds = %4295, %4282
  %4299 = load %struct.DState*, %struct.DState** %2, align 8
  %4300 = getelementptr inbounds %struct.DState, %struct.DState* %4299, i32 0, i32 18
  %4301 = getelementptr inbounds [257 x i32], [257 x i32]* %4300, i64 0, i64 0
  store i32 0, i32* %4301, align 8
  store i32 1, i32* %8, align 4
  br label %4302

4302:                                             ; preds = %4318, %4298
  %4303 = load i32, i32* %8, align 4
  %4304 = icmp sle i32 %4303, 256
  br i1 %4304, label %4305, label %4321

4305:                                             ; preds = %4302
  %4306 = load %struct.DState*, %struct.DState** %2, align 8
  %4307 = getelementptr inbounds %struct.DState, %struct.DState* %4306, i32 0, i32 16
  %4308 = load i32, i32* %8, align 4
  %4309 = sub nsw i32 %4308, 1
  %4310 = sext i32 %4309 to i64
  %4311 = getelementptr inbounds [256 x i32], [256 x i32]* %4307, i64 0, i64 %4310
  %4312 = load i32, i32* %4311, align 4
  %4313 = load %struct.DState*, %struct.DState** %2, align 8
  %4314 = getelementptr inbounds %struct.DState, %struct.DState* %4313, i32 0, i32 18
  %4315 = load i32, i32* %8, align 4
  %4316 = sext i32 %4315 to i64
  %4317 = getelementptr inbounds [257 x i32], [257 x i32]* %4314, i64 0, i64 %4316
  store i32 %4312, i32* %4317, align 4
  br label %4318

4318:                                             ; preds = %4305
  %4319 = load i32, i32* %8, align 4
  %4320 = add nsw i32 %4319, 1
  store i32 %4320, i32* %8, align 4
  br label %4302

4321:                                             ; preds = %4302
  store i32 1, i32* %8, align 4
  br label %4322

4322:                                             ; preds = %4340, %4321
  %4323 = load i32, i32* %8, align 4
  %4324 = icmp sle i32 %4323, 256
  br i1 %4324, label %4325, label %4343

4325:                                             ; preds = %4322
  %4326 = load %struct.DState*, %struct.DState** %2, align 8
  %4327 = getelementptr inbounds %struct.DState, %struct.DState* %4326, i32 0, i32 18
  %4328 = load i32, i32* %8, align 4
  %4329 = sub nsw i32 %4328, 1
  %4330 = sext i32 %4329 to i64
  %4331 = getelementptr inbounds [257 x i32], [257 x i32]* %4327, i64 0, i64 %4330
  %4332 = load i32, i32* %4331, align 4
  %4333 = load %struct.DState*, %struct.DState** %2, align 8
  %4334 = getelementptr inbounds %struct.DState, %struct.DState* %4333, i32 0, i32 18
  %4335 = load i32, i32* %8, align 4
  %4336 = sext i32 %4335 to i64
  %4337 = getelementptr inbounds [257 x i32], [257 x i32]* %4334, i64 0, i64 %4336
  %4338 = load i32, i32* %4337, align 4
  %4339 = add nsw i32 %4338, %4332
  store i32 %4339, i32* %4337, align 4
  br label %4340

4340:                                             ; preds = %4325
  %4341 = load i32, i32* %8, align 4
  %4342 = add nsw i32 %4341, 1
  store i32 %4342, i32* %8, align 4
  br label %4322

4343:                                             ; preds = %4322
  %4344 = load %struct.DState*, %struct.DState** %2, align 8
  %4345 = getelementptr inbounds %struct.DState, %struct.DState* %4344, i32 0, i32 10
  %4346 = load i8, i8* %4345, align 4
  %4347 = icmp ne i8 %4346, 0
  br i1 %4347, label %4348, label %4732

4348:                                             ; preds = %4343
  store i32 0, i32* %8, align 4
  br label %4349

4349:                                             ; preds = %4364, %4348
  %4350 = load i32, i32* %8, align 4
  %4351 = icmp sle i32 %4350, 256
  br i1 %4351, label %4352, label %4367

4352:                                             ; preds = %4349
  %4353 = load %struct.DState*, %struct.DState** %2, align 8
  %4354 = getelementptr inbounds %struct.DState, %struct.DState* %4353, i32 0, i32 18
  %4355 = load i32, i32* %8, align 4
  %4356 = sext i32 %4355 to i64
  %4357 = getelementptr inbounds [257 x i32], [257 x i32]* %4354, i64 0, i64 %4356
  %4358 = load i32, i32* %4357, align 4
  %4359 = load %struct.DState*, %struct.DState** %2, align 8
  %4360 = getelementptr inbounds %struct.DState, %struct.DState* %4359, i32 0, i32 19
  %4361 = load i32, i32* %8, align 4
  %4362 = sext i32 %4361 to i64
  %4363 = getelementptr inbounds [257 x i32], [257 x i32]* %4360, i64 0, i64 %4362
  store i32 %4358, i32* %4363, align 4
  br label %4364

4364:                                             ; preds = %4352
  %4365 = load i32, i32* %8, align 4
  %4366 = add nsw i32 %4365, 1
  store i32 %4366, i32* %8, align 4
  br label %4349

4367:                                             ; preds = %4349
  store i32 0, i32* %8, align 4
  br label %4368

4368:                                             ; preds = %4461, %4367
  %4369 = load i32, i32* %8, align 4
  %4370 = load i32, i32* %19, align 4
  %4371 = icmp slt i32 %4369, %4370
  br i1 %4371, label %4372, label %4464

4372:                                             ; preds = %4368
  %4373 = load %struct.DState*, %struct.DState** %2, align 8
  %4374 = getelementptr inbounds %struct.DState, %struct.DState* %4373, i32 0, i32 21
  %4375 = load i16*, i16** %4374, align 8
  %4376 = load i32, i32* %8, align 4
  %4377 = sext i32 %4376 to i64
  %4378 = getelementptr inbounds i16, i16* %4375, i64 %4377
  %4379 = load i16, i16* %4378, align 2
  %4380 = trunc i16 %4379 to i8
  store i8 %4380, i8* %3, align 1
  %4381 = load %struct.DState*, %struct.DState** %2, align 8
  %4382 = getelementptr inbounds %struct.DState, %struct.DState* %4381, i32 0, i32 19
  %4383 = load i8, i8* %3, align 1
  %4384 = zext i8 %4383 to i64
  %4385 = getelementptr inbounds [257 x i32], [257 x i32]* %4382, i64 0, i64 %4384
  %4386 = load i32, i32* %4385, align 4
  %4387 = and i32 %4386, 65535
  %4388 = trunc i32 %4387 to i16
  %4389 = load %struct.DState*, %struct.DState** %2, align 8
  %4390 = getelementptr inbounds %struct.DState, %struct.DState* %4389, i32 0, i32 21
  %4391 = load i16*, i16** %4390, align 8
  %4392 = load i32, i32* %8, align 4
  %4393 = sext i32 %4392 to i64
  %4394 = getelementptr inbounds i16, i16* %4391, i64 %4393
  store i16 %4388, i16* %4394, align 2
  %4395 = load i32, i32* %8, align 4
  %4396 = and i32 %4395, 1
  %4397 = icmp eq i32 %4396, 0
  br i1 %4397, label %4398, label %4425

4398:                                             ; preds = %4372
  %4399 = load %struct.DState*, %struct.DState** %2, align 8
  %4400 = getelementptr inbounds %struct.DState, %struct.DState* %4399, i32 0, i32 22
  %4401 = load i8*, i8** %4400, align 8
  %4402 = load i32, i32* %8, align 4
  %4403 = ashr i32 %4402, 1
  %4404 = sext i32 %4403 to i64
  %4405 = getelementptr inbounds i8, i8* %4401, i64 %4404
  %4406 = load i8, i8* %4405, align 1
  %4407 = zext i8 %4406 to i32
  %4408 = and i32 %4407, 240
  %4409 = load %struct.DState*, %struct.DState** %2, align 8
  %4410 = getelementptr inbounds %struct.DState, %struct.DState* %4409, i32 0, i32 19
  %4411 = load i8, i8* %3, align 1
  %4412 = zext i8 %4411 to i64
  %4413 = getelementptr inbounds [257 x i32], [257 x i32]* %4410, i64 0, i64 %4412
  %4414 = load i32, i32* %4413, align 4
  %4415 = ashr i32 %4414, 16
  %4416 = or i32 %4408, %4415
  %4417 = trunc i32 %4416 to i8
  %4418 = load %struct.DState*, %struct.DState** %2, align 8
  %4419 = getelementptr inbounds %struct.DState, %struct.DState* %4418, i32 0, i32 22
  %4420 = load i8*, i8** %4419, align 8
  %4421 = load i32, i32* %8, align 4
  %4422 = ashr i32 %4421, 1
  %4423 = sext i32 %4422 to i64
  %4424 = getelementptr inbounds i8, i8* %4420, i64 %4423
  store i8 %4417, i8* %4424, align 1
  br label %4453

4425:                                             ; preds = %4372
  %4426 = load %struct.DState*, %struct.DState** %2, align 8
  %4427 = getelementptr inbounds %struct.DState, %struct.DState* %4426, i32 0, i32 22
  %4428 = load i8*, i8** %4427, align 8
  %4429 = load i32, i32* %8, align 4
  %4430 = ashr i32 %4429, 1
  %4431 = sext i32 %4430 to i64
  %4432 = getelementptr inbounds i8, i8* %4428, i64 %4431
  %4433 = load i8, i8* %4432, align 1
  %4434 = zext i8 %4433 to i32
  %4435 = and i32 %4434, 15
  %4436 = load %struct.DState*, %struct.DState** %2, align 8
  %4437 = getelementptr inbounds %struct.DState, %struct.DState* %4436, i32 0, i32 19
  %4438 = load i8, i8* %3, align 1
  %4439 = zext i8 %4438 to i64
  %4440 = getelementptr inbounds [257 x i32], [257 x i32]* %4437, i64 0, i64 %4439
  %4441 = load i32, i32* %4440, align 4
  %4442 = ashr i32 %4441, 16
  %4443 = shl i32 %4442, 4
  %4444 = or i32 %4435, %4443
  %4445 = trunc i32 %4444 to i8
  %4446 = load %struct.DState*, %struct.DState** %2, align 8
  %4447 = getelementptr inbounds %struct.DState, %struct.DState* %4446, i32 0, i32 22
  %4448 = load i8*, i8** %4447, align 8
  %4449 = load i32, i32* %8, align 4
  %4450 = ashr i32 %4449, 1
  %4451 = sext i32 %4450 to i64
  %4452 = getelementptr inbounds i8, i8* %4448, i64 %4451
  store i8 %4445, i8* %4452, align 1
  br label %4453

4453:                                             ; preds = %4425, %4398
  %4454 = load %struct.DState*, %struct.DState** %2, align 8
  %4455 = getelementptr inbounds %struct.DState, %struct.DState* %4454, i32 0, i32 19
  %4456 = load i8, i8* %3, align 1
  %4457 = zext i8 %4456 to i64
  %4458 = getelementptr inbounds [257 x i32], [257 x i32]* %4455, i64 0, i64 %4457
  %4459 = load i32, i32* %4458, align 4
  %4460 = add nsw i32 %4459, 1
  store i32 %4460, i32* %4458, align 4
  br label %4461

4461:                                             ; preds = %4453
  %4462 = load i32, i32* %8, align 4
  %4463 = add nsw i32 %4462, 1
  store i32 %4463, i32* %8, align 4
  br label %4368

4464:                                             ; preds = %4368
  %4465 = load %struct.DState*, %struct.DState** %2, align 8
  %4466 = getelementptr inbounds %struct.DState, %struct.DState* %4465, i32 0, i32 13
  %4467 = load i32, i32* %4466, align 8
  store i32 %4467, i32* %8, align 4
  %4468 = load %struct.DState*, %struct.DState** %2, align 8
  %4469 = getelementptr inbounds %struct.DState, %struct.DState* %4468, i32 0, i32 21
  %4470 = load i16*, i16** %4469, align 8
  %4471 = load i32, i32* %8, align 4
  %4472 = sext i32 %4471 to i64
  %4473 = getelementptr inbounds i16, i16* %4470, i64 %4472
  %4474 = load i16, i16* %4473, align 2
  %4475 = zext i16 %4474 to i32
  %4476 = load %struct.DState*, %struct.DState** %2, align 8
  %4477 = getelementptr inbounds %struct.DState, %struct.DState* %4476, i32 0, i32 22
  %4478 = load i8*, i8** %4477, align 8
  %4479 = load i32, i32* %8, align 4
  %4480 = ashr i32 %4479, 1
  %4481 = sext i32 %4480 to i64
  %4482 = getelementptr inbounds i8, i8* %4478, i64 %4481
  %4483 = load i8, i8* %4482, align 1
  %4484 = zext i8 %4483 to i32
  %4485 = load i32, i32* %8, align 4
  %4486 = shl i32 %4485, 2
  %4487 = and i32 %4486, 4
  %4488 = lshr i32 %4484, %4487
  %4489 = and i32 %4488, 15
  %4490 = shl i32 %4489, 16
  %4491 = or i32 %4475, %4490
  store i32 %4491, i32* %9, align 4
  br label %4492

4492:                                             ; preds = %4577, %4464
  %4493 = load %struct.DState*, %struct.DState** %2, align 8
  %4494 = getelementptr inbounds %struct.DState, %struct.DState* %4493, i32 0, i32 21
  %4495 = load i16*, i16** %4494, align 8
  %4496 = load i32, i32* %9, align 4
  %4497 = sext i32 %4496 to i64
  %4498 = getelementptr inbounds i16, i16* %4495, i64 %4497
  %4499 = load i16, i16* %4498, align 2
  %4500 = zext i16 %4499 to i32
  %4501 = load %struct.DState*, %struct.DState** %2, align 8
  %4502 = getelementptr inbounds %struct.DState, %struct.DState* %4501, i32 0, i32 22
  %4503 = load i8*, i8** %4502, align 8
  %4504 = load i32, i32* %9, align 4
  %4505 = ashr i32 %4504, 1
  %4506 = sext i32 %4505 to i64
  %4507 = getelementptr inbounds i8, i8* %4503, i64 %4506
  %4508 = load i8, i8* %4507, align 1
  %4509 = zext i8 %4508 to i32
  %4510 = load i32, i32* %9, align 4
  %4511 = shl i32 %4510, 2
  %4512 = and i32 %4511, 4
  %4513 = lshr i32 %4509, %4512
  %4514 = and i32 %4513, 15
  %4515 = shl i32 %4514, 16
  %4516 = or i32 %4500, %4515
  store i32 %4516, i32* %78, align 4
  %4517 = load i32, i32* %8, align 4
  %4518 = and i32 %4517, 65535
  %4519 = trunc i32 %4518 to i16
  %4520 = load %struct.DState*, %struct.DState** %2, align 8
  %4521 = getelementptr inbounds %struct.DState, %struct.DState* %4520, i32 0, i32 21
  %4522 = load i16*, i16** %4521, align 8
  %4523 = load i32, i32* %9, align 4
  %4524 = sext i32 %4523 to i64
  %4525 = getelementptr inbounds i16, i16* %4522, i64 %4524
  store i16 %4519, i16* %4525, align 2
  %4526 = load i32, i32* %9, align 4
  %4527 = and i32 %4526, 1
  %4528 = icmp eq i32 %4527, 0
  br i1 %4528, label %4529, label %4551

4529:                                             ; preds = %4492
  %4530 = load %struct.DState*, %struct.DState** %2, align 8
  %4531 = getelementptr inbounds %struct.DState, %struct.DState* %4530, i32 0, i32 22
  %4532 = load i8*, i8** %4531, align 8
  %4533 = load i32, i32* %9, align 4
  %4534 = ashr i32 %4533, 1
  %4535 = sext i32 %4534 to i64
  %4536 = getelementptr inbounds i8, i8* %4532, i64 %4535
  %4537 = load i8, i8* %4536, align 1
  %4538 = zext i8 %4537 to i32
  %4539 = and i32 %4538, 240
  %4540 = load i32, i32* %8, align 4
  %4541 = ashr i32 %4540, 16
  %4542 = or i32 %4539, %4541
  %4543 = trunc i32 %4542 to i8
  %4544 = load %struct.DState*, %struct.DState** %2, align 8
  %4545 = getelementptr inbounds %struct.DState, %struct.DState* %4544, i32 0, i32 22
  %4546 = load i8*, i8** %4545, align 8
  %4547 = load i32, i32* %9, align 4
  %4548 = ashr i32 %4547, 1
  %4549 = sext i32 %4548 to i64
  %4550 = getelementptr inbounds i8, i8* %4546, i64 %4549
  store i8 %4543, i8* %4550, align 1
  br label %4574

4551:                                             ; preds = %4492
  %4552 = load %struct.DState*, %struct.DState** %2, align 8
  %4553 = getelementptr inbounds %struct.DState, %struct.DState* %4552, i32 0, i32 22
  %4554 = load i8*, i8** %4553, align 8
  %4555 = load i32, i32* %9, align 4
  %4556 = ashr i32 %4555, 1
  %4557 = sext i32 %4556 to i64
  %4558 = getelementptr inbounds i8, i8* %4554, i64 %4557
  %4559 = load i8, i8* %4558, align 1
  %4560 = zext i8 %4559 to i32
  %4561 = and i32 %4560, 15
  %4562 = load i32, i32* %8, align 4
  %4563 = ashr i32 %4562, 16
  %4564 = shl i32 %4563, 4
  %4565 = or i32 %4561, %4564
  %4566 = trunc i32 %4565 to i8
  %4567 = load %struct.DState*, %struct.DState** %2, align 8
  %4568 = getelementptr inbounds %struct.DState, %struct.DState* %4567, i32 0, i32 22
  %4569 = load i8*, i8** %4568, align 8
  %4570 = load i32, i32* %9, align 4
  %4571 = ashr i32 %4570, 1
  %4572 = sext i32 %4571 to i64
  %4573 = getelementptr inbounds i8, i8* %4569, i64 %4572
  store i8 %4566, i8* %4573, align 1
  br label %4574

4574:                                             ; preds = %4551, %4529
  %4575 = load i32, i32* %9, align 4
  store i32 %4575, i32* %8, align 4
  %4576 = load i32, i32* %78, align 4
  store i32 %4576, i32* %9, align 4
  br label %4577

4577:                                             ; preds = %4574
  %4578 = load i32, i32* %8, align 4
  %4579 = load %struct.DState*, %struct.DState** %2, align 8
  %4580 = getelementptr inbounds %struct.DState, %struct.DState* %4579, i32 0, i32 13
  %4581 = load i32, i32* %4580, align 8
  %4582 = icmp ne i32 %4578, %4581
  br i1 %4582, label %4492, label %4583

4583:                                             ; preds = %4577
  %4584 = load %struct.DState*, %struct.DState** %2, align 8
  %4585 = getelementptr inbounds %struct.DState, %struct.DState* %4584, i32 0, i32 13
  %4586 = load i32, i32* %4585, align 8
  %4587 = load %struct.DState*, %struct.DState** %2, align 8
  %4588 = getelementptr inbounds %struct.DState, %struct.DState* %4587, i32 0, i32 14
  store i32 %4586, i32* %4588, align 4
  %4589 = load %struct.DState*, %struct.DState** %2, align 8
  %4590 = getelementptr inbounds %struct.DState, %struct.DState* %4589, i32 0, i32 17
  store i32 0, i32* %4590, align 4
  %4591 = load %struct.DState*, %struct.DState** %2, align 8
  %4592 = getelementptr inbounds %struct.DState, %struct.DState* %4591, i32 0, i32 4
  %4593 = load i8, i8* %4592, align 4
  %4594 = icmp ne i8 %4593, 0
  br i1 %4594, label %4595, label %4685

4595:                                             ; preds = %4583
  %4596 = load %struct.DState*, %struct.DState** %2, align 8
  %4597 = getelementptr inbounds %struct.DState, %struct.DState* %4596, i32 0, i32 5
  store i32 0, i32* %4597, align 8
  %4598 = load %struct.DState*, %struct.DState** %2, align 8
  %4599 = getelementptr inbounds %struct.DState, %struct.DState* %4598, i32 0, i32 6
  store i32 0, i32* %4599, align 4
  %4600 = load %struct.DState*, %struct.DState** %2, align 8
  %4601 = getelementptr inbounds %struct.DState, %struct.DState* %4600, i32 0, i32 14
  %4602 = load i32, i32* %4601, align 4
  %4603 = load %struct.DState*, %struct.DState** %2, align 8
  %4604 = getelementptr inbounds %struct.DState, %struct.DState* %4603, i32 0, i32 18
  %4605 = getelementptr inbounds [257 x i32], [257 x i32]* %4604, i64 0, i64 0
  %4606 = call i32 @BZ2_indexIntoF(i32 %4602, i32* %4605)
  %4607 = load %struct.DState*, %struct.DState** %2, align 8
  %4608 = getelementptr inbounds %struct.DState, %struct.DState* %4607, i32 0, i32 15
  store i32 %4606, i32* %4608, align 8
  %4609 = load %struct.DState*, %struct.DState** %2, align 8
  %4610 = getelementptr inbounds %struct.DState, %struct.DState* %4609, i32 0, i32 21
  %4611 = load i16*, i16** %4610, align 8
  %4612 = load %struct.DState*, %struct.DState** %2, align 8
  %4613 = getelementptr inbounds %struct.DState, %struct.DState* %4612, i32 0, i32 14
  %4614 = load i32, i32* %4613, align 4
  %4615 = zext i32 %4614 to i64
  %4616 = getelementptr inbounds i16, i16* %4611, i64 %4615
  %4617 = load i16, i16* %4616, align 2
  %4618 = zext i16 %4617 to i32
  %4619 = load %struct.DState*, %struct.DState** %2, align 8
  %4620 = getelementptr inbounds %struct.DState, %struct.DState* %4619, i32 0, i32 22
  %4621 = load i8*, i8** %4620, align 8
  %4622 = load %struct.DState*, %struct.DState** %2, align 8
  %4623 = getelementptr inbounds %struct.DState, %struct.DState* %4622, i32 0, i32 14
  %4624 = load i32, i32* %4623, align 4
  %4625 = lshr i32 %4624, 1
  %4626 = zext i32 %4625 to i64
  %4627 = getelementptr inbounds i8, i8* %4621, i64 %4626
  %4628 = load i8, i8* %4627, align 1
  %4629 = zext i8 %4628 to i32
  %4630 = load %struct.DState*, %struct.DState** %2, align 8
  %4631 = getelementptr inbounds %struct.DState, %struct.DState* %4630, i32 0, i32 14
  %4632 = load i32, i32* %4631, align 4
  %4633 = shl i32 %4632, 2
  %4634 = and i32 %4633, 4
  %4635 = lshr i32 %4629, %4634
  %4636 = and i32 %4635, 15
  %4637 = shl i32 %4636, 16
  %4638 = or i32 %4618, %4637
  %4639 = load %struct.DState*, %struct.DState** %2, align 8
  %4640 = getelementptr inbounds %struct.DState, %struct.DState* %4639, i32 0, i32 14
  store i32 %4638, i32* %4640, align 4
  %4641 = load %struct.DState*, %struct.DState** %2, align 8
  %4642 = getelementptr inbounds %struct.DState, %struct.DState* %4641, i32 0, i32 17
  %4643 = load i32, i32* %4642, align 4
  %4644 = add nsw i32 %4643, 1
  store i32 %4644, i32* %4642, align 4
  %4645 = load %struct.DState*, %struct.DState** %2, align 8
  %4646 = getelementptr inbounds %struct.DState, %struct.DState* %4645, i32 0, i32 5
  %4647 = load i32, i32* %4646, align 8
  %4648 = icmp eq i32 %4647, 0
  br i1 %4648, label %4649, label %4670

4649:                                             ; preds = %4595
  %4650 = load %struct.DState*, %struct.DState** %2, align 8
  %4651 = getelementptr inbounds %struct.DState, %struct.DState* %4650, i32 0, i32 6
  %4652 = load i32, i32* %4651, align 4
  %4653 = sext i32 %4652 to i64
  %4654 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %4653
  %4655 = load i32, i32* %4654, align 4
  %4656 = load %struct.DState*, %struct.DState** %2, align 8
  %4657 = getelementptr inbounds %struct.DState, %struct.DState* %4656, i32 0, i32 5
  store i32 %4655, i32* %4657, align 8
  %4658 = load %struct.DState*, %struct.DState** %2, align 8
  %4659 = getelementptr inbounds %struct.DState, %struct.DState* %4658, i32 0, i32 6
  %4660 = load i32, i32* %4659, align 4
  %4661 = add nsw i32 %4660, 1
  store i32 %4661, i32* %4659, align 4
  %4662 = load %struct.DState*, %struct.DState** %2, align 8
  %4663 = getelementptr inbounds %struct.DState, %struct.DState* %4662, i32 0, i32 6
  %4664 = load i32, i32* %4663, align 4
  %4665 = icmp eq i32 %4664, 512
  br i1 %4665, label %4666, label %4669

4666:                                             ; preds = %4649
  %4667 = load %struct.DState*, %struct.DState** %2, align 8
  %4668 = getelementptr inbounds %struct.DState, %struct.DState* %4667, i32 0, i32 6
  store i32 0, i32* %4668, align 4
  br label %4669

4669:                                             ; preds = %4666, %4649
  br label %4670

4670:                                             ; preds = %4669, %4595
  %4671 = load %struct.DState*, %struct.DState** %2, align 8
  %4672 = getelementptr inbounds %struct.DState, %struct.DState* %4671, i32 0, i32 5
  %4673 = load i32, i32* %4672, align 8
  %4674 = add nsw i32 %4673, -1
  store i32 %4674, i32* %4672, align 8
  %4675 = load %struct.DState*, %struct.DState** %2, align 8
  %4676 = getelementptr inbounds %struct.DState, %struct.DState* %4675, i32 0, i32 5
  %4677 = load i32, i32* %4676, align 8
  %4678 = icmp eq i32 %4677, 1
  %4679 = zext i1 %4678 to i64
  %4680 = select i1 %4678, i32 1, i32 0
  %4681 = load %struct.DState*, %struct.DState** %2, align 8
  %4682 = getelementptr inbounds %struct.DState, %struct.DState* %4681, i32 0, i32 15
  %4683 = load i32, i32* %4682, align 8
  %4684 = xor i32 %4683, %4680
  store i32 %4684, i32* %4682, align 8
  br label %4731

4685:                                             ; preds = %4583
  %4686 = load %struct.DState*, %struct.DState** %2, align 8
  %4687 = getelementptr inbounds %struct.DState, %struct.DState* %4686, i32 0, i32 14
  %4688 = load i32, i32* %4687, align 4
  %4689 = load %struct.DState*, %struct.DState** %2, align 8
  %4690 = getelementptr inbounds %struct.DState, %struct.DState* %4689, i32 0, i32 18
  %4691 = getelementptr inbounds [257 x i32], [257 x i32]* %4690, i64 0, i64 0
  %4692 = call i32 @BZ2_indexIntoF(i32 %4688, i32* %4691)
  %4693 = load %struct.DState*, %struct.DState** %2, align 8
  %4694 = getelementptr inbounds %struct.DState, %struct.DState* %4693, i32 0, i32 15
  store i32 %4692, i32* %4694, align 8
  %4695 = load %struct.DState*, %struct.DState** %2, align 8
  %4696 = getelementptr inbounds %struct.DState, %struct.DState* %4695, i32 0, i32 21
  %4697 = load i16*, i16** %4696, align 8
  %4698 = load %struct.DState*, %struct.DState** %2, align 8
  %4699 = getelementptr inbounds %struct.DState, %struct.DState* %4698, i32 0, i32 14
  %4700 = load i32, i32* %4699, align 4
  %4701 = zext i32 %4700 to i64
  %4702 = getelementptr inbounds i16, i16* %4697, i64 %4701
  %4703 = load i16, i16* %4702, align 2
  %4704 = zext i16 %4703 to i32
  %4705 = load %struct.DState*, %struct.DState** %2, align 8
  %4706 = getelementptr inbounds %struct.DState, %struct.DState* %4705, i32 0, i32 22
  %4707 = load i8*, i8** %4706, align 8
  %4708 = load %struct.DState*, %struct.DState** %2, align 8
  %4709 = getelementptr inbounds %struct.DState, %struct.DState* %4708, i32 0, i32 14
  %4710 = load i32, i32* %4709, align 4
  %4711 = lshr i32 %4710, 1
  %4712 = zext i32 %4711 to i64
  %4713 = getelementptr inbounds i8, i8* %4707, i64 %4712
  %4714 = load i8, i8* %4713, align 1
  %4715 = zext i8 %4714 to i32
  %4716 = load %struct.DState*, %struct.DState** %2, align 8
  %4717 = getelementptr inbounds %struct.DState, %struct.DState* %4716, i32 0, i32 14
  %4718 = load i32, i32* %4717, align 4
  %4719 = shl i32 %4718, 2
  %4720 = and i32 %4719, 4
  %4721 = lshr i32 %4715, %4720
  %4722 = and i32 %4721, 15
  %4723 = shl i32 %4722, 16
  %4724 = or i32 %4704, %4723
  %4725 = load %struct.DState*, %struct.DState** %2, align 8
  %4726 = getelementptr inbounds %struct.DState, %struct.DState* %4725, i32 0, i32 14
  store i32 %4724, i32* %4726, align 4
  %4727 = load %struct.DState*, %struct.DState** %2, align 8
  %4728 = getelementptr inbounds %struct.DState, %struct.DState* %4727, i32 0, i32 17
  %4729 = load i32, i32* %4728, align 4
  %4730 = add nsw i32 %4729, 1
  store i32 %4730, i32* %4728, align 4
  br label %4731

4731:                                             ; preds = %4685, %4670
  br label %4892

4732:                                             ; preds = %4343
  store i32 0, i32* %8, align 4
  br label %4733

4733:                                             ; preds = %4769, %4732
  %4734 = load i32, i32* %8, align 4
  %4735 = load i32, i32* %19, align 4
  %4736 = icmp slt i32 %4734, %4735
  br i1 %4736, label %4737, label %4772

4737:                                             ; preds = %4733
  %4738 = load %struct.DState*, %struct.DState** %2, align 8
  %4739 = getelementptr inbounds %struct.DState, %struct.DState* %4738, i32 0, i32 20
  %4740 = load i32*, i32** %4739, align 8
  %4741 = load i32, i32* %8, align 4
  %4742 = sext i32 %4741 to i64
  %4743 = getelementptr inbounds i32, i32* %4740, i64 %4742
  %4744 = load i32, i32* %4743, align 4
  %4745 = and i32 %4744, 255
  %4746 = trunc i32 %4745 to i8
  store i8 %4746, i8* %3, align 1
  %4747 = load i32, i32* %8, align 4
  %4748 = shl i32 %4747, 8
  %4749 = load %struct.DState*, %struct.DState** %2, align 8
  %4750 = getelementptr inbounds %struct.DState, %struct.DState* %4749, i32 0, i32 20
  %4751 = load i32*, i32** %4750, align 8
  %4752 = load %struct.DState*, %struct.DState** %2, align 8
  %4753 = getelementptr inbounds %struct.DState, %struct.DState* %4752, i32 0, i32 18
  %4754 = load i8, i8* %3, align 1
  %4755 = zext i8 %4754 to i64
  %4756 = getelementptr inbounds [257 x i32], [257 x i32]* %4753, i64 0, i64 %4755
  %4757 = load i32, i32* %4756, align 4
  %4758 = sext i32 %4757 to i64
  %4759 = getelementptr inbounds i32, i32* %4751, i64 %4758
  %4760 = load i32, i32* %4759, align 4
  %4761 = or i32 %4760, %4748
  store i32 %4761, i32* %4759, align 4
  %4762 = load %struct.DState*, %struct.DState** %2, align 8
  %4763 = getelementptr inbounds %struct.DState, %struct.DState* %4762, i32 0, i32 18
  %4764 = load i8, i8* %3, align 1
  %4765 = zext i8 %4764 to i64
  %4766 = getelementptr inbounds [257 x i32], [257 x i32]* %4763, i64 0, i64 %4765
  %4767 = load i32, i32* %4766, align 4
  %4768 = add nsw i32 %4767, 1
  store i32 %4768, i32* %4766, align 4
  br label %4769

4769:                                             ; preds = %4737
  %4770 = load i32, i32* %8, align 4
  %4771 = add nsw i32 %4770, 1
  store i32 %4771, i32* %8, align 4
  br label %4733

4772:                                             ; preds = %4733
  %4773 = load %struct.DState*, %struct.DState** %2, align 8
  %4774 = getelementptr inbounds %struct.DState, %struct.DState* %4773, i32 0, i32 20
  %4775 = load i32*, i32** %4774, align 8
  %4776 = load %struct.DState*, %struct.DState** %2, align 8
  %4777 = getelementptr inbounds %struct.DState, %struct.DState* %4776, i32 0, i32 13
  %4778 = load i32, i32* %4777, align 8
  %4779 = sext i32 %4778 to i64
  %4780 = getelementptr inbounds i32, i32* %4775, i64 %4779
  %4781 = load i32, i32* %4780, align 4
  %4782 = lshr i32 %4781, 8
  %4783 = load %struct.DState*, %struct.DState** %2, align 8
  %4784 = getelementptr inbounds %struct.DState, %struct.DState* %4783, i32 0, i32 14
  store i32 %4782, i32* %4784, align 4
  %4785 = load %struct.DState*, %struct.DState** %2, align 8
  %4786 = getelementptr inbounds %struct.DState, %struct.DState* %4785, i32 0, i32 17
  store i32 0, i32* %4786, align 4
  %4787 = load %struct.DState*, %struct.DState** %2, align 8
  %4788 = getelementptr inbounds %struct.DState, %struct.DState* %4787, i32 0, i32 4
  %4789 = load i8, i8* %4788, align 4
  %4790 = icmp ne i8 %4789, 0
  br i1 %4790, label %4791, label %4863

4791:                                             ; preds = %4772
  %4792 = load %struct.DState*, %struct.DState** %2, align 8
  %4793 = getelementptr inbounds %struct.DState, %struct.DState* %4792, i32 0, i32 5
  store i32 0, i32* %4793, align 8
  %4794 = load %struct.DState*, %struct.DState** %2, align 8
  %4795 = getelementptr inbounds %struct.DState, %struct.DState* %4794, i32 0, i32 6
  store i32 0, i32* %4795, align 4
  %4796 = load %struct.DState*, %struct.DState** %2, align 8
  %4797 = getelementptr inbounds %struct.DState, %struct.DState* %4796, i32 0, i32 20
  %4798 = load i32*, i32** %4797, align 8
  %4799 = load %struct.DState*, %struct.DState** %2, align 8
  %4800 = getelementptr inbounds %struct.DState, %struct.DState* %4799, i32 0, i32 14
  %4801 = load i32, i32* %4800, align 4
  %4802 = zext i32 %4801 to i64
  %4803 = getelementptr inbounds i32, i32* %4798, i64 %4802
  %4804 = load i32, i32* %4803, align 4
  %4805 = load %struct.DState*, %struct.DState** %2, align 8
  %4806 = getelementptr inbounds %struct.DState, %struct.DState* %4805, i32 0, i32 14
  store i32 %4804, i32* %4806, align 4
  %4807 = load %struct.DState*, %struct.DState** %2, align 8
  %4808 = getelementptr inbounds %struct.DState, %struct.DState* %4807, i32 0, i32 14
  %4809 = load i32, i32* %4808, align 4
  %4810 = and i32 %4809, 255
  %4811 = trunc i32 %4810 to i8
  %4812 = zext i8 %4811 to i32
  %4813 = load %struct.DState*, %struct.DState** %2, align 8
  %4814 = getelementptr inbounds %struct.DState, %struct.DState* %4813, i32 0, i32 15
  store i32 %4812, i32* %4814, align 8
  %4815 = load %struct.DState*, %struct.DState** %2, align 8
  %4816 = getelementptr inbounds %struct.DState, %struct.DState* %4815, i32 0, i32 14
  %4817 = load i32, i32* %4816, align 4
  %4818 = lshr i32 %4817, 8
  store i32 %4818, i32* %4816, align 4
  %4819 = load %struct.DState*, %struct.DState** %2, align 8
  %4820 = getelementptr inbounds %struct.DState, %struct.DState* %4819, i32 0, i32 17
  %4821 = load i32, i32* %4820, align 4
  %4822 = add nsw i32 %4821, 1
  store i32 %4822, i32* %4820, align 4
  %4823 = load %struct.DState*, %struct.DState** %2, align 8
  %4824 = getelementptr inbounds %struct.DState, %struct.DState* %4823, i32 0, i32 5
  %4825 = load i32, i32* %4824, align 8
  %4826 = icmp eq i32 %4825, 0
  br i1 %4826, label %4827, label %4848

4827:                                             ; preds = %4791
  %4828 = load %struct.DState*, %struct.DState** %2, align 8
  %4829 = getelementptr inbounds %struct.DState, %struct.DState* %4828, i32 0, i32 6
  %4830 = load i32, i32* %4829, align 4
  %4831 = sext i32 %4830 to i64
  %4832 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %4831
  %4833 = load i32, i32* %4832, align 4
  %4834 = load %struct.DState*, %struct.DState** %2, align 8
  %4835 = getelementptr inbounds %struct.DState, %struct.DState* %4834, i32 0, i32 5
  store i32 %4833, i32* %4835, align 8
  %4836 = load %struct.DState*, %struct.DState** %2, align 8
  %4837 = getelementptr inbounds %struct.DState, %struct.DState* %4836, i32 0, i32 6
  %4838 = load i32, i32* %4837, align 4
  %4839 = add nsw i32 %4838, 1
  store i32 %4839, i32* %4837, align 4
  %4840 = load %struct.DState*, %struct.DState** %2, align 8
  %4841 = getelementptr inbounds %struct.DState, %struct.DState* %4840, i32 0, i32 6
  %4842 = load i32, i32* %4841, align 4
  %4843 = icmp eq i32 %4842, 512
  br i1 %4843, label %4844, label %4847

4844:                                             ; preds = %4827
  %4845 = load %struct.DState*, %struct.DState** %2, align 8
  %4846 = getelementptr inbounds %struct.DState, %struct.DState* %4845, i32 0, i32 6
  store i32 0, i32* %4846, align 4
  br label %4847

4847:                                             ; preds = %4844, %4827
  br label %4848

4848:                                             ; preds = %4847, %4791
  %4849 = load %struct.DState*, %struct.DState** %2, align 8
  %4850 = getelementptr inbounds %struct.DState, %struct.DState* %4849, i32 0, i32 5
  %4851 = load i32, i32* %4850, align 8
  %4852 = add nsw i32 %4851, -1
  store i32 %4852, i32* %4850, align 8
  %4853 = load %struct.DState*, %struct.DState** %2, align 8
  %4854 = getelementptr inbounds %struct.DState, %struct.DState* %4853, i32 0, i32 5
  %4855 = load i32, i32* %4854, align 8
  %4856 = icmp eq i32 %4855, 1
  %4857 = zext i1 %4856 to i64
  %4858 = select i1 %4856, i32 1, i32 0
  %4859 = load %struct.DState*, %struct.DState** %2, align 8
  %4860 = getelementptr inbounds %struct.DState, %struct.DState* %4859, i32 0, i32 15
  %4861 = load i32, i32* %4860, align 8
  %4862 = xor i32 %4861, %4858
  store i32 %4862, i32* %4860, align 8
  br label %4891

4863:                                             ; preds = %4772
  %4864 = load %struct.DState*, %struct.DState** %2, align 8
  %4865 = getelementptr inbounds %struct.DState, %struct.DState* %4864, i32 0, i32 20
  %4866 = load i32*, i32** %4865, align 8
  %4867 = load %struct.DState*, %struct.DState** %2, align 8
  %4868 = getelementptr inbounds %struct.DState, %struct.DState* %4867, i32 0, i32 14
  %4869 = load i32, i32* %4868, align 4
  %4870 = zext i32 %4869 to i64
  %4871 = getelementptr inbounds i32, i32* %4866, i64 %4870
  %4872 = load i32, i32* %4871, align 4
  %4873 = load %struct.DState*, %struct.DState** %2, align 8
  %4874 = getelementptr inbounds %struct.DState, %struct.DState* %4873, i32 0, i32 14
  store i32 %4872, i32* %4874, align 4
  %4875 = load %struct.DState*, %struct.DState** %2, align 8
  %4876 = getelementptr inbounds %struct.DState, %struct.DState* %4875, i32 0, i32 14
  %4877 = load i32, i32* %4876, align 4
  %4878 = and i32 %4877, 255
  %4879 = trunc i32 %4878 to i8
  %4880 = zext i8 %4879 to i32
  %4881 = load %struct.DState*, %struct.DState** %2, align 8
  %4882 = getelementptr inbounds %struct.DState, %struct.DState* %4881, i32 0, i32 15
  store i32 %4880, i32* %4882, align 8
  %4883 = load %struct.DState*, %struct.DState** %2, align 8
  %4884 = getelementptr inbounds %struct.DState, %struct.DState* %4883, i32 0, i32 14
  %4885 = load i32, i32* %4884, align 4
  %4886 = lshr i32 %4885, 8
  store i32 %4886, i32* %4884, align 4
  %4887 = load %struct.DState*, %struct.DState** %2, align 8
  %4888 = getelementptr inbounds %struct.DState, %struct.DState* %4887, i32 0, i32 17
  %4889 = load i32, i32* %4888, align 4
  %4890 = add nsw i32 %4889, 1
  store i32 %4890, i32* %4888, align 4
  br label %4891

4891:                                             ; preds = %4863, %4848
  br label %4892

4892:                                             ; preds = %4891, %4731
  store i32 0, i32* %4, align 4
  br label %5717

4893:                                             ; preds = %750
  br label %4894

4894:                                             ; preds = %144, %4893
  %4895 = load %struct.DState*, %struct.DState** %2, align 8
  %4896 = getelementptr inbounds %struct.DState, %struct.DState* %4895, i32 0, i32 1
  store i32 42, i32* %4896, align 8
  br label %4897

4897:                                             ; preds = %4894, %4976
  %4898 = load %struct.DState*, %struct.DState** %2, align 8
  %4899 = getelementptr inbounds %struct.DState, %struct.DState* %4898, i32 0, i32 8
  %4900 = load i32, i32* %4899, align 4
  %4901 = icmp sge i32 %4900, 8
  br i1 %4901, label %4902, label %4918

4902:                                             ; preds = %4897
  %4903 = load %struct.DState*, %struct.DState** %2, align 8
  %4904 = getelementptr inbounds %struct.DState, %struct.DState* %4903, i32 0, i32 7
  %4905 = load i32, i32* %4904, align 8
  %4906 = load %struct.DState*, %struct.DState** %2, align 8
  %4907 = getelementptr inbounds %struct.DState, %struct.DState* %4906, i32 0, i32 8
  %4908 = load i32, i32* %4907, align 4
  %4909 = sub nsw i32 %4908, 8
  %4910 = lshr i32 %4905, %4909
  %4911 = and i32 %4910, 255
  store i32 %4911, i32* %79, align 4
  %4912 = load %struct.DState*, %struct.DState** %2, align 8
  %4913 = getelementptr inbounds %struct.DState, %struct.DState* %4912, i32 0, i32 8
  %4914 = load i32, i32* %4913, align 4
  %4915 = sub nsw i32 %4914, 8
  store i32 %4915, i32* %4913, align 4
  %4916 = load i32, i32* %79, align 4
  %4917 = trunc i32 %4916 to i8
  store i8 %4917, i8* %3, align 1
  br label %4977

4918:                                             ; preds = %4897
  %4919 = load %struct.DState*, %struct.DState** %2, align 8
  %4920 = getelementptr inbounds %struct.DState, %struct.DState* %4919, i32 0, i32 0
  %4921 = load %struct.bz_stream*, %struct.bz_stream** %4920, align 8
  %4922 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4921, i32 0, i32 1
  %4923 = load i32, i32* %4922, align 8
  %4924 = icmp eq i32 %4923, 0
  br i1 %4924, label %4925, label %4926

4925:                                             ; preds = %4918
  store i32 0, i32* %4, align 4
  br label %5717

4926:                                             ; preds = %4918
  %4927 = load %struct.DState*, %struct.DState** %2, align 8
  %4928 = getelementptr inbounds %struct.DState, %struct.DState* %4927, i32 0, i32 7
  %4929 = load i32, i32* %4928, align 8
  %4930 = shl i32 %4929, 8
  %4931 = load %struct.DState*, %struct.DState** %2, align 8
  %4932 = getelementptr inbounds %struct.DState, %struct.DState* %4931, i32 0, i32 0
  %4933 = load %struct.bz_stream*, %struct.bz_stream** %4932, align 8
  %4934 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4933, i32 0, i32 0
  %4935 = load i8*, i8** %4934, align 8
  %4936 = load i8, i8* %4935, align 1
  %4937 = zext i8 %4936 to i32
  %4938 = or i32 %4930, %4937
  %4939 = load %struct.DState*, %struct.DState** %2, align 8
  %4940 = getelementptr inbounds %struct.DState, %struct.DState* %4939, i32 0, i32 7
  store i32 %4938, i32* %4940, align 8
  %4941 = load %struct.DState*, %struct.DState** %2, align 8
  %4942 = getelementptr inbounds %struct.DState, %struct.DState* %4941, i32 0, i32 8
  %4943 = load i32, i32* %4942, align 4
  %4944 = add nsw i32 %4943, 8
  store i32 %4944, i32* %4942, align 4
  %4945 = load %struct.DState*, %struct.DState** %2, align 8
  %4946 = getelementptr inbounds %struct.DState, %struct.DState* %4945, i32 0, i32 0
  %4947 = load %struct.bz_stream*, %struct.bz_stream** %4946, align 8
  %4948 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4947, i32 0, i32 0
  %4949 = load i8*, i8** %4948, align 8
  %4950 = getelementptr inbounds i8, i8* %4949, i32 1
  store i8* %4950, i8** %4948, align 8
  %4951 = load %struct.DState*, %struct.DState** %2, align 8
  %4952 = getelementptr inbounds %struct.DState, %struct.DState* %4951, i32 0, i32 0
  %4953 = load %struct.bz_stream*, %struct.bz_stream** %4952, align 8
  %4954 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4953, i32 0, i32 1
  %4955 = load i32, i32* %4954, align 8
  %4956 = add i32 %4955, -1
  store i32 %4956, i32* %4954, align 8
  %4957 = load %struct.DState*, %struct.DState** %2, align 8
  %4958 = getelementptr inbounds %struct.DState, %struct.DState* %4957, i32 0, i32 0
  %4959 = load %struct.bz_stream*, %struct.bz_stream** %4958, align 8
  %4960 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4959, i32 0, i32 2
  %4961 = load i32, i32* %4960, align 4
  %4962 = add i32 %4961, 1
  store i32 %4962, i32* %4960, align 4
  %4963 = load %struct.DState*, %struct.DState** %2, align 8
  %4964 = getelementptr inbounds %struct.DState, %struct.DState* %4963, i32 0, i32 0
  %4965 = load %struct.bz_stream*, %struct.bz_stream** %4964, align 8
  %4966 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4965, i32 0, i32 2
  %4967 = load i32, i32* %4966, align 4
  %4968 = icmp eq i32 %4967, 0
  br i1 %4968, label %4969, label %4976

4969:                                             ; preds = %4926
  %4970 = load %struct.DState*, %struct.DState** %2, align 8
  %4971 = getelementptr inbounds %struct.DState, %struct.DState* %4970, i32 0, i32 0
  %4972 = load %struct.bz_stream*, %struct.bz_stream** %4971, align 8
  %4973 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4972, i32 0, i32 3
  %4974 = load i32, i32* %4973, align 8
  %4975 = add i32 %4974, 1
  store i32 %4975, i32* %4973, align 8
  br label %4976

4976:                                             ; preds = %4969, %4926
  br label %4897

4977:                                             ; preds = %4902
  %4978 = load i8, i8* %3, align 1
  %4979 = zext i8 %4978 to i32
  %4980 = icmp ne i32 %4979, 114
  br i1 %4980, label %4981, label %4982

4981:                                             ; preds = %4977
  store i32 -4, i32* %4, align 4
  br label %5717

4982:                                             ; preds = %4977
  br label %4983

4983:                                             ; preds = %144, %4982
  %4984 = load %struct.DState*, %struct.DState** %2, align 8
  %4985 = getelementptr inbounds %struct.DState, %struct.DState* %4984, i32 0, i32 1
  store i32 43, i32* %4985, align 8
  br label %4986

4986:                                             ; preds = %4983, %5065
  %4987 = load %struct.DState*, %struct.DState** %2, align 8
  %4988 = getelementptr inbounds %struct.DState, %struct.DState* %4987, i32 0, i32 8
  %4989 = load i32, i32* %4988, align 4
  %4990 = icmp sge i32 %4989, 8
  br i1 %4990, label %4991, label %5007

4991:                                             ; preds = %4986
  %4992 = load %struct.DState*, %struct.DState** %2, align 8
  %4993 = getelementptr inbounds %struct.DState, %struct.DState* %4992, i32 0, i32 7
  %4994 = load i32, i32* %4993, align 8
  %4995 = load %struct.DState*, %struct.DState** %2, align 8
  %4996 = getelementptr inbounds %struct.DState, %struct.DState* %4995, i32 0, i32 8
  %4997 = load i32, i32* %4996, align 4
  %4998 = sub nsw i32 %4997, 8
  %4999 = lshr i32 %4994, %4998
  %5000 = and i32 %4999, 255
  store i32 %5000, i32* %80, align 4
  %5001 = load %struct.DState*, %struct.DState** %2, align 8
  %5002 = getelementptr inbounds %struct.DState, %struct.DState* %5001, i32 0, i32 8
  %5003 = load i32, i32* %5002, align 4
  %5004 = sub nsw i32 %5003, 8
  store i32 %5004, i32* %5002, align 4
  %5005 = load i32, i32* %80, align 4
  %5006 = trunc i32 %5005 to i8
  store i8 %5006, i8* %3, align 1
  br label %5066

5007:                                             ; preds = %4986
  %5008 = load %struct.DState*, %struct.DState** %2, align 8
  %5009 = getelementptr inbounds %struct.DState, %struct.DState* %5008, i32 0, i32 0
  %5010 = load %struct.bz_stream*, %struct.bz_stream** %5009, align 8
  %5011 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5010, i32 0, i32 1
  %5012 = load i32, i32* %5011, align 8
  %5013 = icmp eq i32 %5012, 0
  br i1 %5013, label %5014, label %5015

5014:                                             ; preds = %5007
  store i32 0, i32* %4, align 4
  br label %5717

5015:                                             ; preds = %5007
  %5016 = load %struct.DState*, %struct.DState** %2, align 8
  %5017 = getelementptr inbounds %struct.DState, %struct.DState* %5016, i32 0, i32 7
  %5018 = load i32, i32* %5017, align 8
  %5019 = shl i32 %5018, 8
  %5020 = load %struct.DState*, %struct.DState** %2, align 8
  %5021 = getelementptr inbounds %struct.DState, %struct.DState* %5020, i32 0, i32 0
  %5022 = load %struct.bz_stream*, %struct.bz_stream** %5021, align 8
  %5023 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5022, i32 0, i32 0
  %5024 = load i8*, i8** %5023, align 8
  %5025 = load i8, i8* %5024, align 1
  %5026 = zext i8 %5025 to i32
  %5027 = or i32 %5019, %5026
  %5028 = load %struct.DState*, %struct.DState** %2, align 8
  %5029 = getelementptr inbounds %struct.DState, %struct.DState* %5028, i32 0, i32 7
  store i32 %5027, i32* %5029, align 8
  %5030 = load %struct.DState*, %struct.DState** %2, align 8
  %5031 = getelementptr inbounds %struct.DState, %struct.DState* %5030, i32 0, i32 8
  %5032 = load i32, i32* %5031, align 4
  %5033 = add nsw i32 %5032, 8
  store i32 %5033, i32* %5031, align 4
  %5034 = load %struct.DState*, %struct.DState** %2, align 8
  %5035 = getelementptr inbounds %struct.DState, %struct.DState* %5034, i32 0, i32 0
  %5036 = load %struct.bz_stream*, %struct.bz_stream** %5035, align 8
  %5037 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5036, i32 0, i32 0
  %5038 = load i8*, i8** %5037, align 8
  %5039 = getelementptr inbounds i8, i8* %5038, i32 1
  store i8* %5039, i8** %5037, align 8
  %5040 = load %struct.DState*, %struct.DState** %2, align 8
  %5041 = getelementptr inbounds %struct.DState, %struct.DState* %5040, i32 0, i32 0
  %5042 = load %struct.bz_stream*, %struct.bz_stream** %5041, align 8
  %5043 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5042, i32 0, i32 1
  %5044 = load i32, i32* %5043, align 8
  %5045 = add i32 %5044, -1
  store i32 %5045, i32* %5043, align 8
  %5046 = load %struct.DState*, %struct.DState** %2, align 8
  %5047 = getelementptr inbounds %struct.DState, %struct.DState* %5046, i32 0, i32 0
  %5048 = load %struct.bz_stream*, %struct.bz_stream** %5047, align 8
  %5049 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5048, i32 0, i32 2
  %5050 = load i32, i32* %5049, align 4
  %5051 = add i32 %5050, 1
  store i32 %5051, i32* %5049, align 4
  %5052 = load %struct.DState*, %struct.DState** %2, align 8
  %5053 = getelementptr inbounds %struct.DState, %struct.DState* %5052, i32 0, i32 0
  %5054 = load %struct.bz_stream*, %struct.bz_stream** %5053, align 8
  %5055 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5054, i32 0, i32 2
  %5056 = load i32, i32* %5055, align 4
  %5057 = icmp eq i32 %5056, 0
  br i1 %5057, label %5058, label %5065

5058:                                             ; preds = %5015
  %5059 = load %struct.DState*, %struct.DState** %2, align 8
  %5060 = getelementptr inbounds %struct.DState, %struct.DState* %5059, i32 0, i32 0
  %5061 = load %struct.bz_stream*, %struct.bz_stream** %5060, align 8
  %5062 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5061, i32 0, i32 3
  %5063 = load i32, i32* %5062, align 8
  %5064 = add i32 %5063, 1
  store i32 %5064, i32* %5062, align 8
  br label %5065

5065:                                             ; preds = %5058, %5015
  br label %4986

5066:                                             ; preds = %4991
  %5067 = load i8, i8* %3, align 1
  %5068 = zext i8 %5067 to i32
  %5069 = icmp ne i32 %5068, 69
  br i1 %5069, label %5070, label %5071

5070:                                             ; preds = %5066
  store i32 -4, i32* %4, align 4
  br label %5717

5071:                                             ; preds = %5066
  br label %5072

5072:                                             ; preds = %144, %5071
  %5073 = load %struct.DState*, %struct.DState** %2, align 8
  %5074 = getelementptr inbounds %struct.DState, %struct.DState* %5073, i32 0, i32 1
  store i32 44, i32* %5074, align 8
  br label %5075

5075:                                             ; preds = %5072, %5154
  %5076 = load %struct.DState*, %struct.DState** %2, align 8
  %5077 = getelementptr inbounds %struct.DState, %struct.DState* %5076, i32 0, i32 8
  %5078 = load i32, i32* %5077, align 4
  %5079 = icmp sge i32 %5078, 8
  br i1 %5079, label %5080, label %5096

5080:                                             ; preds = %5075
  %5081 = load %struct.DState*, %struct.DState** %2, align 8
  %5082 = getelementptr inbounds %struct.DState, %struct.DState* %5081, i32 0, i32 7
  %5083 = load i32, i32* %5082, align 8
  %5084 = load %struct.DState*, %struct.DState** %2, align 8
  %5085 = getelementptr inbounds %struct.DState, %struct.DState* %5084, i32 0, i32 8
  %5086 = load i32, i32* %5085, align 4
  %5087 = sub nsw i32 %5086, 8
  %5088 = lshr i32 %5083, %5087
  %5089 = and i32 %5088, 255
  store i32 %5089, i32* %81, align 4
  %5090 = load %struct.DState*, %struct.DState** %2, align 8
  %5091 = getelementptr inbounds %struct.DState, %struct.DState* %5090, i32 0, i32 8
  %5092 = load i32, i32* %5091, align 4
  %5093 = sub nsw i32 %5092, 8
  store i32 %5093, i32* %5091, align 4
  %5094 = load i32, i32* %81, align 4
  %5095 = trunc i32 %5094 to i8
  store i8 %5095, i8* %3, align 1
  br label %5155

5096:                                             ; preds = %5075
  %5097 = load %struct.DState*, %struct.DState** %2, align 8
  %5098 = getelementptr inbounds %struct.DState, %struct.DState* %5097, i32 0, i32 0
  %5099 = load %struct.bz_stream*, %struct.bz_stream** %5098, align 8
  %5100 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5099, i32 0, i32 1
  %5101 = load i32, i32* %5100, align 8
  %5102 = icmp eq i32 %5101, 0
  br i1 %5102, label %5103, label %5104

5103:                                             ; preds = %5096
  store i32 0, i32* %4, align 4
  br label %5717

5104:                                             ; preds = %5096
  %5105 = load %struct.DState*, %struct.DState** %2, align 8
  %5106 = getelementptr inbounds %struct.DState, %struct.DState* %5105, i32 0, i32 7
  %5107 = load i32, i32* %5106, align 8
  %5108 = shl i32 %5107, 8
  %5109 = load %struct.DState*, %struct.DState** %2, align 8
  %5110 = getelementptr inbounds %struct.DState, %struct.DState* %5109, i32 0, i32 0
  %5111 = load %struct.bz_stream*, %struct.bz_stream** %5110, align 8
  %5112 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5111, i32 0, i32 0
  %5113 = load i8*, i8** %5112, align 8
  %5114 = load i8, i8* %5113, align 1
  %5115 = zext i8 %5114 to i32
  %5116 = or i32 %5108, %5115
  %5117 = load %struct.DState*, %struct.DState** %2, align 8
  %5118 = getelementptr inbounds %struct.DState, %struct.DState* %5117, i32 0, i32 7
  store i32 %5116, i32* %5118, align 8
  %5119 = load %struct.DState*, %struct.DState** %2, align 8
  %5120 = getelementptr inbounds %struct.DState, %struct.DState* %5119, i32 0, i32 8
  %5121 = load i32, i32* %5120, align 4
  %5122 = add nsw i32 %5121, 8
  store i32 %5122, i32* %5120, align 4
  %5123 = load %struct.DState*, %struct.DState** %2, align 8
  %5124 = getelementptr inbounds %struct.DState, %struct.DState* %5123, i32 0, i32 0
  %5125 = load %struct.bz_stream*, %struct.bz_stream** %5124, align 8
  %5126 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5125, i32 0, i32 0
  %5127 = load i8*, i8** %5126, align 8
  %5128 = getelementptr inbounds i8, i8* %5127, i32 1
  store i8* %5128, i8** %5126, align 8
  %5129 = load %struct.DState*, %struct.DState** %2, align 8
  %5130 = getelementptr inbounds %struct.DState, %struct.DState* %5129, i32 0, i32 0
  %5131 = load %struct.bz_stream*, %struct.bz_stream** %5130, align 8
  %5132 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5131, i32 0, i32 1
  %5133 = load i32, i32* %5132, align 8
  %5134 = add i32 %5133, -1
  store i32 %5134, i32* %5132, align 8
  %5135 = load %struct.DState*, %struct.DState** %2, align 8
  %5136 = getelementptr inbounds %struct.DState, %struct.DState* %5135, i32 0, i32 0
  %5137 = load %struct.bz_stream*, %struct.bz_stream** %5136, align 8
  %5138 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5137, i32 0, i32 2
  %5139 = load i32, i32* %5138, align 4
  %5140 = add i32 %5139, 1
  store i32 %5140, i32* %5138, align 4
  %5141 = load %struct.DState*, %struct.DState** %2, align 8
  %5142 = getelementptr inbounds %struct.DState, %struct.DState* %5141, i32 0, i32 0
  %5143 = load %struct.bz_stream*, %struct.bz_stream** %5142, align 8
  %5144 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5143, i32 0, i32 2
  %5145 = load i32, i32* %5144, align 4
  %5146 = icmp eq i32 %5145, 0
  br i1 %5146, label %5147, label %5154

5147:                                             ; preds = %5104
  %5148 = load %struct.DState*, %struct.DState** %2, align 8
  %5149 = getelementptr inbounds %struct.DState, %struct.DState* %5148, i32 0, i32 0
  %5150 = load %struct.bz_stream*, %struct.bz_stream** %5149, align 8
  %5151 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5150, i32 0, i32 3
  %5152 = load i32, i32* %5151, align 8
  %5153 = add i32 %5152, 1
  store i32 %5153, i32* %5151, align 8
  br label %5154

5154:                                             ; preds = %5147, %5104
  br label %5075

5155:                                             ; preds = %5080
  %5156 = load i8, i8* %3, align 1
  %5157 = zext i8 %5156 to i32
  %5158 = icmp ne i32 %5157, 56
  br i1 %5158, label %5159, label %5160

5159:                                             ; preds = %5155
  store i32 -4, i32* %4, align 4
  br label %5717

5160:                                             ; preds = %5155
  br label %5161

5161:                                             ; preds = %144, %5160
  %5162 = load %struct.DState*, %struct.DState** %2, align 8
  %5163 = getelementptr inbounds %struct.DState, %struct.DState* %5162, i32 0, i32 1
  store i32 45, i32* %5163, align 8
  br label %5164

5164:                                             ; preds = %5161, %5243
  %5165 = load %struct.DState*, %struct.DState** %2, align 8
  %5166 = getelementptr inbounds %struct.DState, %struct.DState* %5165, i32 0, i32 8
  %5167 = load i32, i32* %5166, align 4
  %5168 = icmp sge i32 %5167, 8
  br i1 %5168, label %5169, label %5185

5169:                                             ; preds = %5164
  %5170 = load %struct.DState*, %struct.DState** %2, align 8
  %5171 = getelementptr inbounds %struct.DState, %struct.DState* %5170, i32 0, i32 7
  %5172 = load i32, i32* %5171, align 8
  %5173 = load %struct.DState*, %struct.DState** %2, align 8
  %5174 = getelementptr inbounds %struct.DState, %struct.DState* %5173, i32 0, i32 8
  %5175 = load i32, i32* %5174, align 4
  %5176 = sub nsw i32 %5175, 8
  %5177 = lshr i32 %5172, %5176
  %5178 = and i32 %5177, 255
  store i32 %5178, i32* %82, align 4
  %5179 = load %struct.DState*, %struct.DState** %2, align 8
  %5180 = getelementptr inbounds %struct.DState, %struct.DState* %5179, i32 0, i32 8
  %5181 = load i32, i32* %5180, align 4
  %5182 = sub nsw i32 %5181, 8
  store i32 %5182, i32* %5180, align 4
  %5183 = load i32, i32* %82, align 4
  %5184 = trunc i32 %5183 to i8
  store i8 %5184, i8* %3, align 1
  br label %5244

5185:                                             ; preds = %5164
  %5186 = load %struct.DState*, %struct.DState** %2, align 8
  %5187 = getelementptr inbounds %struct.DState, %struct.DState* %5186, i32 0, i32 0
  %5188 = load %struct.bz_stream*, %struct.bz_stream** %5187, align 8
  %5189 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5188, i32 0, i32 1
  %5190 = load i32, i32* %5189, align 8
  %5191 = icmp eq i32 %5190, 0
  br i1 %5191, label %5192, label %5193

5192:                                             ; preds = %5185
  store i32 0, i32* %4, align 4
  br label %5717

5193:                                             ; preds = %5185
  %5194 = load %struct.DState*, %struct.DState** %2, align 8
  %5195 = getelementptr inbounds %struct.DState, %struct.DState* %5194, i32 0, i32 7
  %5196 = load i32, i32* %5195, align 8
  %5197 = shl i32 %5196, 8
  %5198 = load %struct.DState*, %struct.DState** %2, align 8
  %5199 = getelementptr inbounds %struct.DState, %struct.DState* %5198, i32 0, i32 0
  %5200 = load %struct.bz_stream*, %struct.bz_stream** %5199, align 8
  %5201 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5200, i32 0, i32 0
  %5202 = load i8*, i8** %5201, align 8
  %5203 = load i8, i8* %5202, align 1
  %5204 = zext i8 %5203 to i32
  %5205 = or i32 %5197, %5204
  %5206 = load %struct.DState*, %struct.DState** %2, align 8
  %5207 = getelementptr inbounds %struct.DState, %struct.DState* %5206, i32 0, i32 7
  store i32 %5205, i32* %5207, align 8
  %5208 = load %struct.DState*, %struct.DState** %2, align 8
  %5209 = getelementptr inbounds %struct.DState, %struct.DState* %5208, i32 0, i32 8
  %5210 = load i32, i32* %5209, align 4
  %5211 = add nsw i32 %5210, 8
  store i32 %5211, i32* %5209, align 4
  %5212 = load %struct.DState*, %struct.DState** %2, align 8
  %5213 = getelementptr inbounds %struct.DState, %struct.DState* %5212, i32 0, i32 0
  %5214 = load %struct.bz_stream*, %struct.bz_stream** %5213, align 8
  %5215 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5214, i32 0, i32 0
  %5216 = load i8*, i8** %5215, align 8
  %5217 = getelementptr inbounds i8, i8* %5216, i32 1
  store i8* %5217, i8** %5215, align 8
  %5218 = load %struct.DState*, %struct.DState** %2, align 8
  %5219 = getelementptr inbounds %struct.DState, %struct.DState* %5218, i32 0, i32 0
  %5220 = load %struct.bz_stream*, %struct.bz_stream** %5219, align 8
  %5221 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5220, i32 0, i32 1
  %5222 = load i32, i32* %5221, align 8
  %5223 = add i32 %5222, -1
  store i32 %5223, i32* %5221, align 8
  %5224 = load %struct.DState*, %struct.DState** %2, align 8
  %5225 = getelementptr inbounds %struct.DState, %struct.DState* %5224, i32 0, i32 0
  %5226 = load %struct.bz_stream*, %struct.bz_stream** %5225, align 8
  %5227 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5226, i32 0, i32 2
  %5228 = load i32, i32* %5227, align 4
  %5229 = add i32 %5228, 1
  store i32 %5229, i32* %5227, align 4
  %5230 = load %struct.DState*, %struct.DState** %2, align 8
  %5231 = getelementptr inbounds %struct.DState, %struct.DState* %5230, i32 0, i32 0
  %5232 = load %struct.bz_stream*, %struct.bz_stream** %5231, align 8
  %5233 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5232, i32 0, i32 2
  %5234 = load i32, i32* %5233, align 4
  %5235 = icmp eq i32 %5234, 0
  br i1 %5235, label %5236, label %5243

5236:                                             ; preds = %5193
  %5237 = load %struct.DState*, %struct.DState** %2, align 8
  %5238 = getelementptr inbounds %struct.DState, %struct.DState* %5237, i32 0, i32 0
  %5239 = load %struct.bz_stream*, %struct.bz_stream** %5238, align 8
  %5240 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5239, i32 0, i32 3
  %5241 = load i32, i32* %5240, align 8
  %5242 = add i32 %5241, 1
  store i32 %5242, i32* %5240, align 8
  br label %5243

5243:                                             ; preds = %5236, %5193
  br label %5164

5244:                                             ; preds = %5169
  %5245 = load i8, i8* %3, align 1
  %5246 = zext i8 %5245 to i32
  %5247 = icmp ne i32 %5246, 80
  br i1 %5247, label %5248, label %5249

5248:                                             ; preds = %5244
  store i32 -4, i32* %4, align 4
  br label %5717

5249:                                             ; preds = %5244
  br label %5250

5250:                                             ; preds = %144, %5249
  %5251 = load %struct.DState*, %struct.DState** %2, align 8
  %5252 = getelementptr inbounds %struct.DState, %struct.DState* %5251, i32 0, i32 1
  store i32 46, i32* %5252, align 8
  br label %5253

5253:                                             ; preds = %5250, %5332
  %5254 = load %struct.DState*, %struct.DState** %2, align 8
  %5255 = getelementptr inbounds %struct.DState, %struct.DState* %5254, i32 0, i32 8
  %5256 = load i32, i32* %5255, align 4
  %5257 = icmp sge i32 %5256, 8
  br i1 %5257, label %5258, label %5274

5258:                                             ; preds = %5253
  %5259 = load %struct.DState*, %struct.DState** %2, align 8
  %5260 = getelementptr inbounds %struct.DState, %struct.DState* %5259, i32 0, i32 7
  %5261 = load i32, i32* %5260, align 8
  %5262 = load %struct.DState*, %struct.DState** %2, align 8
  %5263 = getelementptr inbounds %struct.DState, %struct.DState* %5262, i32 0, i32 8
  %5264 = load i32, i32* %5263, align 4
  %5265 = sub nsw i32 %5264, 8
  %5266 = lshr i32 %5261, %5265
  %5267 = and i32 %5266, 255
  store i32 %5267, i32* %83, align 4
  %5268 = load %struct.DState*, %struct.DState** %2, align 8
  %5269 = getelementptr inbounds %struct.DState, %struct.DState* %5268, i32 0, i32 8
  %5270 = load i32, i32* %5269, align 4
  %5271 = sub nsw i32 %5270, 8
  store i32 %5271, i32* %5269, align 4
  %5272 = load i32, i32* %83, align 4
  %5273 = trunc i32 %5272 to i8
  store i8 %5273, i8* %3, align 1
  br label %5333

5274:                                             ; preds = %5253
  %5275 = load %struct.DState*, %struct.DState** %2, align 8
  %5276 = getelementptr inbounds %struct.DState, %struct.DState* %5275, i32 0, i32 0
  %5277 = load %struct.bz_stream*, %struct.bz_stream** %5276, align 8
  %5278 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5277, i32 0, i32 1
  %5279 = load i32, i32* %5278, align 8
  %5280 = icmp eq i32 %5279, 0
  br i1 %5280, label %5281, label %5282

5281:                                             ; preds = %5274
  store i32 0, i32* %4, align 4
  br label %5717

5282:                                             ; preds = %5274
  %5283 = load %struct.DState*, %struct.DState** %2, align 8
  %5284 = getelementptr inbounds %struct.DState, %struct.DState* %5283, i32 0, i32 7
  %5285 = load i32, i32* %5284, align 8
  %5286 = shl i32 %5285, 8
  %5287 = load %struct.DState*, %struct.DState** %2, align 8
  %5288 = getelementptr inbounds %struct.DState, %struct.DState* %5287, i32 0, i32 0
  %5289 = load %struct.bz_stream*, %struct.bz_stream** %5288, align 8
  %5290 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5289, i32 0, i32 0
  %5291 = load i8*, i8** %5290, align 8
  %5292 = load i8, i8* %5291, align 1
  %5293 = zext i8 %5292 to i32
  %5294 = or i32 %5286, %5293
  %5295 = load %struct.DState*, %struct.DState** %2, align 8
  %5296 = getelementptr inbounds %struct.DState, %struct.DState* %5295, i32 0, i32 7
  store i32 %5294, i32* %5296, align 8
  %5297 = load %struct.DState*, %struct.DState** %2, align 8
  %5298 = getelementptr inbounds %struct.DState, %struct.DState* %5297, i32 0, i32 8
  %5299 = load i32, i32* %5298, align 4
  %5300 = add nsw i32 %5299, 8
  store i32 %5300, i32* %5298, align 4
  %5301 = load %struct.DState*, %struct.DState** %2, align 8
  %5302 = getelementptr inbounds %struct.DState, %struct.DState* %5301, i32 0, i32 0
  %5303 = load %struct.bz_stream*, %struct.bz_stream** %5302, align 8
  %5304 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5303, i32 0, i32 0
  %5305 = load i8*, i8** %5304, align 8
  %5306 = getelementptr inbounds i8, i8* %5305, i32 1
  store i8* %5306, i8** %5304, align 8
  %5307 = load %struct.DState*, %struct.DState** %2, align 8
  %5308 = getelementptr inbounds %struct.DState, %struct.DState* %5307, i32 0, i32 0
  %5309 = load %struct.bz_stream*, %struct.bz_stream** %5308, align 8
  %5310 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5309, i32 0, i32 1
  %5311 = load i32, i32* %5310, align 8
  %5312 = add i32 %5311, -1
  store i32 %5312, i32* %5310, align 8
  %5313 = load %struct.DState*, %struct.DState** %2, align 8
  %5314 = getelementptr inbounds %struct.DState, %struct.DState* %5313, i32 0, i32 0
  %5315 = load %struct.bz_stream*, %struct.bz_stream** %5314, align 8
  %5316 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5315, i32 0, i32 2
  %5317 = load i32, i32* %5316, align 4
  %5318 = add i32 %5317, 1
  store i32 %5318, i32* %5316, align 4
  %5319 = load %struct.DState*, %struct.DState** %2, align 8
  %5320 = getelementptr inbounds %struct.DState, %struct.DState* %5319, i32 0, i32 0
  %5321 = load %struct.bz_stream*, %struct.bz_stream** %5320, align 8
  %5322 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5321, i32 0, i32 2
  %5323 = load i32, i32* %5322, align 4
  %5324 = icmp eq i32 %5323, 0
  br i1 %5324, label %5325, label %5332

5325:                                             ; preds = %5282
  %5326 = load %struct.DState*, %struct.DState** %2, align 8
  %5327 = getelementptr inbounds %struct.DState, %struct.DState* %5326, i32 0, i32 0
  %5328 = load %struct.bz_stream*, %struct.bz_stream** %5327, align 8
  %5329 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5328, i32 0, i32 3
  %5330 = load i32, i32* %5329, align 8
  %5331 = add i32 %5330, 1
  store i32 %5331, i32* %5329, align 8
  br label %5332

5332:                                             ; preds = %5325, %5282
  br label %5253

5333:                                             ; preds = %5258
  %5334 = load i8, i8* %3, align 1
  %5335 = zext i8 %5334 to i32
  %5336 = icmp ne i32 %5335, 144
  br i1 %5336, label %5337, label %5338

5337:                                             ; preds = %5333
  store i32 -4, i32* %4, align 4
  br label %5717

5338:                                             ; preds = %5333
  %5339 = load %struct.DState*, %struct.DState** %2, align 8
  %5340 = getelementptr inbounds %struct.DState, %struct.DState* %5339, i32 0, i32 24
  store i32 0, i32* %5340, align 4
  br label %5341

5341:                                             ; preds = %144, %5338
  %5342 = load %struct.DState*, %struct.DState** %2, align 8
  %5343 = getelementptr inbounds %struct.DState, %struct.DState* %5342, i32 0, i32 1
  store i32 47, i32* %5343, align 8
  br label %5344

5344:                                             ; preds = %5341, %5423
  %5345 = load %struct.DState*, %struct.DState** %2, align 8
  %5346 = getelementptr inbounds %struct.DState, %struct.DState* %5345, i32 0, i32 8
  %5347 = load i32, i32* %5346, align 4
  %5348 = icmp sge i32 %5347, 8
  br i1 %5348, label %5349, label %5365

5349:                                             ; preds = %5344
  %5350 = load %struct.DState*, %struct.DState** %2, align 8
  %5351 = getelementptr inbounds %struct.DState, %struct.DState* %5350, i32 0, i32 7
  %5352 = load i32, i32* %5351, align 8
  %5353 = load %struct.DState*, %struct.DState** %2, align 8
  %5354 = getelementptr inbounds %struct.DState, %struct.DState* %5353, i32 0, i32 8
  %5355 = load i32, i32* %5354, align 4
  %5356 = sub nsw i32 %5355, 8
  %5357 = lshr i32 %5352, %5356
  %5358 = and i32 %5357, 255
  store i32 %5358, i32* %84, align 4
  %5359 = load %struct.DState*, %struct.DState** %2, align 8
  %5360 = getelementptr inbounds %struct.DState, %struct.DState* %5359, i32 0, i32 8
  %5361 = load i32, i32* %5360, align 4
  %5362 = sub nsw i32 %5361, 8
  store i32 %5362, i32* %5360, align 4
  %5363 = load i32, i32* %84, align 4
  %5364 = trunc i32 %5363 to i8
  store i8 %5364, i8* %3, align 1
  br label %5424

5365:                                             ; preds = %5344
  %5366 = load %struct.DState*, %struct.DState** %2, align 8
  %5367 = getelementptr inbounds %struct.DState, %struct.DState* %5366, i32 0, i32 0
  %5368 = load %struct.bz_stream*, %struct.bz_stream** %5367, align 8
  %5369 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5368, i32 0, i32 1
  %5370 = load i32, i32* %5369, align 8
  %5371 = icmp eq i32 %5370, 0
  br i1 %5371, label %5372, label %5373

5372:                                             ; preds = %5365
  store i32 0, i32* %4, align 4
  br label %5717

5373:                                             ; preds = %5365
  %5374 = load %struct.DState*, %struct.DState** %2, align 8
  %5375 = getelementptr inbounds %struct.DState, %struct.DState* %5374, i32 0, i32 7
  %5376 = load i32, i32* %5375, align 8
  %5377 = shl i32 %5376, 8
  %5378 = load %struct.DState*, %struct.DState** %2, align 8
  %5379 = getelementptr inbounds %struct.DState, %struct.DState* %5378, i32 0, i32 0
  %5380 = load %struct.bz_stream*, %struct.bz_stream** %5379, align 8
  %5381 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5380, i32 0, i32 0
  %5382 = load i8*, i8** %5381, align 8
  %5383 = load i8, i8* %5382, align 1
  %5384 = zext i8 %5383 to i32
  %5385 = or i32 %5377, %5384
  %5386 = load %struct.DState*, %struct.DState** %2, align 8
  %5387 = getelementptr inbounds %struct.DState, %struct.DState* %5386, i32 0, i32 7
  store i32 %5385, i32* %5387, align 8
  %5388 = load %struct.DState*, %struct.DState** %2, align 8
  %5389 = getelementptr inbounds %struct.DState, %struct.DState* %5388, i32 0, i32 8
  %5390 = load i32, i32* %5389, align 4
  %5391 = add nsw i32 %5390, 8
  store i32 %5391, i32* %5389, align 4
  %5392 = load %struct.DState*, %struct.DState** %2, align 8
  %5393 = getelementptr inbounds %struct.DState, %struct.DState* %5392, i32 0, i32 0
  %5394 = load %struct.bz_stream*, %struct.bz_stream** %5393, align 8
  %5395 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5394, i32 0, i32 0
  %5396 = load i8*, i8** %5395, align 8
  %5397 = getelementptr inbounds i8, i8* %5396, i32 1
  store i8* %5397, i8** %5395, align 8
  %5398 = load %struct.DState*, %struct.DState** %2, align 8
  %5399 = getelementptr inbounds %struct.DState, %struct.DState* %5398, i32 0, i32 0
  %5400 = load %struct.bz_stream*, %struct.bz_stream** %5399, align 8
  %5401 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5400, i32 0, i32 1
  %5402 = load i32, i32* %5401, align 8
  %5403 = add i32 %5402, -1
  store i32 %5403, i32* %5401, align 8
  %5404 = load %struct.DState*, %struct.DState** %2, align 8
  %5405 = getelementptr inbounds %struct.DState, %struct.DState* %5404, i32 0, i32 0
  %5406 = load %struct.bz_stream*, %struct.bz_stream** %5405, align 8
  %5407 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5406, i32 0, i32 2
  %5408 = load i32, i32* %5407, align 4
  %5409 = add i32 %5408, 1
  store i32 %5409, i32* %5407, align 4
  %5410 = load %struct.DState*, %struct.DState** %2, align 8
  %5411 = getelementptr inbounds %struct.DState, %struct.DState* %5410, i32 0, i32 0
  %5412 = load %struct.bz_stream*, %struct.bz_stream** %5411, align 8
  %5413 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5412, i32 0, i32 2
  %5414 = load i32, i32* %5413, align 4
  %5415 = icmp eq i32 %5414, 0
  br i1 %5415, label %5416, label %5423

5416:                                             ; preds = %5373
  %5417 = load %struct.DState*, %struct.DState** %2, align 8
  %5418 = getelementptr inbounds %struct.DState, %struct.DState* %5417, i32 0, i32 0
  %5419 = load %struct.bz_stream*, %struct.bz_stream** %5418, align 8
  %5420 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5419, i32 0, i32 3
  %5421 = load i32, i32* %5420, align 8
  %5422 = add i32 %5421, 1
  store i32 %5422, i32* %5420, align 8
  br label %5423

5423:                                             ; preds = %5416, %5373
  br label %5344

5424:                                             ; preds = %5349
  %5425 = load %struct.DState*, %struct.DState** %2, align 8
  %5426 = getelementptr inbounds %struct.DState, %struct.DState* %5425, i32 0, i32 24
  %5427 = load i32, i32* %5426, align 4
  %5428 = shl i32 %5427, 8
  %5429 = load i8, i8* %3, align 1
  %5430 = zext i8 %5429 to i32
  %5431 = or i32 %5428, %5430
  %5432 = load %struct.DState*, %struct.DState** %2, align 8
  %5433 = getelementptr inbounds %struct.DState, %struct.DState* %5432, i32 0, i32 24
  store i32 %5431, i32* %5433, align 4
  br label %5434

5434:                                             ; preds = %144, %5424
  %5435 = load %struct.DState*, %struct.DState** %2, align 8
  %5436 = getelementptr inbounds %struct.DState, %struct.DState* %5435, i32 0, i32 1
  store i32 48, i32* %5436, align 8
  br label %5437

5437:                                             ; preds = %5434, %5516
  %5438 = load %struct.DState*, %struct.DState** %2, align 8
  %5439 = getelementptr inbounds %struct.DState, %struct.DState* %5438, i32 0, i32 8
  %5440 = load i32, i32* %5439, align 4
  %5441 = icmp sge i32 %5440, 8
  br i1 %5441, label %5442, label %5458

5442:                                             ; preds = %5437
  %5443 = load %struct.DState*, %struct.DState** %2, align 8
  %5444 = getelementptr inbounds %struct.DState, %struct.DState* %5443, i32 0, i32 7
  %5445 = load i32, i32* %5444, align 8
  %5446 = load %struct.DState*, %struct.DState** %2, align 8
  %5447 = getelementptr inbounds %struct.DState, %struct.DState* %5446, i32 0, i32 8
  %5448 = load i32, i32* %5447, align 4
  %5449 = sub nsw i32 %5448, 8
  %5450 = lshr i32 %5445, %5449
  %5451 = and i32 %5450, 255
  store i32 %5451, i32* %85, align 4
  %5452 = load %struct.DState*, %struct.DState** %2, align 8
  %5453 = getelementptr inbounds %struct.DState, %struct.DState* %5452, i32 0, i32 8
  %5454 = load i32, i32* %5453, align 4
  %5455 = sub nsw i32 %5454, 8
  store i32 %5455, i32* %5453, align 4
  %5456 = load i32, i32* %85, align 4
  %5457 = trunc i32 %5456 to i8
  store i8 %5457, i8* %3, align 1
  br label %5517

5458:                                             ; preds = %5437
  %5459 = load %struct.DState*, %struct.DState** %2, align 8
  %5460 = getelementptr inbounds %struct.DState, %struct.DState* %5459, i32 0, i32 0
  %5461 = load %struct.bz_stream*, %struct.bz_stream** %5460, align 8
  %5462 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5461, i32 0, i32 1
  %5463 = load i32, i32* %5462, align 8
  %5464 = icmp eq i32 %5463, 0
  br i1 %5464, label %5465, label %5466

5465:                                             ; preds = %5458
  store i32 0, i32* %4, align 4
  br label %5717

5466:                                             ; preds = %5458
  %5467 = load %struct.DState*, %struct.DState** %2, align 8
  %5468 = getelementptr inbounds %struct.DState, %struct.DState* %5467, i32 0, i32 7
  %5469 = load i32, i32* %5468, align 8
  %5470 = shl i32 %5469, 8
  %5471 = load %struct.DState*, %struct.DState** %2, align 8
  %5472 = getelementptr inbounds %struct.DState, %struct.DState* %5471, i32 0, i32 0
  %5473 = load %struct.bz_stream*, %struct.bz_stream** %5472, align 8
  %5474 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5473, i32 0, i32 0
  %5475 = load i8*, i8** %5474, align 8
  %5476 = load i8, i8* %5475, align 1
  %5477 = zext i8 %5476 to i32
  %5478 = or i32 %5470, %5477
  %5479 = load %struct.DState*, %struct.DState** %2, align 8
  %5480 = getelementptr inbounds %struct.DState, %struct.DState* %5479, i32 0, i32 7
  store i32 %5478, i32* %5480, align 8
  %5481 = load %struct.DState*, %struct.DState** %2, align 8
  %5482 = getelementptr inbounds %struct.DState, %struct.DState* %5481, i32 0, i32 8
  %5483 = load i32, i32* %5482, align 4
  %5484 = add nsw i32 %5483, 8
  store i32 %5484, i32* %5482, align 4
  %5485 = load %struct.DState*, %struct.DState** %2, align 8
  %5486 = getelementptr inbounds %struct.DState, %struct.DState* %5485, i32 0, i32 0
  %5487 = load %struct.bz_stream*, %struct.bz_stream** %5486, align 8
  %5488 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5487, i32 0, i32 0
  %5489 = load i8*, i8** %5488, align 8
  %5490 = getelementptr inbounds i8, i8* %5489, i32 1
  store i8* %5490, i8** %5488, align 8
  %5491 = load %struct.DState*, %struct.DState** %2, align 8
  %5492 = getelementptr inbounds %struct.DState, %struct.DState* %5491, i32 0, i32 0
  %5493 = load %struct.bz_stream*, %struct.bz_stream** %5492, align 8
  %5494 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5493, i32 0, i32 1
  %5495 = load i32, i32* %5494, align 8
  %5496 = add i32 %5495, -1
  store i32 %5496, i32* %5494, align 8
  %5497 = load %struct.DState*, %struct.DState** %2, align 8
  %5498 = getelementptr inbounds %struct.DState, %struct.DState* %5497, i32 0, i32 0
  %5499 = load %struct.bz_stream*, %struct.bz_stream** %5498, align 8
  %5500 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5499, i32 0, i32 2
  %5501 = load i32, i32* %5500, align 4
  %5502 = add i32 %5501, 1
  store i32 %5502, i32* %5500, align 4
  %5503 = load %struct.DState*, %struct.DState** %2, align 8
  %5504 = getelementptr inbounds %struct.DState, %struct.DState* %5503, i32 0, i32 0
  %5505 = load %struct.bz_stream*, %struct.bz_stream** %5504, align 8
  %5506 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5505, i32 0, i32 2
  %5507 = load i32, i32* %5506, align 4
  %5508 = icmp eq i32 %5507, 0
  br i1 %5508, label %5509, label %5516

5509:                                             ; preds = %5466
  %5510 = load %struct.DState*, %struct.DState** %2, align 8
  %5511 = getelementptr inbounds %struct.DState, %struct.DState* %5510, i32 0, i32 0
  %5512 = load %struct.bz_stream*, %struct.bz_stream** %5511, align 8
  %5513 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5512, i32 0, i32 3
  %5514 = load i32, i32* %5513, align 8
  %5515 = add i32 %5514, 1
  store i32 %5515, i32* %5513, align 8
  br label %5516

5516:                                             ; preds = %5509, %5466
  br label %5437

5517:                                             ; preds = %5442
  %5518 = load %struct.DState*, %struct.DState** %2, align 8
  %5519 = getelementptr inbounds %struct.DState, %struct.DState* %5518, i32 0, i32 24
  %5520 = load i32, i32* %5519, align 4
  %5521 = shl i32 %5520, 8
  %5522 = load i8, i8* %3, align 1
  %5523 = zext i8 %5522 to i32
  %5524 = or i32 %5521, %5523
  %5525 = load %struct.DState*, %struct.DState** %2, align 8
  %5526 = getelementptr inbounds %struct.DState, %struct.DState* %5525, i32 0, i32 24
  store i32 %5524, i32* %5526, align 4
  br label %5527

5527:                                             ; preds = %144, %5517
  %5528 = load %struct.DState*, %struct.DState** %2, align 8
  %5529 = getelementptr inbounds %struct.DState, %struct.DState* %5528, i32 0, i32 1
  store i32 49, i32* %5529, align 8
  br label %5530

5530:                                             ; preds = %5527, %5609
  %5531 = load %struct.DState*, %struct.DState** %2, align 8
  %5532 = getelementptr inbounds %struct.DState, %struct.DState* %5531, i32 0, i32 8
  %5533 = load i32, i32* %5532, align 4
  %5534 = icmp sge i32 %5533, 8
  br i1 %5534, label %5535, label %5551

5535:                                             ; preds = %5530
  %5536 = load %struct.DState*, %struct.DState** %2, align 8
  %5537 = getelementptr inbounds %struct.DState, %struct.DState* %5536, i32 0, i32 7
  %5538 = load i32, i32* %5537, align 8
  %5539 = load %struct.DState*, %struct.DState** %2, align 8
  %5540 = getelementptr inbounds %struct.DState, %struct.DState* %5539, i32 0, i32 8
  %5541 = load i32, i32* %5540, align 4
  %5542 = sub nsw i32 %5541, 8
  %5543 = lshr i32 %5538, %5542
  %5544 = and i32 %5543, 255
  store i32 %5544, i32* %86, align 4
  %5545 = load %struct.DState*, %struct.DState** %2, align 8
  %5546 = getelementptr inbounds %struct.DState, %struct.DState* %5545, i32 0, i32 8
  %5547 = load i32, i32* %5546, align 4
  %5548 = sub nsw i32 %5547, 8
  store i32 %5548, i32* %5546, align 4
  %5549 = load i32, i32* %86, align 4
  %5550 = trunc i32 %5549 to i8
  store i8 %5550, i8* %3, align 1
  br label %5610

5551:                                             ; preds = %5530
  %5552 = load %struct.DState*, %struct.DState** %2, align 8
  %5553 = getelementptr inbounds %struct.DState, %struct.DState* %5552, i32 0, i32 0
  %5554 = load %struct.bz_stream*, %struct.bz_stream** %5553, align 8
  %5555 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5554, i32 0, i32 1
  %5556 = load i32, i32* %5555, align 8
  %5557 = icmp eq i32 %5556, 0
  br i1 %5557, label %5558, label %5559

5558:                                             ; preds = %5551
  store i32 0, i32* %4, align 4
  br label %5717

5559:                                             ; preds = %5551
  %5560 = load %struct.DState*, %struct.DState** %2, align 8
  %5561 = getelementptr inbounds %struct.DState, %struct.DState* %5560, i32 0, i32 7
  %5562 = load i32, i32* %5561, align 8
  %5563 = shl i32 %5562, 8
  %5564 = load %struct.DState*, %struct.DState** %2, align 8
  %5565 = getelementptr inbounds %struct.DState, %struct.DState* %5564, i32 0, i32 0
  %5566 = load %struct.bz_stream*, %struct.bz_stream** %5565, align 8
  %5567 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5566, i32 0, i32 0
  %5568 = load i8*, i8** %5567, align 8
  %5569 = load i8, i8* %5568, align 1
  %5570 = zext i8 %5569 to i32
  %5571 = or i32 %5563, %5570
  %5572 = load %struct.DState*, %struct.DState** %2, align 8
  %5573 = getelementptr inbounds %struct.DState, %struct.DState* %5572, i32 0, i32 7
  store i32 %5571, i32* %5573, align 8
  %5574 = load %struct.DState*, %struct.DState** %2, align 8
  %5575 = getelementptr inbounds %struct.DState, %struct.DState* %5574, i32 0, i32 8
  %5576 = load i32, i32* %5575, align 4
  %5577 = add nsw i32 %5576, 8
  store i32 %5577, i32* %5575, align 4
  %5578 = load %struct.DState*, %struct.DState** %2, align 8
  %5579 = getelementptr inbounds %struct.DState, %struct.DState* %5578, i32 0, i32 0
  %5580 = load %struct.bz_stream*, %struct.bz_stream** %5579, align 8
  %5581 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5580, i32 0, i32 0
  %5582 = load i8*, i8** %5581, align 8
  %5583 = getelementptr inbounds i8, i8* %5582, i32 1
  store i8* %5583, i8** %5581, align 8
  %5584 = load %struct.DState*, %struct.DState** %2, align 8
  %5585 = getelementptr inbounds %struct.DState, %struct.DState* %5584, i32 0, i32 0
  %5586 = load %struct.bz_stream*, %struct.bz_stream** %5585, align 8
  %5587 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5586, i32 0, i32 1
  %5588 = load i32, i32* %5587, align 8
  %5589 = add i32 %5588, -1
  store i32 %5589, i32* %5587, align 8
  %5590 = load %struct.DState*, %struct.DState** %2, align 8
  %5591 = getelementptr inbounds %struct.DState, %struct.DState* %5590, i32 0, i32 0
  %5592 = load %struct.bz_stream*, %struct.bz_stream** %5591, align 8
  %5593 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5592, i32 0, i32 2
  %5594 = load i32, i32* %5593, align 4
  %5595 = add i32 %5594, 1
  store i32 %5595, i32* %5593, align 4
  %5596 = load %struct.DState*, %struct.DState** %2, align 8
  %5597 = getelementptr inbounds %struct.DState, %struct.DState* %5596, i32 0, i32 0
  %5598 = load %struct.bz_stream*, %struct.bz_stream** %5597, align 8
  %5599 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5598, i32 0, i32 2
  %5600 = load i32, i32* %5599, align 4
  %5601 = icmp eq i32 %5600, 0
  br i1 %5601, label %5602, label %5609

5602:                                             ; preds = %5559
  %5603 = load %struct.DState*, %struct.DState** %2, align 8
  %5604 = getelementptr inbounds %struct.DState, %struct.DState* %5603, i32 0, i32 0
  %5605 = load %struct.bz_stream*, %struct.bz_stream** %5604, align 8
  %5606 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5605, i32 0, i32 3
  %5607 = load i32, i32* %5606, align 8
  %5608 = add i32 %5607, 1
  store i32 %5608, i32* %5606, align 8
  br label %5609

5609:                                             ; preds = %5602, %5559
  br label %5530

5610:                                             ; preds = %5535
  %5611 = load %struct.DState*, %struct.DState** %2, align 8
  %5612 = getelementptr inbounds %struct.DState, %struct.DState* %5611, i32 0, i32 24
  %5613 = load i32, i32* %5612, align 4
  %5614 = shl i32 %5613, 8
  %5615 = load i8, i8* %3, align 1
  %5616 = zext i8 %5615 to i32
  %5617 = or i32 %5614, %5616
  %5618 = load %struct.DState*, %struct.DState** %2, align 8
  %5619 = getelementptr inbounds %struct.DState, %struct.DState* %5618, i32 0, i32 24
  store i32 %5617, i32* %5619, align 4
  br label %5620

5620:                                             ; preds = %144, %5610
  %5621 = load %struct.DState*, %struct.DState** %2, align 8
  %5622 = getelementptr inbounds %struct.DState, %struct.DState* %5621, i32 0, i32 1
  store i32 50, i32* %5622, align 8
  br label %5623

5623:                                             ; preds = %5620, %5702
  %5624 = load %struct.DState*, %struct.DState** %2, align 8
  %5625 = getelementptr inbounds %struct.DState, %struct.DState* %5624, i32 0, i32 8
  %5626 = load i32, i32* %5625, align 4
  %5627 = icmp sge i32 %5626, 8
  br i1 %5627, label %5628, label %5644

5628:                                             ; preds = %5623
  %5629 = load %struct.DState*, %struct.DState** %2, align 8
  %5630 = getelementptr inbounds %struct.DState, %struct.DState* %5629, i32 0, i32 7
  %5631 = load i32, i32* %5630, align 8
  %5632 = load %struct.DState*, %struct.DState** %2, align 8
  %5633 = getelementptr inbounds %struct.DState, %struct.DState* %5632, i32 0, i32 8
  %5634 = load i32, i32* %5633, align 4
  %5635 = sub nsw i32 %5634, 8
  %5636 = lshr i32 %5631, %5635
  %5637 = and i32 %5636, 255
  store i32 %5637, i32* %87, align 4
  %5638 = load %struct.DState*, %struct.DState** %2, align 8
  %5639 = getelementptr inbounds %struct.DState, %struct.DState* %5638, i32 0, i32 8
  %5640 = load i32, i32* %5639, align 4
  %5641 = sub nsw i32 %5640, 8
  store i32 %5641, i32* %5639, align 4
  %5642 = load i32, i32* %87, align 4
  %5643 = trunc i32 %5642 to i8
  store i8 %5643, i8* %3, align 1
  br label %5703

5644:                                             ; preds = %5623
  %5645 = load %struct.DState*, %struct.DState** %2, align 8
  %5646 = getelementptr inbounds %struct.DState, %struct.DState* %5645, i32 0, i32 0
  %5647 = load %struct.bz_stream*, %struct.bz_stream** %5646, align 8
  %5648 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5647, i32 0, i32 1
  %5649 = load i32, i32* %5648, align 8
  %5650 = icmp eq i32 %5649, 0
  br i1 %5650, label %5651, label %5652

5651:                                             ; preds = %5644
  store i32 0, i32* %4, align 4
  br label %5717

5652:                                             ; preds = %5644
  %5653 = load %struct.DState*, %struct.DState** %2, align 8
  %5654 = getelementptr inbounds %struct.DState, %struct.DState* %5653, i32 0, i32 7
  %5655 = load i32, i32* %5654, align 8
  %5656 = shl i32 %5655, 8
  %5657 = load %struct.DState*, %struct.DState** %2, align 8
  %5658 = getelementptr inbounds %struct.DState, %struct.DState* %5657, i32 0, i32 0
  %5659 = load %struct.bz_stream*, %struct.bz_stream** %5658, align 8
  %5660 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5659, i32 0, i32 0
  %5661 = load i8*, i8** %5660, align 8
  %5662 = load i8, i8* %5661, align 1
  %5663 = zext i8 %5662 to i32
  %5664 = or i32 %5656, %5663
  %5665 = load %struct.DState*, %struct.DState** %2, align 8
  %5666 = getelementptr inbounds %struct.DState, %struct.DState* %5665, i32 0, i32 7
  store i32 %5664, i32* %5666, align 8
  %5667 = load %struct.DState*, %struct.DState** %2, align 8
  %5668 = getelementptr inbounds %struct.DState, %struct.DState* %5667, i32 0, i32 8
  %5669 = load i32, i32* %5668, align 4
  %5670 = add nsw i32 %5669, 8
  store i32 %5670, i32* %5668, align 4
  %5671 = load %struct.DState*, %struct.DState** %2, align 8
  %5672 = getelementptr inbounds %struct.DState, %struct.DState* %5671, i32 0, i32 0
  %5673 = load %struct.bz_stream*, %struct.bz_stream** %5672, align 8
  %5674 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5673, i32 0, i32 0
  %5675 = load i8*, i8** %5674, align 8
  %5676 = getelementptr inbounds i8, i8* %5675, i32 1
  store i8* %5676, i8** %5674, align 8
  %5677 = load %struct.DState*, %struct.DState** %2, align 8
  %5678 = getelementptr inbounds %struct.DState, %struct.DState* %5677, i32 0, i32 0
  %5679 = load %struct.bz_stream*, %struct.bz_stream** %5678, align 8
  %5680 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5679, i32 0, i32 1
  %5681 = load i32, i32* %5680, align 8
  %5682 = add i32 %5681, -1
  store i32 %5682, i32* %5680, align 8
  %5683 = load %struct.DState*, %struct.DState** %2, align 8
  %5684 = getelementptr inbounds %struct.DState, %struct.DState* %5683, i32 0, i32 0
  %5685 = load %struct.bz_stream*, %struct.bz_stream** %5684, align 8
  %5686 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5685, i32 0, i32 2
  %5687 = load i32, i32* %5686, align 4
  %5688 = add i32 %5687, 1
  store i32 %5688, i32* %5686, align 4
  %5689 = load %struct.DState*, %struct.DState** %2, align 8
  %5690 = getelementptr inbounds %struct.DState, %struct.DState* %5689, i32 0, i32 0
  %5691 = load %struct.bz_stream*, %struct.bz_stream** %5690, align 8
  %5692 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5691, i32 0, i32 2
  %5693 = load i32, i32* %5692, align 4
  %5694 = icmp eq i32 %5693, 0
  br i1 %5694, label %5695, label %5702

5695:                                             ; preds = %5652
  %5696 = load %struct.DState*, %struct.DState** %2, align 8
  %5697 = getelementptr inbounds %struct.DState, %struct.DState* %5696, i32 0, i32 0
  %5698 = load %struct.bz_stream*, %struct.bz_stream** %5697, align 8
  %5699 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %5698, i32 0, i32 3
  %5700 = load i32, i32* %5699, align 8
  %5701 = add i32 %5700, 1
  store i32 %5701, i32* %5699, align 8
  br label %5702

5702:                                             ; preds = %5695, %5652
  br label %5623

5703:                                             ; preds = %5628
  %5704 = load %struct.DState*, %struct.DState** %2, align 8
  %5705 = getelementptr inbounds %struct.DState, %struct.DState* %5704, i32 0, i32 24
  %5706 = load i32, i32* %5705, align 4
  %5707 = shl i32 %5706, 8
  %5708 = load i8, i8* %3, align 1
  %5709 = zext i8 %5708 to i32
  %5710 = or i32 %5707, %5709
  %5711 = load %struct.DState*, %struct.DState** %2, align 8
  %5712 = getelementptr inbounds %struct.DState, %struct.DState* %5711, i32 0, i32 24
  store i32 %5710, i32* %5712, align 4
  %5713 = load %struct.DState*, %struct.DState** %2, align 8
  %5714 = getelementptr inbounds %struct.DState, %struct.DState* %5713, i32 0, i32 1
  store i32 1, i32* %5714, align 8
  store i32 4, i32* %4, align 4
  br label %5717

5715:                                             ; preds = %144
  call void @BZ2_bz__AssertH__fail(i32 4001)
  br label %5716

5716:                                             ; preds = %5715
  call void @BZ2_bz__AssertH__fail(i32 4002)
  br label %5717

5717:                                             ; preds = %5716, %5703, %5651, %5558, %5465, %5372, %5337, %5281, %5248, %5192, %5159, %5103, %5070, %5014, %4981, %4925, %4892, %4281, %4257, %4182, %4139, %4083, %4010, %3692, %3672, %3649, %3591, %3516, %3473, %3417, %3344, %3291, %3216, %3173, %3117, %3044, %2799, %2710, %2677, %2613, %2506, %2443, %2404, %2349, %2317, %2259, %2223, %2143, %2010, %1973, %1962, %1896, %1803, %1710, %1624, %1529, %1436, %1343, %1250, %1200, %1144, %1111, %1055, %1022, %966, %933, %877, %844, %788, %755, %694, %660, %636, %581, %519, %485, %429, %396, %340, %307, %251
  %5718 = load i32, i32* %8, align 4
  %5719 = load %struct.DState*, %struct.DState** %2, align 8
  %5720 = getelementptr inbounds %struct.DState, %struct.DState* %5719, i32 0, i32 40
  store i32 %5718, i32* %5720, align 4
  %5721 = load i32, i32* %9, align 4
  %5722 = load %struct.DState*, %struct.DState** %2, align 8
  %5723 = getelementptr inbounds %struct.DState, %struct.DState* %5722, i32 0, i32 41
  store i32 %5721, i32* %5723, align 8
  %5724 = load i32, i32* %10, align 4
  %5725 = load %struct.DState*, %struct.DState** %2, align 8
  %5726 = getelementptr inbounds %struct.DState, %struct.DState* %5725, i32 0, i32 42
  store i32 %5724, i32* %5726, align 4
  %5727 = load i32, i32* %11, align 4
  %5728 = load %struct.DState*, %struct.DState** %2, align 8
  %5729 = getelementptr inbounds %struct.DState, %struct.DState* %5728, i32 0, i32 43
  store i32 %5727, i32* %5729, align 8
  %5730 = load i32, i32* %12, align 4
  %5731 = load %struct.DState*, %struct.DState** %2, align 8
  %5732 = getelementptr inbounds %struct.DState, %struct.DState* %5731, i32 0, i32 44
  store i32 %5730, i32* %5732, align 4
  %5733 = load i32, i32* %13, align 4
  %5734 = load %struct.DState*, %struct.DState** %2, align 8
  %5735 = getelementptr inbounds %struct.DState, %struct.DState* %5734, i32 0, i32 45
  store i32 %5733, i32* %5735, align 8
  %5736 = load i32, i32* %14, align 4
  %5737 = load %struct.DState*, %struct.DState** %2, align 8
  %5738 = getelementptr inbounds %struct.DState, %struct.DState* %5737, i32 0, i32 46
  store i32 %5736, i32* %5738, align 4
  %5739 = load i32, i32* %15, align 4
  %5740 = load %struct.DState*, %struct.DState** %2, align 8
  %5741 = getelementptr inbounds %struct.DState, %struct.DState* %5740, i32 0, i32 47
  store i32 %5739, i32* %5741, align 8
  %5742 = load i32, i32* %16, align 4
  %5743 = load %struct.DState*, %struct.DState** %2, align 8
  %5744 = getelementptr inbounds %struct.DState, %struct.DState* %5743, i32 0, i32 48
  store i32 %5742, i32* %5744, align 4
  %5745 = load i32, i32* %17, align 4
  %5746 = load %struct.DState*, %struct.DState** %2, align 8
  %5747 = getelementptr inbounds %struct.DState, %struct.DState* %5746, i32 0, i32 49
  store i32 %5745, i32* %5747, align 8
  %5748 = load i32, i32* %18, align 4
  %5749 = load %struct.DState*, %struct.DState** %2, align 8
  %5750 = getelementptr inbounds %struct.DState, %struct.DState* %5749, i32 0, i32 50
  store i32 %5748, i32* %5750, align 4
  %5751 = load i32, i32* %19, align 4
  %5752 = load %struct.DState*, %struct.DState** %2, align 8
  %5753 = getelementptr inbounds %struct.DState, %struct.DState* %5752, i32 0, i32 51
  store i32 %5751, i32* %5753, align 8
  %5754 = load i32, i32* %20, align 4
  %5755 = load %struct.DState*, %struct.DState** %2, align 8
  %5756 = getelementptr inbounds %struct.DState, %struct.DState* %5755, i32 0, i32 52
  store i32 %5754, i32* %5756, align 4
  %5757 = load i32, i32* %21, align 4
  %5758 = load %struct.DState*, %struct.DState** %2, align 8
  %5759 = getelementptr inbounds %struct.DState, %struct.DState* %5758, i32 0, i32 53
  store i32 %5757, i32* %5759, align 8
  %5760 = load i32, i32* %22, align 4
  %5761 = load %struct.DState*, %struct.DState** %2, align 8
  %5762 = getelementptr inbounds %struct.DState, %struct.DState* %5761, i32 0, i32 54
  store i32 %5760, i32* %5762, align 4
  %5763 = load i32, i32* %23, align 4
  %5764 = load %struct.DState*, %struct.DState** %2, align 8
  %5765 = getelementptr inbounds %struct.DState, %struct.DState* %5764, i32 0, i32 55
  store i32 %5763, i32* %5765, align 8
  %5766 = load i32, i32* %24, align 4
  %5767 = load %struct.DState*, %struct.DState** %2, align 8
  %5768 = getelementptr inbounds %struct.DState, %struct.DState* %5767, i32 0, i32 56
  store i32 %5766, i32* %5768, align 4
  %5769 = load i32, i32* %25, align 4
  %5770 = load %struct.DState*, %struct.DState** %2, align 8
  %5771 = getelementptr inbounds %struct.DState, %struct.DState* %5770, i32 0, i32 57
  store i32 %5769, i32* %5771, align 8
  %5772 = load i32, i32* %26, align 4
  %5773 = load %struct.DState*, %struct.DState** %2, align 8
  %5774 = getelementptr inbounds %struct.DState, %struct.DState* %5773, i32 0, i32 58
  store i32 %5772, i32* %5774, align 4
  %5775 = load i32, i32* %27, align 4
  %5776 = load %struct.DState*, %struct.DState** %2, align 8
  %5777 = getelementptr inbounds %struct.DState, %struct.DState* %5776, i32 0, i32 59
  store i32 %5775, i32* %5777, align 8
  %5778 = load i32, i32* %28, align 4
  %5779 = load %struct.DState*, %struct.DState** %2, align 8
  %5780 = getelementptr inbounds %struct.DState, %struct.DState* %5779, i32 0, i32 60
  store i32 %5778, i32* %5780, align 4
  %5781 = load i32*, i32** %29, align 8
  %5782 = load %struct.DState*, %struct.DState** %2, align 8
  %5783 = getelementptr inbounds %struct.DState, %struct.DState* %5782, i32 0, i32 61
  store i32* %5781, i32** %5783, align 8
  %5784 = load i32*, i32** %30, align 8
  %5785 = load %struct.DState*, %struct.DState** %2, align 8
  %5786 = getelementptr inbounds %struct.DState, %struct.DState* %5785, i32 0, i32 62
  store i32* %5784, i32** %5786, align 8
  %5787 = load i32*, i32** %31, align 8
  %5788 = load %struct.DState*, %struct.DState** %2, align 8
  %5789 = getelementptr inbounds %struct.DState, %struct.DState* %5788, i32 0, i32 63
  store i32* %5787, i32** %5789, align 8
  %5790 = load i32, i32* %4, align 4
  ret i32 %5790
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @makeMaps_d(%struct.DState* %0) #0 {
  %2 = alloca %struct.DState*, align 8
  %3 = alloca i32, align 4
  store %struct.DState* %0, %struct.DState** %2, align 8
  %4 = load %struct.DState*, %struct.DState** %2, align 8
  %5 = getelementptr inbounds %struct.DState, %struct.DState* %4, i32 0, i32 27
  store i32 0, i32* %5, align 8
  store i32 0, i32* %3, align 4
  br label %6

6:                                                ; preds = %32, %1
  %7 = load i32, i32* %3, align 4
  %8 = icmp slt i32 %7, 256
  br i1 %8, label %9, label %35

9:                                                ; preds = %6
  %10 = load %struct.DState*, %struct.DState** %2, align 8
  %11 = getelementptr inbounds %struct.DState, %struct.DState* %10, i32 0, i32 28
  %12 = load i32, i32* %3, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i64 0, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = icmp ne i8 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %9
  %18 = load i32, i32* %3, align 4
  %19 = trunc i32 %18 to i8
  %20 = load %struct.DState*, %struct.DState** %2, align 8
  %21 = getelementptr inbounds %struct.DState, %struct.DState* %20, i32 0, i32 30
  %22 = load %struct.DState*, %struct.DState** %2, align 8
  %23 = getelementptr inbounds %struct.DState, %struct.DState* %22, i32 0, i32 27
  %24 = load i32, i32* %23, align 8
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [256 x i8], [256 x i8]* %21, i64 0, i64 %25
  store i8 %19, i8* %26, align 1
  %27 = load %struct.DState*, %struct.DState** %2, align 8
  %28 = getelementptr inbounds %struct.DState, %struct.DState* %27, i32 0, i32 27
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %28, align 8
  br label %31

31:                                               ; preds = %17, %9
  br label %32

32:                                               ; preds = %31
  %33 = load i32, i32* %3, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %3, align 4
  br label %6

35:                                               ; preds = %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_indexIntoF(i32 %0, i32* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32* %1, i32** %4, align 8
  store i32 0, i32* %5, align 4
  store i32 256, i32* %6, align 4
  br label %8

8:                                                ; preds = %25, %2
  %9 = load i32, i32* %5, align 4
  %10 = load i32, i32* %6, align 4
  %11 = add nsw i32 %9, %10
  %12 = ashr i32 %11, 1
  store i32 %12, i32* %7, align 4
  %13 = load i32, i32* %3, align 4
  %14 = load i32*, i32** %4, align 8
  %15 = load i32, i32* %7, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i32, i32* %14, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = icmp sge i32 %13, %18
  br i1 %19, label %20, label %22

20:                                               ; preds = %8
  %21 = load i32, i32* %7, align 4
  store i32 %21, i32* %5, align 4
  br label %24

22:                                               ; preds = %8
  %23 = load i32, i32* %7, align 4
  store i32 %23, i32* %6, align 4
  br label %24

24:                                               ; preds = %22, %20
  br label %25

25:                                               ; preds = %24
  %26 = load i32, i32* %6, align 4
  %27 = load i32, i32* %5, align 4
  %28 = sub nsw i32 %26, %27
  %29 = icmp ne i32 %28, 1
  br i1 %29, label %8, label %30

30:                                               ; preds = %25
  %31 = load i32, i32* %5, align 4
  ret i32 %31
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @BZ2_bzlibVersion() #0 {
  ret i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0)
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzCompressInit(%struct.bz_stream* %0, i32 %1, i32 %2, i32 %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.bz_stream*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.EState*, align 8
  store %struct.bz_stream* %0, %struct.bz_stream** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  %12 = call i32 @bz_config_ok()
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %4
  store i32 -9, i32* %5, align 4
  br label %245

15:                                               ; preds = %4
  %16 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %17 = icmp eq %struct.bz_stream* %16, null
  br i1 %17, label %30, label %18

18:                                               ; preds = %15
  %19 = load i32, i32* %7, align 4
  %20 = icmp slt i32 %19, 1
  br i1 %20, label %30, label %21

21:                                               ; preds = %18
  %22 = load i32, i32* %7, align 4
  %23 = icmp sgt i32 %22, 9
  br i1 %23, label %30, label %24

24:                                               ; preds = %21
  %25 = load i32, i32* %9, align 4
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = load i32, i32* %9, align 4
  %29 = icmp sgt i32 %28, 250
  br i1 %29, label %30, label %31

30:                                               ; preds = %27, %24, %21, %18, %15
  store i32 -2, i32* %5, align 4
  br label %245

31:                                               ; preds = %27
  %32 = load i32, i32* %9, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  store i32 30, i32* %9, align 4
  br label %35

35:                                               ; preds = %34, %31
  %36 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %37 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %36, i32 0, i32 9
  %38 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %37, align 8
  %39 = icmp eq i8* (i8*, i32, i32)* %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %42 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %41, i32 0, i32 9
  store i8* (i8*, i32, i32)* @default_bzalloc, i8* (i8*, i32, i32)** %42, align 8
  br label %43

43:                                               ; preds = %40, %35
  %44 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %45 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %44, i32 0, i32 10
  %46 = load void (i8*, i8*)*, void (i8*, i8*)** %45, align 8
  %47 = icmp eq void (i8*, i8*)* %46, null
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %50 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %49, i32 0, i32 10
  store void (i8*, i8*)* @default_bzfree, void (i8*, i8*)** %50, align 8
  br label %51

51:                                               ; preds = %48, %43
  %52 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %53 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %52, i32 0, i32 9
  %54 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %53, align 8
  %55 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %56 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %55, i32 0, i32 11
  %57 = load i8*, i8** %56, align 8
  %58 = call i8* %54(i8* %57, i32 55768, i32 1)
  %59 = bitcast i8* %58 to %struct.EState*
  store %struct.EState* %59, %struct.EState** %11, align 8
  %60 = load %struct.EState*, %struct.EState** %11, align 8
  %61 = icmp eq %struct.EState* %60, null
  br i1 %61, label %62, label %63

62:                                               ; preds = %51
  store i32 -3, i32* %5, align 4
  br label %245

63:                                               ; preds = %51
  %64 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %65 = load %struct.EState*, %struct.EState** %11, align 8
  %66 = getelementptr inbounds %struct.EState, %struct.EState* %65, i32 0, i32 0
  store %struct.bz_stream* %64, %struct.bz_stream** %66, align 8
  %67 = load %struct.EState*, %struct.EState** %11, align 8
  %68 = getelementptr inbounds %struct.EState, %struct.EState* %67, i32 0, i32 4
  store i32* null, i32** %68, align 8
  %69 = load %struct.EState*, %struct.EState** %11, align 8
  %70 = getelementptr inbounds %struct.EState, %struct.EState* %69, i32 0, i32 5
  store i32* null, i32** %70, align 8
  %71 = load %struct.EState*, %struct.EState** %11, align 8
  %72 = getelementptr inbounds %struct.EState, %struct.EState* %71, i32 0, i32 6
  store i32* null, i32** %72, align 8
  %73 = load i32, i32* %7, align 4
  %74 = mul nsw i32 100000, %73
  store i32 %74, i32* %10, align 4
  %75 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %76 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %75, i32 0, i32 9
  %77 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %76, align 8
  %78 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %79 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %78, i32 0, i32 11
  %80 = load i8*, i8** %79, align 8
  %81 = load i32, i32* %10, align 4
  %82 = sext i32 %81 to i64
  %83 = mul i64 %82, 4
  %84 = trunc i64 %83 to i32
  %85 = call i8* %77(i8* %80, i32 %84, i32 1)
  %86 = bitcast i8* %85 to i32*
  %87 = load %struct.EState*, %struct.EState** %11, align 8
  %88 = getelementptr inbounds %struct.EState, %struct.EState* %87, i32 0, i32 4
  store i32* %86, i32** %88, align 8
  %89 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %90 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %89, i32 0, i32 9
  %91 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %90, align 8
  %92 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %93 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %92, i32 0, i32 11
  %94 = load i8*, i8** %93, align 8
  %95 = load i32, i32* %10, align 4
  %96 = add nsw i32 %95, 34
  %97 = sext i32 %96 to i64
  %98 = mul i64 %97, 4
  %99 = trunc i64 %98 to i32
  %100 = call i8* %91(i8* %94, i32 %99, i32 1)
  %101 = bitcast i8* %100 to i32*
  %102 = load %struct.EState*, %struct.EState** %11, align 8
  %103 = getelementptr inbounds %struct.EState, %struct.EState* %102, i32 0, i32 5
  store i32* %101, i32** %103, align 8
  %104 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %105 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %104, i32 0, i32 9
  %106 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %105, align 8
  %107 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %108 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %107, i32 0, i32 11
  %109 = load i8*, i8** %108, align 8
  %110 = call i8* %106(i8* %109, i32 262148, i32 1)
  %111 = bitcast i8* %110 to i32*
  %112 = load %struct.EState*, %struct.EState** %11, align 8
  %113 = getelementptr inbounds %struct.EState, %struct.EState* %112, i32 0, i32 6
  store i32* %111, i32** %113, align 8
  %114 = load %struct.EState*, %struct.EState** %11, align 8
  %115 = getelementptr inbounds %struct.EState, %struct.EState* %114, i32 0, i32 4
  %116 = load i32*, i32** %115, align 8
  %117 = icmp eq i32* %116, null
  br i1 %117, label %128, label %118

118:                                              ; preds = %63
  %119 = load %struct.EState*, %struct.EState** %11, align 8
  %120 = getelementptr inbounds %struct.EState, %struct.EState* %119, i32 0, i32 5
  %121 = load i32*, i32** %120, align 8
  %122 = icmp eq i32* %121, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %118
  %124 = load %struct.EState*, %struct.EState** %11, align 8
  %125 = getelementptr inbounds %struct.EState, %struct.EState* %124, i32 0, i32 6
  %126 = load i32*, i32** %125, align 8
  %127 = icmp eq i32* %126, null
  br i1 %127, label %128, label %189

128:                                              ; preds = %123, %118, %63
  %129 = load %struct.EState*, %struct.EState** %11, align 8
  %130 = getelementptr inbounds %struct.EState, %struct.EState* %129, i32 0, i32 4
  %131 = load i32*, i32** %130, align 8
  %132 = icmp ne i32* %131, null
  br i1 %132, label %133, label %144

133:                                              ; preds = %128
  %134 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %135 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %134, i32 0, i32 10
  %136 = load void (i8*, i8*)*, void (i8*, i8*)** %135, align 8
  %137 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %138 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %137, i32 0, i32 11
  %139 = load i8*, i8** %138, align 8
  %140 = load %struct.EState*, %struct.EState** %11, align 8
  %141 = getelementptr inbounds %struct.EState, %struct.EState* %140, i32 0, i32 4
  %142 = load i32*, i32** %141, align 8
  %143 = bitcast i32* %142 to i8*
  call void %136(i8* %139, i8* %143)
  br label %144

144:                                              ; preds = %133, %128
  %145 = load %struct.EState*, %struct.EState** %11, align 8
  %146 = getelementptr inbounds %struct.EState, %struct.EState* %145, i32 0, i32 5
  %147 = load i32*, i32** %146, align 8
  %148 = icmp ne i32* %147, null
  br i1 %148, label %149, label %160

149:                                              ; preds = %144
  %150 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %151 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %150, i32 0, i32 10
  %152 = load void (i8*, i8*)*, void (i8*, i8*)** %151, align 8
  %153 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %154 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %153, i32 0, i32 11
  %155 = load i8*, i8** %154, align 8
  %156 = load %struct.EState*, %struct.EState** %11, align 8
  %157 = getelementptr inbounds %struct.EState, %struct.EState* %156, i32 0, i32 5
  %158 = load i32*, i32** %157, align 8
  %159 = bitcast i32* %158 to i8*
  call void %152(i8* %155, i8* %159)
  br label %160

160:                                              ; preds = %149, %144
  %161 = load %struct.EState*, %struct.EState** %11, align 8
  %162 = getelementptr inbounds %struct.EState, %struct.EState* %161, i32 0, i32 6
  %163 = load i32*, i32** %162, align 8
  %164 = icmp ne i32* %163, null
  br i1 %164, label %165, label %176

165:                                              ; preds = %160
  %166 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %167 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %166, i32 0, i32 10
  %168 = load void (i8*, i8*)*, void (i8*, i8*)** %167, align 8
  %169 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %170 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %169, i32 0, i32 11
  %171 = load i8*, i8** %170, align 8
  %172 = load %struct.EState*, %struct.EState** %11, align 8
  %173 = getelementptr inbounds %struct.EState, %struct.EState* %172, i32 0, i32 6
  %174 = load i32*, i32** %173, align 8
  %175 = bitcast i32* %174 to i8*
  call void %168(i8* %171, i8* %175)
  br label %176

176:                                              ; preds = %165, %160
  %177 = load %struct.EState*, %struct.EState** %11, align 8
  %178 = icmp ne %struct.EState* %177, null
  br i1 %178, label %179, label %188

179:                                              ; preds = %176
  %180 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %181 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %180, i32 0, i32 10
  %182 = load void (i8*, i8*)*, void (i8*, i8*)** %181, align 8
  %183 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %184 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %183, i32 0, i32 11
  %185 = load i8*, i8** %184, align 8
  %186 = load %struct.EState*, %struct.EState** %11, align 8
  %187 = bitcast %struct.EState* %186 to i8*
  call void %182(i8* %185, i8* %187)
  br label %188

188:                                              ; preds = %179, %176
  store i32 -3, i32* %5, align 4
  br label %245

189:                                              ; preds = %123
  %190 = load %struct.EState*, %struct.EState** %11, align 8
  %191 = getelementptr inbounds %struct.EState, %struct.EState* %190, i32 0, i32 29
  store i32 0, i32* %191, align 4
  %192 = load %struct.EState*, %struct.EState** %11, align 8
  %193 = getelementptr inbounds %struct.EState, %struct.EState* %192, i32 0, i32 2
  store i32 2, i32* %193, align 4
  %194 = load %struct.EState*, %struct.EState** %11, align 8
  %195 = getelementptr inbounds %struct.EState, %struct.EState* %194, i32 0, i32 1
  store i32 2, i32* %195, align 8
  %196 = load %struct.EState*, %struct.EState** %11, align 8
  %197 = getelementptr inbounds %struct.EState, %struct.EState* %196, i32 0, i32 27
  store i32 0, i32* %197, align 4
  %198 = load i32, i32* %7, align 4
  %199 = load %struct.EState*, %struct.EState** %11, align 8
  %200 = getelementptr inbounds %struct.EState, %struct.EState* %199, i32 0, i32 30
  store i32 %198, i32* %200, align 8
  %201 = load i32, i32* %7, align 4
  %202 = mul nsw i32 100000, %201
  %203 = sub nsw i32 %202, 19
  %204 = load %struct.EState*, %struct.EState** %11, align 8
  %205 = getelementptr inbounds %struct.EState, %struct.EState* %204, i32 0, i32 18
  store i32 %203, i32* %205, align 8
  %206 = load i32, i32* %8, align 4
  %207 = load %struct.EState*, %struct.EState** %11, align 8
  %208 = getelementptr inbounds %struct.EState, %struct.EState* %207, i32 0, i32 28
  store i32 %206, i32* %208, align 8
  %209 = load i32, i32* %9, align 4
  %210 = load %struct.EState*, %struct.EState** %11, align 8
  %211 = getelementptr inbounds %struct.EState, %struct.EState* %210, i32 0, i32 12
  store i32 %209, i32* %211, align 8
  %212 = load %struct.EState*, %struct.EState** %11, align 8
  %213 = getelementptr inbounds %struct.EState, %struct.EState* %212, i32 0, i32 5
  %214 = load i32*, i32** %213, align 8
  %215 = bitcast i32* %214 to i8*
  %216 = load %struct.EState*, %struct.EState** %11, align 8
  %217 = getelementptr inbounds %struct.EState, %struct.EState* %216, i32 0, i32 9
  store i8* %215, i8** %217, align 8
  %218 = load %struct.EState*, %struct.EState** %11, align 8
  %219 = getelementptr inbounds %struct.EState, %struct.EState* %218, i32 0, i32 4
  %220 = load i32*, i32** %219, align 8
  %221 = bitcast i32* %220 to i16*
  %222 = load %struct.EState*, %struct.EState** %11, align 8
  %223 = getelementptr inbounds %struct.EState, %struct.EState* %222, i32 0, i32 10
  store i16* %221, i16** %223, align 8
  %224 = load %struct.EState*, %struct.EState** %11, align 8
  %225 = getelementptr inbounds %struct.EState, %struct.EState* %224, i32 0, i32 11
  store i8* null, i8** %225, align 8
  %226 = load %struct.EState*, %struct.EState** %11, align 8
  %227 = getelementptr inbounds %struct.EState, %struct.EState* %226, i32 0, i32 4
  %228 = load i32*, i32** %227, align 8
  %229 = load %struct.EState*, %struct.EState** %11, align 8
  %230 = getelementptr inbounds %struct.EState, %struct.EState* %229, i32 0, i32 8
  store i32* %228, i32** %230, align 8
  %231 = load %struct.EState*, %struct.EState** %11, align 8
  %232 = bitcast %struct.EState* %231 to i8*
  %233 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %234 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %233, i32 0, i32 8
  store i8* %232, i8** %234, align 8
  %235 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %236 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %235, i32 0, i32 2
  store i32 0, i32* %236, align 4
  %237 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %238 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %237, i32 0, i32 3
  store i32 0, i32* %238, align 8
  %239 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %240 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %239, i32 0, i32 6
  store i32 0, i32* %240, align 4
  %241 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %242 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %241, i32 0, i32 7
  store i32 0, i32* %242, align 8
  %243 = load %struct.EState*, %struct.EState** %11, align 8
  call void @init_RL(%struct.EState* %243)
  %244 = load %struct.EState*, %struct.EState** %11, align 8
  call void @prepare_new_block(%struct.EState* %244)
  store i32 0, i32* %5, align 4
  br label %245

245:                                              ; preds = %189, %188, %62, %30, %14
  %246 = load i32, i32* %5, align 4
  ret i32 %246
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bz_config_ok() #0 {
  ret i32 1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @default_bzalloc(i8* %0, i32 %1, i32 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = load i32, i32* %5, align 4
  %9 = load i32, i32* %6, align 4
  %10 = mul nsw i32 %8, %9
  %11 = sext i32 %10 to i64
  %12 = call noalias i8* @malloc(i64 %11) #9
  store i8* %12, i8** %7, align 8
  %13 = load i8*, i8** %7, align 8
  ret i8* %13
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @default_bzfree(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %4, align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = load i8*, i8** %4, align 8
  call void @free(i8* %8) #9
  br label %9

9:                                                ; preds = %7, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @init_RL(%struct.EState* %0) #0 {
  %2 = alloca %struct.EState*, align 8
  store %struct.EState* %0, %struct.EState** %2, align 8
  %3 = load %struct.EState*, %struct.EState** %2, align 8
  %4 = getelementptr inbounds %struct.EState, %struct.EState* %3, i32 0, i32 13
  store i32 256, i32* %4, align 4
  %5 = load %struct.EState*, %struct.EState** %2, align 8
  %6 = getelementptr inbounds %struct.EState, %struct.EState* %5, i32 0, i32 14
  store i32 0, i32* %6, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @prepare_new_block(%struct.EState* %0) #0 {
  %2 = alloca %struct.EState*, align 8
  %3 = alloca i32, align 4
  store %struct.EState* %0, %struct.EState** %2, align 8
  %4 = load %struct.EState*, %struct.EState** %2, align 8
  %5 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 17
  store i32 0, i32* %5, align 4
  %6 = load %struct.EState*, %struct.EState** %2, align 8
  %7 = getelementptr inbounds %struct.EState, %struct.EState* %6, i32 0, i32 19
  store i32 0, i32* %7, align 4
  %8 = load %struct.EState*, %struct.EState** %2, align 8
  %9 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 20
  store i32 0, i32* %9, align 8
  %10 = load %struct.EState*, %struct.EState** %2, align 8
  %11 = getelementptr inbounds %struct.EState, %struct.EState* %10, i32 0, i32 26
  store i32 -1, i32* %11, align 8
  store i32 0, i32* %3, align 4
  br label %12

12:                                               ; preds = %21, %1
  %13 = load i32, i32* %3, align 4
  %14 = icmp slt i32 %13, 256
  br i1 %14, label %15, label %24

15:                                               ; preds = %12
  %16 = load %struct.EState*, %struct.EState** %2, align 8
  %17 = getelementptr inbounds %struct.EState, %struct.EState* %16, i32 0, i32 22
  %18 = load i32, i32* %3, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [256 x i8], [256 x i8]* %17, i64 0, i64 %19
  store i8 0, i8* %20, align 1
  br label %21

21:                                               ; preds = %15
  %22 = load i32, i32* %3, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %3, align 4
  br label %12

24:                                               ; preds = %12
  %25 = load %struct.EState*, %struct.EState** %2, align 8
  %26 = getelementptr inbounds %struct.EState, %struct.EState* %25, i32 0, i32 29
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzCompress(%struct.bz_stream* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.bz_stream*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca %struct.EState*, align 8
  store %struct.bz_stream* %0, %struct.bz_stream** %4, align 8
  store i32 %1, i32* %5, align 4
  %8 = load %struct.bz_stream*, %struct.bz_stream** %4, align 8
  %9 = icmp eq %struct.bz_stream* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  store i32 -2, i32* %3, align 4
  br label %147

11:                                               ; preds = %2
  %12 = load %struct.bz_stream*, %struct.bz_stream** %4, align 8
  %13 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %12, i32 0, i32 8
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast i8* %14 to %struct.EState*
  store %struct.EState* %15, %struct.EState** %7, align 8
  %16 = load %struct.EState*, %struct.EState** %7, align 8
  %17 = icmp eq %struct.EState* %16, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %11
  store i32 -2, i32* %3, align 4
  br label %147

19:                                               ; preds = %11
  %20 = load %struct.EState*, %struct.EState** %7, align 8
  %21 = getelementptr inbounds %struct.EState, %struct.EState* %20, i32 0, i32 0
  %22 = load %struct.bz_stream*, %struct.bz_stream** %21, align 8
  %23 = load %struct.bz_stream*, %struct.bz_stream** %4, align 8
  %24 = icmp ne %struct.bz_stream* %22, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %19
  store i32 -2, i32* %3, align 4
  br label %147

26:                                               ; preds = %19
  br label %27

27:                                               ; preds = %57, %46, %26
  %28 = load %struct.EState*, %struct.EState** %7, align 8
  %29 = getelementptr inbounds %struct.EState, %struct.EState* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  switch i32 %30, label %146 [
    i32 1, label %31
    i32 2, label %32
    i32 3, label %66
    i32 4, label %104
  ]

31:                                               ; preds = %27
  store i32 -1, i32* %3, align 4
  br label %147

32:                                               ; preds = %27
  %33 = load i32, i32* %5, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %43

35:                                               ; preds = %32
  %36 = load %struct.bz_stream*, %struct.bz_stream** %4, align 8
  %37 = call zeroext i8 @handle_compress(%struct.bz_stream* %36)
  store i8 %37, i8* %6, align 1
  %38 = load i8, i8* %6, align 1
  %39 = zext i8 %38 to i32
  %40 = icmp ne i32 %39, 0
  %41 = zext i1 %40 to i64
  %42 = select i1 %40, i32 1, i32 -2
  store i32 %42, i32* %3, align 4
  br label %147

43:                                               ; preds = %32
  %44 = load i32, i32* %5, align 4
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %54

46:                                               ; preds = %43
  %47 = load %struct.bz_stream*, %struct.bz_stream** %4, align 8
  %48 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %47, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = load %struct.EState*, %struct.EState** %7, align 8
  %51 = getelementptr inbounds %struct.EState, %struct.EState* %50, i32 0, i32 3
  store i32 %49, i32* %51, align 8
  %52 = load %struct.EState*, %struct.EState** %7, align 8
  %53 = getelementptr inbounds %struct.EState, %struct.EState* %52, i32 0, i32 1
  store i32 3, i32* %53, align 8
  br label %27

54:                                               ; preds = %43
  %55 = load i32, i32* %5, align 4
  %56 = icmp eq i32 %55, 2
  br i1 %56, label %57, label %65

57:                                               ; preds = %54
  %58 = load %struct.bz_stream*, %struct.bz_stream** %4, align 8
  %59 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %58, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = load %struct.EState*, %struct.EState** %7, align 8
  %62 = getelementptr inbounds %struct.EState, %struct.EState* %61, i32 0, i32 3
  store i32 %60, i32* %62, align 8
  %63 = load %struct.EState*, %struct.EState** %7, align 8
  %64 = getelementptr inbounds %struct.EState, %struct.EState* %63, i32 0, i32 1
  store i32 4, i32* %64, align 8
  br label %27

65:                                               ; preds = %54
  store i32 -2, i32* %3, align 4
  br label %147

66:                                               ; preds = %27
  %67 = load i32, i32* %5, align 4
  %68 = icmp ne i32 %67, 1
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  store i32 -1, i32* %3, align 4
  br label %147

70:                                               ; preds = %66
  %71 = load %struct.EState*, %struct.EState** %7, align 8
  %72 = getelementptr inbounds %struct.EState, %struct.EState* %71, i32 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = load %struct.EState*, %struct.EState** %7, align 8
  %75 = getelementptr inbounds %struct.EState, %struct.EState* %74, i32 0, i32 0
  %76 = load %struct.bz_stream*, %struct.bz_stream** %75, align 8
  %77 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %76, i32 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = icmp ne i32 %73, %78
  br i1 %79, label %80, label %81

80:                                               ; preds = %70
  store i32 -1, i32* %3, align 4
  br label %147

81:                                               ; preds = %70
  %82 = load %struct.bz_stream*, %struct.bz_stream** %4, align 8
  %83 = call zeroext i8 @handle_compress(%struct.bz_stream* %82)
  store i8 %83, i8* %6, align 1
  %84 = load %struct.EState*, %struct.EState** %7, align 8
  %85 = getelementptr inbounds %struct.EState, %struct.EState* %84, i32 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = icmp ugt i32 %86, 0
  br i1 %87, label %100, label %88

88:                                               ; preds = %81
  %89 = load %struct.EState*, %struct.EState** %7, align 8
  %90 = call zeroext i8 @isempty_RL(%struct.EState* %89)
  %91 = icmp ne i8 %90, 0
  br i1 %91, label %92, label %100

92:                                               ; preds = %88
  %93 = load %struct.EState*, %struct.EState** %7, align 8
  %94 = getelementptr inbounds %struct.EState, %struct.EState* %93, i32 0, i32 20
  %95 = load i32, i32* %94, align 8
  %96 = load %struct.EState*, %struct.EState** %7, align 8
  %97 = getelementptr inbounds %struct.EState, %struct.EState* %96, i32 0, i32 19
  %98 = load i32, i32* %97, align 4
  %99 = icmp slt i32 %95, %98
  br i1 %99, label %100, label %101

100:                                              ; preds = %92, %88, %81
  store i32 2, i32* %3, align 4
  br label %147

101:                                              ; preds = %92
  %102 = load %struct.EState*, %struct.EState** %7, align 8
  %103 = getelementptr inbounds %struct.EState, %struct.EState* %102, i32 0, i32 1
  store i32 2, i32* %103, align 8
  store i32 1, i32* %3, align 4
  br label %147

104:                                              ; preds = %27
  %105 = load i32, i32* %5, align 4
  %106 = icmp ne i32 %105, 2
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  store i32 -1, i32* %3, align 4
  br label %147

108:                                              ; preds = %104
  %109 = load %struct.EState*, %struct.EState** %7, align 8
  %110 = getelementptr inbounds %struct.EState, %struct.EState* %109, i32 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = load %struct.EState*, %struct.EState** %7, align 8
  %113 = getelementptr inbounds %struct.EState, %struct.EState* %112, i32 0, i32 0
  %114 = load %struct.bz_stream*, %struct.bz_stream** %113, align 8
  %115 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %114, i32 0, i32 1
  %116 = load i32, i32* %115, align 8
  %117 = icmp ne i32 %111, %116
  br i1 %117, label %118, label %119

118:                                              ; preds = %108
  store i32 -1, i32* %3, align 4
  br label %147

119:                                              ; preds = %108
  %120 = load %struct.bz_stream*, %struct.bz_stream** %4, align 8
  %121 = call zeroext i8 @handle_compress(%struct.bz_stream* %120)
  store i8 %121, i8* %6, align 1
  %122 = load i8, i8* %6, align 1
  %123 = icmp ne i8 %122, 0
  br i1 %123, label %125, label %124

124:                                              ; preds = %119
  store i32 -1, i32* %3, align 4
  br label %147

125:                                              ; preds = %119
  %126 = load %struct.EState*, %struct.EState** %7, align 8
  %127 = getelementptr inbounds %struct.EState, %struct.EState* %126, i32 0, i32 3
  %128 = load i32, i32* %127, align 8
  %129 = icmp ugt i32 %128, 0
  br i1 %129, label %142, label %130

130:                                              ; preds = %125
  %131 = load %struct.EState*, %struct.EState** %7, align 8
  %132 = call zeroext i8 @isempty_RL(%struct.EState* %131)
  %133 = icmp ne i8 %132, 0
  br i1 %133, label %134, label %142

134:                                              ; preds = %130
  %135 = load %struct.EState*, %struct.EState** %7, align 8
  %136 = getelementptr inbounds %struct.EState, %struct.EState* %135, i32 0, i32 20
  %137 = load i32, i32* %136, align 8
  %138 = load %struct.EState*, %struct.EState** %7, align 8
  %139 = getelementptr inbounds %struct.EState, %struct.EState* %138, i32 0, i32 19
  %140 = load i32, i32* %139, align 4
  %141 = icmp slt i32 %137, %140
  br i1 %141, label %142, label %143

142:                                              ; preds = %134, %130, %125
  store i32 3, i32* %3, align 4
  br label %147

143:                                              ; preds = %134
  %144 = load %struct.EState*, %struct.EState** %7, align 8
  %145 = getelementptr inbounds %struct.EState, %struct.EState* %144, i32 0, i32 1
  store i32 1, i32* %145, align 8
  store i32 4, i32* %3, align 4
  br label %147

146:                                              ; preds = %27
  store i32 0, i32* %3, align 4
  br label %147

147:                                              ; preds = %146, %143, %142, %124, %118, %107, %101, %100, %80, %69, %65, %35, %31, %25, %18, %10
  %148 = load i32, i32* %3, align 4
  ret i32 %148
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @handle_compress(%struct.bz_stream* %0) #0 {
  %2 = alloca %struct.bz_stream*, align 8
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca %struct.EState*, align 8
  store %struct.bz_stream* %0, %struct.bz_stream** %2, align 8
  store i8 0, i8* %3, align 1
  store i8 0, i8* %4, align 1
  %6 = load %struct.bz_stream*, %struct.bz_stream** %2, align 8
  %7 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %6, i32 0, i32 8
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast i8* %8 to %struct.EState*
  store %struct.EState* %9, %struct.EState** %5, align 8
  br label %10

10:                                               ; preds = %1, %123
  %11 = load %struct.EState*, %struct.EState** %5, align 8
  %12 = getelementptr inbounds %struct.EState, %struct.EState* %11, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %67

15:                                               ; preds = %10
  %16 = load %struct.EState*, %struct.EState** %5, align 8
  %17 = call zeroext i8 @copy_output_until_stop(%struct.EState* %16)
  %18 = zext i8 %17 to i32
  %19 = load i8, i8* %4, align 1
  %20 = zext i8 %19 to i32
  %21 = or i32 %20, %18
  %22 = trunc i32 %21 to i8
  store i8 %22, i8* %4, align 1
  %23 = load %struct.EState*, %struct.EState** %5, align 8
  %24 = getelementptr inbounds %struct.EState, %struct.EState* %23, i32 0, i32 20
  %25 = load i32, i32* %24, align 8
  %26 = load %struct.EState*, %struct.EState** %5, align 8
  %27 = getelementptr inbounds %struct.EState, %struct.EState* %26, i32 0, i32 19
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %25, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %15
  br label %124

31:                                               ; preds = %15
  %32 = load %struct.EState*, %struct.EState** %5, align 8
  %33 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 4
  br i1 %35, label %36, label %47

36:                                               ; preds = %31
  %37 = load %struct.EState*, %struct.EState** %5, align 8
  %38 = getelementptr inbounds %struct.EState, %struct.EState* %37, i32 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %36
  %42 = load %struct.EState*, %struct.EState** %5, align 8
  %43 = call zeroext i8 @isempty_RL(%struct.EState* %42)
  %44 = zext i8 %43 to i32
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %41
  br label %124

47:                                               ; preds = %41, %36, %31
  %48 = load %struct.EState*, %struct.EState** %5, align 8
  call void @prepare_new_block(%struct.EState* %48)
  %49 = load %struct.EState*, %struct.EState** %5, align 8
  %50 = getelementptr inbounds %struct.EState, %struct.EState* %49, i32 0, i32 2
  store i32 2, i32* %50, align 4
  %51 = load %struct.EState*, %struct.EState** %5, align 8
  %52 = getelementptr inbounds %struct.EState, %struct.EState* %51, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 3
  br i1 %54, label %55, label %66

55:                                               ; preds = %47
  %56 = load %struct.EState*, %struct.EState** %5, align 8
  %57 = getelementptr inbounds %struct.EState, %struct.EState* %56, i32 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %66

60:                                               ; preds = %55
  %61 = load %struct.EState*, %struct.EState** %5, align 8
  %62 = call zeroext i8 @isempty_RL(%struct.EState* %61)
  %63 = zext i8 %62 to i32
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %60
  br label %124

66:                                               ; preds = %60, %55, %47
  br label %67

67:                                               ; preds = %66, %10
  %68 = load %struct.EState*, %struct.EState** %5, align 8
  %69 = getelementptr inbounds %struct.EState, %struct.EState* %68, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 2
  br i1 %71, label %72, label %123

72:                                               ; preds = %67
  %73 = load %struct.EState*, %struct.EState** %5, align 8
  %74 = call zeroext i8 @copy_input_until_stop(%struct.EState* %73)
  %75 = zext i8 %74 to i32
  %76 = load i8, i8* %3, align 1
  %77 = zext i8 %76 to i32
  %78 = or i32 %77, %75
  %79 = trunc i32 %78 to i8
  store i8 %79, i8* %3, align 1
  %80 = load %struct.EState*, %struct.EState** %5, align 8
  %81 = getelementptr inbounds %struct.EState, %struct.EState* %80, i32 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = icmp ne i32 %82, 2
  br i1 %83, label %84, label %100

84:                                               ; preds = %72
  %85 = load %struct.EState*, %struct.EState** %5, align 8
  %86 = getelementptr inbounds %struct.EState, %struct.EState* %85, i32 0, i32 3
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %100

89:                                               ; preds = %84
  %90 = load %struct.EState*, %struct.EState** %5, align 8
  call void @flush_RL(%struct.EState* %90)
  %91 = load %struct.EState*, %struct.EState** %5, align 8
  %92 = load %struct.EState*, %struct.EState** %5, align 8
  %93 = getelementptr inbounds %struct.EState, %struct.EState* %92, i32 0, i32 1
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %94, 4
  %96 = zext i1 %95 to i32
  %97 = trunc i32 %96 to i8
  call void @BZ2_compressBlock(%struct.EState* %91, i8 zeroext %97)
  %98 = load %struct.EState*, %struct.EState** %5, align 8
  %99 = getelementptr inbounds %struct.EState, %struct.EState* %98, i32 0, i32 2
  store i32 1, i32* %99, align 4
  br label %122

100:                                              ; preds = %84, %72
  %101 = load %struct.EState*, %struct.EState** %5, align 8
  %102 = getelementptr inbounds %struct.EState, %struct.EState* %101, i32 0, i32 17
  %103 = load i32, i32* %102, align 4
  %104 = load %struct.EState*, %struct.EState** %5, align 8
  %105 = getelementptr inbounds %struct.EState, %struct.EState* %104, i32 0, i32 18
  %106 = load i32, i32* %105, align 8
  %107 = icmp sge i32 %103, %106
  br i1 %107, label %108, label %112

108:                                              ; preds = %100
  %109 = load %struct.EState*, %struct.EState** %5, align 8
  call void @BZ2_compressBlock(%struct.EState* %109, i8 zeroext 0)
  %110 = load %struct.EState*, %struct.EState** %5, align 8
  %111 = getelementptr inbounds %struct.EState, %struct.EState* %110, i32 0, i32 2
  store i32 1, i32* %111, align 4
  br label %121

112:                                              ; preds = %100
  %113 = load %struct.EState*, %struct.EState** %5, align 8
  %114 = getelementptr inbounds %struct.EState, %struct.EState* %113, i32 0, i32 0
  %115 = load %struct.bz_stream*, %struct.bz_stream** %114, align 8
  %116 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %115, i32 0, i32 1
  %117 = load i32, i32* %116, align 8
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %112
  br label %124

120:                                              ; preds = %112
  br label %121

121:                                              ; preds = %120, %108
  br label %122

122:                                              ; preds = %121, %89
  br label %123

123:                                              ; preds = %122, %67
  br label %10

124:                                              ; preds = %119, %65, %46, %30
  %125 = load i8, i8* %3, align 1
  %126 = zext i8 %125 to i32
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %132, label %128

128:                                              ; preds = %124
  %129 = load i8, i8* %4, align 1
  %130 = zext i8 %129 to i32
  %131 = icmp ne i32 %130, 0
  br label %132

132:                                              ; preds = %128, %124
  %133 = phi i1 [ true, %124 ], [ %131, %128 ]
  %134 = zext i1 %133 to i32
  %135 = trunc i32 %134 to i8
  ret i8 %135
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @isempty_RL(%struct.EState* %0) #0 {
  %2 = alloca i8, align 1
  %3 = alloca %struct.EState*, align 8
  store %struct.EState* %0, %struct.EState** %3, align 8
  %4 = load %struct.EState*, %struct.EState** %3, align 8
  %5 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 13
  %6 = load i32, i32* %5, align 4
  %7 = icmp ult i32 %6, 256
  br i1 %7, label %8, label %14

8:                                                ; preds = %1
  %9 = load %struct.EState*, %struct.EState** %3, align 8
  %10 = getelementptr inbounds %struct.EState, %struct.EState* %9, i32 0, i32 14
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %8
  store i8 0, i8* %2, align 1
  br label %15

14:                                               ; preds = %8, %1
  store i8 1, i8* %2, align 1
  br label %15

15:                                               ; preds = %14, %13
  %16 = load i8, i8* %2, align 1
  ret i8 %16
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzCompressEnd(%struct.bz_stream* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.bz_stream*, align 8
  %4 = alloca %struct.EState*, align 8
  store %struct.bz_stream* %0, %struct.bz_stream** %3, align 8
  %5 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %6 = icmp eq %struct.bz_stream* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 -2, i32* %2, align 4
  br label %83

8:                                                ; preds = %1
  %9 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %10 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %9, i32 0, i32 8
  %11 = load i8*, i8** %10, align 8
  %12 = bitcast i8* %11 to %struct.EState*
  store %struct.EState* %12, %struct.EState** %4, align 8
  %13 = load %struct.EState*, %struct.EState** %4, align 8
  %14 = icmp eq %struct.EState* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %8
  store i32 -2, i32* %2, align 4
  br label %83

16:                                               ; preds = %8
  %17 = load %struct.EState*, %struct.EState** %4, align 8
  %18 = getelementptr inbounds %struct.EState, %struct.EState* %17, i32 0, i32 0
  %19 = load %struct.bz_stream*, %struct.bz_stream** %18, align 8
  %20 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %21 = icmp ne %struct.bz_stream* %19, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  store i32 -2, i32* %2, align 4
  br label %83

23:                                               ; preds = %16
  %24 = load %struct.EState*, %struct.EState** %4, align 8
  %25 = getelementptr inbounds %struct.EState, %struct.EState* %24, i32 0, i32 4
  %26 = load i32*, i32** %25, align 8
  %27 = icmp ne i32* %26, null
  br i1 %27, label %28, label %39

28:                                               ; preds = %23
  %29 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %30 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %29, i32 0, i32 10
  %31 = load void (i8*, i8*)*, void (i8*, i8*)** %30, align 8
  %32 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %33 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %32, i32 0, i32 11
  %34 = load i8*, i8** %33, align 8
  %35 = load %struct.EState*, %struct.EState** %4, align 8
  %36 = getelementptr inbounds %struct.EState, %struct.EState* %35, i32 0, i32 4
  %37 = load i32*, i32** %36, align 8
  %38 = bitcast i32* %37 to i8*
  call void %31(i8* %34, i8* %38)
  br label %39

39:                                               ; preds = %28, %23
  %40 = load %struct.EState*, %struct.EState** %4, align 8
  %41 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 5
  %42 = load i32*, i32** %41, align 8
  %43 = icmp ne i32* %42, null
  br i1 %43, label %44, label %55

44:                                               ; preds = %39
  %45 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %46 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %45, i32 0, i32 10
  %47 = load void (i8*, i8*)*, void (i8*, i8*)** %46, align 8
  %48 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %49 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %48, i32 0, i32 11
  %50 = load i8*, i8** %49, align 8
  %51 = load %struct.EState*, %struct.EState** %4, align 8
  %52 = getelementptr inbounds %struct.EState, %struct.EState* %51, i32 0, i32 5
  %53 = load i32*, i32** %52, align 8
  %54 = bitcast i32* %53 to i8*
  call void %47(i8* %50, i8* %54)
  br label %55

55:                                               ; preds = %44, %39
  %56 = load %struct.EState*, %struct.EState** %4, align 8
  %57 = getelementptr inbounds %struct.EState, %struct.EState* %56, i32 0, i32 6
  %58 = load i32*, i32** %57, align 8
  %59 = icmp ne i32* %58, null
  br i1 %59, label %60, label %71

60:                                               ; preds = %55
  %61 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %62 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %61, i32 0, i32 10
  %63 = load void (i8*, i8*)*, void (i8*, i8*)** %62, align 8
  %64 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %65 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %64, i32 0, i32 11
  %66 = load i8*, i8** %65, align 8
  %67 = load %struct.EState*, %struct.EState** %4, align 8
  %68 = getelementptr inbounds %struct.EState, %struct.EState* %67, i32 0, i32 6
  %69 = load i32*, i32** %68, align 8
  %70 = bitcast i32* %69 to i8*
  call void %63(i8* %66, i8* %70)
  br label %71

71:                                               ; preds = %60, %55
  %72 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %73 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %72, i32 0, i32 10
  %74 = load void (i8*, i8*)*, void (i8*, i8*)** %73, align 8
  %75 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %76 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %75, i32 0, i32 11
  %77 = load i8*, i8** %76, align 8
  %78 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %79 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %78, i32 0, i32 8
  %80 = load i8*, i8** %79, align 8
  call void %74(i8* %77, i8* %80)
  %81 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %82 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %81, i32 0, i32 8
  store i8* null, i8** %82, align 8
  store i32 0, i32* %2, align 4
  br label %83

83:                                               ; preds = %71, %22, %15, %7
  %84 = load i32, i32* %2, align 4
  ret i32 %84
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzDecompressInit(%struct.bz_stream* %0, i32 %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.bz_stream*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.DState*, align 8
  store %struct.bz_stream* %0, %struct.bz_stream** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %9 = call i32 @bz_config_ok()
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %3
  store i32 -9, i32* %4, align 4
  br label %97

12:                                               ; preds = %3
  %13 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8
  %14 = icmp eq %struct.bz_stream* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  store i32 -2, i32* %4, align 4
  br label %97

16:                                               ; preds = %12
  %17 = load i32, i32* %7, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %16
  %20 = load i32, i32* %7, align 4
  %21 = icmp ne i32 %20, 1
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  store i32 -2, i32* %4, align 4
  br label %97

23:                                               ; preds = %19, %16
  %24 = load i32, i32* %6, align 4
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = load i32, i32* %6, align 4
  %28 = icmp sgt i32 %27, 4
  br i1 %28, label %29, label %30

29:                                               ; preds = %26, %23
  store i32 -2, i32* %4, align 4
  br label %97

30:                                               ; preds = %26
  %31 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8
  %32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %31, i32 0, i32 9
  %33 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %32, align 8
  %34 = icmp eq i8* (i8*, i32, i32)* %33, null
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8
  %37 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %36, i32 0, i32 9
  store i8* (i8*, i32, i32)* @default_bzalloc, i8* (i8*, i32, i32)** %37, align 8
  br label %38

38:                                               ; preds = %35, %30
  %39 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8
  %40 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %39, i32 0, i32 10
  %41 = load void (i8*, i8*)*, void (i8*, i8*)** %40, align 8
  %42 = icmp eq void (i8*, i8*)* %41, null
  br i1 %42, label %43, label %46

43:                                               ; preds = %38
  %44 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8
  %45 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %44, i32 0, i32 10
  store void (i8*, i8*)* @default_bzfree, void (i8*, i8*)** %45, align 8
  br label %46

46:                                               ; preds = %43, %38
  %47 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8
  %48 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %47, i32 0, i32 9
  %49 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %48, align 8
  %50 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8
  %51 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %50, i32 0, i32 11
  %52 = load i8*, i8** %51, align 8
  %53 = call i8* %49(i8* %52, i32 64144, i32 1)
  %54 = bitcast i8* %53 to %struct.DState*
  store %struct.DState* %54, %struct.DState** %8, align 8
  %55 = load %struct.DState*, %struct.DState** %8, align 8
  %56 = icmp eq %struct.DState* %55, null
  br i1 %56, label %57, label %58

57:                                               ; preds = %46
  store i32 -3, i32* %4, align 4
  br label %97

58:                                               ; preds = %46
  %59 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8
  %60 = load %struct.DState*, %struct.DState** %8, align 8
  %61 = getelementptr inbounds %struct.DState, %struct.DState* %60, i32 0, i32 0
  store %struct.bz_stream* %59, %struct.bz_stream** %61, align 8
  %62 = load %struct.DState*, %struct.DState** %8, align 8
  %63 = bitcast %struct.DState* %62 to i8*
  %64 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8
  %65 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %64, i32 0, i32 8
  store i8* %63, i8** %65, align 8
  %66 = load %struct.DState*, %struct.DState** %8, align 8
  %67 = getelementptr inbounds %struct.DState, %struct.DState* %66, i32 0, i32 1
  store i32 10, i32* %67, align 8
  %68 = load %struct.DState*, %struct.DState** %8, align 8
  %69 = getelementptr inbounds %struct.DState, %struct.DState* %68, i32 0, i32 8
  store i32 0, i32* %69, align 4
  %70 = load %struct.DState*, %struct.DState** %8, align 8
  %71 = getelementptr inbounds %struct.DState, %struct.DState* %70, i32 0, i32 7
  store i32 0, i32* %71, align 8
  %72 = load %struct.DState*, %struct.DState** %8, align 8
  %73 = getelementptr inbounds %struct.DState, %struct.DState* %72, i32 0, i32 26
  store i32 0, i32* %73, align 4
  %74 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8
  %75 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %74, i32 0, i32 2
  store i32 0, i32* %75, align 4
  %76 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8
  %77 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %76, i32 0, i32 3
  store i32 0, i32* %77, align 8
  %78 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8
  %79 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %78, i32 0, i32 6
  store i32 0, i32* %79, align 4
  %80 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8
  %81 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %80, i32 0, i32 7
  store i32 0, i32* %81, align 8
  %82 = load i32, i32* %7, align 4
  %83 = trunc i32 %82 to i8
  %84 = load %struct.DState*, %struct.DState** %8, align 8
  %85 = getelementptr inbounds %struct.DState, %struct.DState* %84, i32 0, i32 10
  store i8 %83, i8* %85, align 4
  %86 = load %struct.DState*, %struct.DState** %8, align 8
  %87 = getelementptr inbounds %struct.DState, %struct.DState* %86, i32 0, i32 22
  store i8* null, i8** %87, align 8
  %88 = load %struct.DState*, %struct.DState** %8, align 8
  %89 = getelementptr inbounds %struct.DState, %struct.DState* %88, i32 0, i32 21
  store i16* null, i16** %89, align 8
  %90 = load %struct.DState*, %struct.DState** %8, align 8
  %91 = getelementptr inbounds %struct.DState, %struct.DState* %90, i32 0, i32 20
  store i32* null, i32** %91, align 8
  %92 = load %struct.DState*, %struct.DState** %8, align 8
  %93 = getelementptr inbounds %struct.DState, %struct.DState* %92, i32 0, i32 11
  store i32 0, i32* %93, align 8
  %94 = load i32, i32* %6, align 4
  %95 = load %struct.DState*, %struct.DState** %8, align 8
  %96 = getelementptr inbounds %struct.DState, %struct.DState* %95, i32 0, i32 12
  store i32 %94, i32* %96, align 4
  store i32 0, i32* %4, align 4
  br label %97

97:                                               ; preds = %58, %57, %29, %22, %15, %11
  %98 = load i32, i32* %4, align 4
  ret i32 %98
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzDecompress(%struct.bz_stream* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.bz_stream*, align 8
  %4 = alloca %struct.DState*, align 8
  %5 = alloca i32, align 4
  store %struct.bz_stream* %0, %struct.bz_stream** %3, align 8
  %6 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %7 = icmp eq %struct.bz_stream* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 -2, i32* %2, align 4
  br label %163

9:                                                ; preds = %1
  %10 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %11 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %10, i32 0, i32 8
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast i8* %12 to %struct.DState*
  store %struct.DState* %13, %struct.DState** %4, align 8
  %14 = load %struct.DState*, %struct.DState** %4, align 8
  %15 = icmp eq %struct.DState* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %9
  store i32 -2, i32* %2, align 4
  br label %163

17:                                               ; preds = %9
  %18 = load %struct.DState*, %struct.DState** %4, align 8
  %19 = getelementptr inbounds %struct.DState, %struct.DState* %18, i32 0, i32 0
  %20 = load %struct.bz_stream*, %struct.bz_stream** %19, align 8
  %21 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %22 = icmp ne %struct.bz_stream* %20, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %17
  store i32 -2, i32* %2, align 4
  br label %163

24:                                               ; preds = %17
  br label %25

25:                                               ; preds = %24, %162
  %26 = load %struct.DState*, %struct.DState** %4, align 8
  %27 = getelementptr inbounds %struct.DState, %struct.DState* %26, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  store i32 -1, i32* %2, align 4
  br label %163

31:                                               ; preds = %25
  %32 = load %struct.DState*, %struct.DState** %4, align 8
  %33 = getelementptr inbounds %struct.DState, %struct.DState* %32, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 2
  br i1 %35, label %36, label %119

36:                                               ; preds = %31
  %37 = load %struct.DState*, %struct.DState** %4, align 8
  %38 = getelementptr inbounds %struct.DState, %struct.DState* %37, i32 0, i32 10
  %39 = load i8, i8* %38, align 4
  %40 = icmp ne i8 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %36
  %42 = load %struct.DState*, %struct.DState** %4, align 8
  call void @unRLE_obuf_to_output_SMALL(%struct.DState* %42)
  br label %45

43:                                               ; preds = %36
  %44 = load %struct.DState*, %struct.DState** %4, align 8
  call void @unRLE_obuf_to_output_FAST(%struct.DState* %44)
  br label %45

45:                                               ; preds = %43, %41
  %46 = load %struct.DState*, %struct.DState** %4, align 8
  %47 = getelementptr inbounds %struct.DState, %struct.DState* %46, i32 0, i32 17
  %48 = load i32, i32* %47, align 4
  %49 = load %struct.DState*, %struct.DState** %4, align 8
  %50 = getelementptr inbounds %struct.DState, %struct.DState* %49, i32 0, i32 51
  %51 = load i32, i32* %50, align 8
  %52 = add nsw i32 %51, 1
  %53 = icmp eq i32 %48, %52
  br i1 %53, label %54, label %117

54:                                               ; preds = %45
  %55 = load %struct.DState*, %struct.DState** %4, align 8
  %56 = getelementptr inbounds %struct.DState, %struct.DState* %55, i32 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %117

59:                                               ; preds = %54
  %60 = load %struct.DState*, %struct.DState** %4, align 8
  %61 = getelementptr inbounds %struct.DState, %struct.DState* %60, i32 0, i32 25
  %62 = load i32, i32* %61, align 8
  %63 = xor i32 %62, -1
  %64 = load %struct.DState*, %struct.DState** %4, align 8
  %65 = getelementptr inbounds %struct.DState, %struct.DState* %64, i32 0, i32 25
  store i32 %63, i32* %65, align 8
  %66 = load %struct.DState*, %struct.DState** %4, align 8
  %67 = getelementptr inbounds %struct.DState, %struct.DState* %66, i32 0, i32 12
  %68 = load i32, i32* %67, align 4
  %69 = icmp sge i32 %68, 3
  br i1 %69, label %70, label %79

70:                                               ; preds = %59
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %72 = load %struct.DState*, %struct.DState** %4, align 8
  %73 = getelementptr inbounds %struct.DState, %struct.DState* %72, i32 0, i32 23
  %74 = load i32, i32* %73, align 8
  %75 = load %struct.DState*, %struct.DState** %4, align 8
  %76 = getelementptr inbounds %struct.DState, %struct.DState* %75, i32 0, i32 25
  %77 = load i32, i32* %76, align 8
  %78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %71, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i32 %74, i32 %77)
  br label %79

79:                                               ; preds = %70, %59
  %80 = load %struct.DState*, %struct.DState** %4, align 8
  %81 = getelementptr inbounds %struct.DState, %struct.DState* %80, i32 0, i32 12
  %82 = load i32, i32* %81, align 4
  %83 = icmp sge i32 %82, 2
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %86 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %85, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0))
  br label %87

87:                                               ; preds = %84, %79
  %88 = load %struct.DState*, %struct.DState** %4, align 8
  %89 = getelementptr inbounds %struct.DState, %struct.DState* %88, i32 0, i32 25
  %90 = load i32, i32* %89, align 8
  %91 = load %struct.DState*, %struct.DState** %4, align 8
  %92 = getelementptr inbounds %struct.DState, %struct.DState* %91, i32 0, i32 23
  %93 = load i32, i32* %92, align 8
  %94 = icmp ne i32 %90, %93
  br i1 %94, label %95, label %96

95:                                               ; preds = %87
  store i32 -4, i32* %2, align 4
  br label %163

96:                                               ; preds = %87
  %97 = load %struct.DState*, %struct.DState** %4, align 8
  %98 = getelementptr inbounds %struct.DState, %struct.DState* %97, i32 0, i32 26
  %99 = load i32, i32* %98, align 4
  %100 = shl i32 %99, 1
  %101 = load %struct.DState*, %struct.DState** %4, align 8
  %102 = getelementptr inbounds %struct.DState, %struct.DState* %101, i32 0, i32 26
  %103 = load i32, i32* %102, align 4
  %104 = lshr i32 %103, 31
  %105 = or i32 %100, %104
  %106 = load %struct.DState*, %struct.DState** %4, align 8
  %107 = getelementptr inbounds %struct.DState, %struct.DState* %106, i32 0, i32 26
  store i32 %105, i32* %107, align 4
  %108 = load %struct.DState*, %struct.DState** %4, align 8
  %109 = getelementptr inbounds %struct.DState, %struct.DState* %108, i32 0, i32 25
  %110 = load i32, i32* %109, align 8
  %111 = load %struct.DState*, %struct.DState** %4, align 8
  %112 = getelementptr inbounds %struct.DState, %struct.DState* %111, i32 0, i32 26
  %113 = load i32, i32* %112, align 4
  %114 = xor i32 %113, %110
  store i32 %114, i32* %112, align 4
  %115 = load %struct.DState*, %struct.DState** %4, align 8
  %116 = getelementptr inbounds %struct.DState, %struct.DState* %115, i32 0, i32 1
  store i32 14, i32* %116, align 8
  br label %118

117:                                              ; preds = %54, %45
  store i32 0, i32* %2, align 4
  br label %163

118:                                              ; preds = %96
  br label %119

119:                                              ; preds = %118, %31
  %120 = load %struct.DState*, %struct.DState** %4, align 8
  %121 = getelementptr inbounds %struct.DState, %struct.DState* %120, i32 0, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = icmp sge i32 %122, 10
  br i1 %123, label %124, label %162

124:                                              ; preds = %119
  %125 = load %struct.DState*, %struct.DState** %4, align 8
  %126 = call i32 @BZ2_decompress(%struct.DState* %125)
  store i32 %126, i32* %5, align 4
  %127 = load i32, i32* %5, align 4
  %128 = icmp eq i32 %127, 4
  br i1 %128, label %129, label %154

129:                                              ; preds = %124
  %130 = load %struct.DState*, %struct.DState** %4, align 8
  %131 = getelementptr inbounds %struct.DState, %struct.DState* %130, i32 0, i32 12
  %132 = load i32, i32* %131, align 4
  %133 = icmp sge i32 %132, 3
  br i1 %133, label %134, label %143

134:                                              ; preds = %129
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %136 = load %struct.DState*, %struct.DState** %4, align 8
  %137 = getelementptr inbounds %struct.DState, %struct.DState* %136, i32 0, i32 24
  %138 = load i32, i32* %137, align 4
  %139 = load %struct.DState*, %struct.DState** %4, align 8
  %140 = getelementptr inbounds %struct.DState, %struct.DState* %139, i32 0, i32 26
  %141 = load i32, i32* %140, align 4
  %142 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %135, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 %138, i32 %141)
  br label %143

143:                                              ; preds = %134, %129
  %144 = load %struct.DState*, %struct.DState** %4, align 8
  %145 = getelementptr inbounds %struct.DState, %struct.DState* %144, i32 0, i32 26
  %146 = load i32, i32* %145, align 4
  %147 = load %struct.DState*, %struct.DState** %4, align 8
  %148 = getelementptr inbounds %struct.DState, %struct.DState* %147, i32 0, i32 24
  %149 = load i32, i32* %148, align 4
  %150 = icmp ne i32 %146, %149
  br i1 %150, label %151, label %152

151:                                              ; preds = %143
  store i32 -4, i32* %2, align 4
  br label %163

152:                                              ; preds = %143
  %153 = load i32, i32* %5, align 4
  store i32 %153, i32* %2, align 4
  br label %163

154:                                              ; preds = %124
  %155 = load %struct.DState*, %struct.DState** %4, align 8
  %156 = getelementptr inbounds %struct.DState, %struct.DState* %155, i32 0, i32 1
  %157 = load i32, i32* %156, align 8
  %158 = icmp ne i32 %157, 2
  br i1 %158, label %159, label %161

159:                                              ; preds = %154
  %160 = load i32, i32* %5, align 4
  store i32 %160, i32* %2, align 4
  br label %163

161:                                              ; preds = %154
  br label %162

162:                                              ; preds = %161, %119
  br label %25

163:                                              ; preds = %159, %152, %151, %117, %95, %30, %23, %16, %8
  %164 = load i32, i32* %2, align 4
  ret i32 %164
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @unRLE_obuf_to_output_SMALL(%struct.DState* %0) #0 {
  %2 = alloca %struct.DState*, align 8
  %3 = alloca i8, align 1
  store %struct.DState* %0, %struct.DState** %2, align 8
  %4 = load %struct.DState*, %struct.DState** %2, align 8
  %5 = getelementptr inbounds %struct.DState, %struct.DState* %4, i32 0, i32 4
  %6 = load i8, i8* %5, align 4
  %7 = icmp ne i8 %6, 0
  br i1 %7, label %8, label %603

8:                                                ; preds = %1
  br label %9

9:                                                ; preds = %8, %199, %207, %307, %315, %415, %423, %584
  br label %10

10:                                               ; preds = %9, %87
  %11 = load %struct.DState*, %struct.DState** %2, align 8
  %12 = getelementptr inbounds %struct.DState, %struct.DState* %11, i32 0, i32 0
  %13 = load %struct.bz_stream*, %struct.bz_stream** %12, align 8
  %14 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %13, i32 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %10
  br label %998

18:                                               ; preds = %10
  %19 = load %struct.DState*, %struct.DState** %2, align 8
  %20 = getelementptr inbounds %struct.DState, %struct.DState* %19, i32 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %18
  br label %88

24:                                               ; preds = %18
  %25 = load %struct.DState*, %struct.DState** %2, align 8
  %26 = getelementptr inbounds %struct.DState, %struct.DState* %25, i32 0, i32 2
  %27 = load i8, i8* %26, align 4
  %28 = load %struct.DState*, %struct.DState** %2, align 8
  %29 = getelementptr inbounds %struct.DState, %struct.DState* %28, i32 0, i32 0
  %30 = load %struct.bz_stream*, %struct.bz_stream** %29, align 8
  %31 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %30, i32 0, i32 4
  %32 = load i8*, i8** %31, align 8
  store i8 %27, i8* %32, align 1
  %33 = load %struct.DState*, %struct.DState** %2, align 8
  %34 = getelementptr inbounds %struct.DState, %struct.DState* %33, i32 0, i32 25
  %35 = load i32, i32* %34, align 8
  %36 = shl i32 %35, 8
  %37 = load %struct.DState*, %struct.DState** %2, align 8
  %38 = getelementptr inbounds %struct.DState, %struct.DState* %37, i32 0, i32 25
  %39 = load i32, i32* %38, align 8
  %40 = lshr i32 %39, 24
  %41 = load %struct.DState*, %struct.DState** %2, align 8
  %42 = getelementptr inbounds %struct.DState, %struct.DState* %41, i32 0, i32 2
  %43 = load i8, i8* %42, align 4
  %44 = zext i8 %43 to i32
  %45 = xor i32 %40, %44
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = xor i32 %36, %48
  %50 = load %struct.DState*, %struct.DState** %2, align 8
  %51 = getelementptr inbounds %struct.DState, %struct.DState* %50, i32 0, i32 25
  store i32 %49, i32* %51, align 8
  %52 = load %struct.DState*, %struct.DState** %2, align 8
  %53 = getelementptr inbounds %struct.DState, %struct.DState* %52, i32 0, i32 3
  %54 = load i32, i32* %53, align 8
  %55 = add nsw i32 %54, -1
  store i32 %55, i32* %53, align 8
  %56 = load %struct.DState*, %struct.DState** %2, align 8
  %57 = getelementptr inbounds %struct.DState, %struct.DState* %56, i32 0, i32 0
  %58 = load %struct.bz_stream*, %struct.bz_stream** %57, align 8
  %59 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %58, i32 0, i32 4
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds i8, i8* %60, i32 1
  store i8* %61, i8** %59, align 8
  %62 = load %struct.DState*, %struct.DState** %2, align 8
  %63 = getelementptr inbounds %struct.DState, %struct.DState* %62, i32 0, i32 0
  %64 = load %struct.bz_stream*, %struct.bz_stream** %63, align 8
  %65 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %64, i32 0, i32 5
  %66 = load i32, i32* %65, align 8
  %67 = add i32 %66, -1
  store i32 %67, i32* %65, align 8
  %68 = load %struct.DState*, %struct.DState** %2, align 8
  %69 = getelementptr inbounds %struct.DState, %struct.DState* %68, i32 0, i32 0
  %70 = load %struct.bz_stream*, %struct.bz_stream** %69, align 8
  %71 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %70, i32 0, i32 6
  %72 = load i32, i32* %71, align 4
  %73 = add i32 %72, 1
  store i32 %73, i32* %71, align 4
  %74 = load %struct.DState*, %struct.DState** %2, align 8
  %75 = getelementptr inbounds %struct.DState, %struct.DState* %74, i32 0, i32 0
  %76 = load %struct.bz_stream*, %struct.bz_stream** %75, align 8
  %77 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %76, i32 0, i32 6
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %87

80:                                               ; preds = %24
  %81 = load %struct.DState*, %struct.DState** %2, align 8
  %82 = getelementptr inbounds %struct.DState, %struct.DState* %81, i32 0, i32 0
  %83 = load %struct.bz_stream*, %struct.bz_stream** %82, align 8
  %84 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %83, i32 0, i32 7
  %85 = load i32, i32* %84, align 8
  %86 = add i32 %85, 1
  store i32 %86, i32* %84, align 8
  br label %87

87:                                               ; preds = %80, %24
  br label %10

88:                                               ; preds = %23
  %89 = load %struct.DState*, %struct.DState** %2, align 8
  %90 = getelementptr inbounds %struct.DState, %struct.DState* %89, i32 0, i32 17
  %91 = load i32, i32* %90, align 4
  %92 = load %struct.DState*, %struct.DState** %2, align 8
  %93 = getelementptr inbounds %struct.DState, %struct.DState* %92, i32 0, i32 51
  %94 = load i32, i32* %93, align 8
  %95 = add nsw i32 %94, 1
  %96 = icmp eq i32 %91, %95
  br i1 %96, label %97, label %98

97:                                               ; preds = %88
  br label %998

98:                                               ; preds = %88
  %99 = load %struct.DState*, %struct.DState** %2, align 8
  %100 = getelementptr inbounds %struct.DState, %struct.DState* %99, i32 0, i32 3
  store i32 1, i32* %100, align 8
  %101 = load %struct.DState*, %struct.DState** %2, align 8
  %102 = getelementptr inbounds %struct.DState, %struct.DState* %101, i32 0, i32 15
  %103 = load i32, i32* %102, align 8
  %104 = trunc i32 %103 to i8
  %105 = load %struct.DState*, %struct.DState** %2, align 8
  %106 = getelementptr inbounds %struct.DState, %struct.DState* %105, i32 0, i32 2
  store i8 %104, i8* %106, align 4
  %107 = load %struct.DState*, %struct.DState** %2, align 8
  %108 = getelementptr inbounds %struct.DState, %struct.DState* %107, i32 0, i32 14
  %109 = load i32, i32* %108, align 4
  %110 = load %struct.DState*, %struct.DState** %2, align 8
  %111 = getelementptr inbounds %struct.DState, %struct.DState* %110, i32 0, i32 18
  %112 = getelementptr inbounds [257 x i32], [257 x i32]* %111, i64 0, i64 0
  %113 = call i32 @BZ2_indexIntoF(i32 %109, i32* %112)
  %114 = trunc i32 %113 to i8
  store i8 %114, i8* %3, align 1
  %115 = load %struct.DState*, %struct.DState** %2, align 8
  %116 = getelementptr inbounds %struct.DState, %struct.DState* %115, i32 0, i32 21
  %117 = load i16*, i16** %116, align 8
  %118 = load %struct.DState*, %struct.DState** %2, align 8
  %119 = getelementptr inbounds %struct.DState, %struct.DState* %118, i32 0, i32 14
  %120 = load i32, i32* %119, align 4
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds i16, i16* %117, i64 %121
  %123 = load i16, i16* %122, align 2
  %124 = zext i16 %123 to i32
  %125 = load %struct.DState*, %struct.DState** %2, align 8
  %126 = getelementptr inbounds %struct.DState, %struct.DState* %125, i32 0, i32 22
  %127 = load i8*, i8** %126, align 8
  %128 = load %struct.DState*, %struct.DState** %2, align 8
  %129 = getelementptr inbounds %struct.DState, %struct.DState* %128, i32 0, i32 14
  %130 = load i32, i32* %129, align 4
  %131 = lshr i32 %130, 1
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds i8, i8* %127, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = load %struct.DState*, %struct.DState** %2, align 8
  %137 = getelementptr inbounds %struct.DState, %struct.DState* %136, i32 0, i32 14
  %138 = load i32, i32* %137, align 4
  %139 = shl i32 %138, 2
  %140 = and i32 %139, 4
  %141 = lshr i32 %135, %140
  %142 = and i32 %141, 15
  %143 = shl i32 %142, 16
  %144 = or i32 %124, %143
  %145 = load %struct.DState*, %struct.DState** %2, align 8
  %146 = getelementptr inbounds %struct.DState, %struct.DState* %145, i32 0, i32 14
  store i32 %144, i32* %146, align 4
  %147 = load %struct.DState*, %struct.DState** %2, align 8
  %148 = getelementptr inbounds %struct.DState, %struct.DState* %147, i32 0, i32 5
  %149 = load i32, i32* %148, align 8
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %172

151:                                              ; preds = %98
  %152 = load %struct.DState*, %struct.DState** %2, align 8
  %153 = getelementptr inbounds %struct.DState, %struct.DState* %152, i32 0, i32 6
  %154 = load i32, i32* %153, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %155
  %157 = load i32, i32* %156, align 4
  %158 = load %struct.DState*, %struct.DState** %2, align 8
  %159 = getelementptr inbounds %struct.DState, %struct.DState* %158, i32 0, i32 5
  store i32 %157, i32* %159, align 8
  %160 = load %struct.DState*, %struct.DState** %2, align 8
  %161 = getelementptr inbounds %struct.DState, %struct.DState* %160, i32 0, i32 6
  %162 = load i32, i32* %161, align 4
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %161, align 4
  %164 = load %struct.DState*, %struct.DState** %2, align 8
  %165 = getelementptr inbounds %struct.DState, %struct.DState* %164, i32 0, i32 6
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %166, 512
  br i1 %167, label %168, label %171

168:                                              ; preds = %151
  %169 = load %struct.DState*, %struct.DState** %2, align 8
  %170 = getelementptr inbounds %struct.DState, %struct.DState* %169, i32 0, i32 6
  store i32 0, i32* %170, align 4
  br label %171

171:                                              ; preds = %168, %151
  br label %172

172:                                              ; preds = %171, %98
  %173 = load %struct.DState*, %struct.DState** %2, align 8
  %174 = getelementptr inbounds %struct.DState, %struct.DState* %173, i32 0, i32 5
  %175 = load i32, i32* %174, align 8
  %176 = add nsw i32 %175, -1
  store i32 %176, i32* %174, align 8
  %177 = load %struct.DState*, %struct.DState** %2, align 8
  %178 = getelementptr inbounds %struct.DState, %struct.DState* %177, i32 0, i32 5
  %179 = load i32, i32* %178, align 8
  %180 = icmp eq i32 %179, 1
  %181 = zext i1 %180 to i64
  %182 = select i1 %180, i32 1, i32 0
  %183 = load i8, i8* %3, align 1
  %184 = zext i8 %183 to i32
  %185 = xor i32 %184, %182
  %186 = trunc i32 %185 to i8
  store i8 %186, i8* %3, align 1
  %187 = load %struct.DState*, %struct.DState** %2, align 8
  %188 = getelementptr inbounds %struct.DState, %struct.DState* %187, i32 0, i32 17
  %189 = load i32, i32* %188, align 4
  %190 = add nsw i32 %189, 1
  store i32 %190, i32* %188, align 4
  %191 = load %struct.DState*, %struct.DState** %2, align 8
  %192 = getelementptr inbounds %struct.DState, %struct.DState* %191, i32 0, i32 17
  %193 = load i32, i32* %192, align 4
  %194 = load %struct.DState*, %struct.DState** %2, align 8
  %195 = getelementptr inbounds %struct.DState, %struct.DState* %194, i32 0, i32 51
  %196 = load i32, i32* %195, align 8
  %197 = add nsw i32 %196, 1
  %198 = icmp eq i32 %193, %197
  br i1 %198, label %199, label %200

199:                                              ; preds = %172
  br label %9

200:                                              ; preds = %172
  %201 = load i8, i8* %3, align 1
  %202 = zext i8 %201 to i32
  %203 = load %struct.DState*, %struct.DState** %2, align 8
  %204 = getelementptr inbounds %struct.DState, %struct.DState* %203, i32 0, i32 15
  %205 = load i32, i32* %204, align 8
  %206 = icmp ne i32 %202, %205
  br i1 %206, label %207, label %212

207:                                              ; preds = %200
  %208 = load i8, i8* %3, align 1
  %209 = zext i8 %208 to i32
  %210 = load %struct.DState*, %struct.DState** %2, align 8
  %211 = getelementptr inbounds %struct.DState, %struct.DState* %210, i32 0, i32 15
  store i32 %209, i32* %211, align 8
  br label %9

212:                                              ; preds = %200
  %213 = load %struct.DState*, %struct.DState** %2, align 8
  %214 = getelementptr inbounds %struct.DState, %struct.DState* %213, i32 0, i32 3
  store i32 2, i32* %214, align 8
  %215 = load %struct.DState*, %struct.DState** %2, align 8
  %216 = getelementptr inbounds %struct.DState, %struct.DState* %215, i32 0, i32 14
  %217 = load i32, i32* %216, align 4
  %218 = load %struct.DState*, %struct.DState** %2, align 8
  %219 = getelementptr inbounds %struct.DState, %struct.DState* %218, i32 0, i32 18
  %220 = getelementptr inbounds [257 x i32], [257 x i32]* %219, i64 0, i64 0
  %221 = call i32 @BZ2_indexIntoF(i32 %217, i32* %220)
  %222 = trunc i32 %221 to i8
  store i8 %222, i8* %3, align 1
  %223 = load %struct.DState*, %struct.DState** %2, align 8
  %224 = getelementptr inbounds %struct.DState, %struct.DState* %223, i32 0, i32 21
  %225 = load i16*, i16** %224, align 8
  %226 = load %struct.DState*, %struct.DState** %2, align 8
  %227 = getelementptr inbounds %struct.DState, %struct.DState* %226, i32 0, i32 14
  %228 = load i32, i32* %227, align 4
  %229 = zext i32 %228 to i64
  %230 = getelementptr inbounds i16, i16* %225, i64 %229
  %231 = load i16, i16* %230, align 2
  %232 = zext i16 %231 to i32
  %233 = load %struct.DState*, %struct.DState** %2, align 8
  %234 = getelementptr inbounds %struct.DState, %struct.DState* %233, i32 0, i32 22
  %235 = load i8*, i8** %234, align 8
  %236 = load %struct.DState*, %struct.DState** %2, align 8
  %237 = getelementptr inbounds %struct.DState, %struct.DState* %236, i32 0, i32 14
  %238 = load i32, i32* %237, align 4
  %239 = lshr i32 %238, 1
  %240 = zext i32 %239 to i64
  %241 = getelementptr inbounds i8, i8* %235, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i32
  %244 = load %struct.DState*, %struct.DState** %2, align 8
  %245 = getelementptr inbounds %struct.DState, %struct.DState* %244, i32 0, i32 14
  %246 = load i32, i32* %245, align 4
  %247 = shl i32 %246, 2
  %248 = and i32 %247, 4
  %249 = lshr i32 %243, %248
  %250 = and i32 %249, 15
  %251 = shl i32 %250, 16
  %252 = or i32 %232, %251
  %253 = load %struct.DState*, %struct.DState** %2, align 8
  %254 = getelementptr inbounds %struct.DState, %struct.DState* %253, i32 0, i32 14
  store i32 %252, i32* %254, align 4
  %255 = load %struct.DState*, %struct.DState** %2, align 8
  %256 = getelementptr inbounds %struct.DState, %struct.DState* %255, i32 0, i32 5
  %257 = load i32, i32* %256, align 8
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %280

259:                                              ; preds = %212
  %260 = load %struct.DState*, %struct.DState** %2, align 8
  %261 = getelementptr inbounds %struct.DState, %struct.DState* %260, i32 0, i32 6
  %262 = load i32, i32* %261, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %263
  %265 = load i32, i32* %264, align 4
  %266 = load %struct.DState*, %struct.DState** %2, align 8
  %267 = getelementptr inbounds %struct.DState, %struct.DState* %266, i32 0, i32 5
  store i32 %265, i32* %267, align 8
  %268 = load %struct.DState*, %struct.DState** %2, align 8
  %269 = getelementptr inbounds %struct.DState, %struct.DState* %268, i32 0, i32 6
  %270 = load i32, i32* %269, align 4
  %271 = add nsw i32 %270, 1
  store i32 %271, i32* %269, align 4
  %272 = load %struct.DState*, %struct.DState** %2, align 8
  %273 = getelementptr inbounds %struct.DState, %struct.DState* %272, i32 0, i32 6
  %274 = load i32, i32* %273, align 4
  %275 = icmp eq i32 %274, 512
  br i1 %275, label %276, label %279

276:                                              ; preds = %259
  %277 = load %struct.DState*, %struct.DState** %2, align 8
  %278 = getelementptr inbounds %struct.DState, %struct.DState* %277, i32 0, i32 6
  store i32 0, i32* %278, align 4
  br label %279

279:                                              ; preds = %276, %259
  br label %280

280:                                              ; preds = %279, %212
  %281 = load %struct.DState*, %struct.DState** %2, align 8
  %282 = getelementptr inbounds %struct.DState, %struct.DState* %281, i32 0, i32 5
  %283 = load i32, i32* %282, align 8
  %284 = add nsw i32 %283, -1
  store i32 %284, i32* %282, align 8
  %285 = load %struct.DState*, %struct.DState** %2, align 8
  %286 = getelementptr inbounds %struct.DState, %struct.DState* %285, i32 0, i32 5
  %287 = load i32, i32* %286, align 8
  %288 = icmp eq i32 %287, 1
  %289 = zext i1 %288 to i64
  %290 = select i1 %288, i32 1, i32 0
  %291 = load i8, i8* %3, align 1
  %292 = zext i8 %291 to i32
  %293 = xor i32 %292, %290
  %294 = trunc i32 %293 to i8
  store i8 %294, i8* %3, align 1
  %295 = load %struct.DState*, %struct.DState** %2, align 8
  %296 = getelementptr inbounds %struct.DState, %struct.DState* %295, i32 0, i32 17
  %297 = load i32, i32* %296, align 4
  %298 = add nsw i32 %297, 1
  store i32 %298, i32* %296, align 4
  %299 = load %struct.DState*, %struct.DState** %2, align 8
  %300 = getelementptr inbounds %struct.DState, %struct.DState* %299, i32 0, i32 17
  %301 = load i32, i32* %300, align 4
  %302 = load %struct.DState*, %struct.DState** %2, align 8
  %303 = getelementptr inbounds %struct.DState, %struct.DState* %302, i32 0, i32 51
  %304 = load i32, i32* %303, align 8
  %305 = add nsw i32 %304, 1
  %306 = icmp eq i32 %301, %305
  br i1 %306, label %307, label %308

307:                                              ; preds = %280
  br label %9

308:                                              ; preds = %280
  %309 = load i8, i8* %3, align 1
  %310 = zext i8 %309 to i32
  %311 = load %struct.DState*, %struct.DState** %2, align 8
  %312 = getelementptr inbounds %struct.DState, %struct.DState* %311, i32 0, i32 15
  %313 = load i32, i32* %312, align 8
  %314 = icmp ne i32 %310, %313
  br i1 %314, label %315, label %320

315:                                              ; preds = %308
  %316 = load i8, i8* %3, align 1
  %317 = zext i8 %316 to i32
  %318 = load %struct.DState*, %struct.DState** %2, align 8
  %319 = getelementptr inbounds %struct.DState, %struct.DState* %318, i32 0, i32 15
  store i32 %317, i32* %319, align 8
  br label %9

320:                                              ; preds = %308
  %321 = load %struct.DState*, %struct.DState** %2, align 8
  %322 = getelementptr inbounds %struct.DState, %struct.DState* %321, i32 0, i32 3
  store i32 3, i32* %322, align 8
  %323 = load %struct.DState*, %struct.DState** %2, align 8
  %324 = getelementptr inbounds %struct.DState, %struct.DState* %323, i32 0, i32 14
  %325 = load i32, i32* %324, align 4
  %326 = load %struct.DState*, %struct.DState** %2, align 8
  %327 = getelementptr inbounds %struct.DState, %struct.DState* %326, i32 0, i32 18
  %328 = getelementptr inbounds [257 x i32], [257 x i32]* %327, i64 0, i64 0
  %329 = call i32 @BZ2_indexIntoF(i32 %325, i32* %328)
  %330 = trunc i32 %329 to i8
  store i8 %330, i8* %3, align 1
  %331 = load %struct.DState*, %struct.DState** %2, align 8
  %332 = getelementptr inbounds %struct.DState, %struct.DState* %331, i32 0, i32 21
  %333 = load i16*, i16** %332, align 8
  %334 = load %struct.DState*, %struct.DState** %2, align 8
  %335 = getelementptr inbounds %struct.DState, %struct.DState* %334, i32 0, i32 14
  %336 = load i32, i32* %335, align 4
  %337 = zext i32 %336 to i64
  %338 = getelementptr inbounds i16, i16* %333, i64 %337
  %339 = load i16, i16* %338, align 2
  %340 = zext i16 %339 to i32
  %341 = load %struct.DState*, %struct.DState** %2, align 8
  %342 = getelementptr inbounds %struct.DState, %struct.DState* %341, i32 0, i32 22
  %343 = load i8*, i8** %342, align 8
  %344 = load %struct.DState*, %struct.DState** %2, align 8
  %345 = getelementptr inbounds %struct.DState, %struct.DState* %344, i32 0, i32 14
  %346 = load i32, i32* %345, align 4
  %347 = lshr i32 %346, 1
  %348 = zext i32 %347 to i64
  %349 = getelementptr inbounds i8, i8* %343, i64 %348
  %350 = load i8, i8* %349, align 1
  %351 = zext i8 %350 to i32
  %352 = load %struct.DState*, %struct.DState** %2, align 8
  %353 = getelementptr inbounds %struct.DState, %struct.DState* %352, i32 0, i32 14
  %354 = load i32, i32* %353, align 4
  %355 = shl i32 %354, 2
  %356 = and i32 %355, 4
  %357 = lshr i32 %351, %356
  %358 = and i32 %357, 15
  %359 = shl i32 %358, 16
  %360 = or i32 %340, %359
  %361 = load %struct.DState*, %struct.DState** %2, align 8
  %362 = getelementptr inbounds %struct.DState, %struct.DState* %361, i32 0, i32 14
  store i32 %360, i32* %362, align 4
  %363 = load %struct.DState*, %struct.DState** %2, align 8
  %364 = getelementptr inbounds %struct.DState, %struct.DState* %363, i32 0, i32 5
  %365 = load i32, i32* %364, align 8
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %388

367:                                              ; preds = %320
  %368 = load %struct.DState*, %struct.DState** %2, align 8
  %369 = getelementptr inbounds %struct.DState, %struct.DState* %368, i32 0, i32 6
  %370 = load i32, i32* %369, align 4
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %371
  %373 = load i32, i32* %372, align 4
  %374 = load %struct.DState*, %struct.DState** %2, align 8
  %375 = getelementptr inbounds %struct.DState, %struct.DState* %374, i32 0, i32 5
  store i32 %373, i32* %375, align 8
  %376 = load %struct.DState*, %struct.DState** %2, align 8
  %377 = getelementptr inbounds %struct.DState, %struct.DState* %376, i32 0, i32 6
  %378 = load i32, i32* %377, align 4
  %379 = add nsw i32 %378, 1
  store i32 %379, i32* %377, align 4
  %380 = load %struct.DState*, %struct.DState** %2, align 8
  %381 = getelementptr inbounds %struct.DState, %struct.DState* %380, i32 0, i32 6
  %382 = load i32, i32* %381, align 4
  %383 = icmp eq i32 %382, 512
  br i1 %383, label %384, label %387

384:                                              ; preds = %367
  %385 = load %struct.DState*, %struct.DState** %2, align 8
  %386 = getelementptr inbounds %struct.DState, %struct.DState* %385, i32 0, i32 6
  store i32 0, i32* %386, align 4
  br label %387

387:                                              ; preds = %384, %367
  br label %388

388:                                              ; preds = %387, %320
  %389 = load %struct.DState*, %struct.DState** %2, align 8
  %390 = getelementptr inbounds %struct.DState, %struct.DState* %389, i32 0, i32 5
  %391 = load i32, i32* %390, align 8
  %392 = add nsw i32 %391, -1
  store i32 %392, i32* %390, align 8
  %393 = load %struct.DState*, %struct.DState** %2, align 8
  %394 = getelementptr inbounds %struct.DState, %struct.DState* %393, i32 0, i32 5
  %395 = load i32, i32* %394, align 8
  %396 = icmp eq i32 %395, 1
  %397 = zext i1 %396 to i64
  %398 = select i1 %396, i32 1, i32 0
  %399 = load i8, i8* %3, align 1
  %400 = zext i8 %399 to i32
  %401 = xor i32 %400, %398
  %402 = trunc i32 %401 to i8
  store i8 %402, i8* %3, align 1
  %403 = load %struct.DState*, %struct.DState** %2, align 8
  %404 = getelementptr inbounds %struct.DState, %struct.DState* %403, i32 0, i32 17
  %405 = load i32, i32* %404, align 4
  %406 = add nsw i32 %405, 1
  store i32 %406, i32* %404, align 4
  %407 = load %struct.DState*, %struct.DState** %2, align 8
  %408 = getelementptr inbounds %struct.DState, %struct.DState* %407, i32 0, i32 17
  %409 = load i32, i32* %408, align 4
  %410 = load %struct.DState*, %struct.DState** %2, align 8
  %411 = getelementptr inbounds %struct.DState, %struct.DState* %410, i32 0, i32 51
  %412 = load i32, i32* %411, align 8
  %413 = add nsw i32 %412, 1
  %414 = icmp eq i32 %409, %413
  br i1 %414, label %415, label %416

415:                                              ; preds = %388
  br label %9

416:                                              ; preds = %388
  %417 = load i8, i8* %3, align 1
  %418 = zext i8 %417 to i32
  %419 = load %struct.DState*, %struct.DState** %2, align 8
  %420 = getelementptr inbounds %struct.DState, %struct.DState* %419, i32 0, i32 15
  %421 = load i32, i32* %420, align 8
  %422 = icmp ne i32 %418, %421
  br i1 %422, label %423, label %428

423:                                              ; preds = %416
  %424 = load i8, i8* %3, align 1
  %425 = zext i8 %424 to i32
  %426 = load %struct.DState*, %struct.DState** %2, align 8
  %427 = getelementptr inbounds %struct.DState, %struct.DState* %426, i32 0, i32 15
  store i32 %425, i32* %427, align 8
  br label %9

428:                                              ; preds = %416
  %429 = load %struct.DState*, %struct.DState** %2, align 8
  %430 = getelementptr inbounds %struct.DState, %struct.DState* %429, i32 0, i32 14
  %431 = load i32, i32* %430, align 4
  %432 = load %struct.DState*, %struct.DState** %2, align 8
  %433 = getelementptr inbounds %struct.DState, %struct.DState* %432, i32 0, i32 18
  %434 = getelementptr inbounds [257 x i32], [257 x i32]* %433, i64 0, i64 0
  %435 = call i32 @BZ2_indexIntoF(i32 %431, i32* %434)
  %436 = trunc i32 %435 to i8
  store i8 %436, i8* %3, align 1
  %437 = load %struct.DState*, %struct.DState** %2, align 8
  %438 = getelementptr inbounds %struct.DState, %struct.DState* %437, i32 0, i32 21
  %439 = load i16*, i16** %438, align 8
  %440 = load %struct.DState*, %struct.DState** %2, align 8
  %441 = getelementptr inbounds %struct.DState, %struct.DState* %440, i32 0, i32 14
  %442 = load i32, i32* %441, align 4
  %443 = zext i32 %442 to i64
  %444 = getelementptr inbounds i16, i16* %439, i64 %443
  %445 = load i16, i16* %444, align 2
  %446 = zext i16 %445 to i32
  %447 = load %struct.DState*, %struct.DState** %2, align 8
  %448 = getelementptr inbounds %struct.DState, %struct.DState* %447, i32 0, i32 22
  %449 = load i8*, i8** %448, align 8
  %450 = load %struct.DState*, %struct.DState** %2, align 8
  %451 = getelementptr inbounds %struct.DState, %struct.DState* %450, i32 0, i32 14
  %452 = load i32, i32* %451, align 4
  %453 = lshr i32 %452, 1
  %454 = zext i32 %453 to i64
  %455 = getelementptr inbounds i8, i8* %449, i64 %454
  %456 = load i8, i8* %455, align 1
  %457 = zext i8 %456 to i32
  %458 = load %struct.DState*, %struct.DState** %2, align 8
  %459 = getelementptr inbounds %struct.DState, %struct.DState* %458, i32 0, i32 14
  %460 = load i32, i32* %459, align 4
  %461 = shl i32 %460, 2
  %462 = and i32 %461, 4
  %463 = lshr i32 %457, %462
  %464 = and i32 %463, 15
  %465 = shl i32 %464, 16
  %466 = or i32 %446, %465
  %467 = load %struct.DState*, %struct.DState** %2, align 8
  %468 = getelementptr inbounds %struct.DState, %struct.DState* %467, i32 0, i32 14
  store i32 %466, i32* %468, align 4
  %469 = load %struct.DState*, %struct.DState** %2, align 8
  %470 = getelementptr inbounds %struct.DState, %struct.DState* %469, i32 0, i32 5
  %471 = load i32, i32* %470, align 8
  %472 = icmp eq i32 %471, 0
  br i1 %472, label %473, label %494

473:                                              ; preds = %428
  %474 = load %struct.DState*, %struct.DState** %2, align 8
  %475 = getelementptr inbounds %struct.DState, %struct.DState* %474, i32 0, i32 6
  %476 = load i32, i32* %475, align 4
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %477
  %479 = load i32, i32* %478, align 4
  %480 = load %struct.DState*, %struct.DState** %2, align 8
  %481 = getelementptr inbounds %struct.DState, %struct.DState* %480, i32 0, i32 5
  store i32 %479, i32* %481, align 8
  %482 = load %struct.DState*, %struct.DState** %2, align 8
  %483 = getelementptr inbounds %struct.DState, %struct.DState* %482, i32 0, i32 6
  %484 = load i32, i32* %483, align 4
  %485 = add nsw i32 %484, 1
  store i32 %485, i32* %483, align 4
  %486 = load %struct.DState*, %struct.DState** %2, align 8
  %487 = getelementptr inbounds %struct.DState, %struct.DState* %486, i32 0, i32 6
  %488 = load i32, i32* %487, align 4
  %489 = icmp eq i32 %488, 512
  br i1 %489, label %490, label %493

490:                                              ; preds = %473
  %491 = load %struct.DState*, %struct.DState** %2, align 8
  %492 = getelementptr inbounds %struct.DState, %struct.DState* %491, i32 0, i32 6
  store i32 0, i32* %492, align 4
  br label %493

493:                                              ; preds = %490, %473
  br label %494

494:                                              ; preds = %493, %428
  %495 = load %struct.DState*, %struct.DState** %2, align 8
  %496 = getelementptr inbounds %struct.DState, %struct.DState* %495, i32 0, i32 5
  %497 = load i32, i32* %496, align 8
  %498 = add nsw i32 %497, -1
  store i32 %498, i32* %496, align 8
  %499 = load %struct.DState*, %struct.DState** %2, align 8
  %500 = getelementptr inbounds %struct.DState, %struct.DState* %499, i32 0, i32 5
  %501 = load i32, i32* %500, align 8
  %502 = icmp eq i32 %501, 1
  %503 = zext i1 %502 to i64
  %504 = select i1 %502, i32 1, i32 0
  %505 = load i8, i8* %3, align 1
  %506 = zext i8 %505 to i32
  %507 = xor i32 %506, %504
  %508 = trunc i32 %507 to i8
  store i8 %508, i8* %3, align 1
  %509 = load %struct.DState*, %struct.DState** %2, align 8
  %510 = getelementptr inbounds %struct.DState, %struct.DState* %509, i32 0, i32 17
  %511 = load i32, i32* %510, align 4
  %512 = add nsw i32 %511, 1
  store i32 %512, i32* %510, align 4
  %513 = load i8, i8* %3, align 1
  %514 = zext i8 %513 to i32
  %515 = add nsw i32 %514, 4
  %516 = load %struct.DState*, %struct.DState** %2, align 8
  %517 = getelementptr inbounds %struct.DState, %struct.DState* %516, i32 0, i32 3
  store i32 %515, i32* %517, align 8
  %518 = load %struct.DState*, %struct.DState** %2, align 8
  %519 = getelementptr inbounds %struct.DState, %struct.DState* %518, i32 0, i32 14
  %520 = load i32, i32* %519, align 4
  %521 = load %struct.DState*, %struct.DState** %2, align 8
  %522 = getelementptr inbounds %struct.DState, %struct.DState* %521, i32 0, i32 18
  %523 = getelementptr inbounds [257 x i32], [257 x i32]* %522, i64 0, i64 0
  %524 = call i32 @BZ2_indexIntoF(i32 %520, i32* %523)
  %525 = load %struct.DState*, %struct.DState** %2, align 8
  %526 = getelementptr inbounds %struct.DState, %struct.DState* %525, i32 0, i32 15
  store i32 %524, i32* %526, align 8
  %527 = load %struct.DState*, %struct.DState** %2, align 8
  %528 = getelementptr inbounds %struct.DState, %struct.DState* %527, i32 0, i32 21
  %529 = load i16*, i16** %528, align 8
  %530 = load %struct.DState*, %struct.DState** %2, align 8
  %531 = getelementptr inbounds %struct.DState, %struct.DState* %530, i32 0, i32 14
  %532 = load i32, i32* %531, align 4
  %533 = zext i32 %532 to i64
  %534 = getelementptr inbounds i16, i16* %529, i64 %533
  %535 = load i16, i16* %534, align 2
  %536 = zext i16 %535 to i32
  %537 = load %struct.DState*, %struct.DState** %2, align 8
  %538 = getelementptr inbounds %struct.DState, %struct.DState* %537, i32 0, i32 22
  %539 = load i8*, i8** %538, align 8
  %540 = load %struct.DState*, %struct.DState** %2, align 8
  %541 = getelementptr inbounds %struct.DState, %struct.DState* %540, i32 0, i32 14
  %542 = load i32, i32* %541, align 4
  %543 = lshr i32 %542, 1
  %544 = zext i32 %543 to i64
  %545 = getelementptr inbounds i8, i8* %539, i64 %544
  %546 = load i8, i8* %545, align 1
  %547 = zext i8 %546 to i32
  %548 = load %struct.DState*, %struct.DState** %2, align 8
  %549 = getelementptr inbounds %struct.DState, %struct.DState* %548, i32 0, i32 14
  %550 = load i32, i32* %549, align 4
  %551 = shl i32 %550, 2
  %552 = and i32 %551, 4
  %553 = lshr i32 %547, %552
  %554 = and i32 %553, 15
  %555 = shl i32 %554, 16
  %556 = or i32 %536, %555
  %557 = load %struct.DState*, %struct.DState** %2, align 8
  %558 = getelementptr inbounds %struct.DState, %struct.DState* %557, i32 0, i32 14
  store i32 %556, i32* %558, align 4
  %559 = load %struct.DState*, %struct.DState** %2, align 8
  %560 = getelementptr inbounds %struct.DState, %struct.DState* %559, i32 0, i32 5
  %561 = load i32, i32* %560, align 8
  %562 = icmp eq i32 %561, 0
  br i1 %562, label %563, label %584

563:                                              ; preds = %494
  %564 = load %struct.DState*, %struct.DState** %2, align 8
  %565 = getelementptr inbounds %struct.DState, %struct.DState* %564, i32 0, i32 6
  %566 = load i32, i32* %565, align 4
  %567 = sext i32 %566 to i64
  %568 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %567
  %569 = load i32, i32* %568, align 4
  %570 = load %struct.DState*, %struct.DState** %2, align 8
  %571 = getelementptr inbounds %struct.DState, %struct.DState* %570, i32 0, i32 5
  store i32 %569, i32* %571, align 8
  %572 = load %struct.DState*, %struct.DState** %2, align 8
  %573 = getelementptr inbounds %struct.DState, %struct.DState* %572, i32 0, i32 6
  %574 = load i32, i32* %573, align 4
  %575 = add nsw i32 %574, 1
  store i32 %575, i32* %573, align 4
  %576 = load %struct.DState*, %struct.DState** %2, align 8
  %577 = getelementptr inbounds %struct.DState, %struct.DState* %576, i32 0, i32 6
  %578 = load i32, i32* %577, align 4
  %579 = icmp eq i32 %578, 512
  br i1 %579, label %580, label %583

580:                                              ; preds = %563
  %581 = load %struct.DState*, %struct.DState** %2, align 8
  %582 = getelementptr inbounds %struct.DState, %struct.DState* %581, i32 0, i32 6
  store i32 0, i32* %582, align 4
  br label %583

583:                                              ; preds = %580, %563
  br label %584

584:                                              ; preds = %583, %494
  %585 = load %struct.DState*, %struct.DState** %2, align 8
  %586 = getelementptr inbounds %struct.DState, %struct.DState* %585, i32 0, i32 5
  %587 = load i32, i32* %586, align 8
  %588 = add nsw i32 %587, -1
  store i32 %588, i32* %586, align 8
  %589 = load %struct.DState*, %struct.DState** %2, align 8
  %590 = getelementptr inbounds %struct.DState, %struct.DState* %589, i32 0, i32 5
  %591 = load i32, i32* %590, align 8
  %592 = icmp eq i32 %591, 1
  %593 = zext i1 %592 to i64
  %594 = select i1 %592, i32 1, i32 0
  %595 = load %struct.DState*, %struct.DState** %2, align 8
  %596 = getelementptr inbounds %struct.DState, %struct.DState* %595, i32 0, i32 15
  %597 = load i32, i32* %596, align 8
  %598 = xor i32 %597, %594
  store i32 %598, i32* %596, align 8
  %599 = load %struct.DState*, %struct.DState** %2, align 8
  %600 = getelementptr inbounds %struct.DState, %struct.DState* %599, i32 0, i32 17
  %601 = load i32, i32* %600, align 4
  %602 = add nsw i32 %601, 1
  store i32 %602, i32* %600, align 4
  br label %9

603:                                              ; preds = %1
  br label %604

604:                                              ; preds = %603, %754, %762, %822, %830, %890, %898, %903
  br label %605

605:                                              ; preds = %604, %682
  %606 = load %struct.DState*, %struct.DState** %2, align 8
  %607 = getelementptr inbounds %struct.DState, %struct.DState* %606, i32 0, i32 0
  %608 = load %struct.bz_stream*, %struct.bz_stream** %607, align 8
  %609 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %608, i32 0, i32 5
  %610 = load i32, i32* %609, align 8
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %612, label %613

612:                                              ; preds = %605
  br label %998

613:                                              ; preds = %605
  %614 = load %struct.DState*, %struct.DState** %2, align 8
  %615 = getelementptr inbounds %struct.DState, %struct.DState* %614, i32 0, i32 3
  %616 = load i32, i32* %615, align 8
  %617 = icmp eq i32 %616, 0
  br i1 %617, label %618, label %619

618:                                              ; preds = %613
  br label %683

619:                                              ; preds = %613
  %620 = load %struct.DState*, %struct.DState** %2, align 8
  %621 = getelementptr inbounds %struct.DState, %struct.DState* %620, i32 0, i32 2
  %622 = load i8, i8* %621, align 4
  %623 = load %struct.DState*, %struct.DState** %2, align 8
  %624 = getelementptr inbounds %struct.DState, %struct.DState* %623, i32 0, i32 0
  %625 = load %struct.bz_stream*, %struct.bz_stream** %624, align 8
  %626 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %625, i32 0, i32 4
  %627 = load i8*, i8** %626, align 8
  store i8 %622, i8* %627, align 1
  %628 = load %struct.DState*, %struct.DState** %2, align 8
  %629 = getelementptr inbounds %struct.DState, %struct.DState* %628, i32 0, i32 25
  %630 = load i32, i32* %629, align 8
  %631 = shl i32 %630, 8
  %632 = load %struct.DState*, %struct.DState** %2, align 8
  %633 = getelementptr inbounds %struct.DState, %struct.DState* %632, i32 0, i32 25
  %634 = load i32, i32* %633, align 8
  %635 = lshr i32 %634, 24
  %636 = load %struct.DState*, %struct.DState** %2, align 8
  %637 = getelementptr inbounds %struct.DState, %struct.DState* %636, i32 0, i32 2
  %638 = load i8, i8* %637, align 4
  %639 = zext i8 %638 to i32
  %640 = xor i32 %635, %639
  %641 = zext i32 %640 to i64
  %642 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %641
  %643 = load i32, i32* %642, align 4
  %644 = xor i32 %631, %643
  %645 = load %struct.DState*, %struct.DState** %2, align 8
  %646 = getelementptr inbounds %struct.DState, %struct.DState* %645, i32 0, i32 25
  store i32 %644, i32* %646, align 8
  %647 = load %struct.DState*, %struct.DState** %2, align 8
  %648 = getelementptr inbounds %struct.DState, %struct.DState* %647, i32 0, i32 3
  %649 = load i32, i32* %648, align 8
  %650 = add nsw i32 %649, -1
  store i32 %650, i32* %648, align 8
  %651 = load %struct.DState*, %struct.DState** %2, align 8
  %652 = getelementptr inbounds %struct.DState, %struct.DState* %651, i32 0, i32 0
  %653 = load %struct.bz_stream*, %struct.bz_stream** %652, align 8
  %654 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %653, i32 0, i32 4
  %655 = load i8*, i8** %654, align 8
  %656 = getelementptr inbounds i8, i8* %655, i32 1
  store i8* %656, i8** %654, align 8
  %657 = load %struct.DState*, %struct.DState** %2, align 8
  %658 = getelementptr inbounds %struct.DState, %struct.DState* %657, i32 0, i32 0
  %659 = load %struct.bz_stream*, %struct.bz_stream** %658, align 8
  %660 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %659, i32 0, i32 5
  %661 = load i32, i32* %660, align 8
  %662 = add i32 %661, -1
  store i32 %662, i32* %660, align 8
  %663 = load %struct.DState*, %struct.DState** %2, align 8
  %664 = getelementptr inbounds %struct.DState, %struct.DState* %663, i32 0, i32 0
  %665 = load %struct.bz_stream*, %struct.bz_stream** %664, align 8
  %666 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %665, i32 0, i32 6
  %667 = load i32, i32* %666, align 4
  %668 = add i32 %667, 1
  store i32 %668, i32* %666, align 4
  %669 = load %struct.DState*, %struct.DState** %2, align 8
  %670 = getelementptr inbounds %struct.DState, %struct.DState* %669, i32 0, i32 0
  %671 = load %struct.bz_stream*, %struct.bz_stream** %670, align 8
  %672 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %671, i32 0, i32 6
  %673 = load i32, i32* %672, align 4
  %674 = icmp eq i32 %673, 0
  br i1 %674, label %675, label %682

675:                                              ; preds = %619
  %676 = load %struct.DState*, %struct.DState** %2, align 8
  %677 = getelementptr inbounds %struct.DState, %struct.DState* %676, i32 0, i32 0
  %678 = load %struct.bz_stream*, %struct.bz_stream** %677, align 8
  %679 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %678, i32 0, i32 7
  %680 = load i32, i32* %679, align 8
  %681 = add i32 %680, 1
  store i32 %681, i32* %679, align 8
  br label %682

682:                                              ; preds = %675, %619
  br label %605

683:                                              ; preds = %618
  %684 = load %struct.DState*, %struct.DState** %2, align 8
  %685 = getelementptr inbounds %struct.DState, %struct.DState* %684, i32 0, i32 17
  %686 = load i32, i32* %685, align 4
  %687 = load %struct.DState*, %struct.DState** %2, align 8
  %688 = getelementptr inbounds %struct.DState, %struct.DState* %687, i32 0, i32 51
  %689 = load i32, i32* %688, align 8
  %690 = add nsw i32 %689, 1
  %691 = icmp eq i32 %686, %690
  br i1 %691, label %692, label %693

692:                                              ; preds = %683
  br label %998

693:                                              ; preds = %683
  %694 = load %struct.DState*, %struct.DState** %2, align 8
  %695 = getelementptr inbounds %struct.DState, %struct.DState* %694, i32 0, i32 3
  store i32 1, i32* %695, align 8
  %696 = load %struct.DState*, %struct.DState** %2, align 8
  %697 = getelementptr inbounds %struct.DState, %struct.DState* %696, i32 0, i32 15
  %698 = load i32, i32* %697, align 8
  %699 = trunc i32 %698 to i8
  %700 = load %struct.DState*, %struct.DState** %2, align 8
  %701 = getelementptr inbounds %struct.DState, %struct.DState* %700, i32 0, i32 2
  store i8 %699, i8* %701, align 4
  %702 = load %struct.DState*, %struct.DState** %2, align 8
  %703 = getelementptr inbounds %struct.DState, %struct.DState* %702, i32 0, i32 14
  %704 = load i32, i32* %703, align 4
  %705 = load %struct.DState*, %struct.DState** %2, align 8
  %706 = getelementptr inbounds %struct.DState, %struct.DState* %705, i32 0, i32 18
  %707 = getelementptr inbounds [257 x i32], [257 x i32]* %706, i64 0, i64 0
  %708 = call i32 @BZ2_indexIntoF(i32 %704, i32* %707)
  %709 = trunc i32 %708 to i8
  store i8 %709, i8* %3, align 1
  %710 = load %struct.DState*, %struct.DState** %2, align 8
  %711 = getelementptr inbounds %struct.DState, %struct.DState* %710, i32 0, i32 21
  %712 = load i16*, i16** %711, align 8
  %713 = load %struct.DState*, %struct.DState** %2, align 8
  %714 = getelementptr inbounds %struct.DState, %struct.DState* %713, i32 0, i32 14
  %715 = load i32, i32* %714, align 4
  %716 = zext i32 %715 to i64
  %717 = getelementptr inbounds i16, i16* %712, i64 %716
  %718 = load i16, i16* %717, align 2
  %719 = zext i16 %718 to i32
  %720 = load %struct.DState*, %struct.DState** %2, align 8
  %721 = getelementptr inbounds %struct.DState, %struct.DState* %720, i32 0, i32 22
  %722 = load i8*, i8** %721, align 8
  %723 = load %struct.DState*, %struct.DState** %2, align 8
  %724 = getelementptr inbounds %struct.DState, %struct.DState* %723, i32 0, i32 14
  %725 = load i32, i32* %724, align 4
  %726 = lshr i32 %725, 1
  %727 = zext i32 %726 to i64
  %728 = getelementptr inbounds i8, i8* %722, i64 %727
  %729 = load i8, i8* %728, align 1
  %730 = zext i8 %729 to i32
  %731 = load %struct.DState*, %struct.DState** %2, align 8
  %732 = getelementptr inbounds %struct.DState, %struct.DState* %731, i32 0, i32 14
  %733 = load i32, i32* %732, align 4
  %734 = shl i32 %733, 2
  %735 = and i32 %734, 4
  %736 = lshr i32 %730, %735
  %737 = and i32 %736, 15
  %738 = shl i32 %737, 16
  %739 = or i32 %719, %738
  %740 = load %struct.DState*, %struct.DState** %2, align 8
  %741 = getelementptr inbounds %struct.DState, %struct.DState* %740, i32 0, i32 14
  store i32 %739, i32* %741, align 4
  %742 = load %struct.DState*, %struct.DState** %2, align 8
  %743 = getelementptr inbounds %struct.DState, %struct.DState* %742, i32 0, i32 17
  %744 = load i32, i32* %743, align 4
  %745 = add nsw i32 %744, 1
  store i32 %745, i32* %743, align 4
  %746 = load %struct.DState*, %struct.DState** %2, align 8
  %747 = getelementptr inbounds %struct.DState, %struct.DState* %746, i32 0, i32 17
  %748 = load i32, i32* %747, align 4
  %749 = load %struct.DState*, %struct.DState** %2, align 8
  %750 = getelementptr inbounds %struct.DState, %struct.DState* %749, i32 0, i32 51
  %751 = load i32, i32* %750, align 8
  %752 = add nsw i32 %751, 1
  %753 = icmp eq i32 %748, %752
  br i1 %753, label %754, label %755

754:                                              ; preds = %693
  br label %604

755:                                              ; preds = %693
  %756 = load i8, i8* %3, align 1
  %757 = zext i8 %756 to i32
  %758 = load %struct.DState*, %struct.DState** %2, align 8
  %759 = getelementptr inbounds %struct.DState, %struct.DState* %758, i32 0, i32 15
  %760 = load i32, i32* %759, align 8
  %761 = icmp ne i32 %757, %760
  br i1 %761, label %762, label %767

762:                                              ; preds = %755
  %763 = load i8, i8* %3, align 1
  %764 = zext i8 %763 to i32
  %765 = load %struct.DState*, %struct.DState** %2, align 8
  %766 = getelementptr inbounds %struct.DState, %struct.DState* %765, i32 0, i32 15
  store i32 %764, i32* %766, align 8
  br label %604

767:                                              ; preds = %755
  %768 = load %struct.DState*, %struct.DState** %2, align 8
  %769 = getelementptr inbounds %struct.DState, %struct.DState* %768, i32 0, i32 3
  store i32 2, i32* %769, align 8
  %770 = load %struct.DState*, %struct.DState** %2, align 8
  %771 = getelementptr inbounds %struct.DState, %struct.DState* %770, i32 0, i32 14
  %772 = load i32, i32* %771, align 4
  %773 = load %struct.DState*, %struct.DState** %2, align 8
  %774 = getelementptr inbounds %struct.DState, %struct.DState* %773, i32 0, i32 18
  %775 = getelementptr inbounds [257 x i32], [257 x i32]* %774, i64 0, i64 0
  %776 = call i32 @BZ2_indexIntoF(i32 %772, i32* %775)
  %777 = trunc i32 %776 to i8
  store i8 %777, i8* %3, align 1
  %778 = load %struct.DState*, %struct.DState** %2, align 8
  %779 = getelementptr inbounds %struct.DState, %struct.DState* %778, i32 0, i32 21
  %780 = load i16*, i16** %779, align 8
  %781 = load %struct.DState*, %struct.DState** %2, align 8
  %782 = getelementptr inbounds %struct.DState, %struct.DState* %781, i32 0, i32 14
  %783 = load i32, i32* %782, align 4
  %784 = zext i32 %783 to i64
  %785 = getelementptr inbounds i16, i16* %780, i64 %784
  %786 = load i16, i16* %785, align 2
  %787 = zext i16 %786 to i32
  %788 = load %struct.DState*, %struct.DState** %2, align 8
  %789 = getelementptr inbounds %struct.DState, %struct.DState* %788, i32 0, i32 22
  %790 = load i8*, i8** %789, align 8
  %791 = load %struct.DState*, %struct.DState** %2, align 8
  %792 = getelementptr inbounds %struct.DState, %struct.DState* %791, i32 0, i32 14
  %793 = load i32, i32* %792, align 4
  %794 = lshr i32 %793, 1
  %795 = zext i32 %794 to i64
  %796 = getelementptr inbounds i8, i8* %790, i64 %795
  %797 = load i8, i8* %796, align 1
  %798 = zext i8 %797 to i32
  %799 = load %struct.DState*, %struct.DState** %2, align 8
  %800 = getelementptr inbounds %struct.DState, %struct.DState* %799, i32 0, i32 14
  %801 = load i32, i32* %800, align 4
  %802 = shl i32 %801, 2
  %803 = and i32 %802, 4
  %804 = lshr i32 %798, %803
  %805 = and i32 %804, 15
  %806 = shl i32 %805, 16
  %807 = or i32 %787, %806
  %808 = load %struct.DState*, %struct.DState** %2, align 8
  %809 = getelementptr inbounds %struct.DState, %struct.DState* %808, i32 0, i32 14
  store i32 %807, i32* %809, align 4
  %810 = load %struct.DState*, %struct.DState** %2, align 8
  %811 = getelementptr inbounds %struct.DState, %struct.DState* %810, i32 0, i32 17
  %812 = load i32, i32* %811, align 4
  %813 = add nsw i32 %812, 1
  store i32 %813, i32* %811, align 4
  %814 = load %struct.DState*, %struct.DState** %2, align 8
  %815 = getelementptr inbounds %struct.DState, %struct.DState* %814, i32 0, i32 17
  %816 = load i32, i32* %815, align 4
  %817 = load %struct.DState*, %struct.DState** %2, align 8
  %818 = getelementptr inbounds %struct.DState, %struct.DState* %817, i32 0, i32 51
  %819 = load i32, i32* %818, align 8
  %820 = add nsw i32 %819, 1
  %821 = icmp eq i32 %816, %820
  br i1 %821, label %822, label %823

822:                                              ; preds = %767
  br label %604

823:                                              ; preds = %767
  %824 = load i8, i8* %3, align 1
  %825 = zext i8 %824 to i32
  %826 = load %struct.DState*, %struct.DState** %2, align 8
  %827 = getelementptr inbounds %struct.DState, %struct.DState* %826, i32 0, i32 15
  %828 = load i32, i32* %827, align 8
  %829 = icmp ne i32 %825, %828
  br i1 %829, label %830, label %835

830:                                              ; preds = %823
  %831 = load i8, i8* %3, align 1
  %832 = zext i8 %831 to i32
  %833 = load %struct.DState*, %struct.DState** %2, align 8
  %834 = getelementptr inbounds %struct.DState, %struct.DState* %833, i32 0, i32 15
  store i32 %832, i32* %834, align 8
  br label %604

835:                                              ; preds = %823
  %836 = load %struct.DState*, %struct.DState** %2, align 8
  %837 = getelementptr inbounds %struct.DState, %struct.DState* %836, i32 0, i32 3
  store i32 3, i32* %837, align 8
  %838 = load %struct.DState*, %struct.DState** %2, align 8
  %839 = getelementptr inbounds %struct.DState, %struct.DState* %838, i32 0, i32 14
  %840 = load i32, i32* %839, align 4
  %841 = load %struct.DState*, %struct.DState** %2, align 8
  %842 = getelementptr inbounds %struct.DState, %struct.DState* %841, i32 0, i32 18
  %843 = getelementptr inbounds [257 x i32], [257 x i32]* %842, i64 0, i64 0
  %844 = call i32 @BZ2_indexIntoF(i32 %840, i32* %843)
  %845 = trunc i32 %844 to i8
  store i8 %845, i8* %3, align 1
  %846 = load %struct.DState*, %struct.DState** %2, align 8
  %847 = getelementptr inbounds %struct.DState, %struct.DState* %846, i32 0, i32 21
  %848 = load i16*, i16** %847, align 8
  %849 = load %struct.DState*, %struct.DState** %2, align 8
  %850 = getelementptr inbounds %struct.DState, %struct.DState* %849, i32 0, i32 14
  %851 = load i32, i32* %850, align 4
  %852 = zext i32 %851 to i64
  %853 = getelementptr inbounds i16, i16* %848, i64 %852
  %854 = load i16, i16* %853, align 2
  %855 = zext i16 %854 to i32
  %856 = load %struct.DState*, %struct.DState** %2, align 8
  %857 = getelementptr inbounds %struct.DState, %struct.DState* %856, i32 0, i32 22
  %858 = load i8*, i8** %857, align 8
  %859 = load %struct.DState*, %struct.DState** %2, align 8
  %860 = getelementptr inbounds %struct.DState, %struct.DState* %859, i32 0, i32 14
  %861 = load i32, i32* %860, align 4
  %862 = lshr i32 %861, 1
  %863 = zext i32 %862 to i64
  %864 = getelementptr inbounds i8, i8* %858, i64 %863
  %865 = load i8, i8* %864, align 1
  %866 = zext i8 %865 to i32
  %867 = load %struct.DState*, %struct.DState** %2, align 8
  %868 = getelementptr inbounds %struct.DState, %struct.DState* %867, i32 0, i32 14
  %869 = load i32, i32* %868, align 4
  %870 = shl i32 %869, 2
  %871 = and i32 %870, 4
  %872 = lshr i32 %866, %871
  %873 = and i32 %872, 15
  %874 = shl i32 %873, 16
  %875 = or i32 %855, %874
  %876 = load %struct.DState*, %struct.DState** %2, align 8
  %877 = getelementptr inbounds %struct.DState, %struct.DState* %876, i32 0, i32 14
  store i32 %875, i32* %877, align 4
  %878 = load %struct.DState*, %struct.DState** %2, align 8
  %879 = getelementptr inbounds %struct.DState, %struct.DState* %878, i32 0, i32 17
  %880 = load i32, i32* %879, align 4
  %881 = add nsw i32 %880, 1
  store i32 %881, i32* %879, align 4
  %882 = load %struct.DState*, %struct.DState** %2, align 8
  %883 = getelementptr inbounds %struct.DState, %struct.DState* %882, i32 0, i32 17
  %884 = load i32, i32* %883, align 4
  %885 = load %struct.DState*, %struct.DState** %2, align 8
  %886 = getelementptr inbounds %struct.DState, %struct.DState* %885, i32 0, i32 51
  %887 = load i32, i32* %886, align 8
  %888 = add nsw i32 %887, 1
  %889 = icmp eq i32 %884, %888
  br i1 %889, label %890, label %891

890:                                              ; preds = %835
  br label %604

891:                                              ; preds = %835
  %892 = load i8, i8* %3, align 1
  %893 = zext i8 %892 to i32
  %894 = load %struct.DState*, %struct.DState** %2, align 8
  %895 = getelementptr inbounds %struct.DState, %struct.DState* %894, i32 0, i32 15
  %896 = load i32, i32* %895, align 8
  %897 = icmp ne i32 %893, %896
  br i1 %897, label %898, label %903

898:                                              ; preds = %891
  %899 = load i8, i8* %3, align 1
  %900 = zext i8 %899 to i32
  %901 = load %struct.DState*, %struct.DState** %2, align 8
  %902 = getelementptr inbounds %struct.DState, %struct.DState* %901, i32 0, i32 15
  store i32 %900, i32* %902, align 8
  br label %604

903:                                              ; preds = %891
  %904 = load %struct.DState*, %struct.DState** %2, align 8
  %905 = getelementptr inbounds %struct.DState, %struct.DState* %904, i32 0, i32 14
  %906 = load i32, i32* %905, align 4
  %907 = load %struct.DState*, %struct.DState** %2, align 8
  %908 = getelementptr inbounds %struct.DState, %struct.DState* %907, i32 0, i32 18
  %909 = getelementptr inbounds [257 x i32], [257 x i32]* %908, i64 0, i64 0
  %910 = call i32 @BZ2_indexIntoF(i32 %906, i32* %909)
  %911 = trunc i32 %910 to i8
  store i8 %911, i8* %3, align 1
  %912 = load %struct.DState*, %struct.DState** %2, align 8
  %913 = getelementptr inbounds %struct.DState, %struct.DState* %912, i32 0, i32 21
  %914 = load i16*, i16** %913, align 8
  %915 = load %struct.DState*, %struct.DState** %2, align 8
  %916 = getelementptr inbounds %struct.DState, %struct.DState* %915, i32 0, i32 14
  %917 = load i32, i32* %916, align 4
  %918 = zext i32 %917 to i64
  %919 = getelementptr inbounds i16, i16* %914, i64 %918
  %920 = load i16, i16* %919, align 2
  %921 = zext i16 %920 to i32
  %922 = load %struct.DState*, %struct.DState** %2, align 8
  %923 = getelementptr inbounds %struct.DState, %struct.DState* %922, i32 0, i32 22
  %924 = load i8*, i8** %923, align 8
  %925 = load %struct.DState*, %struct.DState** %2, align 8
  %926 = getelementptr inbounds %struct.DState, %struct.DState* %925, i32 0, i32 14
  %927 = load i32, i32* %926, align 4
  %928 = lshr i32 %927, 1
  %929 = zext i32 %928 to i64
  %930 = getelementptr inbounds i8, i8* %924, i64 %929
  %931 = load i8, i8* %930, align 1
  %932 = zext i8 %931 to i32
  %933 = load %struct.DState*, %struct.DState** %2, align 8
  %934 = getelementptr inbounds %struct.DState, %struct.DState* %933, i32 0, i32 14
  %935 = load i32, i32* %934, align 4
  %936 = shl i32 %935, 2
  %937 = and i32 %936, 4
  %938 = lshr i32 %932, %937
  %939 = and i32 %938, 15
  %940 = shl i32 %939, 16
  %941 = or i32 %921, %940
  %942 = load %struct.DState*, %struct.DState** %2, align 8
  %943 = getelementptr inbounds %struct.DState, %struct.DState* %942, i32 0, i32 14
  store i32 %941, i32* %943, align 4
  %944 = load %struct.DState*, %struct.DState** %2, align 8
  %945 = getelementptr inbounds %struct.DState, %struct.DState* %944, i32 0, i32 17
  %946 = load i32, i32* %945, align 4
  %947 = add nsw i32 %946, 1
  store i32 %947, i32* %945, align 4
  %948 = load i8, i8* %3, align 1
  %949 = zext i8 %948 to i32
  %950 = add nsw i32 %949, 4
  %951 = load %struct.DState*, %struct.DState** %2, align 8
  %952 = getelementptr inbounds %struct.DState, %struct.DState* %951, i32 0, i32 3
  store i32 %950, i32* %952, align 8
  %953 = load %struct.DState*, %struct.DState** %2, align 8
  %954 = getelementptr inbounds %struct.DState, %struct.DState* %953, i32 0, i32 14
  %955 = load i32, i32* %954, align 4
  %956 = load %struct.DState*, %struct.DState** %2, align 8
  %957 = getelementptr inbounds %struct.DState, %struct.DState* %956, i32 0, i32 18
  %958 = getelementptr inbounds [257 x i32], [257 x i32]* %957, i64 0, i64 0
  %959 = call i32 @BZ2_indexIntoF(i32 %955, i32* %958)
  %960 = load %struct.DState*, %struct.DState** %2, align 8
  %961 = getelementptr inbounds %struct.DState, %struct.DState* %960, i32 0, i32 15
  store i32 %959, i32* %961, align 8
  %962 = load %struct.DState*, %struct.DState** %2, align 8
  %963 = getelementptr inbounds %struct.DState, %struct.DState* %962, i32 0, i32 21
  %964 = load i16*, i16** %963, align 8
  %965 = load %struct.DState*, %struct.DState** %2, align 8
  %966 = getelementptr inbounds %struct.DState, %struct.DState* %965, i32 0, i32 14
  %967 = load i32, i32* %966, align 4
  %968 = zext i32 %967 to i64
  %969 = getelementptr inbounds i16, i16* %964, i64 %968
  %970 = load i16, i16* %969, align 2
  %971 = zext i16 %970 to i32
  %972 = load %struct.DState*, %struct.DState** %2, align 8
  %973 = getelementptr inbounds %struct.DState, %struct.DState* %972, i32 0, i32 22
  %974 = load i8*, i8** %973, align 8
  %975 = load %struct.DState*, %struct.DState** %2, align 8
  %976 = getelementptr inbounds %struct.DState, %struct.DState* %975, i32 0, i32 14
  %977 = load i32, i32* %976, align 4
  %978 = lshr i32 %977, 1
  %979 = zext i32 %978 to i64
  %980 = getelementptr inbounds i8, i8* %974, i64 %979
  %981 = load i8, i8* %980, align 1
  %982 = zext i8 %981 to i32
  %983 = load %struct.DState*, %struct.DState** %2, align 8
  %984 = getelementptr inbounds %struct.DState, %struct.DState* %983, i32 0, i32 14
  %985 = load i32, i32* %984, align 4
  %986 = shl i32 %985, 2
  %987 = and i32 %986, 4
  %988 = lshr i32 %982, %987
  %989 = and i32 %988, 15
  %990 = shl i32 %989, 16
  %991 = or i32 %971, %990
  %992 = load %struct.DState*, %struct.DState** %2, align 8
  %993 = getelementptr inbounds %struct.DState, %struct.DState* %992, i32 0, i32 14
  store i32 %991, i32* %993, align 4
  %994 = load %struct.DState*, %struct.DState** %2, align 8
  %995 = getelementptr inbounds %struct.DState, %struct.DState* %994, i32 0, i32 17
  %996 = load i32, i32* %995, align 4
  %997 = add nsw i32 %996, 1
  store i32 %997, i32* %995, align 4
  br label %604

998:                                              ; preds = %692, %612, %97, %17
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @unRLE_obuf_to_output_FAST(%struct.DState* %0) #0 {
  %2 = alloca %struct.DState*, align 8
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store %struct.DState* %0, %struct.DState** %2, align 8
  %16 = load %struct.DState*, %struct.DState** %2, align 8
  %17 = getelementptr inbounds %struct.DState, %struct.DState* %16, i32 0, i32 4
  %18 = load i8, i8* %17, align 4
  %19 = icmp ne i8 %18, 0
  br i1 %19, label %20, label %517

20:                                               ; preds = %1
  br label %21

21:                                               ; preds = %20, %191, %199, %279, %287, %367, %375, %498
  br label %22

22:                                               ; preds = %21, %99
  %23 = load %struct.DState*, %struct.DState** %2, align 8
  %24 = getelementptr inbounds %struct.DState, %struct.DState* %23, i32 0, i32 0
  %25 = load %struct.bz_stream*, %struct.bz_stream** %24, align 8
  %26 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %25, i32 0, i32 5
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %22
  br label %781

30:                                               ; preds = %22
  %31 = load %struct.DState*, %struct.DState** %2, align 8
  %32 = getelementptr inbounds %struct.DState, %struct.DState* %31, i32 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  br label %100

36:                                               ; preds = %30
  %37 = load %struct.DState*, %struct.DState** %2, align 8
  %38 = getelementptr inbounds %struct.DState, %struct.DState* %37, i32 0, i32 2
  %39 = load i8, i8* %38, align 4
  %40 = load %struct.DState*, %struct.DState** %2, align 8
  %41 = getelementptr inbounds %struct.DState, %struct.DState* %40, i32 0, i32 0
  %42 = load %struct.bz_stream*, %struct.bz_stream** %41, align 8
  %43 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %42, i32 0, i32 4
  %44 = load i8*, i8** %43, align 8
  store i8 %39, i8* %44, align 1
  %45 = load %struct.DState*, %struct.DState** %2, align 8
  %46 = getelementptr inbounds %struct.DState, %struct.DState* %45, i32 0, i32 25
  %47 = load i32, i32* %46, align 8
  %48 = shl i32 %47, 8
  %49 = load %struct.DState*, %struct.DState** %2, align 8
  %50 = getelementptr inbounds %struct.DState, %struct.DState* %49, i32 0, i32 25
  %51 = load i32, i32* %50, align 8
  %52 = lshr i32 %51, 24
  %53 = load %struct.DState*, %struct.DState** %2, align 8
  %54 = getelementptr inbounds %struct.DState, %struct.DState* %53, i32 0, i32 2
  %55 = load i8, i8* %54, align 4
  %56 = zext i8 %55 to i32
  %57 = xor i32 %52, %56
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = xor i32 %48, %60
  %62 = load %struct.DState*, %struct.DState** %2, align 8
  %63 = getelementptr inbounds %struct.DState, %struct.DState* %62, i32 0, i32 25
  store i32 %61, i32* %63, align 8
  %64 = load %struct.DState*, %struct.DState** %2, align 8
  %65 = getelementptr inbounds %struct.DState, %struct.DState* %64, i32 0, i32 3
  %66 = load i32, i32* %65, align 8
  %67 = add nsw i32 %66, -1
  store i32 %67, i32* %65, align 8
  %68 = load %struct.DState*, %struct.DState** %2, align 8
  %69 = getelementptr inbounds %struct.DState, %struct.DState* %68, i32 0, i32 0
  %70 = load %struct.bz_stream*, %struct.bz_stream** %69, align 8
  %71 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %70, i32 0, i32 4
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds i8, i8* %72, i32 1
  store i8* %73, i8** %71, align 8
  %74 = load %struct.DState*, %struct.DState** %2, align 8
  %75 = getelementptr inbounds %struct.DState, %struct.DState* %74, i32 0, i32 0
  %76 = load %struct.bz_stream*, %struct.bz_stream** %75, align 8
  %77 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %76, i32 0, i32 5
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, -1
  store i32 %79, i32* %77, align 8
  %80 = load %struct.DState*, %struct.DState** %2, align 8
  %81 = getelementptr inbounds %struct.DState, %struct.DState* %80, i32 0, i32 0
  %82 = load %struct.bz_stream*, %struct.bz_stream** %81, align 8
  %83 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %82, i32 0, i32 6
  %84 = load i32, i32* %83, align 4
  %85 = add i32 %84, 1
  store i32 %85, i32* %83, align 4
  %86 = load %struct.DState*, %struct.DState** %2, align 8
  %87 = getelementptr inbounds %struct.DState, %struct.DState* %86, i32 0, i32 0
  %88 = load %struct.bz_stream*, %struct.bz_stream** %87, align 8
  %89 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %88, i32 0, i32 6
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %99

92:                                               ; preds = %36
  %93 = load %struct.DState*, %struct.DState** %2, align 8
  %94 = getelementptr inbounds %struct.DState, %struct.DState* %93, i32 0, i32 0
  %95 = load %struct.bz_stream*, %struct.bz_stream** %94, align 8
  %96 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %95, i32 0, i32 7
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, 1
  store i32 %98, i32* %96, align 8
  br label %99

99:                                               ; preds = %92, %36
  br label %22

100:                                              ; preds = %35
  %101 = load %struct.DState*, %struct.DState** %2, align 8
  %102 = getelementptr inbounds %struct.DState, %struct.DState* %101, i32 0, i32 17
  %103 = load i32, i32* %102, align 4
  %104 = load %struct.DState*, %struct.DState** %2, align 8
  %105 = getelementptr inbounds %struct.DState, %struct.DState* %104, i32 0, i32 51
  %106 = load i32, i32* %105, align 8
  %107 = add nsw i32 %106, 1
  %108 = icmp eq i32 %103, %107
  br i1 %108, label %109, label %110

109:                                              ; preds = %100
  br label %781

110:                                              ; preds = %100
  %111 = load %struct.DState*, %struct.DState** %2, align 8
  %112 = getelementptr inbounds %struct.DState, %struct.DState* %111, i32 0, i32 3
  store i32 1, i32* %112, align 8
  %113 = load %struct.DState*, %struct.DState** %2, align 8
  %114 = getelementptr inbounds %struct.DState, %struct.DState* %113, i32 0, i32 15
  %115 = load i32, i32* %114, align 8
  %116 = trunc i32 %115 to i8
  %117 = load %struct.DState*, %struct.DState** %2, align 8
  %118 = getelementptr inbounds %struct.DState, %struct.DState* %117, i32 0, i32 2
  store i8 %116, i8* %118, align 4
  %119 = load %struct.DState*, %struct.DState** %2, align 8
  %120 = getelementptr inbounds %struct.DState, %struct.DState* %119, i32 0, i32 20
  %121 = load i32*, i32** %120, align 8
  %122 = load %struct.DState*, %struct.DState** %2, align 8
  %123 = getelementptr inbounds %struct.DState, %struct.DState* %122, i32 0, i32 14
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds i32, i32* %121, i64 %125
  %127 = load i32, i32* %126, align 4
  %128 = load %struct.DState*, %struct.DState** %2, align 8
  %129 = getelementptr inbounds %struct.DState, %struct.DState* %128, i32 0, i32 14
  store i32 %127, i32* %129, align 4
  %130 = load %struct.DState*, %struct.DState** %2, align 8
  %131 = getelementptr inbounds %struct.DState, %struct.DState* %130, i32 0, i32 14
  %132 = load i32, i32* %131, align 4
  %133 = and i32 %132, 255
  %134 = trunc i32 %133 to i8
  store i8 %134, i8* %3, align 1
  %135 = load %struct.DState*, %struct.DState** %2, align 8
  %136 = getelementptr inbounds %struct.DState, %struct.DState* %135, i32 0, i32 14
  %137 = load i32, i32* %136, align 4
  %138 = lshr i32 %137, 8
  store i32 %138, i32* %136, align 4
  %139 = load %struct.DState*, %struct.DState** %2, align 8
  %140 = getelementptr inbounds %struct.DState, %struct.DState* %139, i32 0, i32 5
  %141 = load i32, i32* %140, align 8
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %164

143:                                              ; preds = %110
  %144 = load %struct.DState*, %struct.DState** %2, align 8
  %145 = getelementptr inbounds %struct.DState, %struct.DState* %144, i32 0, i32 6
  %146 = load i32, i32* %145, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = load %struct.DState*, %struct.DState** %2, align 8
  %151 = getelementptr inbounds %struct.DState, %struct.DState* %150, i32 0, i32 5
  store i32 %149, i32* %151, align 8
  %152 = load %struct.DState*, %struct.DState** %2, align 8
  %153 = getelementptr inbounds %struct.DState, %struct.DState* %152, i32 0, i32 6
  %154 = load i32, i32* %153, align 4
  %155 = add nsw i32 %154, 1
  store i32 %155, i32* %153, align 4
  %156 = load %struct.DState*, %struct.DState** %2, align 8
  %157 = getelementptr inbounds %struct.DState, %struct.DState* %156, i32 0, i32 6
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, 512
  br i1 %159, label %160, label %163

160:                                              ; preds = %143
  %161 = load %struct.DState*, %struct.DState** %2, align 8
  %162 = getelementptr inbounds %struct.DState, %struct.DState* %161, i32 0, i32 6
  store i32 0, i32* %162, align 4
  br label %163

163:                                              ; preds = %160, %143
  br label %164

164:                                              ; preds = %163, %110
  %165 = load %struct.DState*, %struct.DState** %2, align 8
  %166 = getelementptr inbounds %struct.DState, %struct.DState* %165, i32 0, i32 5
  %167 = load i32, i32* %166, align 8
  %168 = add nsw i32 %167, -1
  store i32 %168, i32* %166, align 8
  %169 = load %struct.DState*, %struct.DState** %2, align 8
  %170 = getelementptr inbounds %struct.DState, %struct.DState* %169, i32 0, i32 5
  %171 = load i32, i32* %170, align 8
  %172 = icmp eq i32 %171, 1
  %173 = zext i1 %172 to i64
  %174 = select i1 %172, i32 1, i32 0
  %175 = load i8, i8* %3, align 1
  %176 = zext i8 %175 to i32
  %177 = xor i32 %176, %174
  %178 = trunc i32 %177 to i8
  store i8 %178, i8* %3, align 1
  %179 = load %struct.DState*, %struct.DState** %2, align 8
  %180 = getelementptr inbounds %struct.DState, %struct.DState* %179, i32 0, i32 17
  %181 = load i32, i32* %180, align 4
  %182 = add nsw i32 %181, 1
  store i32 %182, i32* %180, align 4
  %183 = load %struct.DState*, %struct.DState** %2, align 8
  %184 = getelementptr inbounds %struct.DState, %struct.DState* %183, i32 0, i32 17
  %185 = load i32, i32* %184, align 4
  %186 = load %struct.DState*, %struct.DState** %2, align 8
  %187 = getelementptr inbounds %struct.DState, %struct.DState* %186, i32 0, i32 51
  %188 = load i32, i32* %187, align 8
  %189 = add nsw i32 %188, 1
  %190 = icmp eq i32 %185, %189
  br i1 %190, label %191, label %192

191:                                              ; preds = %164
  br label %21

192:                                              ; preds = %164
  %193 = load i8, i8* %3, align 1
  %194 = zext i8 %193 to i32
  %195 = load %struct.DState*, %struct.DState** %2, align 8
  %196 = getelementptr inbounds %struct.DState, %struct.DState* %195, i32 0, i32 15
  %197 = load i32, i32* %196, align 8
  %198 = icmp ne i32 %194, %197
  br i1 %198, label %199, label %204

199:                                              ; preds = %192
  %200 = load i8, i8* %3, align 1
  %201 = zext i8 %200 to i32
  %202 = load %struct.DState*, %struct.DState** %2, align 8
  %203 = getelementptr inbounds %struct.DState, %struct.DState* %202, i32 0, i32 15
  store i32 %201, i32* %203, align 8
  br label %21

204:                                              ; preds = %192
  %205 = load %struct.DState*, %struct.DState** %2, align 8
  %206 = getelementptr inbounds %struct.DState, %struct.DState* %205, i32 0, i32 3
  store i32 2, i32* %206, align 8
  %207 = load %struct.DState*, %struct.DState** %2, align 8
  %208 = getelementptr inbounds %struct.DState, %struct.DState* %207, i32 0, i32 20
  %209 = load i32*, i32** %208, align 8
  %210 = load %struct.DState*, %struct.DState** %2, align 8
  %211 = getelementptr inbounds %struct.DState, %struct.DState* %210, i32 0, i32 14
  %212 = load i32, i32* %211, align 4
  %213 = zext i32 %212 to i64
  %214 = getelementptr inbounds i32, i32* %209, i64 %213
  %215 = load i32, i32* %214, align 4
  %216 = load %struct.DState*, %struct.DState** %2, align 8
  %217 = getelementptr inbounds %struct.DState, %struct.DState* %216, i32 0, i32 14
  store i32 %215, i32* %217, align 4
  %218 = load %struct.DState*, %struct.DState** %2, align 8
  %219 = getelementptr inbounds %struct.DState, %struct.DState* %218, i32 0, i32 14
  %220 = load i32, i32* %219, align 4
  %221 = and i32 %220, 255
  %222 = trunc i32 %221 to i8
  store i8 %222, i8* %3, align 1
  %223 = load %struct.DState*, %struct.DState** %2, align 8
  %224 = getelementptr inbounds %struct.DState, %struct.DState* %223, i32 0, i32 14
  %225 = load i32, i32* %224, align 4
  %226 = lshr i32 %225, 8
  store i32 %226, i32* %224, align 4
  %227 = load %struct.DState*, %struct.DState** %2, align 8
  %228 = getelementptr inbounds %struct.DState, %struct.DState* %227, i32 0, i32 5
  %229 = load i32, i32* %228, align 8
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %252

231:                                              ; preds = %204
  %232 = load %struct.DState*, %struct.DState** %2, align 8
  %233 = getelementptr inbounds %struct.DState, %struct.DState* %232, i32 0, i32 6
  %234 = load i32, i32* %233, align 4
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %235
  %237 = load i32, i32* %236, align 4
  %238 = load %struct.DState*, %struct.DState** %2, align 8
  %239 = getelementptr inbounds %struct.DState, %struct.DState* %238, i32 0, i32 5
  store i32 %237, i32* %239, align 8
  %240 = load %struct.DState*, %struct.DState** %2, align 8
  %241 = getelementptr inbounds %struct.DState, %struct.DState* %240, i32 0, i32 6
  %242 = load i32, i32* %241, align 4
  %243 = add nsw i32 %242, 1
  store i32 %243, i32* %241, align 4
  %244 = load %struct.DState*, %struct.DState** %2, align 8
  %245 = getelementptr inbounds %struct.DState, %struct.DState* %244, i32 0, i32 6
  %246 = load i32, i32* %245, align 4
  %247 = icmp eq i32 %246, 512
  br i1 %247, label %248, label %251

248:                                              ; preds = %231
  %249 = load %struct.DState*, %struct.DState** %2, align 8
  %250 = getelementptr inbounds %struct.DState, %struct.DState* %249, i32 0, i32 6
  store i32 0, i32* %250, align 4
  br label %251

251:                                              ; preds = %248, %231
  br label %252

252:                                              ; preds = %251, %204
  %253 = load %struct.DState*, %struct.DState** %2, align 8
  %254 = getelementptr inbounds %struct.DState, %struct.DState* %253, i32 0, i32 5
  %255 = load i32, i32* %254, align 8
  %256 = add nsw i32 %255, -1
  store i32 %256, i32* %254, align 8
  %257 = load %struct.DState*, %struct.DState** %2, align 8
  %258 = getelementptr inbounds %struct.DState, %struct.DState* %257, i32 0, i32 5
  %259 = load i32, i32* %258, align 8
  %260 = icmp eq i32 %259, 1
  %261 = zext i1 %260 to i64
  %262 = select i1 %260, i32 1, i32 0
  %263 = load i8, i8* %3, align 1
  %264 = zext i8 %263 to i32
  %265 = xor i32 %264, %262
  %266 = trunc i32 %265 to i8
  store i8 %266, i8* %3, align 1
  %267 = load %struct.DState*, %struct.DState** %2, align 8
  %268 = getelementptr inbounds %struct.DState, %struct.DState* %267, i32 0, i32 17
  %269 = load i32, i32* %268, align 4
  %270 = add nsw i32 %269, 1
  store i32 %270, i32* %268, align 4
  %271 = load %struct.DState*, %struct.DState** %2, align 8
  %272 = getelementptr inbounds %struct.DState, %struct.DState* %271, i32 0, i32 17
  %273 = load i32, i32* %272, align 4
  %274 = load %struct.DState*, %struct.DState** %2, align 8
  %275 = getelementptr inbounds %struct.DState, %struct.DState* %274, i32 0, i32 51
  %276 = load i32, i32* %275, align 8
  %277 = add nsw i32 %276, 1
  %278 = icmp eq i32 %273, %277
  br i1 %278, label %279, label %280

279:                                              ; preds = %252
  br label %21

280:                                              ; preds = %252
  %281 = load i8, i8* %3, align 1
  %282 = zext i8 %281 to i32
  %283 = load %struct.DState*, %struct.DState** %2, align 8
  %284 = getelementptr inbounds %struct.DState, %struct.DState* %283, i32 0, i32 15
  %285 = load i32, i32* %284, align 8
  %286 = icmp ne i32 %282, %285
  br i1 %286, label %287, label %292

287:                                              ; preds = %280
  %288 = load i8, i8* %3, align 1
  %289 = zext i8 %288 to i32
  %290 = load %struct.DState*, %struct.DState** %2, align 8
  %291 = getelementptr inbounds %struct.DState, %struct.DState* %290, i32 0, i32 15
  store i32 %289, i32* %291, align 8
  br label %21

292:                                              ; preds = %280
  %293 = load %struct.DState*, %struct.DState** %2, align 8
  %294 = getelementptr inbounds %struct.DState, %struct.DState* %293, i32 0, i32 3
  store i32 3, i32* %294, align 8
  %295 = load %struct.DState*, %struct.DState** %2, align 8
  %296 = getelementptr inbounds %struct.DState, %struct.DState* %295, i32 0, i32 20
  %297 = load i32*, i32** %296, align 8
  %298 = load %struct.DState*, %struct.DState** %2, align 8
  %299 = getelementptr inbounds %struct.DState, %struct.DState* %298, i32 0, i32 14
  %300 = load i32, i32* %299, align 4
  %301 = zext i32 %300 to i64
  %302 = getelementptr inbounds i32, i32* %297, i64 %301
  %303 = load i32, i32* %302, align 4
  %304 = load %struct.DState*, %struct.DState** %2, align 8
  %305 = getelementptr inbounds %struct.DState, %struct.DState* %304, i32 0, i32 14
  store i32 %303, i32* %305, align 4
  %306 = load %struct.DState*, %struct.DState** %2, align 8
  %307 = getelementptr inbounds %struct.DState, %struct.DState* %306, i32 0, i32 14
  %308 = load i32, i32* %307, align 4
  %309 = and i32 %308, 255
  %310 = trunc i32 %309 to i8
  store i8 %310, i8* %3, align 1
  %311 = load %struct.DState*, %struct.DState** %2, align 8
  %312 = getelementptr inbounds %struct.DState, %struct.DState* %311, i32 0, i32 14
  %313 = load i32, i32* %312, align 4
  %314 = lshr i32 %313, 8
  store i32 %314, i32* %312, align 4
  %315 = load %struct.DState*, %struct.DState** %2, align 8
  %316 = getelementptr inbounds %struct.DState, %struct.DState* %315, i32 0, i32 5
  %317 = load i32, i32* %316, align 8
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %319, label %340

319:                                              ; preds = %292
  %320 = load %struct.DState*, %struct.DState** %2, align 8
  %321 = getelementptr inbounds %struct.DState, %struct.DState* %320, i32 0, i32 6
  %322 = load i32, i32* %321, align 4
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %323
  %325 = load i32, i32* %324, align 4
  %326 = load %struct.DState*, %struct.DState** %2, align 8
  %327 = getelementptr inbounds %struct.DState, %struct.DState* %326, i32 0, i32 5
  store i32 %325, i32* %327, align 8
  %328 = load %struct.DState*, %struct.DState** %2, align 8
  %329 = getelementptr inbounds %struct.DState, %struct.DState* %328, i32 0, i32 6
  %330 = load i32, i32* %329, align 4
  %331 = add nsw i32 %330, 1
  store i32 %331, i32* %329, align 4
  %332 = load %struct.DState*, %struct.DState** %2, align 8
  %333 = getelementptr inbounds %struct.DState, %struct.DState* %332, i32 0, i32 6
  %334 = load i32, i32* %333, align 4
  %335 = icmp eq i32 %334, 512
  br i1 %335, label %336, label %339

336:                                              ; preds = %319
  %337 = load %struct.DState*, %struct.DState** %2, align 8
  %338 = getelementptr inbounds %struct.DState, %struct.DState* %337, i32 0, i32 6
  store i32 0, i32* %338, align 4
  br label %339

339:                                              ; preds = %336, %319
  br label %340

340:                                              ; preds = %339, %292
  %341 = load %struct.DState*, %struct.DState** %2, align 8
  %342 = getelementptr inbounds %struct.DState, %struct.DState* %341, i32 0, i32 5
  %343 = load i32, i32* %342, align 8
  %344 = add nsw i32 %343, -1
  store i32 %344, i32* %342, align 8
  %345 = load %struct.DState*, %struct.DState** %2, align 8
  %346 = getelementptr inbounds %struct.DState, %struct.DState* %345, i32 0, i32 5
  %347 = load i32, i32* %346, align 8
  %348 = icmp eq i32 %347, 1
  %349 = zext i1 %348 to i64
  %350 = select i1 %348, i32 1, i32 0
  %351 = load i8, i8* %3, align 1
  %352 = zext i8 %351 to i32
  %353 = xor i32 %352, %350
  %354 = trunc i32 %353 to i8
  store i8 %354, i8* %3, align 1
  %355 = load %struct.DState*, %struct.DState** %2, align 8
  %356 = getelementptr inbounds %struct.DState, %struct.DState* %355, i32 0, i32 17
  %357 = load i32, i32* %356, align 4
  %358 = add nsw i32 %357, 1
  store i32 %358, i32* %356, align 4
  %359 = load %struct.DState*, %struct.DState** %2, align 8
  %360 = getelementptr inbounds %struct.DState, %struct.DState* %359, i32 0, i32 17
  %361 = load i32, i32* %360, align 4
  %362 = load %struct.DState*, %struct.DState** %2, align 8
  %363 = getelementptr inbounds %struct.DState, %struct.DState* %362, i32 0, i32 51
  %364 = load i32, i32* %363, align 8
  %365 = add nsw i32 %364, 1
  %366 = icmp eq i32 %361, %365
  br i1 %366, label %367, label %368

367:                                              ; preds = %340
  br label %21

368:                                              ; preds = %340
  %369 = load i8, i8* %3, align 1
  %370 = zext i8 %369 to i32
  %371 = load %struct.DState*, %struct.DState** %2, align 8
  %372 = getelementptr inbounds %struct.DState, %struct.DState* %371, i32 0, i32 15
  %373 = load i32, i32* %372, align 8
  %374 = icmp ne i32 %370, %373
  br i1 %374, label %375, label %380

375:                                              ; preds = %368
  %376 = load i8, i8* %3, align 1
  %377 = zext i8 %376 to i32
  %378 = load %struct.DState*, %struct.DState** %2, align 8
  %379 = getelementptr inbounds %struct.DState, %struct.DState* %378, i32 0, i32 15
  store i32 %377, i32* %379, align 8
  br label %21

380:                                              ; preds = %368
  %381 = load %struct.DState*, %struct.DState** %2, align 8
  %382 = getelementptr inbounds %struct.DState, %struct.DState* %381, i32 0, i32 20
  %383 = load i32*, i32** %382, align 8
  %384 = load %struct.DState*, %struct.DState** %2, align 8
  %385 = getelementptr inbounds %struct.DState, %struct.DState* %384, i32 0, i32 14
  %386 = load i32, i32* %385, align 4
  %387 = zext i32 %386 to i64
  %388 = getelementptr inbounds i32, i32* %383, i64 %387
  %389 = load i32, i32* %388, align 4
  %390 = load %struct.DState*, %struct.DState** %2, align 8
  %391 = getelementptr inbounds %struct.DState, %struct.DState* %390, i32 0, i32 14
  store i32 %389, i32* %391, align 4
  %392 = load %struct.DState*, %struct.DState** %2, align 8
  %393 = getelementptr inbounds %struct.DState, %struct.DState* %392, i32 0, i32 14
  %394 = load i32, i32* %393, align 4
  %395 = and i32 %394, 255
  %396 = trunc i32 %395 to i8
  store i8 %396, i8* %3, align 1
  %397 = load %struct.DState*, %struct.DState** %2, align 8
  %398 = getelementptr inbounds %struct.DState, %struct.DState* %397, i32 0, i32 14
  %399 = load i32, i32* %398, align 4
  %400 = lshr i32 %399, 8
  store i32 %400, i32* %398, align 4
  %401 = load %struct.DState*, %struct.DState** %2, align 8
  %402 = getelementptr inbounds %struct.DState, %struct.DState* %401, i32 0, i32 5
  %403 = load i32, i32* %402, align 8
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %405, label %426

405:                                              ; preds = %380
  %406 = load %struct.DState*, %struct.DState** %2, align 8
  %407 = getelementptr inbounds %struct.DState, %struct.DState* %406, i32 0, i32 6
  %408 = load i32, i32* %407, align 4
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %409
  %411 = load i32, i32* %410, align 4
  %412 = load %struct.DState*, %struct.DState** %2, align 8
  %413 = getelementptr inbounds %struct.DState, %struct.DState* %412, i32 0, i32 5
  store i32 %411, i32* %413, align 8
  %414 = load %struct.DState*, %struct.DState** %2, align 8
  %415 = getelementptr inbounds %struct.DState, %struct.DState* %414, i32 0, i32 6
  %416 = load i32, i32* %415, align 4
  %417 = add nsw i32 %416, 1
  store i32 %417, i32* %415, align 4
  %418 = load %struct.DState*, %struct.DState** %2, align 8
  %419 = getelementptr inbounds %struct.DState, %struct.DState* %418, i32 0, i32 6
  %420 = load i32, i32* %419, align 4
  %421 = icmp eq i32 %420, 512
  br i1 %421, label %422, label %425

422:                                              ; preds = %405
  %423 = load %struct.DState*, %struct.DState** %2, align 8
  %424 = getelementptr inbounds %struct.DState, %struct.DState* %423, i32 0, i32 6
  store i32 0, i32* %424, align 4
  br label %425

425:                                              ; preds = %422, %405
  br label %426

426:                                              ; preds = %425, %380
  %427 = load %struct.DState*, %struct.DState** %2, align 8
  %428 = getelementptr inbounds %struct.DState, %struct.DState* %427, i32 0, i32 5
  %429 = load i32, i32* %428, align 8
  %430 = add nsw i32 %429, -1
  store i32 %430, i32* %428, align 8
  %431 = load %struct.DState*, %struct.DState** %2, align 8
  %432 = getelementptr inbounds %struct.DState, %struct.DState* %431, i32 0, i32 5
  %433 = load i32, i32* %432, align 8
  %434 = icmp eq i32 %433, 1
  %435 = zext i1 %434 to i64
  %436 = select i1 %434, i32 1, i32 0
  %437 = load i8, i8* %3, align 1
  %438 = zext i8 %437 to i32
  %439 = xor i32 %438, %436
  %440 = trunc i32 %439 to i8
  store i8 %440, i8* %3, align 1
  %441 = load %struct.DState*, %struct.DState** %2, align 8
  %442 = getelementptr inbounds %struct.DState, %struct.DState* %441, i32 0, i32 17
  %443 = load i32, i32* %442, align 4
  %444 = add nsw i32 %443, 1
  store i32 %444, i32* %442, align 4
  %445 = load i8, i8* %3, align 1
  %446 = zext i8 %445 to i32
  %447 = add nsw i32 %446, 4
  %448 = load %struct.DState*, %struct.DState** %2, align 8
  %449 = getelementptr inbounds %struct.DState, %struct.DState* %448, i32 0, i32 3
  store i32 %447, i32* %449, align 8
  %450 = load %struct.DState*, %struct.DState** %2, align 8
  %451 = getelementptr inbounds %struct.DState, %struct.DState* %450, i32 0, i32 20
  %452 = load i32*, i32** %451, align 8
  %453 = load %struct.DState*, %struct.DState** %2, align 8
  %454 = getelementptr inbounds %struct.DState, %struct.DState* %453, i32 0, i32 14
  %455 = load i32, i32* %454, align 4
  %456 = zext i32 %455 to i64
  %457 = getelementptr inbounds i32, i32* %452, i64 %456
  %458 = load i32, i32* %457, align 4
  %459 = load %struct.DState*, %struct.DState** %2, align 8
  %460 = getelementptr inbounds %struct.DState, %struct.DState* %459, i32 0, i32 14
  store i32 %458, i32* %460, align 4
  %461 = load %struct.DState*, %struct.DState** %2, align 8
  %462 = getelementptr inbounds %struct.DState, %struct.DState* %461, i32 0, i32 14
  %463 = load i32, i32* %462, align 4
  %464 = and i32 %463, 255
  %465 = trunc i32 %464 to i8
  %466 = zext i8 %465 to i32
  %467 = load %struct.DState*, %struct.DState** %2, align 8
  %468 = getelementptr inbounds %struct.DState, %struct.DState* %467, i32 0, i32 15
  store i32 %466, i32* %468, align 8
  %469 = load %struct.DState*, %struct.DState** %2, align 8
  %470 = getelementptr inbounds %struct.DState, %struct.DState* %469, i32 0, i32 14
  %471 = load i32, i32* %470, align 4
  %472 = lshr i32 %471, 8
  store i32 %472, i32* %470, align 4
  %473 = load %struct.DState*, %struct.DState** %2, align 8
  %474 = getelementptr inbounds %struct.DState, %struct.DState* %473, i32 0, i32 5
  %475 = load i32, i32* %474, align 8
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %477, label %498

477:                                              ; preds = %426
  %478 = load %struct.DState*, %struct.DState** %2, align 8
  %479 = getelementptr inbounds %struct.DState, %struct.DState* %478, i32 0, i32 6
  %480 = load i32, i32* %479, align 4
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %481
  %483 = load i32, i32* %482, align 4
  %484 = load %struct.DState*, %struct.DState** %2, align 8
  %485 = getelementptr inbounds %struct.DState, %struct.DState* %484, i32 0, i32 5
  store i32 %483, i32* %485, align 8
  %486 = load %struct.DState*, %struct.DState** %2, align 8
  %487 = getelementptr inbounds %struct.DState, %struct.DState* %486, i32 0, i32 6
  %488 = load i32, i32* %487, align 4
  %489 = add nsw i32 %488, 1
  store i32 %489, i32* %487, align 4
  %490 = load %struct.DState*, %struct.DState** %2, align 8
  %491 = getelementptr inbounds %struct.DState, %struct.DState* %490, i32 0, i32 6
  %492 = load i32, i32* %491, align 4
  %493 = icmp eq i32 %492, 512
  br i1 %493, label %494, label %497

494:                                              ; preds = %477
  %495 = load %struct.DState*, %struct.DState** %2, align 8
  %496 = getelementptr inbounds %struct.DState, %struct.DState* %495, i32 0, i32 6
  store i32 0, i32* %496, align 4
  br label %497

497:                                              ; preds = %494, %477
  br label %498

498:                                              ; preds = %497, %426
  %499 = load %struct.DState*, %struct.DState** %2, align 8
  %500 = getelementptr inbounds %struct.DState, %struct.DState* %499, i32 0, i32 5
  %501 = load i32, i32* %500, align 8
  %502 = add nsw i32 %501, -1
  store i32 %502, i32* %500, align 8
  %503 = load %struct.DState*, %struct.DState** %2, align 8
  %504 = getelementptr inbounds %struct.DState, %struct.DState* %503, i32 0, i32 5
  %505 = load i32, i32* %504, align 8
  %506 = icmp eq i32 %505, 1
  %507 = zext i1 %506 to i64
  %508 = select i1 %506, i32 1, i32 0
  %509 = load %struct.DState*, %struct.DState** %2, align 8
  %510 = getelementptr inbounds %struct.DState, %struct.DState* %509, i32 0, i32 15
  %511 = load i32, i32* %510, align 8
  %512 = xor i32 %511, %508
  store i32 %512, i32* %510, align 8
  %513 = load %struct.DState*, %struct.DState** %2, align 8
  %514 = getelementptr inbounds %struct.DState, %struct.DState* %513, i32 0, i32 17
  %515 = load i32, i32* %514, align 4
  %516 = add nsw i32 %515, 1
  store i32 %516, i32* %514, align 4
  br label %21

517:                                              ; preds = %1
  %518 = load %struct.DState*, %struct.DState** %2, align 8
  %519 = getelementptr inbounds %struct.DState, %struct.DState* %518, i32 0, i32 25
  %520 = load i32, i32* %519, align 8
  store i32 %520, i32* %4, align 4
  %521 = load %struct.DState*, %struct.DState** %2, align 8
  %522 = getelementptr inbounds %struct.DState, %struct.DState* %521, i32 0, i32 2
  %523 = load i8, i8* %522, align 4
  store i8 %523, i8* %5, align 1
  %524 = load %struct.DState*, %struct.DState** %2, align 8
  %525 = getelementptr inbounds %struct.DState, %struct.DState* %524, i32 0, i32 3
  %526 = load i32, i32* %525, align 8
  store i32 %526, i32* %6, align 4
  %527 = load %struct.DState*, %struct.DState** %2, align 8
  %528 = getelementptr inbounds %struct.DState, %struct.DState* %527, i32 0, i32 17
  %529 = load i32, i32* %528, align 4
  store i32 %529, i32* %7, align 4
  %530 = load %struct.DState*, %struct.DState** %2, align 8
  %531 = getelementptr inbounds %struct.DState, %struct.DState* %530, i32 0, i32 15
  %532 = load i32, i32* %531, align 8
  store i32 %532, i32* %8, align 4
  %533 = load %struct.DState*, %struct.DState** %2, align 8
  %534 = getelementptr inbounds %struct.DState, %struct.DState* %533, i32 0, i32 20
  %535 = load i32*, i32** %534, align 8
  store i32* %535, i32** %9, align 8
  %536 = load %struct.DState*, %struct.DState** %2, align 8
  %537 = getelementptr inbounds %struct.DState, %struct.DState* %536, i32 0, i32 14
  %538 = load i32, i32* %537, align 4
  store i32 %538, i32* %10, align 4
  %539 = load %struct.DState*, %struct.DState** %2, align 8
  %540 = getelementptr inbounds %struct.DState, %struct.DState* %539, i32 0, i32 0
  %541 = load %struct.bz_stream*, %struct.bz_stream** %540, align 8
  %542 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %541, i32 0, i32 4
  %543 = load i8*, i8** %542, align 8
  store i8* %543, i8** %11, align 8
  %544 = load %struct.DState*, %struct.DState** %2, align 8
  %545 = getelementptr inbounds %struct.DState, %struct.DState* %544, i32 0, i32 0
  %546 = load %struct.bz_stream*, %struct.bz_stream** %545, align 8
  %547 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %546, i32 0, i32 5
  %548 = load i32, i32* %547, align 8
  store i32 %548, i32* %12, align 4
  %549 = load i32, i32* %12, align 4
  store i32 %549, i32* %13, align 4
  %550 = load %struct.DState*, %struct.DState** %2, align 8
  %551 = getelementptr inbounds %struct.DState, %struct.DState* %550, i32 0, i32 51
  %552 = load i32, i32* %551, align 8
  %553 = add nsw i32 %552, 1
  store i32 %553, i32* %14, align 4
  br label %554

554:                                              ; preds = %517, %657, %663, %682, %688, %691
  %555 = load i32, i32* %6, align 4
  %556 = icmp sgt i32 %555, 0
  br i1 %556, label %557, label %609

557:                                              ; preds = %554
  br label %558

558:                                              ; preds = %557, %566
  %559 = load i32, i32* %12, align 4
  %560 = icmp eq i32 %559, 0
  br i1 %560, label %561, label %562

561:                                              ; preds = %558
  br label %720

562:                                              ; preds = %558
  %563 = load i32, i32* %6, align 4
  %564 = icmp eq i32 %563, 1
  br i1 %564, label %565, label %566

565:                                              ; preds = %562
  br label %586

566:                                              ; preds = %562
  %567 = load i8, i8* %5, align 1
  %568 = load i8*, i8** %11, align 8
  store i8 %567, i8* %568, align 1
  %569 = load i32, i32* %4, align 4
  %570 = shl i32 %569, 8
  %571 = load i32, i32* %4, align 4
  %572 = lshr i32 %571, 24
  %573 = load i8, i8* %5, align 1
  %574 = zext i8 %573 to i32
  %575 = xor i32 %572, %574
  %576 = zext i32 %575 to i64
  %577 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %576
  %578 = load i32, i32* %577, align 4
  %579 = xor i32 %570, %578
  store i32 %579, i32* %4, align 4
  %580 = load i32, i32* %6, align 4
  %581 = add nsw i32 %580, -1
  store i32 %581, i32* %6, align 4
  %582 = load i8*, i8** %11, align 8
  %583 = getelementptr inbounds i8, i8* %582, i32 1
  store i8* %583, i8** %11, align 8
  %584 = load i32, i32* %12, align 4
  %585 = add i32 %584, -1
  store i32 %585, i32* %12, align 4
  br label %558

586:                                              ; preds = %565
  br label %587

587:                                              ; preds = %640, %633, %586
  %588 = load i32, i32* %12, align 4
  %589 = icmp eq i32 %588, 0
  br i1 %589, label %590, label %591

590:                                              ; preds = %587
  store i32 1, i32* %6, align 4
  br label %720

591:                                              ; preds = %587
  %592 = load i8, i8* %5, align 1
  %593 = load i8*, i8** %11, align 8
  store i8 %592, i8* %593, align 1
  %594 = load i32, i32* %4, align 4
  %595 = shl i32 %594, 8
  %596 = load i32, i32* %4, align 4
  %597 = lshr i32 %596, 24
  %598 = load i8, i8* %5, align 1
  %599 = zext i8 %598 to i32
  %600 = xor i32 %597, %599
  %601 = zext i32 %600 to i64
  %602 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %601
  %603 = load i32, i32* %602, align 4
  %604 = xor i32 %595, %603
  store i32 %604, i32* %4, align 4
  %605 = load i8*, i8** %11, align 8
  %606 = getelementptr inbounds i8, i8* %605, i32 1
  store i8* %606, i8** %11, align 8
  %607 = load i32, i32* %12, align 4
  %608 = add i32 %607, -1
  store i32 %608, i32* %12, align 4
  br label %609

609:                                              ; preds = %591, %554
  %610 = load i32, i32* %7, align 4
  %611 = load i32, i32* %14, align 4
  %612 = icmp eq i32 %610, %611
  br i1 %612, label %613, label %614

613:                                              ; preds = %609
  store i32 0, i32* %6, align 4
  br label %720

614:                                              ; preds = %609
  %615 = load i32, i32* %8, align 4
  %616 = trunc i32 %615 to i8
  store i8 %616, i8* %5, align 1
  %617 = load i32*, i32** %9, align 8
  %618 = load i32, i32* %10, align 4
  %619 = zext i32 %618 to i64
  %620 = getelementptr inbounds i32, i32* %617, i64 %619
  %621 = load i32, i32* %620, align 4
  store i32 %621, i32* %10, align 4
  %622 = load i32, i32* %10, align 4
  %623 = and i32 %622, 255
  %624 = trunc i32 %623 to i8
  store i8 %624, i8* %3, align 1
  %625 = load i32, i32* %10, align 4
  %626 = lshr i32 %625, 8
  store i32 %626, i32* %10, align 4
  %627 = load i32, i32* %7, align 4
  %628 = add nsw i32 %627, 1
  store i32 %628, i32* %7, align 4
  %629 = load i8, i8* %3, align 1
  %630 = zext i8 %629 to i32
  %631 = load i32, i32* %8, align 4
  %632 = icmp ne i32 %630, %631
  br i1 %632, label %633, label %636

633:                                              ; preds = %614
  %634 = load i8, i8* %3, align 1
  %635 = zext i8 %634 to i32
  store i32 %635, i32* %8, align 4
  br label %587

636:                                              ; preds = %614
  %637 = load i32, i32* %7, align 4
  %638 = load i32, i32* %14, align 4
  %639 = icmp eq i32 %637, %638
  br i1 %639, label %640, label %641

640:                                              ; preds = %636
  br label %587

641:                                              ; preds = %636
  store i32 2, i32* %6, align 4
  %642 = load i32*, i32** %9, align 8
  %643 = load i32, i32* %10, align 4
  %644 = zext i32 %643 to i64
  %645 = getelementptr inbounds i32, i32* %642, i64 %644
  %646 = load i32, i32* %645, align 4
  store i32 %646, i32* %10, align 4
  %647 = load i32, i32* %10, align 4
  %648 = and i32 %647, 255
  %649 = trunc i32 %648 to i8
  store i8 %649, i8* %3, align 1
  %650 = load i32, i32* %10, align 4
  %651 = lshr i32 %650, 8
  store i32 %651, i32* %10, align 4
  %652 = load i32, i32* %7, align 4
  %653 = add nsw i32 %652, 1
  store i32 %653, i32* %7, align 4
  %654 = load i32, i32* %7, align 4
  %655 = load i32, i32* %14, align 4
  %656 = icmp eq i32 %654, %655
  br i1 %656, label %657, label %658

657:                                              ; preds = %641
  br label %554

658:                                              ; preds = %641
  %659 = load i8, i8* %3, align 1
  %660 = zext i8 %659 to i32
  %661 = load i32, i32* %8, align 4
  %662 = icmp ne i32 %660, %661
  br i1 %662, label %663, label %666

663:                                              ; preds = %658
  %664 = load i8, i8* %3, align 1
  %665 = zext i8 %664 to i32
  store i32 %665, i32* %8, align 4
  br label %554

666:                                              ; preds = %658
  store i32 3, i32* %6, align 4
  %667 = load i32*, i32** %9, align 8
  %668 = load i32, i32* %10, align 4
  %669 = zext i32 %668 to i64
  %670 = getelementptr inbounds i32, i32* %667, i64 %669
  %671 = load i32, i32* %670, align 4
  store i32 %671, i32* %10, align 4
  %672 = load i32, i32* %10, align 4
  %673 = and i32 %672, 255
  %674 = trunc i32 %673 to i8
  store i8 %674, i8* %3, align 1
  %675 = load i32, i32* %10, align 4
  %676 = lshr i32 %675, 8
  store i32 %676, i32* %10, align 4
  %677 = load i32, i32* %7, align 4
  %678 = add nsw i32 %677, 1
  store i32 %678, i32* %7, align 4
  %679 = load i32, i32* %7, align 4
  %680 = load i32, i32* %14, align 4
  %681 = icmp eq i32 %679, %680
  br i1 %681, label %682, label %683

682:                                              ; preds = %666
  br label %554

683:                                              ; preds = %666
  %684 = load i8, i8* %3, align 1
  %685 = zext i8 %684 to i32
  %686 = load i32, i32* %8, align 4
  %687 = icmp ne i32 %685, %686
  br i1 %687, label %688, label %691

688:                                              ; preds = %683
  %689 = load i8, i8* %3, align 1
  %690 = zext i8 %689 to i32
  store i32 %690, i32* %8, align 4
  br label %554

691:                                              ; preds = %683
  %692 = load i32*, i32** %9, align 8
  %693 = load i32, i32* %10, align 4
  %694 = zext i32 %693 to i64
  %695 = getelementptr inbounds i32, i32* %692, i64 %694
  %696 = load i32, i32* %695, align 4
  store i32 %696, i32* %10, align 4
  %697 = load i32, i32* %10, align 4
  %698 = and i32 %697, 255
  %699 = trunc i32 %698 to i8
  store i8 %699, i8* %3, align 1
  %700 = load i32, i32* %10, align 4
  %701 = lshr i32 %700, 8
  store i32 %701, i32* %10, align 4
  %702 = load i32, i32* %7, align 4
  %703 = add nsw i32 %702, 1
  store i32 %703, i32* %7, align 4
  %704 = load i8, i8* %3, align 1
  %705 = zext i8 %704 to i32
  %706 = add nsw i32 %705, 4
  store i32 %706, i32* %6, align 4
  %707 = load i32*, i32** %9, align 8
  %708 = load i32, i32* %10, align 4
  %709 = zext i32 %708 to i64
  %710 = getelementptr inbounds i32, i32* %707, i64 %709
  %711 = load i32, i32* %710, align 4
  store i32 %711, i32* %10, align 4
  %712 = load i32, i32* %10, align 4
  %713 = and i32 %712, 255
  %714 = trunc i32 %713 to i8
  %715 = zext i8 %714 to i32
  store i32 %715, i32* %8, align 4
  %716 = load i32, i32* %10, align 4
  %717 = lshr i32 %716, 8
  store i32 %717, i32* %10, align 4
  %718 = load i32, i32* %7, align 4
  %719 = add nsw i32 %718, 1
  store i32 %719, i32* %7, align 4
  br label %554

720:                                              ; preds = %613, %590, %561
  %721 = load %struct.DState*, %struct.DState** %2, align 8
  %722 = getelementptr inbounds %struct.DState, %struct.DState* %721, i32 0, i32 0
  %723 = load %struct.bz_stream*, %struct.bz_stream** %722, align 8
  %724 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %723, i32 0, i32 6
  %725 = load i32, i32* %724, align 4
  store i32 %725, i32* %15, align 4
  %726 = load i32, i32* %13, align 4
  %727 = load i32, i32* %12, align 4
  %728 = sub i32 %726, %727
  %729 = load %struct.DState*, %struct.DState** %2, align 8
  %730 = getelementptr inbounds %struct.DState, %struct.DState* %729, i32 0, i32 0
  %731 = load %struct.bz_stream*, %struct.bz_stream** %730, align 8
  %732 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %731, i32 0, i32 6
  %733 = load i32, i32* %732, align 4
  %734 = add i32 %733, %728
  store i32 %734, i32* %732, align 4
  %735 = load %struct.DState*, %struct.DState** %2, align 8
  %736 = getelementptr inbounds %struct.DState, %struct.DState* %735, i32 0, i32 0
  %737 = load %struct.bz_stream*, %struct.bz_stream** %736, align 8
  %738 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %737, i32 0, i32 6
  %739 = load i32, i32* %738, align 4
  %740 = load i32, i32* %15, align 4
  %741 = icmp ult i32 %739, %740
  br i1 %741, label %742, label %749

742:                                              ; preds = %720
  %743 = load %struct.DState*, %struct.DState** %2, align 8
  %744 = getelementptr inbounds %struct.DState, %struct.DState* %743, i32 0, i32 0
  %745 = load %struct.bz_stream*, %struct.bz_stream** %744, align 8
  %746 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %745, i32 0, i32 7
  %747 = load i32, i32* %746, align 8
  %748 = add i32 %747, 1
  store i32 %748, i32* %746, align 8
  br label %749

749:                                              ; preds = %742, %720
  %750 = load i32, i32* %4, align 4
  %751 = load %struct.DState*, %struct.DState** %2, align 8
  %752 = getelementptr inbounds %struct.DState, %struct.DState* %751, i32 0, i32 25
  store i32 %750, i32* %752, align 8
  %753 = load i8, i8* %5, align 1
  %754 = load %struct.DState*, %struct.DState** %2, align 8
  %755 = getelementptr inbounds %struct.DState, %struct.DState* %754, i32 0, i32 2
  store i8 %753, i8* %755, align 4
  %756 = load i32, i32* %6, align 4
  %757 = load %struct.DState*, %struct.DState** %2, align 8
  %758 = getelementptr inbounds %struct.DState, %struct.DState* %757, i32 0, i32 3
  store i32 %756, i32* %758, align 8
  %759 = load i32, i32* %7, align 4
  %760 = load %struct.DState*, %struct.DState** %2, align 8
  %761 = getelementptr inbounds %struct.DState, %struct.DState* %760, i32 0, i32 17
  store i32 %759, i32* %761, align 4
  %762 = load i32, i32* %8, align 4
  %763 = load %struct.DState*, %struct.DState** %2, align 8
  %764 = getelementptr inbounds %struct.DState, %struct.DState* %763, i32 0, i32 15
  store i32 %762, i32* %764, align 8
  %765 = load i32*, i32** %9, align 8
  %766 = load %struct.DState*, %struct.DState** %2, align 8
  %767 = getelementptr inbounds %struct.DState, %struct.DState* %766, i32 0, i32 20
  store i32* %765, i32** %767, align 8
  %768 = load i32, i32* %10, align 4
  %769 = load %struct.DState*, %struct.DState** %2, align 8
  %770 = getelementptr inbounds %struct.DState, %struct.DState* %769, i32 0, i32 14
  store i32 %768, i32* %770, align 4
  %771 = load i8*, i8** %11, align 8
  %772 = load %struct.DState*, %struct.DState** %2, align 8
  %773 = getelementptr inbounds %struct.DState, %struct.DState* %772, i32 0, i32 0
  %774 = load %struct.bz_stream*, %struct.bz_stream** %773, align 8
  %775 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %774, i32 0, i32 4
  store i8* %771, i8** %775, align 8
  %776 = load i32, i32* %12, align 4
  %777 = load %struct.DState*, %struct.DState** %2, align 8
  %778 = getelementptr inbounds %struct.DState, %struct.DState* %777, i32 0, i32 0
  %779 = load %struct.bz_stream*, %struct.bz_stream** %778, align 8
  %780 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %779, i32 0, i32 5
  store i32 %776, i32* %780, align 8
  br label %781

781:                                              ; preds = %29, %109, %749
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.bz_stream*, align 8
  %4 = alloca %struct.DState*, align 8
  store %struct.bz_stream* %0, %struct.bz_stream** %3, align 8
  %5 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %6 = icmp eq %struct.bz_stream* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 -2, i32* %2, align 4
  br label %82

8:                                                ; preds = %1
  %9 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %10 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %9, i32 0, i32 8
  %11 = load i8*, i8** %10, align 8
  %12 = bitcast i8* %11 to %struct.DState*
  store %struct.DState* %12, %struct.DState** %4, align 8
  %13 = load %struct.DState*, %struct.DState** %4, align 8
  %14 = icmp eq %struct.DState* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %8
  store i32 -2, i32* %2, align 4
  br label %82

16:                                               ; preds = %8
  %17 = load %struct.DState*, %struct.DState** %4, align 8
  %18 = getelementptr inbounds %struct.DState, %struct.DState* %17, i32 0, i32 0
  %19 = load %struct.bz_stream*, %struct.bz_stream** %18, align 8
  %20 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %21 = icmp ne %struct.bz_stream* %19, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  store i32 -2, i32* %2, align 4
  br label %82

23:                                               ; preds = %16
  %24 = load %struct.DState*, %struct.DState** %4, align 8
  %25 = getelementptr inbounds %struct.DState, %struct.DState* %24, i32 0, i32 20
  %26 = load i32*, i32** %25, align 8
  %27 = icmp ne i32* %26, null
  br i1 %27, label %28, label %39

28:                                               ; preds = %23
  %29 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %30 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %29, i32 0, i32 10
  %31 = load void (i8*, i8*)*, void (i8*, i8*)** %30, align 8
  %32 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %33 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %32, i32 0, i32 11
  %34 = load i8*, i8** %33, align 8
  %35 = load %struct.DState*, %struct.DState** %4, align 8
  %36 = getelementptr inbounds %struct.DState, %struct.DState* %35, i32 0, i32 20
  %37 = load i32*, i32** %36, align 8
  %38 = bitcast i32* %37 to i8*
  call void %31(i8* %34, i8* %38)
  br label %39

39:                                               ; preds = %28, %23
  %40 = load %struct.DState*, %struct.DState** %4, align 8
  %41 = getelementptr inbounds %struct.DState, %struct.DState* %40, i32 0, i32 21
  %42 = load i16*, i16** %41, align 8
  %43 = icmp ne i16* %42, null
  br i1 %43, label %44, label %55

44:                                               ; preds = %39
  %45 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %46 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %45, i32 0, i32 10
  %47 = load void (i8*, i8*)*, void (i8*, i8*)** %46, align 8
  %48 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %49 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %48, i32 0, i32 11
  %50 = load i8*, i8** %49, align 8
  %51 = load %struct.DState*, %struct.DState** %4, align 8
  %52 = getelementptr inbounds %struct.DState, %struct.DState* %51, i32 0, i32 21
  %53 = load i16*, i16** %52, align 8
  %54 = bitcast i16* %53 to i8*
  call void %47(i8* %50, i8* %54)
  br label %55

55:                                               ; preds = %44, %39
  %56 = load %struct.DState*, %struct.DState** %4, align 8
  %57 = getelementptr inbounds %struct.DState, %struct.DState* %56, i32 0, i32 22
  %58 = load i8*, i8** %57, align 8
  %59 = icmp ne i8* %58, null
  br i1 %59, label %60, label %70

60:                                               ; preds = %55
  %61 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %62 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %61, i32 0, i32 10
  %63 = load void (i8*, i8*)*, void (i8*, i8*)** %62, align 8
  %64 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %65 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %64, i32 0, i32 11
  %66 = load i8*, i8** %65, align 8
  %67 = load %struct.DState*, %struct.DState** %4, align 8
  %68 = getelementptr inbounds %struct.DState, %struct.DState* %67, i32 0, i32 22
  %69 = load i8*, i8** %68, align 8
  call void %63(i8* %66, i8* %69)
  br label %70

70:                                               ; preds = %60, %55
  %71 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %72 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %71, i32 0, i32 10
  %73 = load void (i8*, i8*)*, void (i8*, i8*)** %72, align 8
  %74 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %75 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %74, i32 0, i32 11
  %76 = load i8*, i8** %75, align 8
  %77 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %78 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %77, i32 0, i32 8
  %79 = load i8*, i8** %78, align 8
  call void %73(i8* %76, i8* %79)
  %80 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %81 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %80, i32 0, i32 8
  store i8* null, i8** %81, align 8
  store i32 0, i32* %2, align 4
  br label %82

82:                                               ; preds = %70, %22, %15, %7
  %83 = load i32, i32* %2, align 4
  ret i32 %83
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @BZ2_bzWriteOpen(i32* %0, %struct._IO_FILE* %1, i32 %2, i32 %3, i32 %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %struct._IO_FILE*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.bzFile*, align 8
  store i32* %0, i32** %7, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %8, align 8
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store %struct.bzFile* null, %struct.bzFile** %13, align 8
  %14 = load i32*, i32** %7, align 8
  %15 = icmp ne i32* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %5
  %17 = load i32*, i32** %7, align 8
  store i32 0, i32* %17, align 4
  br label %18

18:                                               ; preds = %16, %5
  %19 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %20 = icmp ne %struct.bzFile* %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %18
  %22 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %23 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %22, i32 0, i32 5
  store i32 0, i32* %23, align 8
  br label %24

24:                                               ; preds = %21, %18
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %26 = icmp eq %struct._IO_FILE* %25, null
  br i1 %26, label %45, label %27

27:                                               ; preds = %24
  %28 = load i32, i32* %9, align 4
  %29 = icmp slt i32 %28, 1
  br i1 %29, label %45, label %30

30:                                               ; preds = %27
  %31 = load i32, i32* %9, align 4
  %32 = icmp sgt i32 %31, 9
  br i1 %32, label %45, label %33

33:                                               ; preds = %30
  %34 = load i32, i32* %11, align 4
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %45, label %36

36:                                               ; preds = %33
  %37 = load i32, i32* %11, align 4
  %38 = icmp sgt i32 %37, 250
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  %40 = load i32, i32* %10, align 4
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %39
  %43 = load i32, i32* %10, align 4
  %44 = icmp sgt i32 %43, 4
  br i1 %44, label %45, label %57

45:                                               ; preds = %42, %39, %36, %33, %30, %27, %24
  %46 = load i32*, i32** %7, align 8
  %47 = icmp ne i32* %46, null
  br i1 %47, label %48, label %50

48:                                               ; preds = %45
  %49 = load i32*, i32** %7, align 8
  store i32 -2, i32* %49, align 4
  br label %50

50:                                               ; preds = %48, %45
  %51 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %52 = icmp ne %struct.bzFile* %51, null
  br i1 %52, label %53, label %56

53:                                               ; preds = %50
  %54 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %55 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 5
  store i32 -2, i32* %55, align 8
  br label %56

56:                                               ; preds = %53, %50
  store i8* null, i8** %6, align 8
  br label %156

57:                                               ; preds = %42
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %59 = call i32 @ferror(%struct._IO_FILE* %58) #9
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %57
  %62 = load i32*, i32** %7, align 8
  %63 = icmp ne i32* %62, null
  br i1 %63, label %64, label %66

64:                                               ; preds = %61
  %65 = load i32*, i32** %7, align 8
  store i32 -6, i32* %65, align 4
  br label %66

66:                                               ; preds = %64, %61
  %67 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %68 = icmp ne %struct.bzFile* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %66
  %70 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %71 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %70, i32 0, i32 5
  store i32 -6, i32* %71, align 8
  br label %72

72:                                               ; preds = %69, %66
  store i8* null, i8** %6, align 8
  br label %156

73:                                               ; preds = %57
  %74 = call noalias i8* @malloc(i64 5104) #9
  %75 = bitcast i8* %74 to %struct.bzFile*
  store %struct.bzFile* %75, %struct.bzFile** %13, align 8
  %76 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %77 = icmp eq %struct.bzFile* %76, null
  br i1 %77, label %78, label %90

78:                                               ; preds = %73
  %79 = load i32*, i32** %7, align 8
  %80 = icmp ne i32* %79, null
  br i1 %80, label %81, label %83

81:                                               ; preds = %78
  %82 = load i32*, i32** %7, align 8
  store i32 -3, i32* %82, align 4
  br label %83

83:                                               ; preds = %81, %78
  %84 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %85 = icmp ne %struct.bzFile* %84, null
  br i1 %85, label %86, label %89

86:                                               ; preds = %83
  %87 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %88 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %87, i32 0, i32 5
  store i32 -3, i32* %88, align 8
  br label %89

89:                                               ; preds = %86, %83
  store i8* null, i8** %6, align 8
  br label %156

90:                                               ; preds = %73
  %91 = load i32*, i32** %7, align 8
  %92 = icmp ne i32* %91, null
  br i1 %92, label %93, label %95

93:                                               ; preds = %90
  %94 = load i32*, i32** %7, align 8
  store i32 0, i32* %94, align 4
  br label %95

95:                                               ; preds = %93, %90
  %96 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %97 = icmp ne %struct.bzFile* %96, null
  br i1 %97, label %98, label %101

98:                                               ; preds = %95
  %99 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %100 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %99, i32 0, i32 5
  store i32 0, i32* %100, align 8
  br label %101

101:                                              ; preds = %98, %95
  %102 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %103 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %102, i32 0, i32 6
  store i8 0, i8* %103, align 4
  %104 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %105 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %104, i32 0, i32 2
  store i32 0, i32* %105, align 8
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** %8, align 8
  %107 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %108 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %107, i32 0, i32 0
  store %struct._IO_FILE* %106, %struct._IO_FILE** %108, align 8
  %109 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %110 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %109, i32 0, i32 3
  store i8 1, i8* %110, align 4
  %111 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %112 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %111, i32 0, i32 4
  %113 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %112, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %113, align 8
  %114 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %115 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %114, i32 0, i32 4
  %116 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %115, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %116, align 8
  %117 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %118 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %117, i32 0, i32 4
  %119 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %118, i32 0, i32 11
  store i8* null, i8** %119, align 8
  %120 = load i32, i32* %11, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %101
  store i32 30, i32* %11, align 4
  br label %123

123:                                              ; preds = %122, %101
  %124 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %125 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %124, i32 0, i32 4
  %126 = load i32, i32* %9, align 4
  %127 = load i32, i32* %10, align 4
  %128 = load i32, i32* %11, align 4
  %129 = call i32 @BZ2_bzCompressInit(%struct.bz_stream* %125, i32 %126, i32 %127, i32 %128)
  store i32 %129, i32* %12, align 4
  %130 = load i32, i32* %12, align 4
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %132, label %148

132:                                              ; preds = %123
  %133 = load i32*, i32** %7, align 8
  %134 = icmp ne i32* %133, null
  br i1 %134, label %135, label %138

135:                                              ; preds = %132
  %136 = load i32, i32* %12, align 4
  %137 = load i32*, i32** %7, align 8
  store i32 %136, i32* %137, align 4
  br label %138

138:                                              ; preds = %135, %132
  %139 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %140 = icmp ne %struct.bzFile* %139, null
  br i1 %140, label %141, label %145

141:                                              ; preds = %138
  %142 = load i32, i32* %12, align 4
  %143 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %144 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %143, i32 0, i32 5
  store i32 %142, i32* %144, align 8
  br label %145

145:                                              ; preds = %141, %138
  %146 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %147 = bitcast %struct.bzFile* %146 to i8*
  call void @free(i8* %147) #9
  store i8* null, i8** %6, align 8
  br label %156

148:                                              ; preds = %123
  %149 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %150 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %149, i32 0, i32 4
  %151 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %150, i32 0, i32 1
  store i32 0, i32* %151, align 8
  %152 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %153 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %152, i32 0, i32 6
  store i8 1, i8* %153, align 4
  %154 = load %struct.bzFile*, %struct.bzFile** %13, align 8
  %155 = bitcast %struct.bzFile* %154 to i8*
  store i8* %155, i8** %6, align 8
  br label %156

156:                                              ; preds = %148, %145, %89, %72, %56
  %157 = load i8*, i8** %6, align 8
  ret i8* %157
}

; Function Attrs: nounwind
declare dso_local i32 @ferror(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #3

; Function Attrs: nounwind
declare dso_local void @free(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_bzWrite(i32* %0, i8* %1, i8* %2, i32 %3) #0 {
  %5 = alloca i32*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.bzFile*, align 8
  store i32* %0, i32** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  store i32 %3, i32* %8, align 4
  %13 = load i8*, i8** %6, align 8
  %14 = bitcast i8* %13 to %struct.bzFile*
  store %struct.bzFile* %14, %struct.bzFile** %12, align 8
  %15 = load i32*, i32** %5, align 8
  %16 = icmp ne i32* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %4
  %18 = load i32*, i32** %5, align 8
  store i32 0, i32* %18, align 4
  br label %19

19:                                               ; preds = %17, %4
  %20 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %21 = icmp ne %struct.bzFile* %20, null
  br i1 %21, label %22, label %25

22:                                               ; preds = %19
  %23 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %24 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %23, i32 0, i32 5
  store i32 0, i32* %24, align 8
  br label %25

25:                                               ; preds = %22, %19
  %26 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %27 = icmp eq %struct.bzFile* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %25
  %29 = load i8*, i8** %7, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = load i32, i32* %8, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %34, label %46

34:                                               ; preds = %31, %28, %25
  %35 = load i32*, i32** %5, align 8
  %36 = icmp ne i32* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %34
  %38 = load i32*, i32** %5, align 8
  store i32 -2, i32* %38, align 4
  br label %39

39:                                               ; preds = %37, %34
  %40 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %41 = icmp ne %struct.bzFile* %40, null
  br i1 %41, label %42, label %45

42:                                               ; preds = %39
  %43 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %44 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %43, i32 0, i32 5
  store i32 -2, i32* %44, align 8
  br label %45

45:                                               ; preds = %42, %39
  br label %197

46:                                               ; preds = %31
  %47 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %48 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %47, i32 0, i32 3
  %49 = load i8, i8* %48, align 4
  %50 = icmp ne i8 %49, 0
  br i1 %50, label %63, label %51

51:                                               ; preds = %46
  %52 = load i32*, i32** %5, align 8
  %53 = icmp ne i32* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %51
  %55 = load i32*, i32** %5, align 8
  store i32 -1, i32* %55, align 4
  br label %56

56:                                               ; preds = %54, %51
  %57 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %58 = icmp ne %struct.bzFile* %57, null
  br i1 %58, label %59, label %62

59:                                               ; preds = %56
  %60 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %61 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %60, i32 0, i32 5
  store i32 -1, i32* %61, align 8
  br label %62

62:                                               ; preds = %59, %56
  br label %197

63:                                               ; preds = %46
  %64 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %65 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %64, i32 0, i32 0
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** %65, align 8
  %67 = call i32 @ferror(%struct._IO_FILE* %66) #9
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %63
  %70 = load i32*, i32** %5, align 8
  %71 = icmp ne i32* %70, null
  br i1 %71, label %72, label %74

72:                                               ; preds = %69
  %73 = load i32*, i32** %5, align 8
  store i32 -6, i32* %73, align 4
  br label %74

74:                                               ; preds = %72, %69
  %75 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %76 = icmp ne %struct.bzFile* %75, null
  br i1 %76, label %77, label %80

77:                                               ; preds = %74
  %78 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %79 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %78, i32 0, i32 5
  store i32 -6, i32* %79, align 8
  br label %80

80:                                               ; preds = %77, %74
  br label %197

81:                                               ; preds = %63
  %82 = load i32, i32* %8, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %96

84:                                               ; preds = %81
  %85 = load i32*, i32** %5, align 8
  %86 = icmp ne i32* %85, null
  br i1 %86, label %87, label %89

87:                                               ; preds = %84
  %88 = load i32*, i32** %5, align 8
  store i32 0, i32* %88, align 4
  br label %89

89:                                               ; preds = %87, %84
  %90 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %91 = icmp ne %struct.bzFile* %90, null
  br i1 %91, label %92, label %95

92:                                               ; preds = %89
  %93 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %94 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %93, i32 0, i32 5
  store i32 0, i32* %94, align 8
  br label %95

95:                                               ; preds = %92, %89
  br label %197

96:                                               ; preds = %81
  %97 = load i32, i32* %8, align 4
  %98 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %99 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %98, i32 0, i32 4
  %100 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %99, i32 0, i32 1
  store i32 %97, i32* %100, align 8
  %101 = load i8*, i8** %7, align 8
  %102 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %103 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %102, i32 0, i32 4
  %104 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %103, i32 0, i32 0
  store i8* %101, i8** %104, align 8
  br label %105

105:                                              ; preds = %96, %196
  %106 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %107 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %106, i32 0, i32 4
  %108 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %107, i32 0, i32 5
  store i32 5000, i32* %108, align 8
  %109 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %110 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %109, i32 0, i32 1
  %111 = getelementptr inbounds [5000 x i8], [5000 x i8]* %110, i64 0, i64 0
  %112 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %113 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %112, i32 0, i32 4
  %114 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %113, i32 0, i32 4
  store i8* %111, i8** %114, align 8
  %115 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %116 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %115, i32 0, i32 4
  %117 = call i32 @BZ2_bzCompress(%struct.bz_stream* %116, i32 0)
  store i32 %117, i32* %11, align 4
  %118 = load i32, i32* %11, align 4
  %119 = icmp ne i32 %118, 1
  br i1 %119, label %120, label %134

120:                                              ; preds = %105
  %121 = load i32*, i32** %5, align 8
  %122 = icmp ne i32* %121, null
  br i1 %122, label %123, label %126

123:                                              ; preds = %120
  %124 = load i32, i32* %11, align 4
  %125 = load i32*, i32** %5, align 8
  store i32 %124, i32* %125, align 4
  br label %126

126:                                              ; preds = %123, %120
  %127 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %128 = icmp ne %struct.bzFile* %127, null
  br i1 %128, label %129, label %133

129:                                              ; preds = %126
  %130 = load i32, i32* %11, align 4
  %131 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %132 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %131, i32 0, i32 5
  store i32 %130, i32* %132, align 8
  br label %133

133:                                              ; preds = %129, %126
  br label %197

134:                                              ; preds = %105
  %135 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %136 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %135, i32 0, i32 4
  %137 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %136, i32 0, i32 5
  %138 = load i32, i32* %137, align 8
  %139 = icmp ult i32 %138, 5000
  br i1 %139, label %140, label %178

140:                                              ; preds = %134
  %141 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %142 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %141, i32 0, i32 4
  %143 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %142, i32 0, i32 5
  %144 = load i32, i32* %143, align 8
  %145 = sub i32 5000, %144
  store i32 %145, i32* %9, align 4
  %146 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %147 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %146, i32 0, i32 1
  %148 = getelementptr inbounds [5000 x i8], [5000 x i8]* %147, i64 0, i64 0
  %149 = load i32, i32* %9, align 4
  %150 = sext i32 %149 to i64
  %151 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %152 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %151, i32 0, i32 0
  %153 = load %struct._IO_FILE*, %struct._IO_FILE** %152, align 8
  %154 = call i64 @fwrite(i8* %148, i64 1, i64 %150, %struct._IO_FILE* %153)
  %155 = trunc i64 %154 to i32
  store i32 %155, i32* %10, align 4
  %156 = load i32, i32* %9, align 4
  %157 = load i32, i32* %10, align 4
  %158 = icmp ne i32 %156, %157
  br i1 %158, label %165, label %159

159:                                              ; preds = %140
  %160 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %161 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %160, i32 0, i32 0
  %162 = load %struct._IO_FILE*, %struct._IO_FILE** %161, align 8
  %163 = call i32 @ferror(%struct._IO_FILE* %162) #9
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %165, label %177

165:                                              ; preds = %159, %140
  %166 = load i32*, i32** %5, align 8
  %167 = icmp ne i32* %166, null
  br i1 %167, label %168, label %170

168:                                              ; preds = %165
  %169 = load i32*, i32** %5, align 8
  store i32 -6, i32* %169, align 4
  br label %170

170:                                              ; preds = %168, %165
  %171 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %172 = icmp ne %struct.bzFile* %171, null
  br i1 %172, label %173, label %176

173:                                              ; preds = %170
  %174 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %175 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %174, i32 0, i32 5
  store i32 -6, i32* %175, align 8
  br label %176

176:                                              ; preds = %173, %170
  br label %197

177:                                              ; preds = %159
  br label %178

178:                                              ; preds = %177, %134
  %179 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %180 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %179, i32 0, i32 4
  %181 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %180, i32 0, i32 1
  %182 = load i32, i32* %181, align 8
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %196

184:                                              ; preds = %178
  %185 = load i32*, i32** %5, align 8
  %186 = icmp ne i32* %185, null
  br i1 %186, label %187, label %189

187:                                              ; preds = %184
  %188 = load i32*, i32** %5, align 8
  store i32 0, i32* %188, align 4
  br label %189

189:                                              ; preds = %187, %184
  %190 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %191 = icmp ne %struct.bzFile* %190, null
  br i1 %191, label %192, label %195

192:                                              ; preds = %189
  %193 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %194 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %193, i32 0, i32 5
  store i32 0, i32* %194, align 8
  br label %195

195:                                              ; preds = %192, %189
  br label %197

196:                                              ; preds = %178
  br label %105

197:                                              ; preds = %195, %176, %133, %95, %80, %62, %45
  ret void
}

declare dso_local i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_bzWriteClose(i32* %0, i8* %1, i32 %2, i32* %3, i32* %4) #0 {
  %6 = alloca i32*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  store i32* %0, i32** %6, align 8
  store i8* %1, i8** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32* %3, i32** %9, align 8
  store i32* %4, i32** %10, align 8
  %11 = load i32*, i32** %6, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = load i32, i32* %8, align 4
  %14 = load i32*, i32** %9, align 8
  %15 = load i32*, i32** %10, align 8
  call void @BZ2_bzWriteClose64(i32* %11, i8* %12, i32 %13, i32* %14, i32* null, i32* %15, i32* null)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_bzWriteClose64(i32* %0, i8* %1, i32 %2, i32* %3, i32* %4, i32* %5, i32* %6) #0 {
  %8 = alloca i32*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %struct.bzFile*, align 8
  store i32* %0, i32** %8, align 8
  store i8* %1, i8** %9, align 8
  store i32 %2, i32* %10, align 4
  store i32* %3, i32** %11, align 8
  store i32* %4, i32** %12, align 8
  store i32* %5, i32** %13, align 8
  store i32* %6, i32** %14, align 8
  %19 = load i8*, i8** %9, align 8
  %20 = bitcast i8* %19 to %struct.bzFile*
  store %struct.bzFile* %20, %struct.bzFile** %18, align 8
  %21 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %22 = icmp eq %struct.bzFile* %21, null
  br i1 %22, label %23, label %35

23:                                               ; preds = %7
  %24 = load i32*, i32** %8, align 8
  %25 = icmp ne i32* %24, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %23
  %27 = load i32*, i32** %8, align 8
  store i32 0, i32* %27, align 4
  br label %28

28:                                               ; preds = %26, %23
  %29 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %30 = icmp ne %struct.bzFile* %29, null
  br i1 %30, label %31, label %34

31:                                               ; preds = %28
  %32 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %33 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %32, i32 0, i32 5
  store i32 0, i32* %33, align 8
  br label %34

34:                                               ; preds = %31, %28
  br label %266

35:                                               ; preds = %7
  %36 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %37 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %36, i32 0, i32 3
  %38 = load i8, i8* %37, align 4
  %39 = icmp ne i8 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %35
  %41 = load i32*, i32** %8, align 8
  %42 = icmp ne i32* %41, null
  br i1 %42, label %43, label %45

43:                                               ; preds = %40
  %44 = load i32*, i32** %8, align 8
  store i32 -1, i32* %44, align 4
  br label %45

45:                                               ; preds = %43, %40
  %46 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %47 = icmp ne %struct.bzFile* %46, null
  br i1 %47, label %48, label %51

48:                                               ; preds = %45
  %49 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %50 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %49, i32 0, i32 5
  store i32 -1, i32* %50, align 8
  br label %51

51:                                               ; preds = %48, %45
  br label %266

52:                                               ; preds = %35
  %53 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %54 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %53, i32 0, i32 0
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** %54, align 8
  %56 = call i32 @ferror(%struct._IO_FILE* %55) #9
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %52
  %59 = load i32*, i32** %8, align 8
  %60 = icmp ne i32* %59, null
  br i1 %60, label %61, label %63

61:                                               ; preds = %58
  %62 = load i32*, i32** %8, align 8
  store i32 -6, i32* %62, align 4
  br label %63

63:                                               ; preds = %61, %58
  %64 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %65 = icmp ne %struct.bzFile* %64, null
  br i1 %65, label %66, label %69

66:                                               ; preds = %63
  %67 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %68 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %67, i32 0, i32 5
  store i32 -6, i32* %68, align 8
  br label %69

69:                                               ; preds = %66, %63
  br label %266

70:                                               ; preds = %52
  %71 = load i32*, i32** %11, align 8
  %72 = icmp ne i32* %71, null
  br i1 %72, label %73, label %75

73:                                               ; preds = %70
  %74 = load i32*, i32** %11, align 8
  store i32 0, i32* %74, align 4
  br label %75

75:                                               ; preds = %73, %70
  %76 = load i32*, i32** %12, align 8
  %77 = icmp ne i32* %76, null
  br i1 %77, label %78, label %80

78:                                               ; preds = %75
  %79 = load i32*, i32** %12, align 8
  store i32 0, i32* %79, align 4
  br label %80

80:                                               ; preds = %78, %75
  %81 = load i32*, i32** %13, align 8
  %82 = icmp ne i32* %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %80
  %84 = load i32*, i32** %13, align 8
  store i32 0, i32* %84, align 4
  br label %85

85:                                               ; preds = %83, %80
  %86 = load i32*, i32** %14, align 8
  %87 = icmp ne i32* %86, null
  br i1 %87, label %88, label %90

88:                                               ; preds = %85
  %89 = load i32*, i32** %14, align 8
  store i32 0, i32* %89, align 4
  br label %90

90:                                               ; preds = %88, %85
  %91 = load i32, i32* %10, align 4
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %181, label %93

93:                                               ; preds = %90
  %94 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %95 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %94, i32 0, i32 5
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %181

98:                                               ; preds = %93
  br label %99

99:                                               ; preds = %98, %179
  %100 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %101 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %100, i32 0, i32 4
  %102 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %101, i32 0, i32 5
  store i32 5000, i32* %102, align 8
  %103 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %104 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %103, i32 0, i32 1
  %105 = getelementptr inbounds [5000 x i8], [5000 x i8]* %104, i64 0, i64 0
  %106 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %107 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %106, i32 0, i32 4
  %108 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %107, i32 0, i32 4
  store i8* %105, i8** %108, align 8
  %109 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %110 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %109, i32 0, i32 4
  %111 = call i32 @BZ2_bzCompress(%struct.bz_stream* %110, i32 2)
  store i32 %111, i32* %17, align 4
  %112 = load i32, i32* %17, align 4
  %113 = icmp ne i32 %112, 3
  br i1 %113, label %114, label %131

114:                                              ; preds = %99
  %115 = load i32, i32* %17, align 4
  %116 = icmp ne i32 %115, 4
  br i1 %116, label %117, label %131

117:                                              ; preds = %114
  %118 = load i32*, i32** %8, align 8
  %119 = icmp ne i32* %118, null
  br i1 %119, label %120, label %123

120:                                              ; preds = %117
  %121 = load i32, i32* %17, align 4
  %122 = load i32*, i32** %8, align 8
  store i32 %121, i32* %122, align 4
  br label %123

123:                                              ; preds = %120, %117
  %124 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %125 = icmp ne %struct.bzFile* %124, null
  br i1 %125, label %126, label %130

126:                                              ; preds = %123
  %127 = load i32, i32* %17, align 4
  %128 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %129 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %128, i32 0, i32 5
  store i32 %127, i32* %129, align 8
  br label %130

130:                                              ; preds = %126, %123
  br label %266

131:                                              ; preds = %114, %99
  %132 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %133 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %132, i32 0, i32 4
  %134 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %133, i32 0, i32 5
  %135 = load i32, i32* %134, align 8
  %136 = icmp ult i32 %135, 5000
  br i1 %136, label %137, label %175

137:                                              ; preds = %131
  %138 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %139 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %138, i32 0, i32 4
  %140 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %139, i32 0, i32 5
  %141 = load i32, i32* %140, align 8
  %142 = sub i32 5000, %141
  store i32 %142, i32* %15, align 4
  %143 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %144 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %143, i32 0, i32 1
  %145 = getelementptr inbounds [5000 x i8], [5000 x i8]* %144, i64 0, i64 0
  %146 = load i32, i32* %15, align 4
  %147 = sext i32 %146 to i64
  %148 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %149 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %148, i32 0, i32 0
  %150 = load %struct._IO_FILE*, %struct._IO_FILE** %149, align 8
  %151 = call i64 @fwrite(i8* %145, i64 1, i64 %147, %struct._IO_FILE* %150)
  %152 = trunc i64 %151 to i32
  store i32 %152, i32* %16, align 4
  %153 = load i32, i32* %15, align 4
  %154 = load i32, i32* %16, align 4
  %155 = icmp ne i32 %153, %154
  br i1 %155, label %162, label %156

156:                                              ; preds = %137
  %157 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %158 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %157, i32 0, i32 0
  %159 = load %struct._IO_FILE*, %struct._IO_FILE** %158, align 8
  %160 = call i32 @ferror(%struct._IO_FILE* %159) #9
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %162, label %174

162:                                              ; preds = %156, %137
  %163 = load i32*, i32** %8, align 8
  %164 = icmp ne i32* %163, null
  br i1 %164, label %165, label %167

165:                                              ; preds = %162
  %166 = load i32*, i32** %8, align 8
  store i32 -6, i32* %166, align 4
  br label %167

167:                                              ; preds = %165, %162
  %168 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %169 = icmp ne %struct.bzFile* %168, null
  br i1 %169, label %170, label %173

170:                                              ; preds = %167
  %171 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %172 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %171, i32 0, i32 5
  store i32 -6, i32* %172, align 8
  br label %173

173:                                              ; preds = %170, %167
  br label %266

174:                                              ; preds = %156
  br label %175

175:                                              ; preds = %174, %131
  %176 = load i32, i32* %17, align 4
  %177 = icmp eq i32 %176, 4
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  br label %180

179:                                              ; preds = %175
  br label %99

180:                                              ; preds = %178
  br label %181

181:                                              ; preds = %180, %93, %90
  %182 = load i32, i32* %10, align 4
  %183 = icmp ne i32 %182, 0
  br i1 %183, label %213, label %184

184:                                              ; preds = %181
  %185 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %186 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %185, i32 0, i32 0
  %187 = load %struct._IO_FILE*, %struct._IO_FILE** %186, align 8
  %188 = call i32 @ferror(%struct._IO_FILE* %187) #9
  %189 = icmp ne i32 %188, 0
  br i1 %189, label %213, label %190

190:                                              ; preds = %184
  %191 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %192 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %191, i32 0, i32 0
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** %192, align 8
  %194 = call i32 @fflush(%struct._IO_FILE* %193)
  %195 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %196 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %195, i32 0, i32 0
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** %196, align 8
  %198 = call i32 @ferror(%struct._IO_FILE* %197) #9
  %199 = icmp ne i32 %198, 0
  br i1 %199, label %200, label %212

200:                                              ; preds = %190
  %201 = load i32*, i32** %8, align 8
  %202 = icmp ne i32* %201, null
  br i1 %202, label %203, label %205

203:                                              ; preds = %200
  %204 = load i32*, i32** %8, align 8
  store i32 -6, i32* %204, align 4
  br label %205

205:                                              ; preds = %203, %200
  %206 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %207 = icmp ne %struct.bzFile* %206, null
  br i1 %207, label %208, label %211

208:                                              ; preds = %205
  %209 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %210 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %209, i32 0, i32 5
  store i32 -6, i32* %210, align 8
  br label %211

211:                                              ; preds = %208, %205
  br label %266

212:                                              ; preds = %190
  br label %213

213:                                              ; preds = %212, %184, %181
  %214 = load i32*, i32** %11, align 8
  %215 = icmp ne i32* %214, null
  br i1 %215, label %216, label %222

216:                                              ; preds = %213
  %217 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %218 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %217, i32 0, i32 4
  %219 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %218, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = load i32*, i32** %11, align 8
  store i32 %220, i32* %221, align 4
  br label %222

222:                                              ; preds = %216, %213
  %223 = load i32*, i32** %12, align 8
  %224 = icmp ne i32* %223, null
  br i1 %224, label %225, label %231

225:                                              ; preds = %222
  %226 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %227 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %226, i32 0, i32 4
  %228 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %227, i32 0, i32 3
  %229 = load i32, i32* %228, align 8
  %230 = load i32*, i32** %12, align 8
  store i32 %229, i32* %230, align 4
  br label %231

231:                                              ; preds = %225, %222
  %232 = load i32*, i32** %13, align 8
  %233 = icmp ne i32* %232, null
  br i1 %233, label %234, label %240

234:                                              ; preds = %231
  %235 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %236 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %235, i32 0, i32 4
  %237 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %236, i32 0, i32 6
  %238 = load i32, i32* %237, align 4
  %239 = load i32*, i32** %13, align 8
  store i32 %238, i32* %239, align 4
  br label %240

240:                                              ; preds = %234, %231
  %241 = load i32*, i32** %14, align 8
  %242 = icmp ne i32* %241, null
  br i1 %242, label %243, label %249

243:                                              ; preds = %240
  %244 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %245 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %244, i32 0, i32 4
  %246 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %245, i32 0, i32 7
  %247 = load i32, i32* %246, align 8
  %248 = load i32*, i32** %14, align 8
  store i32 %247, i32* %248, align 4
  br label %249

249:                                              ; preds = %243, %240
  %250 = load i32*, i32** %8, align 8
  %251 = icmp ne i32* %250, null
  br i1 %251, label %252, label %254

252:                                              ; preds = %249
  %253 = load i32*, i32** %8, align 8
  store i32 0, i32* %253, align 4
  br label %254

254:                                              ; preds = %252, %249
  %255 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %256 = icmp ne %struct.bzFile* %255, null
  br i1 %256, label %257, label %260

257:                                              ; preds = %254
  %258 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %259 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %258, i32 0, i32 5
  store i32 0, i32* %259, align 8
  br label %260

260:                                              ; preds = %257, %254
  %261 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %262 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %261, i32 0, i32 4
  %263 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %262)
  %264 = load %struct.bzFile*, %struct.bzFile** %18, align 8
  %265 = bitcast %struct.bzFile* %264 to i8*
  call void @free(i8* %265) #9
  br label %266

266:                                              ; preds = %260, %211, %173, %130, %69, %51, %34
  ret void
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @BZ2_bzReadOpen(i32* %0, %struct._IO_FILE* %1, i32 %2, i32 %3, i8* %4, i32 %5) #0 {
  %7 = alloca i8*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca %struct._IO_FILE*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct.bzFile*, align 8
  %15 = alloca i32, align 4
  store i32* %0, i32** %8, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %9, align 8
  store i32 %2, i32* %10, align 4
  store i32 %3, i32* %11, align 4
  store i8* %4, i8** %12, align 8
  store i32 %5, i32* %13, align 4
  store %struct.bzFile* null, %struct.bzFile** %14, align 8
  %16 = load i32*, i32** %8, align 8
  %17 = icmp ne i32* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %6
  %19 = load i32*, i32** %8, align 8
  store i32 0, i32* %19, align 4
  br label %20

20:                                               ; preds = %18, %6
  %21 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %22 = icmp ne %struct.bzFile* %21, null
  br i1 %22, label %23, label %26

23:                                               ; preds = %20
  %24 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %25 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %24, i32 0, i32 5
  store i32 0, i32* %25, align 8
  br label %26

26:                                               ; preds = %23, %20
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %28 = icmp eq %struct._IO_FILE* %27, null
  br i1 %28, label %56, label %29

29:                                               ; preds = %26
  %30 = load i32, i32* %11, align 4
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %29
  %33 = load i32, i32* %11, align 4
  %34 = icmp ne i32 %33, 1
  br i1 %34, label %56, label %35

35:                                               ; preds = %32, %29
  %36 = load i32, i32* %10, align 4
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %35
  %39 = load i32, i32* %10, align 4
  %40 = icmp sgt i32 %39, 4
  br i1 %40, label %56, label %41

41:                                               ; preds = %38
  %42 = load i8*, i8** %12, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %47

44:                                               ; preds = %41
  %45 = load i32, i32* %13, align 4
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %56, label %47

47:                                               ; preds = %44, %41
  %48 = load i8*, i8** %12, align 8
  %49 = icmp ne i8* %48, null
  br i1 %49, label %50, label %68

50:                                               ; preds = %47
  %51 = load i32, i32* %13, align 4
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %50
  %54 = load i32, i32* %13, align 4
  %55 = icmp sgt i32 %54, 5000
  br i1 %55, label %56, label %68

56:                                               ; preds = %53, %50, %44, %38, %35, %32, %26
  %57 = load i32*, i32** %8, align 8
  %58 = icmp ne i32* %57, null
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = load i32*, i32** %8, align 8
  store i32 -2, i32* %60, align 4
  br label %61

61:                                               ; preds = %59, %56
  %62 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %63 = icmp ne %struct.bzFile* %62, null
  br i1 %63, label %64, label %67

64:                                               ; preds = %61
  %65 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %66 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %65, i32 0, i32 5
  store i32 -2, i32* %66, align 8
  br label %67

67:                                               ; preds = %64, %61
  store i8* null, i8** %7, align 8
  br label %193

68:                                               ; preds = %53, %47
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %70 = call i32 @ferror(%struct._IO_FILE* %69) #9
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %68
  %73 = load i32*, i32** %8, align 8
  %74 = icmp ne i32* %73, null
  br i1 %74, label %75, label %77

75:                                               ; preds = %72
  %76 = load i32*, i32** %8, align 8
  store i32 -6, i32* %76, align 4
  br label %77

77:                                               ; preds = %75, %72
  %78 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %79 = icmp ne %struct.bzFile* %78, null
  br i1 %79, label %80, label %83

80:                                               ; preds = %77
  %81 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %82 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %81, i32 0, i32 5
  store i32 -6, i32* %82, align 8
  br label %83

83:                                               ; preds = %80, %77
  store i8* null, i8** %7, align 8
  br label %193

84:                                               ; preds = %68
  %85 = call noalias i8* @malloc(i64 5104) #9
  %86 = bitcast i8* %85 to %struct.bzFile*
  store %struct.bzFile* %86, %struct.bzFile** %14, align 8
  %87 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %88 = icmp eq %struct.bzFile* %87, null
  br i1 %88, label %89, label %101

89:                                               ; preds = %84
  %90 = load i32*, i32** %8, align 8
  %91 = icmp ne i32* %90, null
  br i1 %91, label %92, label %94

92:                                               ; preds = %89
  %93 = load i32*, i32** %8, align 8
  store i32 -3, i32* %93, align 4
  br label %94

94:                                               ; preds = %92, %89
  %95 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %96 = icmp ne %struct.bzFile* %95, null
  br i1 %96, label %97, label %100

97:                                               ; preds = %94
  %98 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %99 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %98, i32 0, i32 5
  store i32 -3, i32* %99, align 8
  br label %100

100:                                              ; preds = %97, %94
  store i8* null, i8** %7, align 8
  br label %193

101:                                              ; preds = %84
  %102 = load i32*, i32** %8, align 8
  %103 = icmp ne i32* %102, null
  br i1 %103, label %104, label %106

104:                                              ; preds = %101
  %105 = load i32*, i32** %8, align 8
  store i32 0, i32* %105, align 4
  br label %106

106:                                              ; preds = %104, %101
  %107 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %108 = icmp ne %struct.bzFile* %107, null
  br i1 %108, label %109, label %112

109:                                              ; preds = %106
  %110 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %111 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %110, i32 0, i32 5
  store i32 0, i32* %111, align 8
  br label %112

112:                                              ; preds = %109, %106
  %113 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %114 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %113, i32 0, i32 6
  store i8 0, i8* %114, align 4
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** %9, align 8
  %116 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %117 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %116, i32 0, i32 0
  store %struct._IO_FILE* %115, %struct._IO_FILE** %117, align 8
  %118 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %119 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %118, i32 0, i32 2
  store i32 0, i32* %119, align 8
  %120 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %121 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %120, i32 0, i32 3
  store i8 0, i8* %121, align 4
  %122 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %123 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %122, i32 0, i32 4
  %124 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %123, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %124, align 8
  %125 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %126 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %125, i32 0, i32 4
  %127 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %126, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %127, align 8
  %128 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %129 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %128, i32 0, i32 4
  %130 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %129, i32 0, i32 11
  store i8* null, i8** %130, align 8
  br label %131

131:                                              ; preds = %134, %112
  %132 = load i32, i32* %13, align 4
  %133 = icmp sgt i32 %132, 0
  br i1 %133, label %134, label %152

134:                                              ; preds = %131
  %135 = load i8*, i8** %12, align 8
  %136 = load i8, i8* %135, align 1
  %137 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %138 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %137, i32 0, i32 1
  %139 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %140 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %139, i32 0, i32 2
  %141 = load i32, i32* %140, align 8
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [5000 x i8], [5000 x i8]* %138, i64 0, i64 %142
  store i8 %136, i8* %143, align 1
  %144 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %145 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %144, i32 0, i32 2
  %146 = load i32, i32* %145, align 8
  %147 = add nsw i32 %146, 1
  store i32 %147, i32* %145, align 8
  %148 = load i8*, i8** %12, align 8
  %149 = getelementptr inbounds i8, i8* %148, i64 1
  store i8* %149, i8** %12, align 8
  %150 = load i32, i32* %13, align 4
  %151 = add nsw i32 %150, -1
  store i32 %151, i32* %13, align 4
  br label %131

152:                                              ; preds = %131
  %153 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %154 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %153, i32 0, i32 4
  %155 = load i32, i32* %10, align 4
  %156 = load i32, i32* %11, align 4
  %157 = call i32 @BZ2_bzDecompressInit(%struct.bz_stream* %154, i32 %155, i32 %156)
  store i32 %157, i32* %15, align 4
  %158 = load i32, i32* %15, align 4
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %160, label %176

160:                                              ; preds = %152
  %161 = load i32*, i32** %8, align 8
  %162 = icmp ne i32* %161, null
  br i1 %162, label %163, label %166

163:                                              ; preds = %160
  %164 = load i32, i32* %15, align 4
  %165 = load i32*, i32** %8, align 8
  store i32 %164, i32* %165, align 4
  br label %166

166:                                              ; preds = %163, %160
  %167 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %168 = icmp ne %struct.bzFile* %167, null
  br i1 %168, label %169, label %173

169:                                              ; preds = %166
  %170 = load i32, i32* %15, align 4
  %171 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %172 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %171, i32 0, i32 5
  store i32 %170, i32* %172, align 8
  br label %173

173:                                              ; preds = %169, %166
  %174 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %175 = bitcast %struct.bzFile* %174 to i8*
  call void @free(i8* %175) #9
  store i8* null, i8** %7, align 8
  br label %193

176:                                              ; preds = %152
  %177 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %178 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %177, i32 0, i32 2
  %179 = load i32, i32* %178, align 8
  %180 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %181 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %180, i32 0, i32 4
  %182 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %181, i32 0, i32 1
  store i32 %179, i32* %182, align 8
  %183 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %184 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %183, i32 0, i32 1
  %185 = getelementptr inbounds [5000 x i8], [5000 x i8]* %184, i64 0, i64 0
  %186 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %187 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %186, i32 0, i32 4
  %188 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %187, i32 0, i32 0
  store i8* %185, i8** %188, align 8
  %189 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %190 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %189, i32 0, i32 6
  store i8 1, i8* %190, align 4
  %191 = load %struct.bzFile*, %struct.bzFile** %14, align 8
  %192 = bitcast %struct.bzFile* %191 to i8*
  store i8* %192, i8** %7, align 8
  br label %193

193:                                              ; preds = %176, %173, %100, %83, %67
  %194 = load i8*, i8** %7, align 8
  ret i8* %194
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_bzReadClose(i32* %0, i8* %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.bzFile*, align 8
  store i32* %0, i32** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = bitcast i8* %6 to %struct.bzFile*
  store %struct.bzFile* %7, %struct.bzFile** %5, align 8
  %8 = load i32*, i32** %3, align 8
  %9 = icmp ne i32* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = load i32*, i32** %3, align 8
  store i32 0, i32* %11, align 4
  br label %12

12:                                               ; preds = %10, %2
  %13 = load %struct.bzFile*, %struct.bzFile** %5, align 8
  %14 = icmp ne %struct.bzFile* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %12
  %16 = load %struct.bzFile*, %struct.bzFile** %5, align 8
  %17 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %16, i32 0, i32 5
  store i32 0, i32* %17, align 8
  br label %18

18:                                               ; preds = %15, %12
  %19 = load %struct.bzFile*, %struct.bzFile** %5, align 8
  %20 = icmp eq %struct.bzFile* %19, null
  br i1 %20, label %21, label %33

21:                                               ; preds = %18
  %22 = load i32*, i32** %3, align 8
  %23 = icmp ne i32* %22, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %21
  %25 = load i32*, i32** %3, align 8
  store i32 0, i32* %25, align 4
  br label %26

26:                                               ; preds = %24, %21
  %27 = load %struct.bzFile*, %struct.bzFile** %5, align 8
  %28 = icmp ne %struct.bzFile* %27, null
  br i1 %28, label %29, label %32

29:                                               ; preds = %26
  %30 = load %struct.bzFile*, %struct.bzFile** %5, align 8
  %31 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %30, i32 0, i32 5
  store i32 0, i32* %31, align 8
  br label %32

32:                                               ; preds = %29, %26
  br label %62

33:                                               ; preds = %18
  %34 = load %struct.bzFile*, %struct.bzFile** %5, align 8
  %35 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %34, i32 0, i32 3
  %36 = load i8, i8* %35, align 4
  %37 = icmp ne i8 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = load i32*, i32** %3, align 8
  %40 = icmp ne i32* %39, null
  br i1 %40, label %41, label %43

41:                                               ; preds = %38
  %42 = load i32*, i32** %3, align 8
  store i32 -1, i32* %42, align 4
  br label %43

43:                                               ; preds = %41, %38
  %44 = load %struct.bzFile*, %struct.bzFile** %5, align 8
  %45 = icmp ne %struct.bzFile* %44, null
  br i1 %45, label %46, label %49

46:                                               ; preds = %43
  %47 = load %struct.bzFile*, %struct.bzFile** %5, align 8
  %48 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %47, i32 0, i32 5
  store i32 -1, i32* %48, align 8
  br label %49

49:                                               ; preds = %46, %43
  br label %62

50:                                               ; preds = %33
  %51 = load %struct.bzFile*, %struct.bzFile** %5, align 8
  %52 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %51, i32 0, i32 6
  %53 = load i8, i8* %52, align 4
  %54 = icmp ne i8 %53, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %50
  %56 = load %struct.bzFile*, %struct.bzFile** %5, align 8
  %57 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %56, i32 0, i32 4
  %58 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %57)
  br label %59

59:                                               ; preds = %55, %50
  %60 = load %struct.bzFile*, %struct.bzFile** %5, align 8
  %61 = bitcast %struct.bzFile* %60 to i8*
  call void @free(i8* %61) #9
  br label %62

62:                                               ; preds = %59, %49, %32
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzRead(i32* %0, i8* %1, i8* %2, i32 %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.bzFile*, align 8
  store i32* %0, i32** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  %13 = load i8*, i8** %7, align 8
  %14 = bitcast i8* %13 to %struct.bzFile*
  store %struct.bzFile* %14, %struct.bzFile** %12, align 8
  %15 = load i32*, i32** %6, align 8
  %16 = icmp ne i32* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %4
  %18 = load i32*, i32** %6, align 8
  store i32 0, i32* %18, align 4
  br label %19

19:                                               ; preds = %17, %4
  %20 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %21 = icmp ne %struct.bzFile* %20, null
  br i1 %21, label %22, label %25

22:                                               ; preds = %19
  %23 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %24 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %23, i32 0, i32 5
  store i32 0, i32* %24, align 8
  br label %25

25:                                               ; preds = %22, %19
  %26 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %27 = icmp eq %struct.bzFile* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %25
  %29 = load i8*, i8** %8, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = load i32, i32* %9, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %34, label %46

34:                                               ; preds = %31, %28, %25
  %35 = load i32*, i32** %6, align 8
  %36 = icmp ne i32* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %34
  %38 = load i32*, i32** %6, align 8
  store i32 -2, i32* %38, align 4
  br label %39

39:                                               ; preds = %37, %34
  %40 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %41 = icmp ne %struct.bzFile* %40, null
  br i1 %41, label %42, label %45

42:                                               ; preds = %39
  %43 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %44 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %43, i32 0, i32 5
  store i32 -2, i32* %44, align 8
  br label %45

45:                                               ; preds = %42, %39
  store i32 0, i32* %5, align 4
  br label %257

46:                                               ; preds = %31
  %47 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %48 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %47, i32 0, i32 3
  %49 = load i8, i8* %48, align 4
  %50 = icmp ne i8 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %46
  %52 = load i32*, i32** %6, align 8
  %53 = icmp ne i32* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %51
  %55 = load i32*, i32** %6, align 8
  store i32 -1, i32* %55, align 4
  br label %56

56:                                               ; preds = %54, %51
  %57 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %58 = icmp ne %struct.bzFile* %57, null
  br i1 %58, label %59, label %62

59:                                               ; preds = %56
  %60 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %61 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %60, i32 0, i32 5
  store i32 -1, i32* %61, align 8
  br label %62

62:                                               ; preds = %59, %56
  store i32 0, i32* %5, align 4
  br label %257

63:                                               ; preds = %46
  %64 = load i32, i32* %9, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %78

66:                                               ; preds = %63
  %67 = load i32*, i32** %6, align 8
  %68 = icmp ne i32* %67, null
  br i1 %68, label %69, label %71

69:                                               ; preds = %66
  %70 = load i32*, i32** %6, align 8
  store i32 0, i32* %70, align 4
  br label %71

71:                                               ; preds = %69, %66
  %72 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %73 = icmp ne %struct.bzFile* %72, null
  br i1 %73, label %74, label %77

74:                                               ; preds = %71
  %75 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %76 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %75, i32 0, i32 5
  store i32 0, i32* %76, align 8
  br label %77

77:                                               ; preds = %74, %71
  store i32 0, i32* %5, align 4
  br label %257

78:                                               ; preds = %63
  %79 = load i32, i32* %9, align 4
  %80 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %81 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %80, i32 0, i32 4
  %82 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %81, i32 0, i32 5
  store i32 %79, i32* %82, align 8
  %83 = load i8*, i8** %8, align 8
  %84 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %85 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %84, i32 0, i32 4
  %86 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %85, i32 0, i32 4
  store i8* %83, i8** %86, align 8
  br label %87

87:                                               ; preds = %78, %256
  %88 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %89 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %88, i32 0, i32 0
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** %89, align 8
  %91 = call i32 @ferror(%struct._IO_FILE* %90) #9
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %105

93:                                               ; preds = %87
  %94 = load i32*, i32** %6, align 8
  %95 = icmp ne i32* %94, null
  br i1 %95, label %96, label %98

96:                                               ; preds = %93
  %97 = load i32*, i32** %6, align 8
  store i32 -6, i32* %97, align 4
  br label %98

98:                                               ; preds = %96, %93
  %99 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %100 = icmp ne %struct.bzFile* %99, null
  br i1 %100, label %101, label %104

101:                                              ; preds = %98
  %102 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %103 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %102, i32 0, i32 5
  store i32 -6, i32* %103, align 8
  br label %104

104:                                              ; preds = %101, %98
  store i32 0, i32* %5, align 4
  br label %257

105:                                              ; preds = %87
  %106 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %107 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %106, i32 0, i32 4
  %108 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %107, i32 0, i32 1
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %159

111:                                              ; preds = %105
  %112 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %113 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %112, i32 0, i32 0
  %114 = load %struct._IO_FILE*, %struct._IO_FILE** %113, align 8
  %115 = call zeroext i8 @myfeof(%struct._IO_FILE* %114)
  %116 = icmp ne i8 %115, 0
  br i1 %116, label %159, label %117

117:                                              ; preds = %111
  %118 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %119 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %118, i32 0, i32 1
  %120 = getelementptr inbounds [5000 x i8], [5000 x i8]* %119, i64 0, i64 0
  %121 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %122 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %121, i32 0, i32 0
  %123 = load %struct._IO_FILE*, %struct._IO_FILE** %122, align 8
  %124 = call i64 @fread(i8* %120, i64 1, i64 5000, %struct._IO_FILE* %123)
  %125 = trunc i64 %124 to i32
  store i32 %125, i32* %10, align 4
  %126 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %127 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %126, i32 0, i32 0
  %128 = load %struct._IO_FILE*, %struct._IO_FILE** %127, align 8
  %129 = call i32 @ferror(%struct._IO_FILE* %128) #9
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %131, label %143

131:                                              ; preds = %117
  %132 = load i32*, i32** %6, align 8
  %133 = icmp ne i32* %132, null
  br i1 %133, label %134, label %136

134:                                              ; preds = %131
  %135 = load i32*, i32** %6, align 8
  store i32 -6, i32* %135, align 4
  br label %136

136:                                              ; preds = %134, %131
  %137 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %138 = icmp ne %struct.bzFile* %137, null
  br i1 %138, label %139, label %142

139:                                              ; preds = %136
  %140 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %141 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %140, i32 0, i32 5
  store i32 -6, i32* %141, align 8
  br label %142

142:                                              ; preds = %139, %136
  store i32 0, i32* %5, align 4
  br label %257

143:                                              ; preds = %117
  %144 = load i32, i32* %10, align 4
  %145 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %146 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %145, i32 0, i32 2
  store i32 %144, i32* %146, align 8
  %147 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %148 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %147, i32 0, i32 2
  %149 = load i32, i32* %148, align 8
  %150 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %151 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %150, i32 0, i32 4
  %152 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %151, i32 0, i32 1
  store i32 %149, i32* %152, align 8
  %153 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %154 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %153, i32 0, i32 1
  %155 = getelementptr inbounds [5000 x i8], [5000 x i8]* %154, i64 0, i64 0
  %156 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %157 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %156, i32 0, i32 4
  %158 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %157, i32 0, i32 0
  store i8* %155, i8** %158, align 8
  br label %159

159:                                              ; preds = %143, %111, %105
  %160 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %161 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %160, i32 0, i32 4
  %162 = call i32 @BZ2_bzDecompress(%struct.bz_stream* %161)
  store i32 %162, i32* %11, align 4
  %163 = load i32, i32* %11, align 4
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %165, label %182

165:                                              ; preds = %159
  %166 = load i32, i32* %11, align 4
  %167 = icmp ne i32 %166, 4
  br i1 %167, label %168, label %182

168:                                              ; preds = %165
  %169 = load i32*, i32** %6, align 8
  %170 = icmp ne i32* %169, null
  br i1 %170, label %171, label %174

171:                                              ; preds = %168
  %172 = load i32, i32* %11, align 4
  %173 = load i32*, i32** %6, align 8
  store i32 %172, i32* %173, align 4
  br label %174

174:                                              ; preds = %171, %168
  %175 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %176 = icmp ne %struct.bzFile* %175, null
  br i1 %176, label %177, label %181

177:                                              ; preds = %174
  %178 = load i32, i32* %11, align 4
  %179 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %180 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %179, i32 0, i32 5
  store i32 %178, i32* %180, align 8
  br label %181

181:                                              ; preds = %177, %174
  store i32 0, i32* %5, align 4
  br label %257

182:                                              ; preds = %165, %159
  %183 = load i32, i32* %11, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %216

185:                                              ; preds = %182
  %186 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %187 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %186, i32 0, i32 0
  %188 = load %struct._IO_FILE*, %struct._IO_FILE** %187, align 8
  %189 = call zeroext i8 @myfeof(%struct._IO_FILE* %188)
  %190 = zext i8 %189 to i32
  %191 = icmp ne i32 %190, 0
  br i1 %191, label %192, label %216

192:                                              ; preds = %185
  %193 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %194 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %193, i32 0, i32 4
  %195 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %194, i32 0, i32 1
  %196 = load i32, i32* %195, align 8
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %216

198:                                              ; preds = %192
  %199 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %200 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %199, i32 0, i32 4
  %201 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %200, i32 0, i32 5
  %202 = load i32, i32* %201, align 8
  %203 = icmp ugt i32 %202, 0
  br i1 %203, label %204, label %216

204:                                              ; preds = %198
  %205 = load i32*, i32** %6, align 8
  %206 = icmp ne i32* %205, null
  br i1 %206, label %207, label %209

207:                                              ; preds = %204
  %208 = load i32*, i32** %6, align 8
  store i32 -7, i32* %208, align 4
  br label %209

209:                                              ; preds = %207, %204
  %210 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %211 = icmp ne %struct.bzFile* %210, null
  br i1 %211, label %212, label %215

212:                                              ; preds = %209
  %213 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %214 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %213, i32 0, i32 5
  store i32 -7, i32* %214, align 8
  br label %215

215:                                              ; preds = %212, %209
  store i32 0, i32* %5, align 4
  br label %257

216:                                              ; preds = %198, %192, %185, %182
  %217 = load i32, i32* %11, align 4
  %218 = icmp eq i32 %217, 4
  br i1 %218, label %219, label %237

219:                                              ; preds = %216
  %220 = load i32*, i32** %6, align 8
  %221 = icmp ne i32* %220, null
  br i1 %221, label %222, label %224

222:                                              ; preds = %219
  %223 = load i32*, i32** %6, align 8
  store i32 4, i32* %223, align 4
  br label %224

224:                                              ; preds = %222, %219
  %225 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %226 = icmp ne %struct.bzFile* %225, null
  br i1 %226, label %227, label %230

227:                                              ; preds = %224
  %228 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %229 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %228, i32 0, i32 5
  store i32 4, i32* %229, align 8
  br label %230

230:                                              ; preds = %227, %224
  %231 = load i32, i32* %9, align 4
  %232 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %233 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %232, i32 0, i32 4
  %234 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %233, i32 0, i32 5
  %235 = load i32, i32* %234, align 8
  %236 = sub i32 %231, %235
  store i32 %236, i32* %5, align 4
  br label %257

237:                                              ; preds = %216
  %238 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %239 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %238, i32 0, i32 4
  %240 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %239, i32 0, i32 5
  %241 = load i32, i32* %240, align 8
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %256

243:                                              ; preds = %237
  %244 = load i32*, i32** %6, align 8
  %245 = icmp ne i32* %244, null
  br i1 %245, label %246, label %248

246:                                              ; preds = %243
  %247 = load i32*, i32** %6, align 8
  store i32 0, i32* %247, align 4
  br label %248

248:                                              ; preds = %246, %243
  %249 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %250 = icmp ne %struct.bzFile* %249, null
  br i1 %250, label %251, label %254

251:                                              ; preds = %248
  %252 = load %struct.bzFile*, %struct.bzFile** %12, align 8
  %253 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %252, i32 0, i32 5
  store i32 0, i32* %253, align 8
  br label %254

254:                                              ; preds = %251, %248
  %255 = load i32, i32* %9, align 4
  store i32 %255, i32* %5, align 4
  br label %257

256:                                              ; preds = %237
  br label %87

257:                                              ; preds = %254, %230, %215, %181, %142, %104, %77, %62, %45
  %258 = load i32, i32* %5, align 4
  ret i32 %258
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @myfeof(%struct._IO_FILE* %0) #0 {
  %2 = alloca i8, align 1
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i32, align 4
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %6 = call i32 @fgetc(%struct._IO_FILE* %5)
  store i32 %6, i32* %4, align 4
  %7 = load i32, i32* %4, align 4
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  store i8 1, i8* %2, align 1
  br label %14

10:                                               ; preds = %1
  %11 = load i32, i32* %4, align 4
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %13 = call i32 @ungetc(i32 %11, %struct._IO_FILE* %12)
  store i8 0, i8* %2, align 1
  br label %14

14:                                               ; preds = %10, %9
  %15 = load i8, i8* %2, align 1
  ret i8 %15
}

declare dso_local i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_bzReadGetUnused(i32* %0, i8* %1, i8** %2, i32* %3) #0 {
  %5 = alloca i32*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i32*, align 8
  %9 = alloca %struct.bzFile*, align 8
  store i32* %0, i32** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i32* %3, i32** %8, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = bitcast i8* %10 to %struct.bzFile*
  store %struct.bzFile* %11, %struct.bzFile** %9, align 8
  %12 = load %struct.bzFile*, %struct.bzFile** %9, align 8
  %13 = icmp eq %struct.bzFile* %12, null
  br i1 %13, label %14, label %26

14:                                               ; preds = %4
  %15 = load i32*, i32** %5, align 8
  %16 = icmp ne i32* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = load i32*, i32** %5, align 8
  store i32 -2, i32* %18, align 4
  br label %19

19:                                               ; preds = %17, %14
  %20 = load %struct.bzFile*, %struct.bzFile** %9, align 8
  %21 = icmp ne %struct.bzFile* %20, null
  br i1 %21, label %22, label %25

22:                                               ; preds = %19
  %23 = load %struct.bzFile*, %struct.bzFile** %9, align 8
  %24 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %23, i32 0, i32 5
  store i32 -2, i32* %24, align 8
  br label %25

25:                                               ; preds = %22, %19
  br label %83

26:                                               ; preds = %4
  %27 = load %struct.bzFile*, %struct.bzFile** %9, align 8
  %28 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %27, i32 0, i32 5
  %29 = load i32, i32* %28, align 8
  %30 = icmp ne i32 %29, 4
  br i1 %30, label %31, label %43

31:                                               ; preds = %26
  %32 = load i32*, i32** %5, align 8
  %33 = icmp ne i32* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %31
  %35 = load i32*, i32** %5, align 8
  store i32 -1, i32* %35, align 4
  br label %36

36:                                               ; preds = %34, %31
  %37 = load %struct.bzFile*, %struct.bzFile** %9, align 8
  %38 = icmp ne %struct.bzFile* %37, null
  br i1 %38, label %39, label %42

39:                                               ; preds = %36
  %40 = load %struct.bzFile*, %struct.bzFile** %9, align 8
  %41 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %40, i32 0, i32 5
  store i32 -1, i32* %41, align 8
  br label %42

42:                                               ; preds = %39, %36
  br label %83

43:                                               ; preds = %26
  %44 = load i8**, i8*** %7, align 8
  %45 = icmp eq i8** %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %43
  %47 = load i32*, i32** %8, align 8
  %48 = icmp eq i32* %47, null
  br i1 %48, label %49, label %61

49:                                               ; preds = %46, %43
  %50 = load i32*, i32** %5, align 8
  %51 = icmp ne i32* %50, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = load i32*, i32** %5, align 8
  store i32 -2, i32* %53, align 4
  br label %54

54:                                               ; preds = %52, %49
  %55 = load %struct.bzFile*, %struct.bzFile** %9, align 8
  %56 = icmp ne %struct.bzFile* %55, null
  br i1 %56, label %57, label %60

57:                                               ; preds = %54
  %58 = load %struct.bzFile*, %struct.bzFile** %9, align 8
  %59 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %58, i32 0, i32 5
  store i32 -2, i32* %59, align 8
  br label %60

60:                                               ; preds = %57, %54
  br label %83

61:                                               ; preds = %46
  %62 = load i32*, i32** %5, align 8
  %63 = icmp ne i32* %62, null
  br i1 %63, label %64, label %66

64:                                               ; preds = %61
  %65 = load i32*, i32** %5, align 8
  store i32 0, i32* %65, align 4
  br label %66

66:                                               ; preds = %64, %61
  %67 = load %struct.bzFile*, %struct.bzFile** %9, align 8
  %68 = icmp ne %struct.bzFile* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %66
  %70 = load %struct.bzFile*, %struct.bzFile** %9, align 8
  %71 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %70, i32 0, i32 5
  store i32 0, i32* %71, align 8
  br label %72

72:                                               ; preds = %69, %66
  %73 = load %struct.bzFile*, %struct.bzFile** %9, align 8
  %74 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %73, i32 0, i32 4
  %75 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %74, i32 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = load i32*, i32** %8, align 8
  store i32 %76, i32* %77, align 4
  %78 = load %struct.bzFile*, %struct.bzFile** %9, align 8
  %79 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %78, i32 0, i32 4
  %80 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %79, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = load i8**, i8*** %7, align 8
  store i8* %81, i8** %82, align 8
  br label %83

83:                                               ; preds = %72, %60, %42, %25
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzBuffToBuffCompress(i8* %0, i32* %1, i8* %2, i32 %3, i32 %4, i32 %5, i32 %6) #0 {
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct.bz_stream, align 8
  %17 = alloca i32, align 4
  store i8* %0, i8** %9, align 8
  store i32* %1, i32** %10, align 8
  store i8* %2, i8** %11, align 8
  store i32 %3, i32* %12, align 4
  store i32 %4, i32* %13, align 4
  store i32 %5, i32* %14, align 4
  store i32 %6, i32* %15, align 4
  %18 = load i8*, i8** %9, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %44, label %20

20:                                               ; preds = %7
  %21 = load i32*, i32** %10, align 8
  %22 = icmp eq i32* %21, null
  br i1 %22, label %44, label %23

23:                                               ; preds = %20
  %24 = load i8*, i8** %11, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %23
  %27 = load i32, i32* %13, align 4
  %28 = icmp slt i32 %27, 1
  br i1 %28, label %44, label %29

29:                                               ; preds = %26
  %30 = load i32, i32* %13, align 4
  %31 = icmp sgt i32 %30, 9
  br i1 %31, label %44, label %32

32:                                               ; preds = %29
  %33 = load i32, i32* %14, align 4
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %32
  %36 = load i32, i32* %14, align 4
  %37 = icmp sgt i32 %36, 4
  br i1 %37, label %44, label %38

38:                                               ; preds = %35
  %39 = load i32, i32* %15, align 4
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %38
  %42 = load i32, i32* %15, align 4
  %43 = icmp sgt i32 %42, 250
  br i1 %43, label %44, label %45

44:                                               ; preds = %41, %38, %35, %32, %29, %26, %23, %20, %7
  store i32 -2, i32* %8, align 4
  br label %91

45:                                               ; preds = %41
  %46 = load i32, i32* %15, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  store i32 30, i32* %15, align 4
  br label %49

49:                                               ; preds = %48, %45
  %50 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %16, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %50, align 8
  %51 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %16, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %51, align 8
  %52 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %16, i32 0, i32 11
  store i8* null, i8** %52, align 8
  %53 = load i32, i32* %13, align 4
  %54 = load i32, i32* %14, align 4
  %55 = load i32, i32* %15, align 4
  %56 = call i32 @BZ2_bzCompressInit(%struct.bz_stream* %16, i32 %53, i32 %54, i32 %55)
  store i32 %56, i32* %17, align 4
  %57 = load i32, i32* %17, align 4
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %49
  %60 = load i32, i32* %17, align 4
  store i32 %60, i32* %8, align 4
  br label %91

61:                                               ; preds = %49
  %62 = load i8*, i8** %11, align 8
  %63 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %16, i32 0, i32 0
  store i8* %62, i8** %63, align 8
  %64 = load i8*, i8** %9, align 8
  %65 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %16, i32 0, i32 4
  store i8* %64, i8** %65, align 8
  %66 = load i32, i32* %12, align 4
  %67 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %16, i32 0, i32 1
  store i32 %66, i32* %67, align 8
  %68 = load i32*, i32** %10, align 8
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %16, i32 0, i32 5
  store i32 %69, i32* %70, align 8
  %71 = call i32 @BZ2_bzCompress(%struct.bz_stream* %16, i32 2)
  store i32 %71, i32* %17, align 4
  %72 = load i32, i32* %17, align 4
  %73 = icmp eq i32 %72, 3
  br i1 %73, label %74, label %75

74:                                               ; preds = %61
  br label %86

75:                                               ; preds = %61
  %76 = load i32, i32* %17, align 4
  %77 = icmp ne i32 %76, 4
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  br label %88

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %16, i32 0, i32 5
  %81 = load i32, i32* %80, align 8
  %82 = load i32*, i32** %10, align 8
  %83 = load i32, i32* %82, align 4
  %84 = sub i32 %83, %81
  store i32 %84, i32* %82, align 4
  %85 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %16)
  store i32 0, i32* %8, align 4
  br label %91

86:                                               ; preds = %74
  %87 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %16)
  store i32 -8, i32* %8, align 4
  br label %91

88:                                               ; preds = %78
  %89 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %16)
  %90 = load i32, i32* %17, align 4
  store i32 %90, i32* %8, align 4
  br label %91

91:                                               ; preds = %88, %86, %79, %59, %44
  %92 = load i32, i32* %8, align 4
  ret i32 %92
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzBuffToBuffDecompress(i8* %0, i32* %1, i8* %2, i32 %3, i32 %4, i32 %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.bz_stream, align 8
  %15 = alloca i32, align 4
  store i8* %0, i8** %8, align 8
  store i32* %1, i32** %9, align 8
  store i8* %2, i8** %10, align 8
  store i32 %3, i32* %11, align 4
  store i32 %4, i32* %12, align 4
  store i32 %5, i32* %13, align 4
  %16 = load i8*, i8** %8, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %36, label %18

18:                                               ; preds = %6
  %19 = load i32*, i32** %9, align 8
  %20 = icmp eq i32* %19, null
  br i1 %20, label %36, label %21

21:                                               ; preds = %18
  %22 = load i8*, i8** %10, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %36, label %24

24:                                               ; preds = %21
  %25 = load i32, i32* %12, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = load i32, i32* %12, align 4
  %29 = icmp ne i32 %28, 1
  br i1 %29, label %36, label %30

30:                                               ; preds = %27, %24
  %31 = load i32, i32* %13, align 4
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = load i32, i32* %13, align 4
  %35 = icmp sgt i32 %34, 4
  br i1 %35, label %36, label %37

36:                                               ; preds = %33, %30, %27, %21, %18, %6
  store i32 -2, i32* %7, align 4
  br label %84

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %14, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %38, align 8
  %39 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %14, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %39, align 8
  %40 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %14, i32 0, i32 11
  store i8* null, i8** %40, align 8
  %41 = load i32, i32* %13, align 4
  %42 = load i32, i32* %12, align 4
  %43 = call i32 @BZ2_bzDecompressInit(%struct.bz_stream* %14, i32 %41, i32 %42)
  store i32 %43, i32* %15, align 4
  %44 = load i32, i32* %15, align 4
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %37
  %47 = load i32, i32* %15, align 4
  store i32 %47, i32* %7, align 4
  br label %84

48:                                               ; preds = %37
  %49 = load i8*, i8** %10, align 8
  %50 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %14, i32 0, i32 0
  store i8* %49, i8** %50, align 8
  %51 = load i8*, i8** %8, align 8
  %52 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %14, i32 0, i32 4
  store i8* %51, i8** %52, align 8
  %53 = load i32, i32* %11, align 4
  %54 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %14, i32 0, i32 1
  store i32 %53, i32* %54, align 8
  %55 = load i32*, i32** %9, align 8
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %14, i32 0, i32 5
  store i32 %56, i32* %57, align 8
  %58 = call i32 @BZ2_bzDecompress(%struct.bz_stream* %14)
  store i32 %58, i32* %15, align 4
  %59 = load i32, i32* %15, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %48
  br label %73

62:                                               ; preds = %48
  %63 = load i32, i32* %15, align 4
  %64 = icmp ne i32 %63, 4
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  br label %81

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %14, i32 0, i32 5
  %68 = load i32, i32* %67, align 8
  %69 = load i32*, i32** %9, align 8
  %70 = load i32, i32* %69, align 4
  %71 = sub i32 %70, %68
  store i32 %71, i32* %69, align 4
  %72 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %14)
  store i32 0, i32* %7, align 4
  br label %84

73:                                               ; preds = %61
  %74 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %14, i32 0, i32 5
  %75 = load i32, i32* %74, align 8
  %76 = icmp ugt i32 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %14)
  store i32 -7, i32* %7, align 4
  br label %84

79:                                               ; preds = %73
  %80 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %14)
  store i32 -8, i32* %7, align 4
  br label %84

81:                                               ; preds = %65
  %82 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %14)
  %83 = load i32, i32* %15, align 4
  store i32 %83, i32* %7, align 4
  br label %84

84:                                               ; preds = %81, %79, %77, %66, %46, %36
  %85 = load i32, i32* %7, align 4
  ret i32 %85
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @BZ2_bzopen(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = call i8* @bzopen_or_bzdopen(i8* %5, i32 -1, i8* %6, i32 0)
  ret i8* %7
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @bzopen_or_bzdopen(i8* %0, i32 %1, i8* %2, i32 %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [5000 x i8], align 16
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca [10 x i8], align 1
  %15 = alloca %struct._IO_FILE*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i32 %1, i32* %7, align 4
  store i8* %2, i8** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32 9, i32* %12, align 4
  store i32 0, i32* %13, align 4
  %21 = bitcast [10 x i8]* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %21, i8 0, i64 10, i1 false)
  store %struct._IO_FILE* null, %struct._IO_FILE** %15, align 8
  store i8* null, i8** %16, align 8
  store i32 0, i32* %17, align 4
  store i32 30, i32* %18, align 4
  store i32 0, i32* %19, align 4
  store i32 0, i32* %20, align 4
  %22 = load i8*, i8** %8, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %4
  store i8* null, i8** %5, align 8
  br label %139

25:                                               ; preds = %4
  br label %26

26:                                               ; preds = %55, %25
  %27 = load i8*, i8** %8, align 8
  %28 = load i8, i8* %27, align 1
  %29 = icmp ne i8 %28, 0
  br i1 %29, label %30, label %58

30:                                               ; preds = %26
  %31 = load i8*, i8** %8, align 8
  %32 = load i8, i8* %31, align 1
  %33 = sext i8 %32 to i32
  switch i32 %33, label %37 [
    i32 114, label %34
    i32 119, label %35
    i32 115, label %36
  ]

34:                                               ; preds = %30
  store i32 0, i32* %13, align 4
  br label %55

35:                                               ; preds = %30
  store i32 1, i32* %13, align 4
  br label %55

36:                                               ; preds = %30
  store i32 1, i32* %19, align 4
  br label %55

37:                                               ; preds = %30
  %38 = call i16** @__ctype_b_loc() #10
  %39 = load i16*, i16** %38, align 8
  %40 = load i8*, i8** %8, align 8
  %41 = load i8, i8* %40, align 1
  %42 = sext i8 %41 to i32
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i16, i16* %39, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = and i32 %46, 2048
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %54

49:                                               ; preds = %37
  %50 = load i8*, i8** %8, align 8
  %51 = load i8, i8* %50, align 1
  %52 = sext i8 %51 to i32
  %53 = sub nsw i32 %52, 48
  store i32 %53, i32* %12, align 4
  br label %54

54:                                               ; preds = %49, %37
  br label %55

55:                                               ; preds = %54, %36, %35, %34
  %56 = load i8*, i8** %8, align 8
  %57 = getelementptr inbounds i8, i8* %56, i32 1
  store i8* %57, i8** %8, align 8
  br label %26

58:                                               ; preds = %26
  %59 = getelementptr inbounds [10 x i8], [10 x i8]* %14, i64 0, i64 0
  %60 = load i32, i32* %13, align 4
  %61 = icmp ne i32 %60, 0
  %62 = zext i1 %61 to i64
  %63 = select i1 %61, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65, i64 0, i64 0)
  %64 = call i8* @strcat(i8* %59, i8* %63) #9
  %65 = getelementptr inbounds [10 x i8], [10 x i8]* %14, i64 0, i64 0
  %66 = call i8* @strcat(i8* %65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i64 0, i64 0)) #9
  %67 = load i32, i32* %9, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %90

69:                                               ; preds = %58
  %70 = load i8*, i8** %6, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %69
  %73 = load i8*, i8** %6, align 8
  %74 = call i32 @strcmp(i8* %73, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.16, i64 0, i64 0)) #11
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %85

76:                                               ; preds = %72, %69
  %77 = load i32, i32* %13, align 4
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  br label %83

81:                                               ; preds = %76
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  br label %83

83:                                               ; preds = %81, %79
  %84 = phi %struct._IO_FILE* [ %80, %79 ], [ %82, %81 ]
  store %struct._IO_FILE* %84, %struct._IO_FILE** %15, align 8
  br label %89

85:                                               ; preds = %72
  %86 = load i8*, i8** %6, align 8
  %87 = getelementptr inbounds [10 x i8], [10 x i8]* %14, i64 0, i64 0
  %88 = call %struct._IO_FILE* @fopen(i8* %86, i8* %87)
  store %struct._IO_FILE* %88, %struct._IO_FILE** %15, align 8
  br label %89

89:                                               ; preds = %85, %83
  br label %94

90:                                               ; preds = %58
  %91 = load i32, i32* %7, align 4
  %92 = getelementptr inbounds [10 x i8], [10 x i8]* %14, i64 0, i64 0
  %93 = call %struct._IO_FILE* @fdopen(i32 %91, i8* %92) #9
  store %struct._IO_FILE* %93, %struct._IO_FILE** %15, align 8
  br label %94

94:                                               ; preds = %90, %89
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8
  %96 = icmp eq %struct._IO_FILE* %95, null
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  store i8* null, i8** %5, align 8
  br label %139

98:                                               ; preds = %94
  %99 = load i32, i32* %13, align 4
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %101, label %115

101:                                              ; preds = %98
  %102 = load i32, i32* %12, align 4
  %103 = icmp slt i32 %102, 1
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  store i32 1, i32* %12, align 4
  br label %105

105:                                              ; preds = %104, %101
  %106 = load i32, i32* %12, align 4
  %107 = icmp sgt i32 %106, 9
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  store i32 9, i32* %12, align 4
  br label %109

109:                                              ; preds = %108, %105
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8
  %111 = load i32, i32* %12, align 4
  %112 = load i32, i32* %17, align 4
  %113 = load i32, i32* %18, align 4
  %114 = call i8* @BZ2_bzWriteOpen(i32* %10, %struct._IO_FILE* %110, i32 %111, i32 %112, i32 %113)
  store i8* %114, i8** %16, align 8
  br label %122

115:                                              ; preds = %98
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8
  %117 = load i32, i32* %17, align 4
  %118 = load i32, i32* %19, align 4
  %119 = getelementptr inbounds [5000 x i8], [5000 x i8]* %11, i64 0, i64 0
  %120 = load i32, i32* %20, align 4
  %121 = call i8* @BZ2_bzReadOpen(i32* %10, %struct._IO_FILE* %116, i32 %117, i32 %118, i8* %119, i32 %120)
  store i8* %121, i8** %16, align 8
  br label %122

122:                                              ; preds = %115, %109
  %123 = load i8*, i8** %16, align 8
  %124 = icmp eq i8* %123, null
  br i1 %124, label %125, label %137

125:                                              ; preds = %122
  %126 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8
  %127 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %128 = icmp ne %struct._IO_FILE* %126, %127
  br i1 %128, label %129, label %136

129:                                              ; preds = %125
  %130 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8
  %131 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %132 = icmp ne %struct._IO_FILE* %130, %131
  br i1 %132, label %133, label %136

133:                                              ; preds = %129
  %134 = load %struct._IO_FILE*, %struct._IO_FILE** %15, align 8
  %135 = call i32 @fclose(%struct._IO_FILE* %134)
  br label %136

136:                                              ; preds = %133, %129, %125
  store i8* null, i8** %5, align 8
  br label %139

137:                                              ; preds = %122
  %138 = load i8*, i8** %16, align 8
  store i8* %138, i8** %5, align 8
  br label %139

139:                                              ; preds = %137, %136, %97, %24
  %140 = load i8*, i8** %5, align 8
  ret i8* %140
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @BZ2_bzdopen(i32 %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  %5 = load i32, i32* %3, align 4
  %6 = load i8*, i8** %4, align 8
  %7 = call i8* @bzopen_or_bzdopen(i8* null, i32 %5, i8* %6, i32 1)
  ret i8* %7
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzread(i8* %0, i8* %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  %10 = load i8*, i8** %5, align 8
  %11 = bitcast i8* %10 to %struct.bzFile*
  %12 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %11, i32 0, i32 5
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 4
  br i1 %14, label %15, label %16

15:                                               ; preds = %3
  store i32 0, i32* %4, align 4
  br label %29

16:                                               ; preds = %3
  %17 = load i8*, i8** %5, align 8
  %18 = load i8*, i8** %6, align 8
  %19 = load i32, i32* %7, align 4
  %20 = call i32 @BZ2_bzRead(i32* %8, i8* %17, i8* %18, i32 %19)
  store i32 %20, i32* %9, align 4
  %21 = load i32, i32* %8, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = load i32, i32* %8, align 4
  %25 = icmp eq i32 %24, 4
  br i1 %25, label %26, label %28

26:                                               ; preds = %23, %16
  %27 = load i32, i32* %9, align 4
  store i32 %27, i32* %4, align 4
  br label %29

28:                                               ; preds = %23
  store i32 -1, i32* %4, align 4
  br label %29

29:                                               ; preds = %28, %26, %15
  %30 = load i32, i32* %4, align 4
  ret i32 %30
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzwrite(i8* %0, i8* %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  %9 = load i8*, i8** %5, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = load i32, i32* %7, align 4
  call void @BZ2_bzWrite(i32* %8, i8* %9, i8* %10, i32 %11)
  %12 = load i32, i32* %8, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = load i32, i32* %7, align 4
  store i32 %15, i32* %4, align 4
  br label %17

16:                                               ; preds = %3
  store i32 -1, i32* %4, align 4
  br label %17

17:                                               ; preds = %16, %14
  %18 = load i32, i32* %4, align 4
  ret i32 %18
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BZ2_bzflush(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  ret i32 0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @BZ2_bzclose(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct._IO_FILE*, align 8
  store i8* %0, i8** %2, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = bitcast i8* %5 to %struct.bzFile*
  %7 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %6, i32 0, i32 0
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  store %struct._IO_FILE* %8, %struct._IO_FILE** %4, align 8
  %9 = load i8*, i8** %2, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %1
  br label %38

12:                                               ; preds = %1
  %13 = load i8*, i8** %2, align 8
  %14 = bitcast i8* %13 to %struct.bzFile*
  %15 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %14, i32 0, i32 3
  %16 = load i8, i8* %15, align 4
  %17 = icmp ne i8 %16, 0
  br i1 %17, label %18, label %25

18:                                               ; preds = %12
  %19 = load i8*, i8** %2, align 8
  call void @BZ2_bzWriteClose(i32* %3, i8* %19, i32 0, i32* null, i32* null)
  %20 = load i32, i32* %3, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = load i8*, i8** %2, align 8
  call void @BZ2_bzWriteClose(i32* null, i8* %23, i32 1, i32* null, i32* null)
  br label %24

24:                                               ; preds = %22, %18
  br label %27

25:                                               ; preds = %12
  %26 = load i8*, i8** %2, align 8
  call void @BZ2_bzReadClose(i32* %3, i8* %26)
  br label %27

27:                                               ; preds = %25, %24
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %30 = icmp ne %struct._IO_FILE* %28, %29
  br i1 %30, label %31, label %38

31:                                               ; preds = %27
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %34 = icmp ne %struct._IO_FILE* %32, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %31
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %37 = call i32 @fclose(%struct._IO_FILE* %36)
  br label %38

38:                                               ; preds = %11, %35, %31, %27
  ret void
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @BZ2_bzerror(i8* %0, i32* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32* %1, i32** %4, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = bitcast i8* %6 to %struct.bzFile*
  %8 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %7, i32 0, i32 5
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %5, align 4
  %10 = load i32, i32* %5, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  store i32 0, i32* %5, align 4
  br label %13

13:                                               ; preds = %12, %2
  %14 = load i32, i32* %5, align 4
  %15 = load i32*, i32** %4, align 8
  store i32 %14, i32* %15, align 4
  %16 = load i32, i32* %5, align 4
  %17 = mul nsw i32 %16, -1
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [16 x i8*], [16 x i8*]* @bzerrorstrings, i64 0, i64 %18
  %20 = load i8*, i8** %19, align 8
  ret i8* %20
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._IO_FILE* @fopen_output_safely(i8* %0, i8* %1) #0 {
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct._IO_FILE*, align 8
  %7 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %8 = load i8*, i8** %4, align 8
  %9 = call i32 (i8*, i32, ...) @open(i8* %8, i32 193, i32 384)
  store i32 %9, i32* %7, align 4
  %10 = load i32, i32* %7, align 4
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  store %struct._IO_FILE* null, %struct._IO_FILE** %3, align 8
  br label %24

13:                                               ; preds = %2
  %14 = load i32, i32* %7, align 4
  %15 = load i8*, i8** %5, align 8
  %16 = call %struct._IO_FILE* @fdopen(i32 %14, i8* %15) #9
  store %struct._IO_FILE* %16, %struct._IO_FILE** %6, align 8
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %18 = icmp eq %struct._IO_FILE* %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = load i32, i32* %7, align 4
  %21 = call i32 @close(i32 %20)
  br label %22

22:                                               ; preds = %19, %13
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  store %struct._IO_FILE* %23, %struct._IO_FILE** %3, align 8
  br label %24

24:                                               ; preds = %22, %12
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  ret %struct._IO_FILE* %25
}

declare dso_local i32 @open(i8*, i32, ...) #1

; Function Attrs: nounwind
declare dso_local %struct._IO_FILE* @fdopen(i32, i8*) #3

declare dso_local i32 @close(i32) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca %struct.zzzz*, align 8
  %10 = alloca %struct.zzzz*, align 8
  %11 = alloca i8, align 1
  %12 = alloca %struct.zzzz*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 0, i8* @smallMode, align 1
  store i8 0, i8* @keepInputFiles, align 1
  store i8 0, i8* @forceOverwrite, align 1
  store i8 1, i8* @noisy, align 1
  store i32 0, i32* @verbosity, align 4
  store i32 9, i32* @blockSize100k, align 4
  store i8 0, i8* @testFailsExist, align 1
  store i8 0, i8* @unzFailsExist, align 1
  store i32 0, i32* @numFileNames, align 4
  store i32 0, i32* @numFilesProcessed, align 4
  store i32 30, i32* @workFactor, align 4
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  store i32 0, i32* @exitValue, align 4
  store i32 0, i32* %7, align 4
  store i32 0, i32* %6, align 4
  %13 = call void (i32)* @signal(i32 11, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %14 = call void (i32)* @signal(i32 7, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0))
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0))
  %15 = load i8**, i8*** %5, align 8
  %16 = getelementptr inbounds i8*, i8** %15, i64 0
  %17 = load i8*, i8** %16, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0), i8* %17)
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0), i8** @progName, align 8
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0), i8** %8, align 8
  br label %18

18:                                               ; preds = %32, %2
  %19 = load i8*, i8** %8, align 8
  %20 = load i8, i8* %19, align 1
  %21 = sext i8 %20 to i32
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %18
  %24 = load i8*, i8** %8, align 8
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %26, 47
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = load i8*, i8** %8, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 1
  store i8* %30, i8** @progName, align 8
  br label %31

31:                                               ; preds = %28, %23
  br label %32

32:                                               ; preds = %31
  %33 = load i8*, i8** %8, align 8
  %34 = getelementptr inbounds i8, i8* %33, i32 1
  store i8* %34, i8** %8, align 8
  br label %18

35:                                               ; preds = %18
  store %struct.zzzz* null, %struct.zzzz** %9, align 8
  call void @addFlagsFromEnvVar(%struct.zzzz** %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0))
  call void @addFlagsFromEnvVar(%struct.zzzz** %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0))
  store i32 1, i32* %6, align 4
  br label %36

36:                                               ; preds = %49, %35
  %37 = load i32, i32* %6, align 4
  %38 = load i32, i32* %4, align 4
  %39 = sub nsw i32 %38, 1
  %40 = icmp sle i32 %37, %39
  br i1 %40, label %41, label %52

41:                                               ; preds = %36
  %42 = load %struct.zzzz*, %struct.zzzz** %9, align 8
  %43 = load i8**, i8*** %5, align 8
  %44 = load i32, i32* %6, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8*, i8** %43, i64 %45
  %47 = load i8*, i8** %46, align 8
  %48 = call %struct.zzzz* @snocString(%struct.zzzz* %42, i8* %47)
  store %struct.zzzz* %48, %struct.zzzz** %9, align 8
  br label %49

49:                                               ; preds = %41
  %50 = load i32, i32* %6, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %6, align 4
  br label %36

52:                                               ; preds = %36
  store i32 7, i32* @longestFileName, align 4
  store i32 0, i32* @numFileNames, align 4
  store i8 1, i8* %11, align 1
  %53 = load %struct.zzzz*, %struct.zzzz** %9, align 8
  store %struct.zzzz* %53, %struct.zzzz** %10, align 8
  br label %54

54:                                               ; preds = %94, %52
  %55 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %56 = icmp ne %struct.zzzz* %55, null
  br i1 %56, label %57, label %98

57:                                               ; preds = %54
  %58 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %59 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %58, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0)) #11
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %57
  store i8 0, i8* %11, align 1
  br label %94

64:                                               ; preds = %57
  %65 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %66 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %65, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 0
  %69 = load i8, i8* %68, align 1
  %70 = sext i8 %69 to i32
  %71 = icmp eq i32 %70, 45
  br i1 %71, label %72, label %77

72:                                               ; preds = %64
  %73 = load i8, i8* %11, align 1
  %74 = zext i8 %73 to i32
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %72
  br label %94

77:                                               ; preds = %72, %64
  %78 = load i32, i32* @numFileNames, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* @numFileNames, align 4
  %80 = load i32, i32* @longestFileName, align 4
  %81 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %82 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %81, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = call i64 @strlen(i8* %83) #11
  %85 = trunc i64 %84 to i32
  %86 = icmp slt i32 %80, %85
  br i1 %86, label %87, label %93

87:                                               ; preds = %77
  %88 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %89 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %88, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = call i64 @strlen(i8* %90) #11
  %92 = trunc i64 %91 to i32
  store i32 %92, i32* @longestFileName, align 4
  br label %93

93:                                               ; preds = %87, %77
  br label %94

94:                                               ; preds = %93, %76, %63
  %95 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %96 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %95, i32 0, i32 1
  %97 = load %struct.zzzz*, %struct.zzzz** %96, align 8
  store %struct.zzzz* %97, %struct.zzzz** %10, align 8
  br label %54

98:                                               ; preds = %54
  %99 = load i32, i32* @numFileNames, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  store i32 1, i32* @srcMode, align 4
  br label %103

102:                                              ; preds = %98
  store i32 3, i32* @srcMode, align 4
  br label %103

103:                                              ; preds = %102, %101
  store i32 1, i32* @opMode, align 4
  %104 = load i8*, i8** @progName, align 8
  %105 = call i8* @strstr(i8* %104, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0)) #11
  %106 = icmp ne i8* %105, null
  br i1 %106, label %111, label %107

107:                                              ; preds = %103
  %108 = load i8*, i8** @progName, align 8
  %109 = call i8* @strstr(i8* %108, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i64 0, i64 0)) #11
  %110 = icmp ne i8* %109, null
  br i1 %110, label %111, label %112

111:                                              ; preds = %107, %103
  store i32 2, i32* @opMode, align 4
  br label %112

112:                                              ; preds = %111, %107
  %113 = load i8*, i8** @progName, align 8
  %114 = call i8* @strstr(i8* %113, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0)) #11
  %115 = icmp ne i8* %114, null
  br i1 %115, label %128, label %116

116:                                              ; preds = %112
  %117 = load i8*, i8** @progName, align 8
  %118 = call i8* @strstr(i8* %117, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0)) #11
  %119 = icmp ne i8* %118, null
  br i1 %119, label %128, label %120

120:                                              ; preds = %116
  %121 = load i8*, i8** @progName, align 8
  %122 = call i8* @strstr(i8* %121, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0)) #11
  %123 = icmp ne i8* %122, null
  br i1 %123, label %128, label %124

124:                                              ; preds = %120
  %125 = load i8*, i8** @progName, align 8
  %126 = call i8* @strstr(i8* %125, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0)) #11
  %127 = icmp ne i8* %126, null
  br i1 %127, label %128, label %133

128:                                              ; preds = %124, %120, %116, %112
  store i32 2, i32* @opMode, align 4
  %129 = load i32, i32* @numFileNames, align 4
  %130 = icmp eq i32 %129, 0
  %131 = zext i1 %130 to i64
  %132 = select i1 %130, i32 1, i32 2
  store i32 %132, i32* @srcMode, align 4
  br label %133

133:                                              ; preds = %128, %124
  %134 = load %struct.zzzz*, %struct.zzzz** %9, align 8
  store %struct.zzzz* %134, %struct.zzzz** %10, align 8
  br label %135

135:                                              ; preds = %218, %133
  %136 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %137 = icmp ne %struct.zzzz* %136, null
  br i1 %137, label %138, label %222

138:                                              ; preds = %135
  %139 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %140 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %139, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  %142 = call i32 @strcmp(i8* %141, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0)) #11
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %138
  br label %222

145:                                              ; preds = %138
  %146 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %147 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %146, i32 0, i32 0
  %148 = load i8*, i8** %147, align 8
  %149 = getelementptr inbounds i8, i8* %148, i64 0
  %150 = load i8, i8* %149, align 1
  %151 = sext i8 %150 to i32
  %152 = icmp eq i32 %151, 45
  br i1 %152, label %153, label %217

153:                                              ; preds = %145
  %154 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %155 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %154, i32 0, i32 0
  %156 = load i8*, i8** %155, align 8
  %157 = getelementptr inbounds i8, i8* %156, i64 1
  %158 = load i8, i8* %157, align 1
  %159 = sext i8 %158 to i32
  %160 = icmp ne i32 %159, 45
  br i1 %160, label %161, label %217

161:                                              ; preds = %153
  store i32 1, i32* %7, align 4
  br label %162

162:                                              ; preds = %213, %161
  %163 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %164 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %163, i32 0, i32 0
  %165 = load i8*, i8** %164, align 8
  %166 = load i32, i32* %7, align 4
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds i8, i8* %165, i64 %167
  %169 = load i8, i8* %168, align 1
  %170 = sext i8 %169 to i32
  %171 = icmp ne i32 %170, 0
  br i1 %171, label %172, label %216

172:                                              ; preds = %162
  %173 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %174 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %173, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = load i32, i32* %7, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i8, i8* %175, i64 %177
  %179 = load i8, i8* %178, align 1
  %180 = sext i8 %179 to i32
  switch i32 %180, label %204 [
    i32 99, label %181
    i32 100, label %182
    i32 122, label %183
    i32 102, label %184
    i32 116, label %185
    i32 107, label %186
    i32 115, label %187
    i32 113, label %188
    i32 49, label %189
    i32 50, label %190
    i32 51, label %191
    i32 52, label %192
    i32 53, label %193
    i32 54, label %194
    i32 55, label %195
    i32 56, label %196
    i32 57, label %197
    i32 86, label %198
    i32 76, label %198
    i32 118, label %199
    i32 104, label %202
  ]

181:                                              ; preds = %172
  store i32 2, i32* @srcMode, align 4
  br label %212

182:                                              ; preds = %172
  store i32 2, i32* @opMode, align 4
  br label %212

183:                                              ; preds = %172
  store i32 1, i32* @opMode, align 4
  br label %212

184:                                              ; preds = %172
  store i8 1, i8* @forceOverwrite, align 1
  br label %212

185:                                              ; preds = %172
  store i32 3, i32* @opMode, align 4
  br label %212

186:                                              ; preds = %172
  store i8 1, i8* @keepInputFiles, align 1
  br label %212

187:                                              ; preds = %172
  store i8 1, i8* @smallMode, align 1
  br label %212

188:                                              ; preds = %172
  store i8 0, i8* @noisy, align 1
  br label %212

189:                                              ; preds = %172
  store i32 1, i32* @blockSize100k, align 4
  br label %212

190:                                              ; preds = %172
  store i32 2, i32* @blockSize100k, align 4
  br label %212

191:                                              ; preds = %172
  store i32 3, i32* @blockSize100k, align 4
  br label %212

192:                                              ; preds = %172
  store i32 4, i32* @blockSize100k, align 4
  br label %212

193:                                              ; preds = %172
  store i32 5, i32* @blockSize100k, align 4
  br label %212

194:                                              ; preds = %172
  store i32 6, i32* @blockSize100k, align 4
  br label %212

195:                                              ; preds = %172
  store i32 7, i32* @blockSize100k, align 4
  br label %212

196:                                              ; preds = %172
  store i32 8, i32* @blockSize100k, align 4
  br label %212

197:                                              ; preds = %172
  store i32 9, i32* @blockSize100k, align 4
  br label %212

198:                                              ; preds = %172, %172
  call void @license()
  br label %212

199:                                              ; preds = %172
  %200 = load i32, i32* @verbosity, align 4
  %201 = add nsw i32 %200, 1
  store i32 %201, i32* @verbosity, align 4
  br label %212

202:                                              ; preds = %172
  %203 = load i8*, i8** @progName, align 8
  call void @usage(i8* %203)
  call void @exit(i32 0) #8
  unreachable

204:                                              ; preds = %172
  %205 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %206 = load i8*, i8** @progName, align 8
  %207 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %208 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %209 = load i8*, i8** %208, align 8
  %210 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %205, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.28, i64 0, i64 0), i8* %206, i8* %209)
  %211 = load i8*, i8** @progName, align 8
  call void @usage(i8* %211)
  call void @exit(i32 1) #8
  unreachable

212:                                              ; preds = %199, %198, %197, %196, %195, %194, %193, %192, %191, %190, %189, %188, %187, %186, %185, %184, %183, %182, %181
  br label %213

213:                                              ; preds = %212
  %214 = load i32, i32* %7, align 4
  %215 = add nsw i32 %214, 1
  store i32 %215, i32* %7, align 4
  br label %162

216:                                              ; preds = %162
  br label %217

217:                                              ; preds = %216, %153, %145
  br label %218

218:                                              ; preds = %217
  %219 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %220 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %219, i32 0, i32 1
  %221 = load %struct.zzzz*, %struct.zzzz** %220, align 8
  store %struct.zzzz* %221, %struct.zzzz** %10, align 8
  br label %135

222:                                              ; preds = %144, %135
  %223 = load %struct.zzzz*, %struct.zzzz** %9, align 8
  store %struct.zzzz* %223, %struct.zzzz** %10, align 8
  br label %224

224:                                              ; preds = %394, %222
  %225 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %226 = icmp ne %struct.zzzz* %225, null
  br i1 %226, label %227, label %398

227:                                              ; preds = %224
  %228 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %229 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %228, i32 0, i32 0
  %230 = load i8*, i8** %229, align 8
  %231 = call i32 @strcmp(i8* %230, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0)) #11
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %227
  br label %398

234:                                              ; preds = %227
  %235 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %236 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %235, i32 0, i32 0
  %237 = load i8*, i8** %236, align 8
  %238 = call i32 @strcmp(i8* %237, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0)) #11
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %234
  store i32 2, i32* @srcMode, align 4
  br label %393

241:                                              ; preds = %234
  %242 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %243 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %242, i32 0, i32 0
  %244 = load i8*, i8** %243, align 8
  %245 = call i32 @strcmp(i8* %244, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i64 0, i64 0)) #11
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %241
  store i32 2, i32* @opMode, align 4
  br label %392

248:                                              ; preds = %241
  %249 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %250 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %249, i32 0, i32 0
  %251 = load i8*, i8** %250, align 8
  %252 = call i32 @strcmp(i8* %251, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i64 0, i64 0)) #11
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %255

254:                                              ; preds = %248
  store i32 1, i32* @opMode, align 4
  br label %391

255:                                              ; preds = %248
  %256 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %257 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %256, i32 0, i32 0
  %258 = load i8*, i8** %257, align 8
  %259 = call i32 @strcmp(i8* %258, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0)) #11
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %262

261:                                              ; preds = %255
  store i8 1, i8* @forceOverwrite, align 1
  br label %390

262:                                              ; preds = %255
  %263 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %264 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %263, i32 0, i32 0
  %265 = load i8*, i8** %264, align 8
  %266 = call i32 @strcmp(i8* %265, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #11
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %269

268:                                              ; preds = %262
  store i32 3, i32* @opMode, align 4
  br label %389

269:                                              ; preds = %262
  %270 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %271 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %270, i32 0, i32 0
  %272 = load i8*, i8** %271, align 8
  %273 = call i32 @strcmp(i8* %272, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0)) #11
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %276

275:                                              ; preds = %269
  store i8 1, i8* @keepInputFiles, align 1
  br label %388

276:                                              ; preds = %269
  %277 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %278 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %277, i32 0, i32 0
  %279 = load i8*, i8** %278, align 8
  %280 = call i32 @strcmp(i8* %279, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35, i64 0, i64 0)) #11
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %276
  store i8 1, i8* @smallMode, align 1
  br label %387

283:                                              ; preds = %276
  %284 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %285 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %284, i32 0, i32 0
  %286 = load i8*, i8** %285, align 8
  %287 = call i32 @strcmp(i8* %286, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i64 0, i64 0)) #11
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %283
  store i8 0, i8* @noisy, align 1
  br label %386

290:                                              ; preds = %283
  %291 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %292 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %291, i32 0, i32 0
  %293 = load i8*, i8** %292, align 8
  %294 = call i32 @strcmp(i8* %293, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i64 0, i64 0)) #11
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %297

296:                                              ; preds = %290
  call void @license()
  br label %385

297:                                              ; preds = %290
  %298 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %299 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %298, i32 0, i32 0
  %300 = load i8*, i8** %299, align 8
  %301 = call i32 @strcmp(i8* %300, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i64 0, i64 0)) #11
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %304

303:                                              ; preds = %297
  call void @license()
  br label %384

304:                                              ; preds = %297
  %305 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %306 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %305, i32 0, i32 0
  %307 = load i8*, i8** %306, align 8
  %308 = call i32 @strcmp(i8* %307, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i64 0, i64 0)) #11
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %311

310:                                              ; preds = %304
  store i32 1, i32* @workFactor, align 4
  br label %383

311:                                              ; preds = %304
  %312 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %313 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %312, i32 0, i32 0
  %314 = load i8*, i8** %313, align 8
  %315 = call i32 @strcmp(i8* %314, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.40, i64 0, i64 0)) #11
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %321

317:                                              ; preds = %311
  %318 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %319 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %318, i32 0, i32 0
  %320 = load i8*, i8** %319, align 8
  call void @redundant(i8* %320)
  br label %382

321:                                              ; preds = %311
  %322 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %323 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %322, i32 0, i32 0
  %324 = load i8*, i8** %323, align 8
  %325 = call i32 @strcmp(i8* %324, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i64 0, i64 0)) #11
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %331

327:                                              ; preds = %321
  %328 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %329 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %328, i32 0, i32 0
  %330 = load i8*, i8** %329, align 8
  call void @redundant(i8* %330)
  br label %381

331:                                              ; preds = %321
  %332 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %333 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %332, i32 0, i32 0
  %334 = load i8*, i8** %333, align 8
  %335 = call i32 @strcmp(i8* %334, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i64 0, i64 0)) #11
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %338

337:                                              ; preds = %331
  store i32 1, i32* @blockSize100k, align 4
  br label %380

338:                                              ; preds = %331
  %339 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %340 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %339, i32 0, i32 0
  %341 = load i8*, i8** %340, align 8
  %342 = call i32 @strcmp(i8* %341, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i64 0, i64 0)) #11
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %344, label %345

344:                                              ; preds = %338
  store i32 9, i32* @blockSize100k, align 4
  br label %379

345:                                              ; preds = %338
  %346 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %347 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %346, i32 0, i32 0
  %348 = load i8*, i8** %347, align 8
  %349 = call i32 @strcmp(i8* %348, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i64 0, i64 0)) #11
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %354

351:                                              ; preds = %345
  %352 = load i32, i32* @verbosity, align 4
  %353 = add nsw i32 %352, 1
  store i32 %353, i32* @verbosity, align 4
  br label %378

354:                                              ; preds = %345
  %355 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %356 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %355, i32 0, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = call i32 @strcmp(i8* %357, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0)) #11
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %360, label %362

360:                                              ; preds = %354
  %361 = load i8*, i8** @progName, align 8
  call void @usage(i8* %361)
  call void @exit(i32 0) #8
  unreachable

362:                                              ; preds = %354
  %363 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %364 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %363, i32 0, i32 0
  %365 = load i8*, i8** %364, align 8
  %366 = call i32 @strncmp(i8* %365, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i64 2) #11
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %376

368:                                              ; preds = %362
  %369 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %370 = load i8*, i8** @progName, align 8
  %371 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %372 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %371, i32 0, i32 0
  %373 = load i8*, i8** %372, align 8
  %374 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %369, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.28, i64 0, i64 0), i8* %370, i8* %373)
  %375 = load i8*, i8** @progName, align 8
  call void @usage(i8* %375)
  call void @exit(i32 1) #8
  unreachable

376:                                              ; preds = %362
  br label %377

377:                                              ; preds = %376
  br label %378

378:                                              ; preds = %377, %351
  br label %379

379:                                              ; preds = %378, %344
  br label %380

380:                                              ; preds = %379, %337
  br label %381

381:                                              ; preds = %380, %327
  br label %382

382:                                              ; preds = %381, %317
  br label %383

383:                                              ; preds = %382, %310
  br label %384

384:                                              ; preds = %383, %303
  br label %385

385:                                              ; preds = %384, %296
  br label %386

386:                                              ; preds = %385, %289
  br label %387

387:                                              ; preds = %386, %282
  br label %388

388:                                              ; preds = %387, %275
  br label %389

389:                                              ; preds = %388, %268
  br label %390

390:                                              ; preds = %389, %261
  br label %391

391:                                              ; preds = %390, %254
  br label %392

392:                                              ; preds = %391, %247
  br label %393

393:                                              ; preds = %392, %240
  br label %394

394:                                              ; preds = %393
  %395 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %396 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %395, i32 0, i32 1
  %397 = load %struct.zzzz*, %struct.zzzz** %396, align 8
  store %struct.zzzz* %397, %struct.zzzz** %10, align 8
  br label %224

398:                                              ; preds = %233, %224
  %399 = load i32, i32* @verbosity, align 4
  %400 = icmp sgt i32 %399, 4
  br i1 %400, label %401, label %402

401:                                              ; preds = %398
  store i32 4, i32* @verbosity, align 4
  br label %402

402:                                              ; preds = %401, %398
  %403 = load i32, i32* @opMode, align 4
  %404 = icmp eq i32 %403, 1
  br i1 %404, label %405, label %413

405:                                              ; preds = %402
  %406 = load i8, i8* @smallMode, align 1
  %407 = zext i8 %406 to i32
  %408 = icmp ne i32 %407, 0
  br i1 %408, label %409, label %413

409:                                              ; preds = %405
  %410 = load i32, i32* @blockSize100k, align 4
  %411 = icmp sgt i32 %410, 2
  br i1 %411, label %412, label %413

412:                                              ; preds = %409
  store i32 2, i32* @blockSize100k, align 4
  br label %413

413:                                              ; preds = %412, %409, %405, %402
  %414 = load i32, i32* @opMode, align 4
  %415 = icmp eq i32 %414, 3
  br i1 %415, label %416, label %423

416:                                              ; preds = %413
  %417 = load i32, i32* @srcMode, align 4
  %418 = icmp eq i32 %417, 2
  br i1 %418, label %419, label %423

419:                                              ; preds = %416
  %420 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %421 = load i8*, i8** @progName, align 8
  %422 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %420, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.46, i64 0, i64 0), i8* %421)
  call void @exit(i32 1) #8
  unreachable

423:                                              ; preds = %416, %413
  %424 = load i32, i32* @srcMode, align 4
  %425 = icmp eq i32 %424, 2
  br i1 %425, label %426, label %430

426:                                              ; preds = %423
  %427 = load i32, i32* @numFileNames, align 4
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %429, label %430

429:                                              ; preds = %426
  store i32 1, i32* @srcMode, align 4
  br label %430

430:                                              ; preds = %429, %426, %423
  %431 = load i32, i32* @opMode, align 4
  %432 = icmp ne i32 %431, 1
  br i1 %432, label %433, label %434

433:                                              ; preds = %430
  store i32 0, i32* @blockSize100k, align 4
  br label %434

434:                                              ; preds = %433, %430
  %435 = load i32, i32* @srcMode, align 4
  %436 = icmp eq i32 %435, 3
  br i1 %436, label %437, label %441

437:                                              ; preds = %434
  %438 = call void (i32)* @signal(i32 2, void (i32)* @mySignalCatcher) #9
  %439 = call void (i32)* @signal(i32 15, void (i32)* @mySignalCatcher) #9
  %440 = call void (i32)* @signal(i32 1, void (i32)* @mySignalCatcher) #9
  br label %441

441:                                              ; preds = %437, %434
  %442 = load i32, i32* @opMode, align 4
  %443 = icmp eq i32 %442, 1
  br i1 %443, label %444, label %485

444:                                              ; preds = %441
  %445 = load i32, i32* @srcMode, align 4
  %446 = icmp eq i32 %445, 1
  br i1 %446, label %447, label %448

447:                                              ; preds = %444
  call void @compress(i8* null)
  br label %484

448:                                              ; preds = %444
  store i8 1, i8* %11, align 1
  %449 = load %struct.zzzz*, %struct.zzzz** %9, align 8
  store %struct.zzzz* %449, %struct.zzzz** %10, align 8
  br label %450

450:                                              ; preds = %479, %448
  %451 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %452 = icmp ne %struct.zzzz* %451, null
  br i1 %452, label %453, label %483

453:                                              ; preds = %450
  %454 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %455 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %454, i32 0, i32 0
  %456 = load i8*, i8** %455, align 8
  %457 = call i32 @strcmp(i8* %456, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0)) #11
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %459, label %460

459:                                              ; preds = %453
  store i8 0, i8* %11, align 1
  br label %479

460:                                              ; preds = %453
  %461 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %462 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %461, i32 0, i32 0
  %463 = load i8*, i8** %462, align 8
  %464 = getelementptr inbounds i8, i8* %463, i64 0
  %465 = load i8, i8* %464, align 1
  %466 = sext i8 %465 to i32
  %467 = icmp eq i32 %466, 45
  br i1 %467, label %468, label %473

468:                                              ; preds = %460
  %469 = load i8, i8* %11, align 1
  %470 = zext i8 %469 to i32
  %471 = icmp ne i32 %470, 0
  br i1 %471, label %472, label %473

472:                                              ; preds = %468
  br label %479

473:                                              ; preds = %468, %460
  %474 = load i32, i32* @numFilesProcessed, align 4
  %475 = add nsw i32 %474, 1
  store i32 %475, i32* @numFilesProcessed, align 4
  %476 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %477 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %476, i32 0, i32 0
  %478 = load i8*, i8** %477, align 8
  call void @compress(i8* %478)
  br label %479

479:                                              ; preds = %473, %472, %459
  %480 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %481 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %480, i32 0, i32 1
  %482 = load %struct.zzzz*, %struct.zzzz** %481, align 8
  store %struct.zzzz* %482, %struct.zzzz** %10, align 8
  br label %450

483:                                              ; preds = %450
  br label %484

484:                                              ; preds = %483, %447
  br label %588

485:                                              ; preds = %441
  %486 = load i32, i32* @opMode, align 4
  %487 = icmp eq i32 %486, 2
  br i1 %487, label %488, label %534

488:                                              ; preds = %485
  store i8 0, i8* @unzFailsExist, align 1
  %489 = load i32, i32* @srcMode, align 4
  %490 = icmp eq i32 %489, 1
  br i1 %490, label %491, label %492

491:                                              ; preds = %488
  call void @uncompress(i8* null)
  br label %528

492:                                              ; preds = %488
  store i8 1, i8* %11, align 1
  %493 = load %struct.zzzz*, %struct.zzzz** %9, align 8
  store %struct.zzzz* %493, %struct.zzzz** %10, align 8
  br label %494

494:                                              ; preds = %523, %492
  %495 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %496 = icmp ne %struct.zzzz* %495, null
  br i1 %496, label %497, label %527

497:                                              ; preds = %494
  %498 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %499 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %498, i32 0, i32 0
  %500 = load i8*, i8** %499, align 8
  %501 = call i32 @strcmp(i8* %500, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0)) #11
  %502 = icmp eq i32 %501, 0
  br i1 %502, label %503, label %504

503:                                              ; preds = %497
  store i8 0, i8* %11, align 1
  br label %523

504:                                              ; preds = %497
  %505 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %506 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %505, i32 0, i32 0
  %507 = load i8*, i8** %506, align 8
  %508 = getelementptr inbounds i8, i8* %507, i64 0
  %509 = load i8, i8* %508, align 1
  %510 = sext i8 %509 to i32
  %511 = icmp eq i32 %510, 45
  br i1 %511, label %512, label %517

512:                                              ; preds = %504
  %513 = load i8, i8* %11, align 1
  %514 = zext i8 %513 to i32
  %515 = icmp ne i32 %514, 0
  br i1 %515, label %516, label %517

516:                                              ; preds = %512
  br label %523

517:                                              ; preds = %512, %504
  %518 = load i32, i32* @numFilesProcessed, align 4
  %519 = add nsw i32 %518, 1
  store i32 %519, i32* @numFilesProcessed, align 4
  %520 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %521 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %520, i32 0, i32 0
  %522 = load i8*, i8** %521, align 8
  call void @uncompress(i8* %522)
  br label %523

523:                                              ; preds = %517, %516, %503
  %524 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %525 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %524, i32 0, i32 1
  %526 = load %struct.zzzz*, %struct.zzzz** %525, align 8
  store %struct.zzzz* %526, %struct.zzzz** %10, align 8
  br label %494

527:                                              ; preds = %494
  br label %528

528:                                              ; preds = %527, %491
  %529 = load i8, i8* @unzFailsExist, align 1
  %530 = icmp ne i8 %529, 0
  br i1 %530, label %531, label %533

531:                                              ; preds = %528
  call void @setExit(i32 2)
  %532 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %532) #8
  unreachable

533:                                              ; preds = %528
  br label %587

534:                                              ; preds = %485
  store i8 0, i8* @testFailsExist, align 1
  %535 = load i32, i32* @srcMode, align 4
  %536 = icmp eq i32 %535, 1
  br i1 %536, label %537, label %538

537:                                              ; preds = %534
  call void @testf(i8* null)
  br label %574

538:                                              ; preds = %534
  store i8 1, i8* %11, align 1
  %539 = load %struct.zzzz*, %struct.zzzz** %9, align 8
  store %struct.zzzz* %539, %struct.zzzz** %10, align 8
  br label %540

540:                                              ; preds = %569, %538
  %541 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %542 = icmp ne %struct.zzzz* %541, null
  br i1 %542, label %543, label %573

543:                                              ; preds = %540
  %544 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %545 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %544, i32 0, i32 0
  %546 = load i8*, i8** %545, align 8
  %547 = call i32 @strcmp(i8* %546, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0)) #11
  %548 = icmp eq i32 %547, 0
  br i1 %548, label %549, label %550

549:                                              ; preds = %543
  store i8 0, i8* %11, align 1
  br label %569

550:                                              ; preds = %543
  %551 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %552 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %551, i32 0, i32 0
  %553 = load i8*, i8** %552, align 8
  %554 = getelementptr inbounds i8, i8* %553, i64 0
  %555 = load i8, i8* %554, align 1
  %556 = sext i8 %555 to i32
  %557 = icmp eq i32 %556, 45
  br i1 %557, label %558, label %563

558:                                              ; preds = %550
  %559 = load i8, i8* %11, align 1
  %560 = zext i8 %559 to i32
  %561 = icmp ne i32 %560, 0
  br i1 %561, label %562, label %563

562:                                              ; preds = %558
  br label %569

563:                                              ; preds = %558, %550
  %564 = load i32, i32* @numFilesProcessed, align 4
  %565 = add nsw i32 %564, 1
  store i32 %565, i32* @numFilesProcessed, align 4
  %566 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %567 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %566, i32 0, i32 0
  %568 = load i8*, i8** %567, align 8
  call void @testf(i8* %568)
  br label %569

569:                                              ; preds = %563, %562, %549
  %570 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %571 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %570, i32 0, i32 1
  %572 = load %struct.zzzz*, %struct.zzzz** %571, align 8
  store %struct.zzzz* %572, %struct.zzzz** %10, align 8
  br label %540

573:                                              ; preds = %540
  br label %574

574:                                              ; preds = %573, %537
  %575 = load i8, i8* @testFailsExist, align 1
  %576 = zext i8 %575 to i32
  %577 = icmp ne i32 %576, 0
  br i1 %577, label %578, label %586

578:                                              ; preds = %574
  %579 = load i8, i8* @noisy, align 1
  %580 = zext i8 %579 to i32
  %581 = icmp ne i32 %580, 0
  br i1 %581, label %582, label %586

582:                                              ; preds = %578
  %583 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %584 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %583, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.47, i64 0, i64 0))
  call void @setExit(i32 2)
  %585 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %585) #8
  unreachable

586:                                              ; preds = %578, %574
  br label %587

587:                                              ; preds = %586, %533
  br label %588

588:                                              ; preds = %587, %484
  %589 = load %struct.zzzz*, %struct.zzzz** %9, align 8
  store %struct.zzzz* %589, %struct.zzzz** %10, align 8
  br label %590

590:                                              ; preds = %605, %588
  %591 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %592 = icmp ne %struct.zzzz* %591, null
  br i1 %592, label %593, label %609

593:                                              ; preds = %590
  %594 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %595 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %594, i32 0, i32 1
  %596 = load %struct.zzzz*, %struct.zzzz** %595, align 8
  store %struct.zzzz* %596, %struct.zzzz** %12, align 8
  %597 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %598 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %597, i32 0, i32 0
  %599 = load i8*, i8** %598, align 8
  %600 = icmp ne i8* %599, null
  br i1 %600, label %601, label %605

601:                                              ; preds = %593
  %602 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %603 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %602, i32 0, i32 0
  %604 = load i8*, i8** %603, align 8
  call void @free(i8* %604) #9
  br label %605

605:                                              ; preds = %601, %593
  %606 = load %struct.zzzz*, %struct.zzzz** %10, align 8
  %607 = bitcast %struct.zzzz* %606 to i8*
  call void @free(i8* %607) #9
  %608 = load %struct.zzzz*, %struct.zzzz** %12, align 8
  store %struct.zzzz* %608, %struct.zzzz** %10, align 8
  br label %590

609:                                              ; preds = %590
  %610 = load i32, i32* @exitValue, align 4
  ret i32 %610
}

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mySIGSEGVorSIGBUScatcher(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* @opMode, align 4
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %7 = load i8*, i8** @progName, align 8
  %8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([868 x i8], [868 x i8]* @.str.78, i64 0, i64 0), i8* %7)
  br label %13

9:                                                ; preds = %1
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = load i8*, i8** @progName, align 8
  %12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([995 x i8], [995 x i8]* @.str.79, i64 0, i64 0), i8* %11)
  br label %13

13:                                               ; preds = %9, %5
  call void @showFileNames()
  %14 = load i32, i32* @opMode, align 4
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  call void @cleanUpAndFail(i32 3) #12
  unreachable

17:                                               ; preds = %13
  call void @cadvise()
  call void @cleanUpAndFail(i32 2) #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copyFileName(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %4, align 8
  %6 = call i64 @strlen(i8* %5) #11
  %7 = icmp ugt i64 %6, 1024
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %10 = load i8*, i8** %4, align 8
  %11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.89, i64 0, i64 0), i8* %10, i32 1024)
  call void @setExit(i32 1)
  %12 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %12) #8
  unreachable

13:                                               ; preds = %2
  %14 = load i8*, i8** %3, align 8
  %15 = load i8*, i8** %4, align 8
  %16 = call i8* @strncpy(i8* %14, i8* %15, i64 1024) #9
  %17 = load i8*, i8** %3, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 1024
  store i8 0, i8* %18, align 1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @addFlagsFromEnvVar(%struct.zzzz** %0, i8* %1) #0 {
  %3 = alloca %struct.zzzz**, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  store %struct.zzzz** %0, %struct.zzzz*** %3, align 8
  store i8* %1, i8** %4, align 8
  %10 = load i8*, i8** %4, align 8
  %11 = call i8* @getenv(i8* %10) #9
  store i8* %11, i8** %8, align 8
  %12 = load i8*, i8** %8, align 8
  %13 = icmp ne i8* %12, null
  br i1 %13, label %14, label %111

14:                                               ; preds = %2
  %15 = load i8*, i8** %8, align 8
  store i8* %15, i8** %9, align 8
  store i32 0, i32* %5, align 4
  br label %16

16:                                               ; preds = %14, %109
  %17 = load i8*, i8** %9, align 8
  %18 = load i32, i32* %5, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %17, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %16
  br label %110

25:                                               ; preds = %16
  %26 = load i32, i32* %5, align 4
  %27 = load i8*, i8** %9, align 8
  %28 = sext i32 %26 to i64
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  store i8* %29, i8** %9, align 8
  store i32 0, i32* %5, align 4
  br label %30

30:                                               ; preds = %43, %25
  %31 = call i16** @__ctype_b_loc() #10
  %32 = load i16*, i16** %31, align 8
  %33 = load i8*, i8** %9, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 0
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i16, i16* %32, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = and i32 %40, 8192
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %30
  %44 = load i8*, i8** %9, align 8
  %45 = getelementptr inbounds i8, i8* %44, i32 1
  store i8* %45, i8** %9, align 8
  br label %30

46:                                               ; preds = %30
  br label %47

47:                                               ; preds = %73, %46
  %48 = load i8*, i8** %9, align 8
  %49 = load i32, i32* %5, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %48, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = sext i8 %52 to i32
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %71

55:                                               ; preds = %47
  %56 = call i16** @__ctype_b_loc() #10
  %57 = load i16*, i16** %56, align 8
  %58 = load i8*, i8** %9, align 8
  %59 = load i32, i32* %5, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %58, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = sext i8 %62 to i32
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i16, i16* %57, i64 %64
  %66 = load i16, i16* %65, align 2
  %67 = zext i16 %66 to i32
  %68 = and i32 %67, 8192
  %69 = icmp ne i32 %68, 0
  %70 = xor i1 %69, true
  br label %71

71:                                               ; preds = %55, %47
  %72 = phi i1 [ false, %47 ], [ %70, %55 ]
  br i1 %72, label %73, label %76

73:                                               ; preds = %71
  %74 = load i32, i32* %5, align 4
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %5, align 4
  br label %47

76:                                               ; preds = %71
  %77 = load i32, i32* %5, align 4
  %78 = icmp sgt i32 %77, 0
  br i1 %78, label %79, label %109

79:                                               ; preds = %76
  %80 = load i32, i32* %5, align 4
  store i32 %80, i32* %7, align 4
  %81 = load i32, i32* %7, align 4
  %82 = icmp sgt i32 %81, 1024
  br i1 %82, label %83, label %84

83:                                               ; preds = %79
  store i32 1024, i32* %7, align 4
  br label %84

84:                                               ; preds = %83, %79
  store i32 0, i32* %6, align 4
  br label %85

85:                                               ; preds = %98, %84
  %86 = load i32, i32* %6, align 4
  %87 = load i32, i32* %7, align 4
  %88 = icmp slt i32 %86, %87
  br i1 %88, label %89, label %101

89:                                               ; preds = %85
  %90 = load i8*, i8** %9, align 8
  %91 = load i32, i32* %6, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %90, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = load i32, i32* %6, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [1034 x i8], [1034 x i8]* @tmpName, i64 0, i64 %96
  store i8 %94, i8* %97, align 1
  br label %98

98:                                               ; preds = %89
  %99 = load i32, i32* %6, align 4
  %100 = add nsw i32 %99, 1
  store i32 %100, i32* %6, align 4
  br label %85

101:                                              ; preds = %85
  %102 = load i32, i32* %7, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds [1034 x i8], [1034 x i8]* @tmpName, i64 0, i64 %103
  store i8 0, i8* %104, align 1
  %105 = load %struct.zzzz**, %struct.zzzz*** %3, align 8
  %106 = load %struct.zzzz*, %struct.zzzz** %105, align 8
  %107 = call %struct.zzzz* @snocString(%struct.zzzz* %106, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @tmpName, i64 0, i64 0))
  %108 = load %struct.zzzz**, %struct.zzzz*** %3, align 8
  store %struct.zzzz* %107, %struct.zzzz** %108, align 8
  br label %109

109:                                              ; preds = %101, %76
  br label %16

110:                                              ; preds = %24
  br label %111

111:                                              ; preds = %110, %2
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.zzzz* @snocString(%struct.zzzz* %0, i8* %1) #0 {
  %3 = alloca %struct.zzzz*, align 8
  %4 = alloca %struct.zzzz*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.zzzz*, align 8
  %7 = alloca %struct.zzzz*, align 8
  store %struct.zzzz* %0, %struct.zzzz** %4, align 8
  store i8* %1, i8** %5, align 8
  %8 = load %struct.zzzz*, %struct.zzzz** %4, align 8
  %9 = icmp eq %struct.zzzz* %8, null
  br i1 %9, label %10, label %25

10:                                               ; preds = %2
  %11 = call %struct.zzzz* @mkCell()
  store %struct.zzzz* %11, %struct.zzzz** %6, align 8
  %12 = load i8*, i8** %5, align 8
  %13 = call i64 @strlen(i8* %12) #11
  %14 = add i64 5, %13
  %15 = trunc i64 %14 to i32
  %16 = call i8* @myMalloc(i32 %15)
  %17 = load %struct.zzzz*, %struct.zzzz** %6, align 8
  %18 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %17, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = load %struct.zzzz*, %struct.zzzz** %6, align 8
  %20 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %19, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = load i8*, i8** %5, align 8
  %23 = call i8* @strcpy(i8* %21, i8* %22) #9
  %24 = load %struct.zzzz*, %struct.zzzz** %6, align 8
  store %struct.zzzz* %24, %struct.zzzz** %3, align 8
  br label %45

25:                                               ; preds = %2
  %26 = load %struct.zzzz*, %struct.zzzz** %4, align 8
  store %struct.zzzz* %26, %struct.zzzz** %7, align 8
  br label %27

27:                                               ; preds = %32, %25
  %28 = load %struct.zzzz*, %struct.zzzz** %7, align 8
  %29 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %28, i32 0, i32 1
  %30 = load %struct.zzzz*, %struct.zzzz** %29, align 8
  %31 = icmp ne %struct.zzzz* %30, null
  br i1 %31, label %32, label %36

32:                                               ; preds = %27
  %33 = load %struct.zzzz*, %struct.zzzz** %7, align 8
  %34 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %33, i32 0, i32 1
  %35 = load %struct.zzzz*, %struct.zzzz** %34, align 8
  store %struct.zzzz* %35, %struct.zzzz** %7, align 8
  br label %27

36:                                               ; preds = %27
  %37 = load %struct.zzzz*, %struct.zzzz** %7, align 8
  %38 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %37, i32 0, i32 1
  %39 = load %struct.zzzz*, %struct.zzzz** %38, align 8
  %40 = load i8*, i8** %5, align 8
  %41 = call %struct.zzzz* @snocString(%struct.zzzz* %39, i8* %40)
  %42 = load %struct.zzzz*, %struct.zzzz** %7, align 8
  %43 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %42, i32 0, i32 1
  store %struct.zzzz* %41, %struct.zzzz** %43, align 8
  %44 = load %struct.zzzz*, %struct.zzzz** %4, align 8
  store %struct.zzzz* %44, %struct.zzzz** %3, align 8
  br label %45

45:                                               ; preds = %36, %10
  %46 = load %struct.zzzz*, %struct.zzzz** %3, align 8
  ret %struct.zzzz* %46
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #4

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #4

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8*) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal void @license() #0 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = call i8* @BZ2_bzlibVersion()
  %3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([529 x i8], [529 x i8]* @.str.91, i64 0, i64 0), i8* %2)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @usage(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %4 = call i8* @BZ2_bzlibVersion()
  %5 = load i8*, i8** %2, align 8
  %6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([1230 x i8], [1230 x i8]* @.str.92, i64 0, i64 0), i8* %4, i8* %5)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @redundant(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %4 = load i8*, i8** @progName, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.93, i64 0, i64 0), i8* %4, i8* %5)
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #4

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mySignalCatcher(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %4 = load i8*, i8** @progName, align 8
  %5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.94, i64 0, i64 0), i8* %4)
  call void @cleanUpAndFail(i32 1) #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @compress(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.stat, align 8
  %8 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %9 = load i8*, i8** %2, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %1
  %12 = load i32, i32* @srcMode, align 4
  %13 = icmp ne i32 %12, 1
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  call void @panic(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.95, i64 0, i64 0)) #12
  unreachable

15:                                               ; preds = %11, %1
  %16 = load i32, i32* @srcMode, align 4
  switch i32 %16, label %24 [
    i32 1, label %17
    i32 3, label %18
    i32 2, label %22
  ]

17:                                               ; preds = %15
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.96, i64 0, i64 0))
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.97, i64 0, i64 0))
  br label %24

18:                                               ; preds = %15
  %19 = load i8*, i8** %2, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %19)
  %20 = load i8*, i8** %2, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* %20)
  %21 = call i8* @strcat(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0)) #9
  br label %24

22:                                               ; preds = %15
  %23 = load i8*, i8** %2, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %23)
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.97, i64 0, i64 0))
  br label %24

24:                                               ; preds = %15, %22, %18, %17
  %25 = load i32, i32* @srcMode, align 4
  %26 = icmp ne i32 %25, 1
  br i1 %26, label %27, label %39

27:                                               ; preds = %24
  %28 = call zeroext i8 @containsDubiousChars(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %29 = zext i8 %28 to i32
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %39

31:                                               ; preds = %27
  %32 = load i8, i8* @noisy, align 1
  %33 = icmp ne i8 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %31
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %36 = load i8*, i8** @progName, align 8
  %37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.98, i64 0, i64 0), i8* %36, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %38

38:                                               ; preds = %34, %31
  call void @setExit(i32 1)
  br label %264

39:                                               ; preds = %27, %24
  %40 = load i32, i32* @srcMode, align 4
  %41 = icmp ne i32 %40, 1
  br i1 %41, label %42, label %52

42:                                               ; preds = %39
  %43 = call zeroext i8 @fileExists(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %44 = icmp ne i8 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %42
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %47 = load i8*, i8** @progName, align 8
  %48 = call i32* @__errno_location() #10
  %49 = load i32, i32* %48, align 4
  %50 = call i8* @strerror(i32 %49) #9
  %51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.99, i64 0, i64 0), i8* %47, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %50)
  call void @setExit(i32 1)
  br label %264

52:                                               ; preds = %42, %39
  store i32 0, i32* %6, align 4
  br label %53

53:                                               ; preds = %76, %52
  %54 = load i32, i32* %6, align 4
  %55 = icmp slt i32 %54, 4
  br i1 %55, label %56, label %79

56:                                               ; preds = %53
  %57 = load i32, i32* %6, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [4 x i8*], [4 x i8*]* @zSuffix, i64 0, i64 %58
  %60 = load i8*, i8** %59, align 8
  %61 = call zeroext i8 @hasSuffix(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %60)
  %62 = icmp ne i8 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %56
  %64 = load i8, i8* @noisy, align 1
  %65 = icmp ne i8 %64, 0
  br i1 %65, label %66, label %74

66:                                               ; preds = %63
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %68 = load i8*, i8** @progName, align 8
  %69 = load i32, i32* %6, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [4 x i8*], [4 x i8*]* @zSuffix, i64 0, i64 %70
  %72 = load i8*, i8** %71, align 8
  %73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %67, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.100, i64 0, i64 0), i8* %68, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %72)
  br label %74

74:                                               ; preds = %66, %63
  call void @setExit(i32 1)
  br label %264

75:                                               ; preds = %56
  br label %76

76:                                               ; preds = %75
  %77 = load i32, i32* %6, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %6, align 4
  br label %53

79:                                               ; preds = %53
  %80 = load i32, i32* @srcMode, align 4
  %81 = icmp eq i32 %80, 3
  br i1 %81, label %85, label %82

82:                                               ; preds = %79
  %83 = load i32, i32* @srcMode, align 4
  %84 = icmp eq i32 %83, 2
  br i1 %84, label %85, label %96

85:                                               ; preds = %82, %79
  %86 = call i32 @stat(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), %struct.stat* %7) #9
  %87 = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = and i32 %88, 61440
  %90 = icmp eq i32 %89, 16384
  br i1 %90, label %91, label %95

91:                                               ; preds = %85
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %93 = load i8*, i8** @progName, align 8
  %94 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %92, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.101, i64 0, i64 0), i8* %93, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  call void @setExit(i32 1)
  br label %264

95:                                               ; preds = %85
  br label %96

96:                                               ; preds = %95, %82
  %97 = load i32, i32* @srcMode, align 4
  %98 = icmp eq i32 %97, 3
  br i1 %98, label %99, label %114

99:                                               ; preds = %96
  %100 = load i8, i8* @forceOverwrite, align 1
  %101 = icmp ne i8 %100, 0
  br i1 %101, label %114, label %102

102:                                              ; preds = %99
  %103 = call zeroext i8 @notAStandardFile(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %104 = zext i8 %103 to i32
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %106, label %114

106:                                              ; preds = %102
  %107 = load i8, i8* @noisy, align 1
  %108 = icmp ne i8 %107, 0
  br i1 %108, label %109, label %113

109:                                              ; preds = %106
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %111 = load i8*, i8** @progName, align 8
  %112 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %110, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.102, i64 0, i64 0), i8* %111, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %113

113:                                              ; preds = %109, %106
  call void @setExit(i32 1)
  br label %264

114:                                              ; preds = %102, %99, %96
  %115 = load i32, i32* @srcMode, align 4
  %116 = icmp eq i32 %115, 3
  br i1 %116, label %117, label %131

117:                                              ; preds = %114
  %118 = call zeroext i8 @fileExists(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  %119 = zext i8 %118 to i32
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %121, label %131

121:                                              ; preds = %117
  %122 = load i8, i8* @forceOverwrite, align 1
  %123 = icmp ne i8 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %121
  %125 = call i32 @remove(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0)) #9
  br label %130

126:                                              ; preds = %121
  %127 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %128 = load i8*, i8** @progName, align 8
  %129 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.103, i64 0, i64 0), i8* %128, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  call void @setExit(i32 1)
  br label %264

130:                                              ; preds = %124
  br label %131

131:                                              ; preds = %130, %117, %114
  %132 = load i32, i32* @srcMode, align 4
  %133 = icmp eq i32 %132, 3
  br i1 %133, label %134, label %149

134:                                              ; preds = %131
  %135 = load i8, i8* @forceOverwrite, align 1
  %136 = icmp ne i8 %135, 0
  br i1 %136, label %149, label %137

137:                                              ; preds = %134
  %138 = call i32 @countHardLinks(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  store i32 %138, i32* %5, align 4
  %139 = icmp sgt i32 %138, 0
  br i1 %139, label %140, label %149

140:                                              ; preds = %137
  %141 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %142 = load i8*, i8** @progName, align 8
  %143 = load i32, i32* %5, align 4
  %144 = load i32, i32* %5, align 4
  %145 = icmp sgt i32 %144, 1
  %146 = zext i1 %145 to i64
  %147 = select i1 %145, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.16, i64 0, i64 0)
  %148 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %141, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.104, i64 0, i64 0), i8* %142, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i32 %143, i8* %147)
  call void @setExit(i32 1)
  br label %264

149:                                              ; preds = %137, %134, %131
  %150 = load i32, i32* @srcMode, align 4
  %151 = icmp eq i32 %150, 3
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @saveInputFileMetaInfo(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %153

153:                                              ; preds = %152, %149
  %154 = load i32, i32* @srcMode, align 4
  switch i32 %154, label %238 [
    i32 1, label %155
    i32 2, label %171
    i32 3, label %203
  ]

155:                                              ; preds = %153
  %156 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  store %struct._IO_FILE* %156, %struct._IO_FILE** %3, align 8
  %157 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %157, %struct._IO_FILE** %4, align 8
  %158 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %159 = call i32 @fileno(%struct._IO_FILE* %158) #9
  %160 = call i32 @isatty(i32 %159) #9
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %162, label %170

162:                                              ; preds = %155
  %163 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %164 = load i8*, i8** @progName, align 8
  %165 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %163, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.106, i64 0, i64 0), i8* %164)
  %166 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %167 = load i8*, i8** @progName, align 8
  %168 = load i8*, i8** @progName, align 8
  %169 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %166, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.107, i64 0, i64 0), i8* %167, i8* %168)
  call void @setExit(i32 1)
  br label %264

170:                                              ; preds = %155
  br label %239

171:                                              ; preds = %153
  %172 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i64 0, i64 0))
  store %struct._IO_FILE* %172, %struct._IO_FILE** %3, align 8
  %173 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %173, %struct._IO_FILE** %4, align 8
  %174 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %175 = call i32 @fileno(%struct._IO_FILE* %174) #9
  %176 = call i32 @isatty(i32 %175) #9
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %178, label %192

178:                                              ; preds = %171
  %179 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %180 = load i8*, i8** @progName, align 8
  %181 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %179, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.106, i64 0, i64 0), i8* %180)
  %182 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %183 = load i8*, i8** @progName, align 8
  %184 = load i8*, i8** @progName, align 8
  %185 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %182, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.107, i64 0, i64 0), i8* %183, i8* %184)
  %186 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %187 = icmp ne %struct._IO_FILE* %186, null
  br i1 %187, label %188, label %191

188:                                              ; preds = %178
  %189 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %190 = call i32 @fclose(%struct._IO_FILE* %189)
  br label %191

191:                                              ; preds = %188, %178
  call void @setExit(i32 1)
  br label %264

192:                                              ; preds = %171
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %194 = icmp eq %struct._IO_FILE* %193, null
  br i1 %194, label %195, label %202

195:                                              ; preds = %192
  %196 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %197 = load i8*, i8** @progName, align 8
  %198 = call i32* @__errno_location() #10
  %199 = load i32, i32* %198, align 4
  %200 = call i8* @strerror(i32 %199) #9
  %201 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %196, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.99, i64 0, i64 0), i8* %197, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %200)
  call void @setExit(i32 1)
  br label %264

202:                                              ; preds = %192
  br label %239

203:                                              ; preds = %153
  %204 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i64 0, i64 0))
  store %struct._IO_FILE* %204, %struct._IO_FILE** %3, align 8
  %205 = call %struct._IO_FILE* @fopen_output_safely(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.109, i64 0, i64 0))
  store %struct._IO_FILE* %205, %struct._IO_FILE** %4, align 8
  %206 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %207 = icmp eq %struct._IO_FILE* %206, null
  br i1 %207, label %208, label %221

208:                                              ; preds = %203
  %209 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %210 = load i8*, i8** @progName, align 8
  %211 = call i32* @__errno_location() #10
  %212 = load i32, i32* %211, align 4
  %213 = call i8* @strerror(i32 %212) #9
  %214 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %209, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.110, i64 0, i64 0), i8* %210, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* %213)
  %215 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %216 = icmp ne %struct._IO_FILE* %215, null
  br i1 %216, label %217, label %220

217:                                              ; preds = %208
  %218 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %219 = call i32 @fclose(%struct._IO_FILE* %218)
  br label %220

220:                                              ; preds = %217, %208
  call void @setExit(i32 1)
  br label %264

221:                                              ; preds = %203
  %222 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %223 = icmp eq %struct._IO_FILE* %222, null
  br i1 %223, label %224, label %237

224:                                              ; preds = %221
  %225 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %226 = load i8*, i8** @progName, align 8
  %227 = call i32* @__errno_location() #10
  %228 = load i32, i32* %227, align 4
  %229 = call i8* @strerror(i32 %228) #9
  %230 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %225, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.99, i64 0, i64 0), i8* %226, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %229)
  %231 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %232 = icmp ne %struct._IO_FILE* %231, null
  br i1 %232, label %233, label %236

233:                                              ; preds = %224
  %234 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %235 = call i32 @fclose(%struct._IO_FILE* %234)
  br label %236

236:                                              ; preds = %233, %224
  call void @setExit(i32 1)
  br label %264

237:                                              ; preds = %221
  br label %239

238:                                              ; preds = %153
  call void @panic(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.111, i64 0, i64 0)) #12
  unreachable

239:                                              ; preds = %237, %202, %170
  %240 = load i32, i32* @verbosity, align 4
  %241 = icmp sge i32 %240, 1
  br i1 %241, label %242, label %247

242:                                              ; preds = %239
  %243 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %244 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %243, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112, i64 0, i64 0), i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  call void @pad(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %245 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %246 = call i32 @fflush(%struct._IO_FILE* %245)
  br label %247

247:                                              ; preds = %242, %239
  %248 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  store %struct._IO_FILE* %248, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 1, i8* @deleteOutputOnInterrupt, align 1
  %249 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %250 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  call void @compressStream(%struct._IO_FILE* %249, %struct._IO_FILE* %250)
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %251 = load i32, i32* @srcMode, align 4
  %252 = icmp eq i32 %251, 3
  br i1 %252, label %253, label %263

253:                                              ; preds = %247
  call void @applySavedMetaInfoToOutputFile(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %254 = load i8, i8* @keepInputFiles, align 1
  %255 = icmp ne i8 %254, 0
  br i1 %255, label %262, label %256

256:                                              ; preds = %253
  %257 = call i32 @remove(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0)) #9
  store i32 %257, i32* %8, align 4
  %258 = load i32, i32* %8, align 4
  %259 = icmp ne i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %256
  call void @ioError() #12
  unreachable

261:                                              ; preds = %256
  br label %262

262:                                              ; preds = %261, %253
  br label %263

263:                                              ; preds = %262, %247
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  br label %264

264:                                              ; preds = %263, %236, %220, %195, %191, %162, %140, %126, %113, %91, %74, %45, %38
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @uncompress(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca %struct.stat, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %12 = load i8*, i8** %2, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %1
  %15 = load i32, i32* @srcMode, align 4
  %16 = icmp ne i32 %15, 1
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  call void @panic(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.120, i64 0, i64 0)) #12
  unreachable

18:                                               ; preds = %14, %1
  store i8 0, i8* %8, align 1
  %19 = load i32, i32* @srcMode, align 4
  switch i32 %19, label %47 [
    i32 1, label %20
    i32 3, label %21
    i32 2, label %45
  ]

20:                                               ; preds = %18
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.96, i64 0, i64 0))
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.97, i64 0, i64 0))
  br label %47

21:                                               ; preds = %18
  %22 = load i8*, i8** %2, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %22)
  %23 = load i8*, i8** %2, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* %23)
  store i32 0, i32* %6, align 4
  br label %24

24:                                               ; preds = %40, %21
  %25 = load i32, i32* %6, align 4
  %26 = icmp slt i32 %25, 4
  br i1 %26, label %27, label %43

27:                                               ; preds = %24
  %28 = load i32, i32* %6, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [4 x i8*], [4 x i8*]* @zSuffix, i64 0, i64 %29
  %31 = load i8*, i8** %30, align 8
  %32 = load i32, i32* %6, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [4 x i8*], [4 x i8*]* @unzSuffix, i64 0, i64 %33
  %35 = load i8*, i8** %34, align 8
  %36 = call zeroext i8 @mapSuffix(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* %31, i8* %35)
  %37 = icmp ne i8 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %27
  br label %48

39:                                               ; preds = %27
  br label %40

40:                                               ; preds = %39
  %41 = load i32, i32* %6, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %6, align 4
  br label %24

43:                                               ; preds = %24
  store i8 1, i8* %8, align 1
  %44 = call i8* @strcat(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.121, i64 0, i64 0)) #9
  br label %47

45:                                               ; preds = %18
  %46 = load i8*, i8** %2, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %46)
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.97, i64 0, i64 0))
  br label %47

47:                                               ; preds = %18, %45, %43, %20
  br label %48

48:                                               ; preds = %47, %38
  %49 = load i32, i32* @srcMode, align 4
  %50 = icmp ne i32 %49, 1
  br i1 %50, label %51, label %63

51:                                               ; preds = %48
  %52 = call zeroext i8 @containsDubiousChars(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %53 = zext i8 %52 to i32
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %63

55:                                               ; preds = %51
  %56 = load i8, i8* @noisy, align 1
  %57 = icmp ne i8 %56, 0
  br i1 %57, label %58, label %62

58:                                               ; preds = %55
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %60 = load i8*, i8** @progName, align 8
  %61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.98, i64 0, i64 0), i8* %60, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %62

62:                                               ; preds = %58, %55
  call void @setExit(i32 1)
  br label %294

63:                                               ; preds = %51, %48
  %64 = load i32, i32* @srcMode, align 4
  %65 = icmp ne i32 %64, 1
  br i1 %65, label %66, label %76

66:                                               ; preds = %63
  %67 = call zeroext i8 @fileExists(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %68 = icmp ne i8 %67, 0
  br i1 %68, label %76, label %69

69:                                               ; preds = %66
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %71 = load i8*, i8** @progName, align 8
  %72 = call i32* @__errno_location() #10
  %73 = load i32, i32* %72, align 4
  %74 = call i8* @strerror(i32 %73) #9
  %75 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %70, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.99, i64 0, i64 0), i8* %71, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %74)
  call void @setExit(i32 1)
  br label %294

76:                                               ; preds = %66, %63
  %77 = load i32, i32* @srcMode, align 4
  %78 = icmp eq i32 %77, 3
  br i1 %78, label %82, label %79

79:                                               ; preds = %76
  %80 = load i32, i32* @srcMode, align 4
  %81 = icmp eq i32 %80, 2
  br i1 %81, label %82, label %93

82:                                               ; preds = %79, %76
  %83 = call i32 @stat(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), %struct.stat* %9) #9
  %84 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 3
  %85 = load i32, i32* %84, align 8
  %86 = and i32 %85, 61440
  %87 = icmp eq i32 %86, 16384
  br i1 %87, label %88, label %92

88:                                               ; preds = %82
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %90 = load i8*, i8** @progName, align 8
  %91 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.101, i64 0, i64 0), i8* %90, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  call void @setExit(i32 1)
  br label %294

92:                                               ; preds = %82
  br label %93

93:                                               ; preds = %92, %79
  %94 = load i32, i32* @srcMode, align 4
  %95 = icmp eq i32 %94, 3
  br i1 %95, label %96, label %111

96:                                               ; preds = %93
  %97 = load i8, i8* @forceOverwrite, align 1
  %98 = icmp ne i8 %97, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %96
  %100 = call zeroext i8 @notAStandardFile(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %101 = zext i8 %100 to i32
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %111

103:                                              ; preds = %99
  %104 = load i8, i8* @noisy, align 1
  %105 = icmp ne i8 %104, 0
  br i1 %105, label %106, label %110

106:                                              ; preds = %103
  %107 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %108 = load i8*, i8** @progName, align 8
  %109 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %107, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.102, i64 0, i64 0), i8* %108, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %110

110:                                              ; preds = %106, %103
  call void @setExit(i32 1)
  br label %294

111:                                              ; preds = %99, %96, %93
  %112 = load i8, i8* %8, align 1
  %113 = icmp ne i8 %112, 0
  br i1 %113, label %114, label %122

114:                                              ; preds = %111
  %115 = load i8, i8* @noisy, align 1
  %116 = icmp ne i8 %115, 0
  br i1 %116, label %117, label %121

117:                                              ; preds = %114
  %118 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %119 = load i8*, i8** @progName, align 8
  %120 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %118, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.122, i64 0, i64 0), i8* %119, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  br label %121

121:                                              ; preds = %117, %114
  br label %122

122:                                              ; preds = %121, %111
  %123 = load i32, i32* @srcMode, align 4
  %124 = icmp eq i32 %123, 3
  br i1 %124, label %125, label %139

125:                                              ; preds = %122
  %126 = call zeroext i8 @fileExists(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  %127 = zext i8 %126 to i32
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %129, label %139

129:                                              ; preds = %125
  %130 = load i8, i8* @forceOverwrite, align 1
  %131 = icmp ne i8 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %129
  %133 = call i32 @remove(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0)) #9
  br label %138

134:                                              ; preds = %129
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %136 = load i8*, i8** @progName, align 8
  %137 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %135, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.103, i64 0, i64 0), i8* %136, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  call void @setExit(i32 1)
  br label %294

138:                                              ; preds = %132
  br label %139

139:                                              ; preds = %138, %125, %122
  %140 = load i32, i32* @srcMode, align 4
  %141 = icmp eq i32 %140, 3
  br i1 %141, label %142, label %157

142:                                              ; preds = %139
  %143 = load i8, i8* @forceOverwrite, align 1
  %144 = icmp ne i8 %143, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %142
  %146 = call i32 @countHardLinks(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  store i32 %146, i32* %5, align 4
  %147 = icmp sgt i32 %146, 0
  br i1 %147, label %148, label %157

148:                                              ; preds = %145
  %149 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %150 = load i8*, i8** @progName, align 8
  %151 = load i32, i32* %5, align 4
  %152 = load i32, i32* %5, align 4
  %153 = icmp sgt i32 %152, 1
  %154 = zext i1 %153 to i64
  %155 = select i1 %153, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.16, i64 0, i64 0)
  %156 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %149, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.104, i64 0, i64 0), i8* %150, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i32 %151, i8* %155)
  call void @setExit(i32 1)
  br label %294

157:                                              ; preds = %145, %142, %139
  %158 = load i32, i32* @srcMode, align 4
  %159 = icmp eq i32 %158, 3
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @saveInputFileMetaInfo(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %161

161:                                              ; preds = %160, %157
  %162 = load i32, i32* @srcMode, align 4
  switch i32 %162, label %233 [
    i32 1, label %163
    i32 2, label %179
    i32 3, label %198
  ]

163:                                              ; preds = %161
  %164 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  store %struct._IO_FILE* %164, %struct._IO_FILE** %3, align 8
  %165 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %165, %struct._IO_FILE** %4, align 8
  %166 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %167 = call i32 @fileno(%struct._IO_FILE* %166) #9
  %168 = call i32 @isatty(i32 %167) #9
  %169 = icmp ne i32 %168, 0
  br i1 %169, label %170, label %178

170:                                              ; preds = %163
  %171 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %172 = load i8*, i8** @progName, align 8
  %173 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %171, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.123, i64 0, i64 0), i8* %172)
  %174 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %175 = load i8*, i8** @progName, align 8
  %176 = load i8*, i8** @progName, align 8
  %177 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %174, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.107, i64 0, i64 0), i8* %175, i8* %176)
  call void @setExit(i32 1)
  br label %294

178:                                              ; preds = %163
  br label %234

179:                                              ; preds = %161
  %180 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i64 0, i64 0))
  store %struct._IO_FILE* %180, %struct._IO_FILE** %3, align 8
  %181 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %181, %struct._IO_FILE** %4, align 8
  %182 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %183 = icmp eq %struct._IO_FILE* %182, null
  br i1 %183, label %184, label %197

184:                                              ; preds = %179
  %185 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %186 = load i8*, i8** @progName, align 8
  %187 = call i32* @__errno_location() #10
  %188 = load i32, i32* %187, align 4
  %189 = call i8* @strerror(i32 %188) #9
  %190 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %185, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.124, i64 0, i64 0), i8* %186, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %189)
  %191 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %192 = icmp ne %struct._IO_FILE* %191, null
  br i1 %192, label %193, label %196

193:                                              ; preds = %184
  %194 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %195 = call i32 @fclose(%struct._IO_FILE* %194)
  br label %196

196:                                              ; preds = %193, %184
  call void @setExit(i32 1)
  br label %294

197:                                              ; preds = %179
  br label %234

198:                                              ; preds = %161
  %199 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i64 0, i64 0))
  store %struct._IO_FILE* %199, %struct._IO_FILE** %3, align 8
  %200 = call %struct._IO_FILE* @fopen_output_safely(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.109, i64 0, i64 0))
  store %struct._IO_FILE* %200, %struct._IO_FILE** %4, align 8
  %201 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %202 = icmp eq %struct._IO_FILE* %201, null
  br i1 %202, label %203, label %216

203:                                              ; preds = %198
  %204 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %205 = load i8*, i8** @progName, align 8
  %206 = call i32* @__errno_location() #10
  %207 = load i32, i32* %206, align 4
  %208 = call i8* @strerror(i32 %207) #9
  %209 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %204, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.110, i64 0, i64 0), i8* %205, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* %208)
  %210 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %211 = icmp ne %struct._IO_FILE* %210, null
  br i1 %211, label %212, label %215

212:                                              ; preds = %203
  %213 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %214 = call i32 @fclose(%struct._IO_FILE* %213)
  br label %215

215:                                              ; preds = %212, %203
  call void @setExit(i32 1)
  br label %294

216:                                              ; preds = %198
  %217 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %218 = icmp eq %struct._IO_FILE* %217, null
  br i1 %218, label %219, label %232

219:                                              ; preds = %216
  %220 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %221 = load i8*, i8** @progName, align 8
  %222 = call i32* @__errno_location() #10
  %223 = load i32, i32* %222, align 4
  %224 = call i8* @strerror(i32 %223) #9
  %225 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %220, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.99, i64 0, i64 0), i8* %221, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %224)
  %226 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %227 = icmp ne %struct._IO_FILE* %226, null
  br i1 %227, label %228, label %231

228:                                              ; preds = %219
  %229 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %230 = call i32 @fclose(%struct._IO_FILE* %229)
  br label %231

231:                                              ; preds = %228, %219
  call void @setExit(i32 1)
  br label %294

232:                                              ; preds = %216
  br label %234

233:                                              ; preds = %161
  call void @panic(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.125, i64 0, i64 0)) #12
  unreachable

234:                                              ; preds = %232, %197, %178
  %235 = load i32, i32* @verbosity, align 4
  %236 = icmp sge i32 %235, 1
  br i1 %236, label %237, label %242

237:                                              ; preds = %234
  %238 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %239 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %238, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112, i64 0, i64 0), i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  call void @pad(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %240 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %241 = call i32 @fflush(%struct._IO_FILE* %240)
  br label %242

242:                                              ; preds = %237, %234
  %243 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  store %struct._IO_FILE* %243, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 1, i8* @deleteOutputOnInterrupt, align 1
  %244 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %245 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %246 = call zeroext i8 @uncompressStream(%struct._IO_FILE* %244, %struct._IO_FILE* %245)
  store i8 %246, i8* %7, align 1
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %247 = load i8, i8* %7, align 1
  %248 = icmp ne i8 %247, 0
  br i1 %248, label %249, label %263

249:                                              ; preds = %242
  %250 = load i32, i32* @srcMode, align 4
  %251 = icmp eq i32 %250, 3
  br i1 %251, label %252, label %262

252:                                              ; preds = %249
  call void @applySavedMetaInfoToOutputFile(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %253 = load i8, i8* @keepInputFiles, align 1
  %254 = icmp ne i8 %253, 0
  br i1 %254, label %261, label %255

255:                                              ; preds = %252
  %256 = call i32 @remove(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0)) #9
  store i32 %256, i32* %10, align 4
  %257 = load i32, i32* %10, align 4
  %258 = icmp ne i32 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %255
  call void @ioError() #12
  unreachable

260:                                              ; preds = %255
  br label %261

261:                                              ; preds = %260, %252
  br label %262

262:                                              ; preds = %261, %249
  br label %273

263:                                              ; preds = %242
  store i8 1, i8* @unzFailsExist, align 1
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %264 = load i32, i32* @srcMode, align 4
  %265 = icmp eq i32 %264, 3
  br i1 %265, label %266, label %272

266:                                              ; preds = %263
  %267 = call i32 @remove(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0)) #9
  store i32 %267, i32* %11, align 4
  %268 = load i32, i32* %11, align 4
  %269 = icmp ne i32 %268, 0
  br i1 %269, label %270, label %271

270:                                              ; preds = %266
  call void @ioError() #12
  unreachable

271:                                              ; preds = %266
  br label %272

272:                                              ; preds = %271, %263
  br label %273

273:                                              ; preds = %272, %262
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %274 = load i8, i8* %7, align 1
  %275 = icmp ne i8 %274, 0
  br i1 %275, label %276, label %283

276:                                              ; preds = %273
  %277 = load i32, i32* @verbosity, align 4
  %278 = icmp sge i32 %277, 1
  br i1 %278, label %279, label %282

279:                                              ; preds = %276
  %280 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %281 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %280, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.126, i64 0, i64 0))
  br label %282

282:                                              ; preds = %279, %276
  br label %294

283:                                              ; preds = %273
  call void @setExit(i32 2)
  %284 = load i32, i32* @verbosity, align 4
  %285 = icmp sge i32 %284, 1
  br i1 %285, label %286, label %289

286:                                              ; preds = %283
  %287 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %288 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %287, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.127, i64 0, i64 0))
  br label %293

289:                                              ; preds = %283
  %290 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %291 = load i8*, i8** @progName, align 8
  %292 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %290, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.128, i64 0, i64 0), i8* %291, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %293

293:                                              ; preds = %289, %286
  br label %294

294:                                              ; preds = %62, %69, %88, %110, %134, %148, %170, %196, %215, %231, %293, %282
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @setExit(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = load i32, i32* @exitValue, align 4
  %5 = icmp sgt i32 %3, %4
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = load i32, i32* %2, align 4
  store i32 %7, i32* @exitValue, align 4
  br label %8

8:                                                ; preds = %6, %1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @testf(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8, align 1
  %5 = alloca %struct.stat, align 8
  store i8* %0, i8** %2, align 8
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %6 = load i8*, i8** %2, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = load i32, i32* @srcMode, align 4
  %10 = icmp ne i32 %9, 1
  br i1 %10, label %11, label %12

11:                                               ; preds = %8
  call void @panic(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.135, i64 0, i64 0)) #12
  unreachable

12:                                               ; preds = %8, %1
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0))
  %13 = load i32, i32* @srcMode, align 4
  switch i32 %13, label %19 [
    i32 1, label %14
    i32 3, label %15
    i32 2, label %17
  ]

14:                                               ; preds = %12
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.96, i64 0, i64 0))
  br label %19

15:                                               ; preds = %12
  %16 = load i8*, i8** %2, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %16)
  br label %19

17:                                               ; preds = %12
  %18 = load i8*, i8** %2, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %18)
  br label %19

19:                                               ; preds = %12, %17, %15, %14
  %20 = load i32, i32* @srcMode, align 4
  %21 = icmp ne i32 %20, 1
  br i1 %21, label %22, label %34

22:                                               ; preds = %19
  %23 = call zeroext i8 @containsDubiousChars(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %24 = zext i8 %23 to i32
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %34

26:                                               ; preds = %22
  %27 = load i8, i8* @noisy, align 1
  %28 = icmp ne i8 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %26
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %31 = load i8*, i8** @progName, align 8
  %32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.98, i64 0, i64 0), i8* %31, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %33

33:                                               ; preds = %29, %26
  call void @setExit(i32 1)
  br label %115

34:                                               ; preds = %22, %19
  %35 = load i32, i32* @srcMode, align 4
  %36 = icmp ne i32 %35, 1
  br i1 %36, label %37, label %47

37:                                               ; preds = %34
  %38 = call zeroext i8 @fileExists(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %39 = icmp ne i8 %38, 0
  br i1 %39, label %47, label %40

40:                                               ; preds = %37
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %42 = load i8*, i8** @progName, align 8
  %43 = call i32* @__errno_location() #10
  %44 = load i32, i32* %43, align 4
  %45 = call i8* @strerror(i32 %44) #9
  %46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.136, i64 0, i64 0), i8* %42, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %45)
  call void @setExit(i32 1)
  br label %115

47:                                               ; preds = %37, %34
  %48 = load i32, i32* @srcMode, align 4
  %49 = icmp ne i32 %48, 1
  br i1 %49, label %50, label %61

50:                                               ; preds = %47
  %51 = call i32 @stat(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), %struct.stat* %5) #9
  %52 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 61440
  %55 = icmp eq i32 %54, 16384
  br i1 %55, label %56, label %60

56:                                               ; preds = %50
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %58 = load i8*, i8** @progName, align 8
  %59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.101, i64 0, i64 0), i8* %58, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  call void @setExit(i32 1)
  br label %115

60:                                               ; preds = %50
  br label %61

61:                                               ; preds = %60, %47
  %62 = load i32, i32* @srcMode, align 4
  switch i32 %62, label %90 [
    i32 1, label %63
    i32 2, label %78
    i32 3, label %78
  ]

63:                                               ; preds = %61
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %65 = call i32 @fileno(%struct._IO_FILE* %64) #9
  %66 = call i32 @isatty(i32 %65) #9
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %68, label %76

68:                                               ; preds = %63
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %70 = load i8*, i8** @progName, align 8
  %71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %69, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.123, i64 0, i64 0), i8* %70)
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %73 = load i8*, i8** @progName, align 8
  %74 = load i8*, i8** @progName, align 8
  %75 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %72, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.107, i64 0, i64 0), i8* %73, i8* %74)
  call void @setExit(i32 1)
  br label %115

76:                                               ; preds = %63
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  store %struct._IO_FILE* %77, %struct._IO_FILE** %3, align 8
  br label %91

78:                                               ; preds = %61, %61
  %79 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i64 0, i64 0))
  store %struct._IO_FILE* %79, %struct._IO_FILE** %3, align 8
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %81 = icmp eq %struct._IO_FILE* %80, null
  br i1 %81, label %82, label %89

82:                                               ; preds = %78
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %84 = load i8*, i8** @progName, align 8
  %85 = call i32* @__errno_location() #10
  %86 = load i32, i32* %85, align 4
  %87 = call i8* @strerror(i32 %86) #9
  %88 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %83, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.124, i64 0, i64 0), i8* %84, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %87)
  call void @setExit(i32 1)
  br label %115

89:                                               ; preds = %78
  br label %91

90:                                               ; preds = %61
  call void @panic(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.137, i64 0, i64 0)) #12
  unreachable

91:                                               ; preds = %89, %76
  %92 = load i32, i32* @verbosity, align 4
  %93 = icmp sge i32 %92, 1
  br i1 %93, label %94, label %99

94:                                               ; preds = %91
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %96 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %95, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112, i64 0, i64 0), i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  call void @pad(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  %97 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %98 = call i32 @fflush(%struct._IO_FILE* %97)
  br label %99

99:                                               ; preds = %94, %91
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %101 = call zeroext i8 @testStream(%struct._IO_FILE* %100)
  store i8 %101, i8* %4, align 1
  %102 = load i8, i8* %4, align 1
  %103 = zext i8 %102 to i32
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %105, label %111

105:                                              ; preds = %99
  %106 = load i32, i32* @verbosity, align 4
  %107 = icmp sge i32 %106, 1
  br i1 %107, label %108, label %111

108:                                              ; preds = %105
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %110 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %109, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.138, i64 0, i64 0))
  br label %111

111:                                              ; preds = %108, %105, %99
  %112 = load i8, i8* %4, align 1
  %113 = icmp ne i8 %112, 0
  br i1 %113, label %115, label %114

114:                                              ; preds = %111
  store i8 1, i8* @testFailsExist, align 1
  br label %115

115:                                              ; preds = %33, %40, %56, %68, %82, %114, %111
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fallbackQSort3(i32* %0, i32* %1, i32 %2, i32 %3) #0 {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca [100 x i32], align 16
  %22 = alloca [100 x i32], align 16
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  store i32 0, i32* %19, align 4
  store i32 0, i32* %15, align 4
  %34 = load i32, i32* %7, align 4
  %35 = load i32, i32* %15, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [100 x i32], [100 x i32]* %21, i64 0, i64 %36
  store i32 %34, i32* %37, align 4
  %38 = load i32, i32* %8, align 4
  %39 = load i32, i32* %15, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [100 x i32], [100 x i32]* %22, i64 0, i64 %40
  store i32 %38, i32* %41, align 4
  %42 = load i32, i32* %15, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %15, align 4
  br label %44

44:                                               ; preds = %423, %255, %66, %4
  %45 = load i32, i32* %15, align 4
  %46 = icmp sgt i32 %45, 0
  br i1 %46, label %47, label %424

47:                                               ; preds = %44
  %48 = load i32, i32* %15, align 4
  %49 = icmp slt i32 %48, 100
  br i1 %49, label %51, label %50

50:                                               ; preds = %47
  call void @BZ2_bz__AssertH__fail(i32 1004)
  br label %51

51:                                               ; preds = %50, %47
  %52 = load i32, i32* %15, align 4
  %53 = add nsw i32 %52, -1
  store i32 %53, i32* %15, align 4
  %54 = load i32, i32* %15, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [100 x i32], [100 x i32]* %21, i64 0, i64 %55
  %57 = load i32, i32* %56, align 4
  store i32 %57, i32* %16, align 4
  %58 = load i32, i32* %15, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [100 x i32], [100 x i32]* %22, i64 0, i64 %59
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %17, align 4
  %62 = load i32, i32* %17, align 4
  %63 = load i32, i32* %16, align 4
  %64 = sub nsw i32 %62, %63
  %65 = icmp slt i32 %64, 10
  br i1 %65, label %66, label %71

66:                                               ; preds = %51
  %67 = load i32*, i32** %5, align 8
  %68 = load i32*, i32** %6, align 8
  %69 = load i32, i32* %16, align 4
  %70 = load i32, i32* %17, align 4
  call void @fallbackSimpleSort(i32* %67, i32* %68, i32 %69, i32 %70)
  br label %44

71:                                               ; preds = %51
  %72 = load i32, i32* %19, align 4
  %73 = mul i32 %72, 7621
  %74 = add i32 %73, 1
  %75 = urem i32 %74, 32768
  store i32 %75, i32* %19, align 4
  %76 = load i32, i32* %19, align 4
  %77 = urem i32 %76, 3
  store i32 %77, i32* %20, align 4
  %78 = load i32, i32* %20, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %90

80:                                               ; preds = %71
  %81 = load i32*, i32** %6, align 8
  %82 = load i32*, i32** %5, align 8
  %83 = load i32, i32* %16, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i32, i32* %82, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i32, i32* %81, i64 %87
  %89 = load i32, i32* %88, align 4
  store i32 %89, i32* %18, align 4
  br label %117

90:                                               ; preds = %71
  %91 = load i32, i32* %20, align 4
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %106

93:                                               ; preds = %90
  %94 = load i32*, i32** %6, align 8
  %95 = load i32*, i32** %5, align 8
  %96 = load i32, i32* %16, align 4
  %97 = load i32, i32* %17, align 4
  %98 = add nsw i32 %96, %97
  %99 = ashr i32 %98, 1
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i32, i32* %95, i64 %100
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %94, i64 %103
  %105 = load i32, i32* %104, align 4
  store i32 %105, i32* %18, align 4
  br label %116

106:                                              ; preds = %90
  %107 = load i32*, i32** %6, align 8
  %108 = load i32*, i32** %5, align 8
  %109 = load i32, i32* %17, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i32, i32* %108, i64 %110
  %112 = load i32, i32* %111, align 4
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds i32, i32* %107, i64 %113
  %115 = load i32, i32* %114, align 4
  store i32 %115, i32* %18, align 4
  br label %116

116:                                              ; preds = %106, %93
  br label %117

117:                                              ; preds = %116, %80
  %118 = load i32, i32* %16, align 4
  store i32 %118, i32* %11, align 4
  store i32 %118, i32* %9, align 4
  %119 = load i32, i32* %17, align 4
  store i32 %119, i32* %12, align 4
  store i32 %119, i32* %10, align 4
  br label %120

120:                                              ; preds = %117, %227
  br label %121

121:                                              ; preds = %120, %140, %168
  %122 = load i32, i32* %9, align 4
  %123 = load i32, i32* %10, align 4
  %124 = icmp sgt i32 %122, %123
  br i1 %124, label %125, label %126

125:                                              ; preds = %121
  br label %171

126:                                              ; preds = %121
  %127 = load i32*, i32** %6, align 8
  %128 = load i32*, i32** %5, align 8
  %129 = load i32, i32* %9, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i32, i32* %128, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds i32, i32* %127, i64 %133
  %135 = load i32, i32* %134, align 4
  %136 = load i32, i32* %18, align 4
  %137 = sub nsw i32 %135, %136
  store i32 %137, i32* %13, align 4
  %138 = load i32, i32* %13, align 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %164

140:                                              ; preds = %126
  %141 = load i32*, i32** %5, align 8
  %142 = load i32, i32* %9, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds i32, i32* %141, i64 %143
  %145 = load i32, i32* %144, align 4
  store i32 %145, i32* %23, align 4
  %146 = load i32*, i32** %5, align 8
  %147 = load i32, i32* %11, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i32, i32* %146, i64 %148
  %150 = load i32, i32* %149, align 4
  %151 = load i32*, i32** %5, align 8
  %152 = load i32, i32* %9, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i32, i32* %151, i64 %153
  store i32 %150, i32* %154, align 4
  %155 = load i32, i32* %23, align 4
  %156 = load i32*, i32** %5, align 8
  %157 = load i32, i32* %11, align 4
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds i32, i32* %156, i64 %158
  store i32 %155, i32* %159, align 4
  %160 = load i32, i32* %11, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %11, align 4
  %162 = load i32, i32* %9, align 4
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %9, align 4
  br label %121

164:                                              ; preds = %126
  %165 = load i32, i32* %13, align 4
  %166 = icmp sgt i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  br label %171

168:                                              ; preds = %164
  %169 = load i32, i32* %9, align 4
  %170 = add nsw i32 %169, 1
  store i32 %170, i32* %9, align 4
  br label %121

171:                                              ; preds = %167, %125
  br label %172

172:                                              ; preds = %171, %191, %219
  %173 = load i32, i32* %9, align 4
  %174 = load i32, i32* %10, align 4
  %175 = icmp sgt i32 %173, %174
  br i1 %175, label %176, label %177

176:                                              ; preds = %172
  br label %222

177:                                              ; preds = %172
  %178 = load i32*, i32** %6, align 8
  %179 = load i32*, i32** %5, align 8
  %180 = load i32, i32* %10, align 4
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds i32, i32* %179, i64 %181
  %183 = load i32, i32* %182, align 4
  %184 = zext i32 %183 to i64
  %185 = getelementptr inbounds i32, i32* %178, i64 %184
  %186 = load i32, i32* %185, align 4
  %187 = load i32, i32* %18, align 4
  %188 = sub nsw i32 %186, %187
  store i32 %188, i32* %13, align 4
  %189 = load i32, i32* %13, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %215

191:                                              ; preds = %177
  %192 = load i32*, i32** %5, align 8
  %193 = load i32, i32* %10, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds i32, i32* %192, i64 %194
  %196 = load i32, i32* %195, align 4
  store i32 %196, i32* %24, align 4
  %197 = load i32*, i32** %5, align 8
  %198 = load i32, i32* %12, align 4
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i32, i32* %197, i64 %199
  %201 = load i32, i32* %200, align 4
  %202 = load i32*, i32** %5, align 8
  %203 = load i32, i32* %10, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds i32, i32* %202, i64 %204
  store i32 %201, i32* %205, align 4
  %206 = load i32, i32* %24, align 4
  %207 = load i32*, i32** %5, align 8
  %208 = load i32, i32* %12, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds i32, i32* %207, i64 %209
  store i32 %206, i32* %210, align 4
  %211 = load i32, i32* %12, align 4
  %212 = add nsw i32 %211, -1
  store i32 %212, i32* %12, align 4
  %213 = load i32, i32* %10, align 4
  %214 = add nsw i32 %213, -1
  store i32 %214, i32* %10, align 4
  br label %172

215:                                              ; preds = %177
  %216 = load i32, i32* %13, align 4
  %217 = icmp slt i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  br label %222

219:                                              ; preds = %215
  %220 = load i32, i32* %10, align 4
  %221 = add nsw i32 %220, -1
  store i32 %221, i32* %10, align 4
  br label %172

222:                                              ; preds = %218, %176
  %223 = load i32, i32* %9, align 4
  %224 = load i32, i32* %10, align 4
  %225 = icmp sgt i32 %223, %224
  br i1 %225, label %226, label %227

226:                                              ; preds = %222
  br label %251

227:                                              ; preds = %222
  %228 = load i32*, i32** %5, align 8
  %229 = load i32, i32* %9, align 4
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds i32, i32* %228, i64 %230
  %232 = load i32, i32* %231, align 4
  store i32 %232, i32* %25, align 4
  %233 = load i32*, i32** %5, align 8
  %234 = load i32, i32* %10, align 4
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds i32, i32* %233, i64 %235
  %237 = load i32, i32* %236, align 4
  %238 = load i32*, i32** %5, align 8
  %239 = load i32, i32* %9, align 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds i32, i32* %238, i64 %240
  store i32 %237, i32* %241, align 4
  %242 = load i32, i32* %25, align 4
  %243 = load i32*, i32** %5, align 8
  %244 = load i32, i32* %10, align 4
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds i32, i32* %243, i64 %245
  store i32 %242, i32* %246, align 4
  %247 = load i32, i32* %9, align 4
  %248 = add nsw i32 %247, 1
  store i32 %248, i32* %9, align 4
  %249 = load i32, i32* %10, align 4
  %250 = add nsw i32 %249, -1
  store i32 %250, i32* %10, align 4
  br label %120

251:                                              ; preds = %226
  %252 = load i32, i32* %12, align 4
  %253 = load i32, i32* %11, align 4
  %254 = icmp slt i32 %252, %253
  br i1 %254, label %255, label %256

255:                                              ; preds = %251
  br label %44

256:                                              ; preds = %251
  %257 = load i32, i32* %11, align 4
  %258 = load i32, i32* %16, align 4
  %259 = sub nsw i32 %257, %258
  %260 = load i32, i32* %9, align 4
  %261 = load i32, i32* %11, align 4
  %262 = sub nsw i32 %260, %261
  %263 = icmp slt i32 %259, %262
  br i1 %263, label %264, label %268

264:                                              ; preds = %256
  %265 = load i32, i32* %11, align 4
  %266 = load i32, i32* %16, align 4
  %267 = sub nsw i32 %265, %266
  br label %272

268:                                              ; preds = %256
  %269 = load i32, i32* %9, align 4
  %270 = load i32, i32* %11, align 4
  %271 = sub nsw i32 %269, %270
  br label %272

272:                                              ; preds = %268, %264
  %273 = phi i32 [ %267, %264 ], [ %271, %268 ]
  store i32 %273, i32* %13, align 4
  %274 = load i32, i32* %16, align 4
  store i32 %274, i32* %26, align 4
  %275 = load i32, i32* %9, align 4
  %276 = load i32, i32* %13, align 4
  %277 = sub nsw i32 %275, %276
  store i32 %277, i32* %27, align 4
  %278 = load i32, i32* %13, align 4
  store i32 %278, i32* %28, align 4
  br label %279

279:                                              ; preds = %282, %272
  %280 = load i32, i32* %28, align 4
  %281 = icmp sgt i32 %280, 0
  br i1 %281, label %282, label %308

282:                                              ; preds = %279
  %283 = load i32*, i32** %5, align 8
  %284 = load i32, i32* %26, align 4
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds i32, i32* %283, i64 %285
  %287 = load i32, i32* %286, align 4
  store i32 %287, i32* %29, align 4
  %288 = load i32*, i32** %5, align 8
  %289 = load i32, i32* %27, align 4
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds i32, i32* %288, i64 %290
  %292 = load i32, i32* %291, align 4
  %293 = load i32*, i32** %5, align 8
  %294 = load i32, i32* %26, align 4
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds i32, i32* %293, i64 %295
  store i32 %292, i32* %296, align 4
  %297 = load i32, i32* %29, align 4
  %298 = load i32*, i32** %5, align 8
  %299 = load i32, i32* %27, align 4
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds i32, i32* %298, i64 %300
  store i32 %297, i32* %301, align 4
  %302 = load i32, i32* %26, align 4
  %303 = add nsw i32 %302, 1
  store i32 %303, i32* %26, align 4
  %304 = load i32, i32* %27, align 4
  %305 = add nsw i32 %304, 1
  store i32 %305, i32* %27, align 4
  %306 = load i32, i32* %28, align 4
  %307 = add nsw i32 %306, -1
  store i32 %307, i32* %28, align 4
  br label %279

308:                                              ; preds = %279
  %309 = load i32, i32* %17, align 4
  %310 = load i32, i32* %12, align 4
  %311 = sub nsw i32 %309, %310
  %312 = load i32, i32* %12, align 4
  %313 = load i32, i32* %10, align 4
  %314 = sub nsw i32 %312, %313
  %315 = icmp slt i32 %311, %314
  br i1 %315, label %316, label %320

316:                                              ; preds = %308
  %317 = load i32, i32* %17, align 4
  %318 = load i32, i32* %12, align 4
  %319 = sub nsw i32 %317, %318
  br label %324

320:                                              ; preds = %308
  %321 = load i32, i32* %12, align 4
  %322 = load i32, i32* %10, align 4
  %323 = sub nsw i32 %321, %322
  br label %324

324:                                              ; preds = %320, %316
  %325 = phi i32 [ %319, %316 ], [ %323, %320 ]
  store i32 %325, i32* %14, align 4
  %326 = load i32, i32* %9, align 4
  store i32 %326, i32* %30, align 4
  %327 = load i32, i32* %17, align 4
  %328 = load i32, i32* %14, align 4
  %329 = sub nsw i32 %327, %328
  %330 = add nsw i32 %329, 1
  store i32 %330, i32* %31, align 4
  %331 = load i32, i32* %14, align 4
  store i32 %331, i32* %32, align 4
  br label %332

332:                                              ; preds = %335, %324
  %333 = load i32, i32* %32, align 4
  %334 = icmp sgt i32 %333, 0
  br i1 %334, label %335, label %361

335:                                              ; preds = %332
  %336 = load i32*, i32** %5, align 8
  %337 = load i32, i32* %30, align 4
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds i32, i32* %336, i64 %338
  %340 = load i32, i32* %339, align 4
  store i32 %340, i32* %33, align 4
  %341 = load i32*, i32** %5, align 8
  %342 = load i32, i32* %31, align 4
  %343 = sext i32 %342 to i64
  %344 = getelementptr inbounds i32, i32* %341, i64 %343
  %345 = load i32, i32* %344, align 4
  %346 = load i32*, i32** %5, align 8
  %347 = load i32, i32* %30, align 4
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds i32, i32* %346, i64 %348
  store i32 %345, i32* %349, align 4
  %350 = load i32, i32* %33, align 4
  %351 = load i32*, i32** %5, align 8
  %352 = load i32, i32* %31, align 4
  %353 = sext i32 %352 to i64
  %354 = getelementptr inbounds i32, i32* %351, i64 %353
  store i32 %350, i32* %354, align 4
  %355 = load i32, i32* %30, align 4
  %356 = add nsw i32 %355, 1
  store i32 %356, i32* %30, align 4
  %357 = load i32, i32* %31, align 4
  %358 = add nsw i32 %357, 1
  store i32 %358, i32* %31, align 4
  %359 = load i32, i32* %32, align 4
  %360 = add nsw i32 %359, -1
  store i32 %360, i32* %32, align 4
  br label %332

361:                                              ; preds = %332
  %362 = load i32, i32* %16, align 4
  %363 = load i32, i32* %9, align 4
  %364 = add nsw i32 %362, %363
  %365 = load i32, i32* %11, align 4
  %366 = sub nsw i32 %364, %365
  %367 = sub nsw i32 %366, 1
  store i32 %367, i32* %13, align 4
  %368 = load i32, i32* %17, align 4
  %369 = load i32, i32* %12, align 4
  %370 = load i32, i32* %10, align 4
  %371 = sub nsw i32 %369, %370
  %372 = sub nsw i32 %368, %371
  %373 = add nsw i32 %372, 1
  store i32 %373, i32* %14, align 4
  %374 = load i32, i32* %13, align 4
  %375 = load i32, i32* %16, align 4
  %376 = sub nsw i32 %374, %375
  %377 = load i32, i32* %17, align 4
  %378 = load i32, i32* %14, align 4
  %379 = sub nsw i32 %377, %378
  %380 = icmp sgt i32 %376, %379
  br i1 %380, label %381, label %402

381:                                              ; preds = %361
  %382 = load i32, i32* %16, align 4
  %383 = load i32, i32* %15, align 4
  %384 = sext i32 %383 to i64
  %385 = getelementptr inbounds [100 x i32], [100 x i32]* %21, i64 0, i64 %384
  store i32 %382, i32* %385, align 4
  %386 = load i32, i32* %13, align 4
  %387 = load i32, i32* %15, align 4
  %388 = sext i32 %387 to i64
  %389 = getelementptr inbounds [100 x i32], [100 x i32]* %22, i64 0, i64 %388
  store i32 %386, i32* %389, align 4
  %390 = load i32, i32* %15, align 4
  %391 = add nsw i32 %390, 1
  store i32 %391, i32* %15, align 4
  %392 = load i32, i32* %14, align 4
  %393 = load i32, i32* %15, align 4
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds [100 x i32], [100 x i32]* %21, i64 0, i64 %394
  store i32 %392, i32* %395, align 4
  %396 = load i32, i32* %17, align 4
  %397 = load i32, i32* %15, align 4
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds [100 x i32], [100 x i32]* %22, i64 0, i64 %398
  store i32 %396, i32* %399, align 4
  %400 = load i32, i32* %15, align 4
  %401 = add nsw i32 %400, 1
  store i32 %401, i32* %15, align 4
  br label %423

402:                                              ; preds = %361
  %403 = load i32, i32* %14, align 4
  %404 = load i32, i32* %15, align 4
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds [100 x i32], [100 x i32]* %21, i64 0, i64 %405
  store i32 %403, i32* %406, align 4
  %407 = load i32, i32* %17, align 4
  %408 = load i32, i32* %15, align 4
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds [100 x i32], [100 x i32]* %22, i64 0, i64 %409
  store i32 %407, i32* %410, align 4
  %411 = load i32, i32* %15, align 4
  %412 = add nsw i32 %411, 1
  store i32 %412, i32* %15, align 4
  %413 = load i32, i32* %16, align 4
  %414 = load i32, i32* %15, align 4
  %415 = sext i32 %414 to i64
  %416 = getelementptr inbounds [100 x i32], [100 x i32]* %21, i64 0, i64 %415
  store i32 %413, i32* %416, align 4
  %417 = load i32, i32* %13, align 4
  %418 = load i32, i32* %15, align 4
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds [100 x i32], [100 x i32]* %22, i64 0, i64 %419
  store i32 %417, i32* %420, align 4
  %421 = load i32, i32* %15, align 4
  %422 = add nsw i32 %421, 1
  store i32 %422, i32* %15, align 4
  br label %423

423:                                              ; preds = %402, %381
  br label %44

424:                                              ; preds = %44
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fallbackSimpleSort(i32* %0, i32* %1, i32 %2, i32 %3) #0 {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %13 = load i32, i32* %7, align 4
  %14 = load i32, i32* %8, align 4
  %15 = icmp eq i32 %13, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %4
  br label %147

17:                                               ; preds = %4
  %18 = load i32, i32* %8, align 4
  %19 = load i32, i32* %7, align 4
  %20 = sub nsw i32 %18, %19
  %21 = icmp sgt i32 %20, 3
  br i1 %21, label %22, label %85

22:                                               ; preds = %17
  %23 = load i32, i32* %8, align 4
  %24 = sub nsw i32 %23, 4
  store i32 %24, i32* %9, align 4
  br label %25

25:                                               ; preds = %81, %22
  %26 = load i32, i32* %9, align 4
  %27 = load i32, i32* %7, align 4
  %28 = icmp sge i32 %26, %27
  br i1 %28, label %29, label %84

29:                                               ; preds = %25
  %30 = load i32*, i32** %5, align 8
  %31 = load i32, i32* %9, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i32, i32* %30, i64 %32
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %11, align 4
  %35 = load i32*, i32** %6, align 8
  %36 = load i32, i32* %11, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %35, i64 %37
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %12, align 4
  %40 = load i32, i32* %9, align 4
  %41 = add nsw i32 %40, 4
  store i32 %41, i32* %10, align 4
  br label %42

42:                                               ; preds = %71, %29
  %43 = load i32, i32* %10, align 4
  %44 = load i32, i32* %8, align 4
  %45 = icmp sle i32 %43, %44
  br i1 %45, label %46, label %58

46:                                               ; preds = %42
  %47 = load i32, i32* %12, align 4
  %48 = load i32*, i32** %6, align 8
  %49 = load i32*, i32** %5, align 8
  %50 = load i32, i32* %10, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, i32* %49, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds i32, i32* %48, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = icmp ugt i32 %47, %56
  br label %58

58:                                               ; preds = %46, %42
  %59 = phi i1 [ false, %42 ], [ %57, %46 ]
  br i1 %59, label %60, label %74

60:                                               ; preds = %58
  %61 = load i32*, i32** %5, align 8
  %62 = load i32, i32* %10, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, i32* %61, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = load i32*, i32** %5, align 8
  %67 = load i32, i32* %10, align 4
  %68 = sub nsw i32 %67, 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i32, i32* %66, i64 %69
  store i32 %65, i32* %70, align 4
  br label %71

71:                                               ; preds = %60
  %72 = load i32, i32* %10, align 4
  %73 = add nsw i32 %72, 4
  store i32 %73, i32* %10, align 4
  br label %42

74:                                               ; preds = %58
  %75 = load i32, i32* %11, align 4
  %76 = load i32*, i32** %5, align 8
  %77 = load i32, i32* %10, align 4
  %78 = sub nsw i32 %77, 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i32, i32* %76, i64 %79
  store i32 %75, i32* %80, align 4
  br label %81

81:                                               ; preds = %74
  %82 = load i32, i32* %9, align 4
  %83 = add nsw i32 %82, -1
  store i32 %83, i32* %9, align 4
  br label %25

84:                                               ; preds = %25
  br label %85

85:                                               ; preds = %84, %17
  %86 = load i32, i32* %8, align 4
  %87 = sub nsw i32 %86, 1
  store i32 %87, i32* %9, align 4
  br label %88

88:                                               ; preds = %144, %85
  %89 = load i32, i32* %9, align 4
  %90 = load i32, i32* %7, align 4
  %91 = icmp sge i32 %89, %90
  br i1 %91, label %92, label %147

92:                                               ; preds = %88
  %93 = load i32*, i32** %5, align 8
  %94 = load i32, i32* %9, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i32, i32* %93, i64 %95
  %97 = load i32, i32* %96, align 4
  store i32 %97, i32* %11, align 4
  %98 = load i32*, i32** %6, align 8
  %99 = load i32, i32* %11, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i32, i32* %98, i64 %100
  %102 = load i32, i32* %101, align 4
  store i32 %102, i32* %12, align 4
  %103 = load i32, i32* %9, align 4
  %104 = add nsw i32 %103, 1
  store i32 %104, i32* %10, align 4
  br label %105

105:                                              ; preds = %134, %92
  %106 = load i32, i32* %10, align 4
  %107 = load i32, i32* %8, align 4
  %108 = icmp sle i32 %106, %107
  br i1 %108, label %109, label %121

109:                                              ; preds = %105
  %110 = load i32, i32* %12, align 4
  %111 = load i32*, i32** %6, align 8
  %112 = load i32*, i32** %5, align 8
  %113 = load i32, i32* %10, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i32, i32* %112, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds i32, i32* %111, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = icmp ugt i32 %110, %119
  br label %121

121:                                              ; preds = %109, %105
  %122 = phi i1 [ false, %105 ], [ %120, %109 ]
  br i1 %122, label %123, label %137

123:                                              ; preds = %121
  %124 = load i32*, i32** %5, align 8
  %125 = load i32, i32* %10, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i32, i32* %124, i64 %126
  %128 = load i32, i32* %127, align 4
  %129 = load i32*, i32** %5, align 8
  %130 = load i32, i32* %10, align 4
  %131 = sub nsw i32 %130, 1
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i32, i32* %129, i64 %132
  store i32 %128, i32* %133, align 4
  br label %134

134:                                              ; preds = %123
  %135 = load i32, i32* %10, align 4
  %136 = add nsw i32 %135, 1
  store i32 %136, i32* %10, align 4
  br label %105

137:                                              ; preds = %121
  %138 = load i32, i32* %11, align 4
  %139 = load i32*, i32** %5, align 8
  %140 = load i32, i32* %10, align 4
  %141 = sub nsw i32 %140, 1
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i32, i32* %139, i64 %142
  store i32 %138, i32* %143, align 4
  br label %144

144:                                              ; preds = %137
  %145 = load i32, i32* %9, align 4
  %146 = add nsw i32 %145, -1
  store i32 %146, i32* %9, align 4
  br label %88

147:                                              ; preds = %16, %88
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mainQSort3(i32* %0, i8* %1, i16* %2, i32 %3, i32 %4, i32 %5, i32 %6, i32* %7) #0 {
  %9 = alloca i32*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i16*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca [100 x i32], align 16
  %29 = alloca [100 x i32], align 16
  %30 = alloca [100 x i32], align 16
  %31 = alloca [3 x i32], align 4
  %32 = alloca [3 x i32], align 4
  %33 = alloca [3 x i32], align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  store i32* %0, i32** %9, align 8
  store i8* %1, i8** %10, align 8
  store i16* %2, i16** %11, align 8
  store i32 %3, i32* %12, align 4
  store i32 %4, i32* %13, align 4
  store i32 %5, i32* %14, align 4
  store i32 %6, i32* %15, align 4
  store i32* %7, i32** %16, align 8
  store i32 0, i32* %24, align 4
  %48 = load i32, i32* %13, align 4
  %49 = load i32, i32* %24, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [100 x i32], [100 x i32]* %28, i64 0, i64 %50
  store i32 %48, i32* %51, align 4
  %52 = load i32, i32* %14, align 4
  %53 = load i32, i32* %24, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [100 x i32], [100 x i32]* %29, i64 0, i64 %54
  store i32 %52, i32* %55, align 4
  %56 = load i32, i32* %15, align 4
  %57 = load i32, i32* %24, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [100 x i32], [100 x i32]* %30, i64 0, i64 %58
  store i32 %56, i32* %59, align 4
  %60 = load i32, i32* %24, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %24, align 4
  br label %62

62:                                               ; preds = %543, %287, %104, %8
  %63 = load i32, i32* %24, align 4
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %595

65:                                               ; preds = %62
  %66 = load i32, i32* %24, align 4
  %67 = icmp slt i32 %66, 100
  br i1 %67, label %69, label %68

68:                                               ; preds = %65
  call void @BZ2_bz__AssertH__fail(i32 1001)
  br label %69

69:                                               ; preds = %68, %65
  %70 = load i32, i32* %24, align 4
  %71 = add nsw i32 %70, -1
  store i32 %71, i32* %24, align 4
  %72 = load i32, i32* %24, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [100 x i32], [100 x i32]* %28, i64 0, i64 %73
  %75 = load i32, i32* %74, align 4
  store i32 %75, i32* %25, align 4
  %76 = load i32, i32* %24, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [100 x i32], [100 x i32]* %29, i64 0, i64 %77
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %26, align 4
  %80 = load i32, i32* %24, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [100 x i32], [100 x i32]* %30, i64 0, i64 %81
  %83 = load i32, i32* %82, align 4
  store i32 %83, i32* %27, align 4
  %84 = load i32, i32* %26, align 4
  %85 = load i32, i32* %25, align 4
  %86 = sub nsw i32 %84, %85
  %87 = icmp slt i32 %86, 20
  br i1 %87, label %91, label %88

88:                                               ; preds = %69
  %89 = load i32, i32* %27, align 4
  %90 = icmp sgt i32 %89, 14
  br i1 %90, label %91, label %105

91:                                               ; preds = %88, %69
  %92 = load i32*, i32** %9, align 8
  %93 = load i8*, i8** %10, align 8
  %94 = load i16*, i16** %11, align 8
  %95 = load i32, i32* %12, align 4
  %96 = load i32, i32* %25, align 4
  %97 = load i32, i32* %26, align 4
  %98 = load i32, i32* %27, align 4
  %99 = load i32*, i32** %16, align 8
  call void @mainSimpleSort(i32* %92, i8* %93, i16* %94, i32 %95, i32 %96, i32 %97, i32 %98, i32* %99)
  %100 = load i32*, i32** %16, align 8
  %101 = load i32, i32* %100, align 4
  %102 = icmp slt i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %91
  br label %595

104:                                              ; preds = %91
  br label %62

105:                                              ; preds = %88
  %106 = load i8*, i8** %10, align 8
  %107 = load i32*, i32** %9, align 8
  %108 = load i32, i32* %25, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i32, i32* %107, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = load i32, i32* %27, align 4
  %113 = add i32 %111, %112
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds i8, i8* %106, i64 %114
  %116 = load i8, i8* %115, align 1
  %117 = load i8*, i8** %10, align 8
  %118 = load i32*, i32** %9, align 8
  %119 = load i32, i32* %26, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i32, i32* %118, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = load i32, i32* %27, align 4
  %124 = add i32 %122, %123
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds i8, i8* %117, i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = load i8*, i8** %10, align 8
  %129 = load i32*, i32** %9, align 8
  %130 = load i32, i32* %25, align 4
  %131 = load i32, i32* %26, align 4
  %132 = add nsw i32 %130, %131
  %133 = ashr i32 %132, 1
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i32, i32* %129, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = load i32, i32* %27, align 4
  %138 = add i32 %136, %137
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds i8, i8* %128, i64 %139
  %141 = load i8, i8* %140, align 1
  %142 = call zeroext i8 @mmed3(i8 zeroext %116, i8 zeroext %127, i8 zeroext %141)
  %143 = zext i8 %142 to i32
  store i32 %143, i32* %23, align 4
  %144 = load i32, i32* %25, align 4
  store i32 %144, i32* %19, align 4
  store i32 %144, i32* %17, align 4
  %145 = load i32, i32* %26, align 4
  store i32 %145, i32* %20, align 4
  store i32 %145, i32* %18, align 4
  br label %146

146:                                              ; preds = %105, %259
  br label %147

147:                                              ; preds = %146, %169, %197
  %148 = load i32, i32* %17, align 4
  %149 = load i32, i32* %18, align 4
  %150 = icmp sgt i32 %148, %149
  br i1 %150, label %151, label %152

151:                                              ; preds = %147
  br label %200

152:                                              ; preds = %147
  %153 = load i8*, i8** %10, align 8
  %154 = load i32*, i32** %9, align 8
  %155 = load i32, i32* %17, align 4
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds i32, i32* %154, i64 %156
  %158 = load i32, i32* %157, align 4
  %159 = load i32, i32* %27, align 4
  %160 = add i32 %158, %159
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds i8, i8* %153, i64 %161
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = load i32, i32* %23, align 4
  %166 = sub nsw i32 %164, %165
  store i32 %166, i32* %21, align 4
  %167 = load i32, i32* %21, align 4
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %193

169:                                              ; preds = %152
  %170 = load i32*, i32** %9, align 8
  %171 = load i32, i32* %17, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds i32, i32* %170, i64 %172
  %174 = load i32, i32* %173, align 4
  store i32 %174, i32* %34, align 4
  %175 = load i32*, i32** %9, align 8
  %176 = load i32, i32* %19, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i32, i32* %175, i64 %177
  %179 = load i32, i32* %178, align 4
  %180 = load i32*, i32** %9, align 8
  %181 = load i32, i32* %17, align 4
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds i32, i32* %180, i64 %182
  store i32 %179, i32* %183, align 4
  %184 = load i32, i32* %34, align 4
  %185 = load i32*, i32** %9, align 8
  %186 = load i32, i32* %19, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds i32, i32* %185, i64 %187
  store i32 %184, i32* %188, align 4
  %189 = load i32, i32* %19, align 4
  %190 = add nsw i32 %189, 1
  store i32 %190, i32* %19, align 4
  %191 = load i32, i32* %17, align 4
  %192 = add nsw i32 %191, 1
  store i32 %192, i32* %17, align 4
  br label %147

193:                                              ; preds = %152
  %194 = load i32, i32* %21, align 4
  %195 = icmp sgt i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %193
  br label %200

197:                                              ; preds = %193
  %198 = load i32, i32* %17, align 4
  %199 = add nsw i32 %198, 1
  store i32 %199, i32* %17, align 4
  br label %147

200:                                              ; preds = %196, %151
  br label %201

201:                                              ; preds = %200, %223, %251
  %202 = load i32, i32* %17, align 4
  %203 = load i32, i32* %18, align 4
  %204 = icmp sgt i32 %202, %203
  br i1 %204, label %205, label %206

205:                                              ; preds = %201
  br label %254

206:                                              ; preds = %201
  %207 = load i8*, i8** %10, align 8
  %208 = load i32*, i32** %9, align 8
  %209 = load i32, i32* %18, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds i32, i32* %208, i64 %210
  %212 = load i32, i32* %211, align 4
  %213 = load i32, i32* %27, align 4
  %214 = add i32 %212, %213
  %215 = zext i32 %214 to i64
  %216 = getelementptr inbounds i8, i8* %207, i64 %215
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i32
  %219 = load i32, i32* %23, align 4
  %220 = sub nsw i32 %218, %219
  store i32 %220, i32* %21, align 4
  %221 = load i32, i32* %21, align 4
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %247

223:                                              ; preds = %206
  %224 = load i32*, i32** %9, align 8
  %225 = load i32, i32* %18, align 4
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds i32, i32* %224, i64 %226
  %228 = load i32, i32* %227, align 4
  store i32 %228, i32* %35, align 4
  %229 = load i32*, i32** %9, align 8
  %230 = load i32, i32* %20, align 4
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i32, i32* %229, i64 %231
  %233 = load i32, i32* %232, align 4
  %234 = load i32*, i32** %9, align 8
  %235 = load i32, i32* %18, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds i32, i32* %234, i64 %236
  store i32 %233, i32* %237, align 4
  %238 = load i32, i32* %35, align 4
  %239 = load i32*, i32** %9, align 8
  %240 = load i32, i32* %20, align 4
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds i32, i32* %239, i64 %241
  store i32 %238, i32* %242, align 4
  %243 = load i32, i32* %20, align 4
  %244 = add nsw i32 %243, -1
  store i32 %244, i32* %20, align 4
  %245 = load i32, i32* %18, align 4
  %246 = add nsw i32 %245, -1
  store i32 %246, i32* %18, align 4
  br label %201

247:                                              ; preds = %206
  %248 = load i32, i32* %21, align 4
  %249 = icmp slt i32 %248, 0
  br i1 %249, label %250, label %251

250:                                              ; preds = %247
  br label %254

251:                                              ; preds = %247
  %252 = load i32, i32* %18, align 4
  %253 = add nsw i32 %252, -1
  store i32 %253, i32* %18, align 4
  br label %201

254:                                              ; preds = %250, %205
  %255 = load i32, i32* %17, align 4
  %256 = load i32, i32* %18, align 4
  %257 = icmp sgt i32 %255, %256
  br i1 %257, label %258, label %259

258:                                              ; preds = %254
  br label %283

259:                                              ; preds = %254
  %260 = load i32*, i32** %9, align 8
  %261 = load i32, i32* %17, align 4
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds i32, i32* %260, i64 %262
  %264 = load i32, i32* %263, align 4
  store i32 %264, i32* %36, align 4
  %265 = load i32*, i32** %9, align 8
  %266 = load i32, i32* %18, align 4
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds i32, i32* %265, i64 %267
  %269 = load i32, i32* %268, align 4
  %270 = load i32*, i32** %9, align 8
  %271 = load i32, i32* %17, align 4
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds i32, i32* %270, i64 %272
  store i32 %269, i32* %273, align 4
  %274 = load i32, i32* %36, align 4
  %275 = load i32*, i32** %9, align 8
  %276 = load i32, i32* %18, align 4
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds i32, i32* %275, i64 %277
  store i32 %274, i32* %278, align 4
  %279 = load i32, i32* %17, align 4
  %280 = add nsw i32 %279, 1
  store i32 %280, i32* %17, align 4
  %281 = load i32, i32* %18, align 4
  %282 = add nsw i32 %281, -1
  store i32 %282, i32* %18, align 4
  br label %146

283:                                              ; preds = %258
  %284 = load i32, i32* %20, align 4
  %285 = load i32, i32* %19, align 4
  %286 = icmp slt i32 %284, %285
  br i1 %286, label %287, label %303

287:                                              ; preds = %283
  %288 = load i32, i32* %25, align 4
  %289 = load i32, i32* %24, align 4
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds [100 x i32], [100 x i32]* %28, i64 0, i64 %290
  store i32 %288, i32* %291, align 4
  %292 = load i32, i32* %26, align 4
  %293 = load i32, i32* %24, align 4
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds [100 x i32], [100 x i32]* %29, i64 0, i64 %294
  store i32 %292, i32* %295, align 4
  %296 = load i32, i32* %27, align 4
  %297 = add nsw i32 %296, 1
  %298 = load i32, i32* %24, align 4
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds [100 x i32], [100 x i32]* %30, i64 0, i64 %299
  store i32 %297, i32* %300, align 4
  %301 = load i32, i32* %24, align 4
  %302 = add nsw i32 %301, 1
  store i32 %302, i32* %24, align 4
  br label %62

303:                                              ; preds = %283
  %304 = load i32, i32* %19, align 4
  %305 = load i32, i32* %25, align 4
  %306 = sub nsw i32 %304, %305
  %307 = load i32, i32* %17, align 4
  %308 = load i32, i32* %19, align 4
  %309 = sub nsw i32 %307, %308
  %310 = icmp slt i32 %306, %309
  br i1 %310, label %311, label %315

311:                                              ; preds = %303
  %312 = load i32, i32* %19, align 4
  %313 = load i32, i32* %25, align 4
  %314 = sub nsw i32 %312, %313
  br label %319

315:                                              ; preds = %303
  %316 = load i32, i32* %17, align 4
  %317 = load i32, i32* %19, align 4
  %318 = sub nsw i32 %316, %317
  br label %319

319:                                              ; preds = %315, %311
  %320 = phi i32 [ %314, %311 ], [ %318, %315 ]
  store i32 %320, i32* %21, align 4
  %321 = load i32, i32* %25, align 4
  store i32 %321, i32* %37, align 4
  %322 = load i32, i32* %17, align 4
  %323 = load i32, i32* %21, align 4
  %324 = sub nsw i32 %322, %323
  store i32 %324, i32* %38, align 4
  %325 = load i32, i32* %21, align 4
  store i32 %325, i32* %39, align 4
  br label %326

326:                                              ; preds = %329, %319
  %327 = load i32, i32* %39, align 4
  %328 = icmp sgt i32 %327, 0
  br i1 %328, label %329, label %355

329:                                              ; preds = %326
  %330 = load i32*, i32** %9, align 8
  %331 = load i32, i32* %37, align 4
  %332 = sext i32 %331 to i64
  %333 = getelementptr inbounds i32, i32* %330, i64 %332
  %334 = load i32, i32* %333, align 4
  store i32 %334, i32* %40, align 4
  %335 = load i32*, i32** %9, align 8
  %336 = load i32, i32* %38, align 4
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds i32, i32* %335, i64 %337
  %339 = load i32, i32* %338, align 4
  %340 = load i32*, i32** %9, align 8
  %341 = load i32, i32* %37, align 4
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds i32, i32* %340, i64 %342
  store i32 %339, i32* %343, align 4
  %344 = load i32, i32* %40, align 4
  %345 = load i32*, i32** %9, align 8
  %346 = load i32, i32* %38, align 4
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds i32, i32* %345, i64 %347
  store i32 %344, i32* %348, align 4
  %349 = load i32, i32* %37, align 4
  %350 = add nsw i32 %349, 1
  store i32 %350, i32* %37, align 4
  %351 = load i32, i32* %38, align 4
  %352 = add nsw i32 %351, 1
  store i32 %352, i32* %38, align 4
  %353 = load i32, i32* %39, align 4
  %354 = add nsw i32 %353, -1
  store i32 %354, i32* %39, align 4
  br label %326

355:                                              ; preds = %326
  %356 = load i32, i32* %26, align 4
  %357 = load i32, i32* %20, align 4
  %358 = sub nsw i32 %356, %357
  %359 = load i32, i32* %20, align 4
  %360 = load i32, i32* %18, align 4
  %361 = sub nsw i32 %359, %360
  %362 = icmp slt i32 %358, %361
  br i1 %362, label %363, label %367

363:                                              ; preds = %355
  %364 = load i32, i32* %26, align 4
  %365 = load i32, i32* %20, align 4
  %366 = sub nsw i32 %364, %365
  br label %371

367:                                              ; preds = %355
  %368 = load i32, i32* %20, align 4
  %369 = load i32, i32* %18, align 4
  %370 = sub nsw i32 %368, %369
  br label %371

371:                                              ; preds = %367, %363
  %372 = phi i32 [ %366, %363 ], [ %370, %367 ]
  store i32 %372, i32* %22, align 4
  %373 = load i32, i32* %17, align 4
  store i32 %373, i32* %41, align 4
  %374 = load i32, i32* %26, align 4
  %375 = load i32, i32* %22, align 4
  %376 = sub nsw i32 %374, %375
  %377 = add nsw i32 %376, 1
  store i32 %377, i32* %42, align 4
  %378 = load i32, i32* %22, align 4
  store i32 %378, i32* %43, align 4
  br label %379

379:                                              ; preds = %382, %371
  %380 = load i32, i32* %43, align 4
  %381 = icmp sgt i32 %380, 0
  br i1 %381, label %382, label %408

382:                                              ; preds = %379
  %383 = load i32*, i32** %9, align 8
  %384 = load i32, i32* %41, align 4
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds i32, i32* %383, i64 %385
  %387 = load i32, i32* %386, align 4
  store i32 %387, i32* %44, align 4
  %388 = load i32*, i32** %9, align 8
  %389 = load i32, i32* %42, align 4
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds i32, i32* %388, i64 %390
  %392 = load i32, i32* %391, align 4
  %393 = load i32*, i32** %9, align 8
  %394 = load i32, i32* %41, align 4
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds i32, i32* %393, i64 %395
  store i32 %392, i32* %396, align 4
  %397 = load i32, i32* %44, align 4
  %398 = load i32*, i32** %9, align 8
  %399 = load i32, i32* %42, align 4
  %400 = sext i32 %399 to i64
  %401 = getelementptr inbounds i32, i32* %398, i64 %400
  store i32 %397, i32* %401, align 4
  %402 = load i32, i32* %41, align 4
  %403 = add nsw i32 %402, 1
  store i32 %403, i32* %41, align 4
  %404 = load i32, i32* %42, align 4
  %405 = add nsw i32 %404, 1
  store i32 %405, i32* %42, align 4
  %406 = load i32, i32* %43, align 4
  %407 = add nsw i32 %406, -1
  store i32 %407, i32* %43, align 4
  br label %379

408:                                              ; preds = %379
  %409 = load i32, i32* %25, align 4
  %410 = load i32, i32* %17, align 4
  %411 = add nsw i32 %409, %410
  %412 = load i32, i32* %19, align 4
  %413 = sub nsw i32 %411, %412
  %414 = sub nsw i32 %413, 1
  store i32 %414, i32* %21, align 4
  %415 = load i32, i32* %26, align 4
  %416 = load i32, i32* %20, align 4
  %417 = load i32, i32* %18, align 4
  %418 = sub nsw i32 %416, %417
  %419 = sub nsw i32 %415, %418
  %420 = add nsw i32 %419, 1
  store i32 %420, i32* %22, align 4
  %421 = load i32, i32* %25, align 4
  %422 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 0
  store i32 %421, i32* %422, align 4
  %423 = load i32, i32* %21, align 4
  %424 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 0
  store i32 %423, i32* %424, align 4
  %425 = load i32, i32* %27, align 4
  %426 = getelementptr inbounds [3 x i32], [3 x i32]* %33, i64 0, i64 0
  store i32 %425, i32* %426, align 4
  %427 = load i32, i32* %22, align 4
  %428 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 1
  store i32 %427, i32* %428, align 4
  %429 = load i32, i32* %26, align 4
  %430 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 1
  store i32 %429, i32* %430, align 4
  %431 = load i32, i32* %27, align 4
  %432 = getelementptr inbounds [3 x i32], [3 x i32]* %33, i64 0, i64 1
  store i32 %431, i32* %432, align 4
  %433 = load i32, i32* %21, align 4
  %434 = add nsw i32 %433, 1
  %435 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 2
  store i32 %434, i32* %435, align 4
  %436 = load i32, i32* %22, align 4
  %437 = sub nsw i32 %436, 1
  %438 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 2
  store i32 %437, i32* %438, align 4
  %439 = load i32, i32* %27, align 4
  %440 = add nsw i32 %439, 1
  %441 = getelementptr inbounds [3 x i32], [3 x i32]* %33, i64 0, i64 2
  store i32 %440, i32* %441, align 4
  %442 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 0
  %443 = load i32, i32* %442, align 4
  %444 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 0
  %445 = load i32, i32* %444, align 4
  %446 = sub nsw i32 %443, %445
  %447 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 1
  %448 = load i32, i32* %447, align 4
  %449 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 1
  %450 = load i32, i32* %449, align 4
  %451 = sub nsw i32 %448, %450
  %452 = icmp slt i32 %446, %451
  br i1 %452, label %453, label %475

453:                                              ; preds = %408
  %454 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 0
  %455 = load i32, i32* %454, align 4
  store i32 %455, i32* %45, align 4
  %456 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 1
  %457 = load i32, i32* %456, align 4
  %458 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 0
  store i32 %457, i32* %458, align 4
  %459 = load i32, i32* %45, align 4
  %460 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 1
  store i32 %459, i32* %460, align 4
  %461 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 0
  %462 = load i32, i32* %461, align 4
  store i32 %462, i32* %45, align 4
  %463 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 1
  %464 = load i32, i32* %463, align 4
  %465 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 0
  store i32 %464, i32* %465, align 4
  %466 = load i32, i32* %45, align 4
  %467 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 1
  store i32 %466, i32* %467, align 4
  %468 = getelementptr inbounds [3 x i32], [3 x i32]* %33, i64 0, i64 0
  %469 = load i32, i32* %468, align 4
  store i32 %469, i32* %45, align 4
  %470 = getelementptr inbounds [3 x i32], [3 x i32]* %33, i64 0, i64 1
  %471 = load i32, i32* %470, align 4
  %472 = getelementptr inbounds [3 x i32], [3 x i32]* %33, i64 0, i64 0
  store i32 %471, i32* %472, align 4
  %473 = load i32, i32* %45, align 4
  %474 = getelementptr inbounds [3 x i32], [3 x i32]* %33, i64 0, i64 1
  store i32 %473, i32* %474, align 4
  br label %475

475:                                              ; preds = %453, %408
  %476 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 1
  %477 = load i32, i32* %476, align 4
  %478 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 1
  %479 = load i32, i32* %478, align 4
  %480 = sub nsw i32 %477, %479
  %481 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 2
  %482 = load i32, i32* %481, align 4
  %483 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 2
  %484 = load i32, i32* %483, align 4
  %485 = sub nsw i32 %482, %484
  %486 = icmp slt i32 %480, %485
  br i1 %486, label %487, label %509

487:                                              ; preds = %475
  %488 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 1
  %489 = load i32, i32* %488, align 4
  store i32 %489, i32* %46, align 4
  %490 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 2
  %491 = load i32, i32* %490, align 4
  %492 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 1
  store i32 %491, i32* %492, align 4
  %493 = load i32, i32* %46, align 4
  %494 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 2
  store i32 %493, i32* %494, align 4
  %495 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 1
  %496 = load i32, i32* %495, align 4
  store i32 %496, i32* %46, align 4
  %497 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 2
  %498 = load i32, i32* %497, align 4
  %499 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 1
  store i32 %498, i32* %499, align 4
  %500 = load i32, i32* %46, align 4
  %501 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 2
  store i32 %500, i32* %501, align 4
  %502 = getelementptr inbounds [3 x i32], [3 x i32]* %33, i64 0, i64 1
  %503 = load i32, i32* %502, align 4
  store i32 %503, i32* %46, align 4
  %504 = getelementptr inbounds [3 x i32], [3 x i32]* %33, i64 0, i64 2
  %505 = load i32, i32* %504, align 4
  %506 = getelementptr inbounds [3 x i32], [3 x i32]* %33, i64 0, i64 1
  store i32 %505, i32* %506, align 4
  %507 = load i32, i32* %46, align 4
  %508 = getelementptr inbounds [3 x i32], [3 x i32]* %33, i64 0, i64 2
  store i32 %507, i32* %508, align 4
  br label %509

509:                                              ; preds = %487, %475
  %510 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 0
  %511 = load i32, i32* %510, align 4
  %512 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 0
  %513 = load i32, i32* %512, align 4
  %514 = sub nsw i32 %511, %513
  %515 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 1
  %516 = load i32, i32* %515, align 4
  %517 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 1
  %518 = load i32, i32* %517, align 4
  %519 = sub nsw i32 %516, %518
  %520 = icmp slt i32 %514, %519
  br i1 %520, label %521, label %543

521:                                              ; preds = %509
  %522 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 0
  %523 = load i32, i32* %522, align 4
  store i32 %523, i32* %47, align 4
  %524 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 1
  %525 = load i32, i32* %524, align 4
  %526 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 0
  store i32 %525, i32* %526, align 4
  %527 = load i32, i32* %47, align 4
  %528 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 1
  store i32 %527, i32* %528, align 4
  %529 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 0
  %530 = load i32, i32* %529, align 4
  store i32 %530, i32* %47, align 4
  %531 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 1
  %532 = load i32, i32* %531, align 4
  %533 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 0
  store i32 %532, i32* %533, align 4
  %534 = load i32, i32* %47, align 4
  %535 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 1
  store i32 %534, i32* %535, align 4
  %536 = getelementptr inbounds [3 x i32], [3 x i32]* %33, i64 0, i64 0
  %537 = load i32, i32* %536, align 4
  store i32 %537, i32* %47, align 4
  %538 = getelementptr inbounds [3 x i32], [3 x i32]* %33, i64 0, i64 1
  %539 = load i32, i32* %538, align 4
  %540 = getelementptr inbounds [3 x i32], [3 x i32]* %33, i64 0, i64 0
  store i32 %539, i32* %540, align 4
  %541 = load i32, i32* %47, align 4
  %542 = getelementptr inbounds [3 x i32], [3 x i32]* %33, i64 0, i64 1
  store i32 %541, i32* %542, align 4
  br label %543

543:                                              ; preds = %521, %509
  %544 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 0
  %545 = load i32, i32* %544, align 4
  %546 = load i32, i32* %24, align 4
  %547 = sext i32 %546 to i64
  %548 = getelementptr inbounds [100 x i32], [100 x i32]* %28, i64 0, i64 %547
  store i32 %545, i32* %548, align 4
  %549 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 0
  %550 = load i32, i32* %549, align 4
  %551 = load i32, i32* %24, align 4
  %552 = sext i32 %551 to i64
  %553 = getelementptr inbounds [100 x i32], [100 x i32]* %29, i64 0, i64 %552
  store i32 %550, i32* %553, align 4
  %554 = getelementptr inbounds [3 x i32], [3 x i32]* %33, i64 0, i64 0
  %555 = load i32, i32* %554, align 4
  %556 = load i32, i32* %24, align 4
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds [100 x i32], [100 x i32]* %30, i64 0, i64 %557
  store i32 %555, i32* %558, align 4
  %559 = load i32, i32* %24, align 4
  %560 = add nsw i32 %559, 1
  store i32 %560, i32* %24, align 4
  %561 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 1
  %562 = load i32, i32* %561, align 4
  %563 = load i32, i32* %24, align 4
  %564 = sext i32 %563 to i64
  %565 = getelementptr inbounds [100 x i32], [100 x i32]* %28, i64 0, i64 %564
  store i32 %562, i32* %565, align 4
  %566 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 1
  %567 = load i32, i32* %566, align 4
  %568 = load i32, i32* %24, align 4
  %569 = sext i32 %568 to i64
  %570 = getelementptr inbounds [100 x i32], [100 x i32]* %29, i64 0, i64 %569
  store i32 %567, i32* %570, align 4
  %571 = getelementptr inbounds [3 x i32], [3 x i32]* %33, i64 0, i64 1
  %572 = load i32, i32* %571, align 4
  %573 = load i32, i32* %24, align 4
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds [100 x i32], [100 x i32]* %30, i64 0, i64 %574
  store i32 %572, i32* %575, align 4
  %576 = load i32, i32* %24, align 4
  %577 = add nsw i32 %576, 1
  store i32 %577, i32* %24, align 4
  %578 = getelementptr inbounds [3 x i32], [3 x i32]* %31, i64 0, i64 2
  %579 = load i32, i32* %578, align 4
  %580 = load i32, i32* %24, align 4
  %581 = sext i32 %580 to i64
  %582 = getelementptr inbounds [100 x i32], [100 x i32]* %28, i64 0, i64 %581
  store i32 %579, i32* %582, align 4
  %583 = getelementptr inbounds [3 x i32], [3 x i32]* %32, i64 0, i64 2
  %584 = load i32, i32* %583, align 4
  %585 = load i32, i32* %24, align 4
  %586 = sext i32 %585 to i64
  %587 = getelementptr inbounds [100 x i32], [100 x i32]* %29, i64 0, i64 %586
  store i32 %584, i32* %587, align 4
  %588 = getelementptr inbounds [3 x i32], [3 x i32]* %33, i64 0, i64 2
  %589 = load i32, i32* %588, align 4
  %590 = load i32, i32* %24, align 4
  %591 = sext i32 %590 to i64
  %592 = getelementptr inbounds [100 x i32], [100 x i32]* %30, i64 0, i64 %591
  store i32 %589, i32* %592, align 4
  %593 = load i32, i32* %24, align 4
  %594 = add nsw i32 %593, 1
  store i32 %594, i32* %24, align 4
  br label %62

595:                                              ; preds = %103, %62
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mainSimpleSort(i32* %0, i8* %1, i16* %2, i32 %3, i32 %4, i32 %5, i32 %6, i32* %7) #0 {
  %9 = alloca i32*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i16*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  store i32* %0, i32** %9, align 8
  store i8* %1, i8** %10, align 8
  store i16* %2, i16** %11, align 8
  store i32 %3, i32* %12, align 4
  store i32 %4, i32* %13, align 4
  store i32 %5, i32* %14, align 4
  store i32 %6, i32* %15, align 4
  store i32* %7, i32** %16, align 8
  %23 = load i32, i32* %14, align 4
  %24 = load i32, i32* %13, align 4
  %25 = sub nsw i32 %23, %24
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %20, align 4
  %27 = load i32, i32* %20, align 4
  %28 = icmp slt i32 %27, 2
  br i1 %28, label %29, label %30

29:                                               ; preds = %8
  br label %248

30:                                               ; preds = %8
  store i32 0, i32* %21, align 4
  br label %31

31:                                               ; preds = %38, %30
  %32 = load i32, i32* %21, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [14 x i32], [14 x i32]* @incs, i64 0, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = load i32, i32* %20, align 4
  %37 = icmp slt i32 %35, %36
  br i1 %37, label %38, label %41

38:                                               ; preds = %31
  %39 = load i32, i32* %21, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %21, align 4
  br label %31

41:                                               ; preds = %31
  %42 = load i32, i32* %21, align 4
  %43 = add nsw i32 %42, -1
  store i32 %43, i32* %21, align 4
  br label %44

44:                                               ; preds = %245, %41
  %45 = load i32, i32* %21, align 4
  %46 = icmp sge i32 %45, 0
  br i1 %46, label %47, label %248

47:                                               ; preds = %44
  %48 = load i32, i32* %21, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [14 x i32], [14 x i32]* @incs, i64 0, i64 %49
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %19, align 4
  %52 = load i32, i32* %13, align 4
  %53 = load i32, i32* %19, align 4
  %54 = add nsw i32 %52, %53
  store i32 %54, i32* %17, align 4
  br label %55

55:                                               ; preds = %47, %243
  %56 = load i32, i32* %17, align 4
  %57 = load i32, i32* %14, align 4
  %58 = icmp sgt i32 %56, %57
  br i1 %58, label %59, label %60

59:                                               ; preds = %55
  br label %244

60:                                               ; preds = %55
  %61 = load i32*, i32** %9, align 8
  %62 = load i32, i32* %17, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, i32* %61, i64 %63
  %65 = load i32, i32* %64, align 4
  store i32 %65, i32* %22, align 4
  %66 = load i32, i32* %17, align 4
  store i32 %66, i32* %18, align 4
  br label %67

67:                                               ; preds = %108, %60
  %68 = load i32*, i32** %9, align 8
  %69 = load i32, i32* %18, align 4
  %70 = load i32, i32* %19, align 4
  %71 = sub nsw i32 %69, %70
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %68, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = load i32, i32* %15, align 4
  %76 = add i32 %74, %75
  %77 = load i32, i32* %22, align 4
  %78 = load i32, i32* %15, align 4
  %79 = add i32 %77, %78
  %80 = load i8*, i8** %10, align 8
  %81 = load i16*, i16** %11, align 8
  %82 = load i32, i32* %12, align 4
  %83 = load i32*, i32** %16, align 8
  %84 = call zeroext i8 @mainGtU(i32 %76, i32 %79, i8* %80, i16* %81, i32 %82, i32* %83)
  %85 = icmp ne i8 %84, 0
  br i1 %85, label %86, label %109

86:                                               ; preds = %67
  %87 = load i32*, i32** %9, align 8
  %88 = load i32, i32* %18, align 4
  %89 = load i32, i32* %19, align 4
  %90 = sub nsw i32 %88, %89
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i32, i32* %87, i64 %91
  %93 = load i32, i32* %92, align 4
  %94 = load i32*, i32** %9, align 8
  %95 = load i32, i32* %18, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i32, i32* %94, i64 %96
  store i32 %93, i32* %97, align 4
  %98 = load i32, i32* %18, align 4
  %99 = load i32, i32* %19, align 4
  %100 = sub nsw i32 %98, %99
  store i32 %100, i32* %18, align 4
  %101 = load i32, i32* %18, align 4
  %102 = load i32, i32* %13, align 4
  %103 = load i32, i32* %19, align 4
  %104 = add nsw i32 %102, %103
  %105 = sub nsw i32 %104, 1
  %106 = icmp sle i32 %101, %105
  br i1 %106, label %107, label %108

107:                                              ; preds = %86
  br label %109

108:                                              ; preds = %86
  br label %67

109:                                              ; preds = %107, %67
  %110 = load i32, i32* %22, align 4
  %111 = load i32*, i32** %9, align 8
  %112 = load i32, i32* %18, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i32, i32* %111, i64 %113
  store i32 %110, i32* %114, align 4
  %115 = load i32, i32* %17, align 4
  %116 = add nsw i32 %115, 1
  store i32 %116, i32* %17, align 4
  %117 = load i32, i32* %17, align 4
  %118 = load i32, i32* %14, align 4
  %119 = icmp sgt i32 %117, %118
  br i1 %119, label %120, label %121

120:                                              ; preds = %109
  br label %244

121:                                              ; preds = %109
  %122 = load i32*, i32** %9, align 8
  %123 = load i32, i32* %17, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i32, i32* %122, i64 %124
  %126 = load i32, i32* %125, align 4
  store i32 %126, i32* %22, align 4
  %127 = load i32, i32* %17, align 4
  store i32 %127, i32* %18, align 4
  br label %128

128:                                              ; preds = %169, %121
  %129 = load i32*, i32** %9, align 8
  %130 = load i32, i32* %18, align 4
  %131 = load i32, i32* %19, align 4
  %132 = sub nsw i32 %130, %131
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i32, i32* %129, i64 %133
  %135 = load i32, i32* %134, align 4
  %136 = load i32, i32* %15, align 4
  %137 = add i32 %135, %136
  %138 = load i32, i32* %22, align 4
  %139 = load i32, i32* %15, align 4
  %140 = add i32 %138, %139
  %141 = load i8*, i8** %10, align 8
  %142 = load i16*, i16** %11, align 8
  %143 = load i32, i32* %12, align 4
  %144 = load i32*, i32** %16, align 8
  %145 = call zeroext i8 @mainGtU(i32 %137, i32 %140, i8* %141, i16* %142, i32 %143, i32* %144)
  %146 = icmp ne i8 %145, 0
  br i1 %146, label %147, label %170

147:                                              ; preds = %128
  %148 = load i32*, i32** %9, align 8
  %149 = load i32, i32* %18, align 4
  %150 = load i32, i32* %19, align 4
  %151 = sub nsw i32 %149, %150
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i32, i32* %148, i64 %152
  %154 = load i32, i32* %153, align 4
  %155 = load i32*, i32** %9, align 8
  %156 = load i32, i32* %18, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i32, i32* %155, i64 %157
  store i32 %154, i32* %158, align 4
  %159 = load i32, i32* %18, align 4
  %160 = load i32, i32* %19, align 4
  %161 = sub nsw i32 %159, %160
  store i32 %161, i32* %18, align 4
  %162 = load i32, i32* %18, align 4
  %163 = load i32, i32* %13, align 4
  %164 = load i32, i32* %19, align 4
  %165 = add nsw i32 %163, %164
  %166 = sub nsw i32 %165, 1
  %167 = icmp sle i32 %162, %166
  br i1 %167, label %168, label %169

168:                                              ; preds = %147
  br label %170

169:                                              ; preds = %147
  br label %128

170:                                              ; preds = %168, %128
  %171 = load i32, i32* %22, align 4
  %172 = load i32*, i32** %9, align 8
  %173 = load i32, i32* %18, align 4
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds i32, i32* %172, i64 %174
  store i32 %171, i32* %175, align 4
  %176 = load i32, i32* %17, align 4
  %177 = add nsw i32 %176, 1
  store i32 %177, i32* %17, align 4
  %178 = load i32, i32* %17, align 4
  %179 = load i32, i32* %14, align 4
  %180 = icmp sgt i32 %178, %179
  br i1 %180, label %181, label %182

181:                                              ; preds = %170
  br label %244

182:                                              ; preds = %170
  %183 = load i32*, i32** %9, align 8
  %184 = load i32, i32* %17, align 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds i32, i32* %183, i64 %185
  %187 = load i32, i32* %186, align 4
  store i32 %187, i32* %22, align 4
  %188 = load i32, i32* %17, align 4
  store i32 %188, i32* %18, align 4
  br label %189

189:                                              ; preds = %230, %182
  %190 = load i32*, i32** %9, align 8
  %191 = load i32, i32* %18, align 4
  %192 = load i32, i32* %19, align 4
  %193 = sub nsw i32 %191, %192
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds i32, i32* %190, i64 %194
  %196 = load i32, i32* %195, align 4
  %197 = load i32, i32* %15, align 4
  %198 = add i32 %196, %197
  %199 = load i32, i32* %22, align 4
  %200 = load i32, i32* %15, align 4
  %201 = add i32 %199, %200
  %202 = load i8*, i8** %10, align 8
  %203 = load i16*, i16** %11, align 8
  %204 = load i32, i32* %12, align 4
  %205 = load i32*, i32** %16, align 8
  %206 = call zeroext i8 @mainGtU(i32 %198, i32 %201, i8* %202, i16* %203, i32 %204, i32* %205)
  %207 = icmp ne i8 %206, 0
  br i1 %207, label %208, label %231

208:                                              ; preds = %189
  %209 = load i32*, i32** %9, align 8
  %210 = load i32, i32* %18, align 4
  %211 = load i32, i32* %19, align 4
  %212 = sub nsw i32 %210, %211
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds i32, i32* %209, i64 %213
  %215 = load i32, i32* %214, align 4
  %216 = load i32*, i32** %9, align 8
  %217 = load i32, i32* %18, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds i32, i32* %216, i64 %218
  store i32 %215, i32* %219, align 4
  %220 = load i32, i32* %18, align 4
  %221 = load i32, i32* %19, align 4
  %222 = sub nsw i32 %220, %221
  store i32 %222, i32* %18, align 4
  %223 = load i32, i32* %18, align 4
  %224 = load i32, i32* %13, align 4
  %225 = load i32, i32* %19, align 4
  %226 = add nsw i32 %224, %225
  %227 = sub nsw i32 %226, 1
  %228 = icmp sle i32 %223, %227
  br i1 %228, label %229, label %230

229:                                              ; preds = %208
  br label %231

230:                                              ; preds = %208
  br label %189

231:                                              ; preds = %229, %189
  %232 = load i32, i32* %22, align 4
  %233 = load i32*, i32** %9, align 8
  %234 = load i32, i32* %18, align 4
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds i32, i32* %233, i64 %235
  store i32 %232, i32* %236, align 4
  %237 = load i32, i32* %17, align 4
  %238 = add nsw i32 %237, 1
  store i32 %238, i32* %17, align 4
  %239 = load i32*, i32** %16, align 8
  %240 = load i32, i32* %239, align 4
  %241 = icmp slt i32 %240, 0
  br i1 %241, label %242, label %243

242:                                              ; preds = %231
  br label %248

243:                                              ; preds = %231
  br label %55

244:                                              ; preds = %181, %120, %59
  br label %245

245:                                              ; preds = %244
  %246 = load i32, i32* %21, align 4
  %247 = add nsw i32 %246, -1
  store i32 %247, i32* %21, align 4
  br label %44

248:                                              ; preds = %29, %242, %44
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @mmed3(i8 zeroext %0, i8 zeroext %1, i8 zeroext %2) #0 {
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  store i8 %0, i8* %4, align 1
  store i8 %1, i8* %5, align 1
  store i8 %2, i8* %6, align 1
  %8 = load i8, i8* %4, align 1
  %9 = zext i8 %8 to i32
  %10 = load i8, i8* %5, align 1
  %11 = zext i8 %10 to i32
  %12 = icmp sgt i32 %9, %11
  br i1 %12, label %13, label %17

13:                                               ; preds = %3
  %14 = load i8, i8* %4, align 1
  store i8 %14, i8* %7, align 1
  %15 = load i8, i8* %5, align 1
  store i8 %15, i8* %4, align 1
  %16 = load i8, i8* %7, align 1
  store i8 %16, i8* %5, align 1
  br label %17

17:                                               ; preds = %13, %3
  %18 = load i8, i8* %5, align 1
  %19 = zext i8 %18 to i32
  %20 = load i8, i8* %6, align 1
  %21 = zext i8 %20 to i32
  %22 = icmp sgt i32 %19, %21
  br i1 %22, label %23, label %33

23:                                               ; preds = %17
  %24 = load i8, i8* %6, align 1
  store i8 %24, i8* %5, align 1
  %25 = load i8, i8* %4, align 1
  %26 = zext i8 %25 to i32
  %27 = load i8, i8* %5, align 1
  %28 = zext i8 %27 to i32
  %29 = icmp sgt i32 %26, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %23
  %31 = load i8, i8* %4, align 1
  store i8 %31, i8* %5, align 1
  br label %32

32:                                               ; preds = %30, %23
  br label %33

33:                                               ; preds = %32, %17
  %34 = load i8, i8* %5, align 1
  ret i8 %34
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @mainGtU(i32 %0, i32 %1, i8* %2, i16* %3, i32 %4, i32* %5) #0 {
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i16*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i16, align 2
  %18 = alloca i16, align 2
  store i32 %0, i32* %8, align 4
  store i32 %1, i32* %9, align 4
  store i8* %2, i8** %10, align 8
  store i16* %3, i16** %11, align 8
  store i32 %4, i32* %12, align 4
  store i32* %5, i32** %13, align 8
  %19 = load i8*, i8** %10, align 8
  %20 = load i32, i32* %8, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %19, i64 %21
  %23 = load i8, i8* %22, align 1
  store i8 %23, i8* %15, align 1
  %24 = load i8*, i8** %10, align 8
  %25 = load i32, i32* %9, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %24, i64 %26
  %28 = load i8, i8* %27, align 1
  store i8 %28, i8* %16, align 1
  %29 = load i8, i8* %15, align 1
  %30 = zext i8 %29 to i32
  %31 = load i8, i8* %16, align 1
  %32 = zext i8 %31 to i32
  %33 = icmp ne i32 %30, %32
  br i1 %33, label %34, label %42

34:                                               ; preds = %6
  %35 = load i8, i8* %15, align 1
  %36 = zext i8 %35 to i32
  %37 = load i8, i8* %16, align 1
  %38 = zext i8 %37 to i32
  %39 = icmp sgt i32 %36, %38
  %40 = zext i1 %39 to i32
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %7, align 1
  br label %799

42:                                               ; preds = %6
  %43 = load i32, i32* %8, align 4
  %44 = add i32 %43, 1
  store i32 %44, i32* %8, align 4
  %45 = load i32, i32* %9, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %9, align 4
  %47 = load i8*, i8** %10, align 8
  %48 = load i32, i32* %8, align 4
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %47, i64 %49
  %51 = load i8, i8* %50, align 1
  store i8 %51, i8* %15, align 1
  %52 = load i8*, i8** %10, align 8
  %53 = load i32, i32* %9, align 4
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %52, i64 %54
  %56 = load i8, i8* %55, align 1
  store i8 %56, i8* %16, align 1
  %57 = load i8, i8* %15, align 1
  %58 = zext i8 %57 to i32
  %59 = load i8, i8* %16, align 1
  %60 = zext i8 %59 to i32
  %61 = icmp ne i32 %58, %60
  br i1 %61, label %62, label %70

62:                                               ; preds = %42
  %63 = load i8, i8* %15, align 1
  %64 = zext i8 %63 to i32
  %65 = load i8, i8* %16, align 1
  %66 = zext i8 %65 to i32
  %67 = icmp sgt i32 %64, %66
  %68 = zext i1 %67 to i32
  %69 = trunc i32 %68 to i8
  store i8 %69, i8* %7, align 1
  br label %799

70:                                               ; preds = %42
  %71 = load i32, i32* %8, align 4
  %72 = add i32 %71, 1
  store i32 %72, i32* %8, align 4
  %73 = load i32, i32* %9, align 4
  %74 = add i32 %73, 1
  store i32 %74, i32* %9, align 4
  %75 = load i8*, i8** %10, align 8
  %76 = load i32, i32* %8, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds i8, i8* %75, i64 %77
  %79 = load i8, i8* %78, align 1
  store i8 %79, i8* %15, align 1
  %80 = load i8*, i8** %10, align 8
  %81 = load i32, i32* %9, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %80, i64 %82
  %84 = load i8, i8* %83, align 1
  store i8 %84, i8* %16, align 1
  %85 = load i8, i8* %15, align 1
  %86 = zext i8 %85 to i32
  %87 = load i8, i8* %16, align 1
  %88 = zext i8 %87 to i32
  %89 = icmp ne i32 %86, %88
  br i1 %89, label %90, label %98

90:                                               ; preds = %70
  %91 = load i8, i8* %15, align 1
  %92 = zext i8 %91 to i32
  %93 = load i8, i8* %16, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp sgt i32 %92, %94
  %96 = zext i1 %95 to i32
  %97 = trunc i32 %96 to i8
  store i8 %97, i8* %7, align 1
  br label %799

98:                                               ; preds = %70
  %99 = load i32, i32* %8, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %8, align 4
  %101 = load i32, i32* %9, align 4
  %102 = add i32 %101, 1
  store i32 %102, i32* %9, align 4
  %103 = load i8*, i8** %10, align 8
  %104 = load i32, i32* %8, align 4
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds i8, i8* %103, i64 %105
  %107 = load i8, i8* %106, align 1
  store i8 %107, i8* %15, align 1
  %108 = load i8*, i8** %10, align 8
  %109 = load i32, i32* %9, align 4
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i8, i8* %108, i64 %110
  %112 = load i8, i8* %111, align 1
  store i8 %112, i8* %16, align 1
  %113 = load i8, i8* %15, align 1
  %114 = zext i8 %113 to i32
  %115 = load i8, i8* %16, align 1
  %116 = zext i8 %115 to i32
  %117 = icmp ne i32 %114, %116
  br i1 %117, label %118, label %126

118:                                              ; preds = %98
  %119 = load i8, i8* %15, align 1
  %120 = zext i8 %119 to i32
  %121 = load i8, i8* %16, align 1
  %122 = zext i8 %121 to i32
  %123 = icmp sgt i32 %120, %122
  %124 = zext i1 %123 to i32
  %125 = trunc i32 %124 to i8
  store i8 %125, i8* %7, align 1
  br label %799

126:                                              ; preds = %98
  %127 = load i32, i32* %8, align 4
  %128 = add i32 %127, 1
  store i32 %128, i32* %8, align 4
  %129 = load i32, i32* %9, align 4
  %130 = add i32 %129, 1
  store i32 %130, i32* %9, align 4
  %131 = load i8*, i8** %10, align 8
  %132 = load i32, i32* %8, align 4
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds i8, i8* %131, i64 %133
  %135 = load i8, i8* %134, align 1
  store i8 %135, i8* %15, align 1
  %136 = load i8*, i8** %10, align 8
  %137 = load i32, i32* %9, align 4
  %138 = zext i32 %137 to i64
  %139 = getelementptr inbounds i8, i8* %136, i64 %138
  %140 = load i8, i8* %139, align 1
  store i8 %140, i8* %16, align 1
  %141 = load i8, i8* %15, align 1
  %142 = zext i8 %141 to i32
  %143 = load i8, i8* %16, align 1
  %144 = zext i8 %143 to i32
  %145 = icmp ne i32 %142, %144
  br i1 %145, label %146, label %154

146:                                              ; preds = %126
  %147 = load i8, i8* %15, align 1
  %148 = zext i8 %147 to i32
  %149 = load i8, i8* %16, align 1
  %150 = zext i8 %149 to i32
  %151 = icmp sgt i32 %148, %150
  %152 = zext i1 %151 to i32
  %153 = trunc i32 %152 to i8
  store i8 %153, i8* %7, align 1
  br label %799

154:                                              ; preds = %126
  %155 = load i32, i32* %8, align 4
  %156 = add i32 %155, 1
  store i32 %156, i32* %8, align 4
  %157 = load i32, i32* %9, align 4
  %158 = add i32 %157, 1
  store i32 %158, i32* %9, align 4
  %159 = load i8*, i8** %10, align 8
  %160 = load i32, i32* %8, align 4
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds i8, i8* %159, i64 %161
  %163 = load i8, i8* %162, align 1
  store i8 %163, i8* %15, align 1
  %164 = load i8*, i8** %10, align 8
  %165 = load i32, i32* %9, align 4
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds i8, i8* %164, i64 %166
  %168 = load i8, i8* %167, align 1
  store i8 %168, i8* %16, align 1
  %169 = load i8, i8* %15, align 1
  %170 = zext i8 %169 to i32
  %171 = load i8, i8* %16, align 1
  %172 = zext i8 %171 to i32
  %173 = icmp ne i32 %170, %172
  br i1 %173, label %174, label %182

174:                                              ; preds = %154
  %175 = load i8, i8* %15, align 1
  %176 = zext i8 %175 to i32
  %177 = load i8, i8* %16, align 1
  %178 = zext i8 %177 to i32
  %179 = icmp sgt i32 %176, %178
  %180 = zext i1 %179 to i32
  %181 = trunc i32 %180 to i8
  store i8 %181, i8* %7, align 1
  br label %799

182:                                              ; preds = %154
  %183 = load i32, i32* %8, align 4
  %184 = add i32 %183, 1
  store i32 %184, i32* %8, align 4
  %185 = load i32, i32* %9, align 4
  %186 = add i32 %185, 1
  store i32 %186, i32* %9, align 4
  %187 = load i8*, i8** %10, align 8
  %188 = load i32, i32* %8, align 4
  %189 = zext i32 %188 to i64
  %190 = getelementptr inbounds i8, i8* %187, i64 %189
  %191 = load i8, i8* %190, align 1
  store i8 %191, i8* %15, align 1
  %192 = load i8*, i8** %10, align 8
  %193 = load i32, i32* %9, align 4
  %194 = zext i32 %193 to i64
  %195 = getelementptr inbounds i8, i8* %192, i64 %194
  %196 = load i8, i8* %195, align 1
  store i8 %196, i8* %16, align 1
  %197 = load i8, i8* %15, align 1
  %198 = zext i8 %197 to i32
  %199 = load i8, i8* %16, align 1
  %200 = zext i8 %199 to i32
  %201 = icmp ne i32 %198, %200
  br i1 %201, label %202, label %210

202:                                              ; preds = %182
  %203 = load i8, i8* %15, align 1
  %204 = zext i8 %203 to i32
  %205 = load i8, i8* %16, align 1
  %206 = zext i8 %205 to i32
  %207 = icmp sgt i32 %204, %206
  %208 = zext i1 %207 to i32
  %209 = trunc i32 %208 to i8
  store i8 %209, i8* %7, align 1
  br label %799

210:                                              ; preds = %182
  %211 = load i32, i32* %8, align 4
  %212 = add i32 %211, 1
  store i32 %212, i32* %8, align 4
  %213 = load i32, i32* %9, align 4
  %214 = add i32 %213, 1
  store i32 %214, i32* %9, align 4
  %215 = load i8*, i8** %10, align 8
  %216 = load i32, i32* %8, align 4
  %217 = zext i32 %216 to i64
  %218 = getelementptr inbounds i8, i8* %215, i64 %217
  %219 = load i8, i8* %218, align 1
  store i8 %219, i8* %15, align 1
  %220 = load i8*, i8** %10, align 8
  %221 = load i32, i32* %9, align 4
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds i8, i8* %220, i64 %222
  %224 = load i8, i8* %223, align 1
  store i8 %224, i8* %16, align 1
  %225 = load i8, i8* %15, align 1
  %226 = zext i8 %225 to i32
  %227 = load i8, i8* %16, align 1
  %228 = zext i8 %227 to i32
  %229 = icmp ne i32 %226, %228
  br i1 %229, label %230, label %238

230:                                              ; preds = %210
  %231 = load i8, i8* %15, align 1
  %232 = zext i8 %231 to i32
  %233 = load i8, i8* %16, align 1
  %234 = zext i8 %233 to i32
  %235 = icmp sgt i32 %232, %234
  %236 = zext i1 %235 to i32
  %237 = trunc i32 %236 to i8
  store i8 %237, i8* %7, align 1
  br label %799

238:                                              ; preds = %210
  %239 = load i32, i32* %8, align 4
  %240 = add i32 %239, 1
  store i32 %240, i32* %8, align 4
  %241 = load i32, i32* %9, align 4
  %242 = add i32 %241, 1
  store i32 %242, i32* %9, align 4
  %243 = load i8*, i8** %10, align 8
  %244 = load i32, i32* %8, align 4
  %245 = zext i32 %244 to i64
  %246 = getelementptr inbounds i8, i8* %243, i64 %245
  %247 = load i8, i8* %246, align 1
  store i8 %247, i8* %15, align 1
  %248 = load i8*, i8** %10, align 8
  %249 = load i32, i32* %9, align 4
  %250 = zext i32 %249 to i64
  %251 = getelementptr inbounds i8, i8* %248, i64 %250
  %252 = load i8, i8* %251, align 1
  store i8 %252, i8* %16, align 1
  %253 = load i8, i8* %15, align 1
  %254 = zext i8 %253 to i32
  %255 = load i8, i8* %16, align 1
  %256 = zext i8 %255 to i32
  %257 = icmp ne i32 %254, %256
  br i1 %257, label %258, label %266

258:                                              ; preds = %238
  %259 = load i8, i8* %15, align 1
  %260 = zext i8 %259 to i32
  %261 = load i8, i8* %16, align 1
  %262 = zext i8 %261 to i32
  %263 = icmp sgt i32 %260, %262
  %264 = zext i1 %263 to i32
  %265 = trunc i32 %264 to i8
  store i8 %265, i8* %7, align 1
  br label %799

266:                                              ; preds = %238
  %267 = load i32, i32* %8, align 4
  %268 = add i32 %267, 1
  store i32 %268, i32* %8, align 4
  %269 = load i32, i32* %9, align 4
  %270 = add i32 %269, 1
  store i32 %270, i32* %9, align 4
  %271 = load i8*, i8** %10, align 8
  %272 = load i32, i32* %8, align 4
  %273 = zext i32 %272 to i64
  %274 = getelementptr inbounds i8, i8* %271, i64 %273
  %275 = load i8, i8* %274, align 1
  store i8 %275, i8* %15, align 1
  %276 = load i8*, i8** %10, align 8
  %277 = load i32, i32* %9, align 4
  %278 = zext i32 %277 to i64
  %279 = getelementptr inbounds i8, i8* %276, i64 %278
  %280 = load i8, i8* %279, align 1
  store i8 %280, i8* %16, align 1
  %281 = load i8, i8* %15, align 1
  %282 = zext i8 %281 to i32
  %283 = load i8, i8* %16, align 1
  %284 = zext i8 %283 to i32
  %285 = icmp ne i32 %282, %284
  br i1 %285, label %286, label %294

286:                                              ; preds = %266
  %287 = load i8, i8* %15, align 1
  %288 = zext i8 %287 to i32
  %289 = load i8, i8* %16, align 1
  %290 = zext i8 %289 to i32
  %291 = icmp sgt i32 %288, %290
  %292 = zext i1 %291 to i32
  %293 = trunc i32 %292 to i8
  store i8 %293, i8* %7, align 1
  br label %799

294:                                              ; preds = %266
  %295 = load i32, i32* %8, align 4
  %296 = add i32 %295, 1
  store i32 %296, i32* %8, align 4
  %297 = load i32, i32* %9, align 4
  %298 = add i32 %297, 1
  store i32 %298, i32* %9, align 4
  %299 = load i8*, i8** %10, align 8
  %300 = load i32, i32* %8, align 4
  %301 = zext i32 %300 to i64
  %302 = getelementptr inbounds i8, i8* %299, i64 %301
  %303 = load i8, i8* %302, align 1
  store i8 %303, i8* %15, align 1
  %304 = load i8*, i8** %10, align 8
  %305 = load i32, i32* %9, align 4
  %306 = zext i32 %305 to i64
  %307 = getelementptr inbounds i8, i8* %304, i64 %306
  %308 = load i8, i8* %307, align 1
  store i8 %308, i8* %16, align 1
  %309 = load i8, i8* %15, align 1
  %310 = zext i8 %309 to i32
  %311 = load i8, i8* %16, align 1
  %312 = zext i8 %311 to i32
  %313 = icmp ne i32 %310, %312
  br i1 %313, label %314, label %322

314:                                              ; preds = %294
  %315 = load i8, i8* %15, align 1
  %316 = zext i8 %315 to i32
  %317 = load i8, i8* %16, align 1
  %318 = zext i8 %317 to i32
  %319 = icmp sgt i32 %316, %318
  %320 = zext i1 %319 to i32
  %321 = trunc i32 %320 to i8
  store i8 %321, i8* %7, align 1
  br label %799

322:                                              ; preds = %294
  %323 = load i32, i32* %8, align 4
  %324 = add i32 %323, 1
  store i32 %324, i32* %8, align 4
  %325 = load i32, i32* %9, align 4
  %326 = add i32 %325, 1
  store i32 %326, i32* %9, align 4
  %327 = load i8*, i8** %10, align 8
  %328 = load i32, i32* %8, align 4
  %329 = zext i32 %328 to i64
  %330 = getelementptr inbounds i8, i8* %327, i64 %329
  %331 = load i8, i8* %330, align 1
  store i8 %331, i8* %15, align 1
  %332 = load i8*, i8** %10, align 8
  %333 = load i32, i32* %9, align 4
  %334 = zext i32 %333 to i64
  %335 = getelementptr inbounds i8, i8* %332, i64 %334
  %336 = load i8, i8* %335, align 1
  store i8 %336, i8* %16, align 1
  %337 = load i8, i8* %15, align 1
  %338 = zext i8 %337 to i32
  %339 = load i8, i8* %16, align 1
  %340 = zext i8 %339 to i32
  %341 = icmp ne i32 %338, %340
  br i1 %341, label %342, label %350

342:                                              ; preds = %322
  %343 = load i8, i8* %15, align 1
  %344 = zext i8 %343 to i32
  %345 = load i8, i8* %16, align 1
  %346 = zext i8 %345 to i32
  %347 = icmp sgt i32 %344, %346
  %348 = zext i1 %347 to i32
  %349 = trunc i32 %348 to i8
  store i8 %349, i8* %7, align 1
  br label %799

350:                                              ; preds = %322
  %351 = load i32, i32* %8, align 4
  %352 = add i32 %351, 1
  store i32 %352, i32* %8, align 4
  %353 = load i32, i32* %9, align 4
  %354 = add i32 %353, 1
  store i32 %354, i32* %9, align 4
  %355 = load i32, i32* %12, align 4
  %356 = add i32 %355, 8
  store i32 %356, i32* %14, align 4
  br label %357

357:                                              ; preds = %795, %350
  %358 = load i8*, i8** %10, align 8
  %359 = load i32, i32* %8, align 4
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds i8, i8* %358, i64 %360
  %362 = load i8, i8* %361, align 1
  store i8 %362, i8* %15, align 1
  %363 = load i8*, i8** %10, align 8
  %364 = load i32, i32* %9, align 4
  %365 = zext i32 %364 to i64
  %366 = getelementptr inbounds i8, i8* %363, i64 %365
  %367 = load i8, i8* %366, align 1
  store i8 %367, i8* %16, align 1
  %368 = load i8, i8* %15, align 1
  %369 = zext i8 %368 to i32
  %370 = load i8, i8* %16, align 1
  %371 = zext i8 %370 to i32
  %372 = icmp ne i32 %369, %371
  br i1 %372, label %373, label %381

373:                                              ; preds = %357
  %374 = load i8, i8* %15, align 1
  %375 = zext i8 %374 to i32
  %376 = load i8, i8* %16, align 1
  %377 = zext i8 %376 to i32
  %378 = icmp sgt i32 %375, %377
  %379 = zext i1 %378 to i32
  %380 = trunc i32 %379 to i8
  store i8 %380, i8* %7, align 1
  br label %799

381:                                              ; preds = %357
  %382 = load i16*, i16** %11, align 8
  %383 = load i32, i32* %8, align 4
  %384 = zext i32 %383 to i64
  %385 = getelementptr inbounds i16, i16* %382, i64 %384
  %386 = load i16, i16* %385, align 2
  store i16 %386, i16* %17, align 2
  %387 = load i16*, i16** %11, align 8
  %388 = load i32, i32* %9, align 4
  %389 = zext i32 %388 to i64
  %390 = getelementptr inbounds i16, i16* %387, i64 %389
  %391 = load i16, i16* %390, align 2
  store i16 %391, i16* %18, align 2
  %392 = load i16, i16* %17, align 2
  %393 = zext i16 %392 to i32
  %394 = load i16, i16* %18, align 2
  %395 = zext i16 %394 to i32
  %396 = icmp ne i32 %393, %395
  br i1 %396, label %397, label %405

397:                                              ; preds = %381
  %398 = load i16, i16* %17, align 2
  %399 = zext i16 %398 to i32
  %400 = load i16, i16* %18, align 2
  %401 = zext i16 %400 to i32
  %402 = icmp sgt i32 %399, %401
  %403 = zext i1 %402 to i32
  %404 = trunc i32 %403 to i8
  store i8 %404, i8* %7, align 1
  br label %799

405:                                              ; preds = %381
  %406 = load i32, i32* %8, align 4
  %407 = add i32 %406, 1
  store i32 %407, i32* %8, align 4
  %408 = load i32, i32* %9, align 4
  %409 = add i32 %408, 1
  store i32 %409, i32* %9, align 4
  %410 = load i8*, i8** %10, align 8
  %411 = load i32, i32* %8, align 4
  %412 = zext i32 %411 to i64
  %413 = getelementptr inbounds i8, i8* %410, i64 %412
  %414 = load i8, i8* %413, align 1
  store i8 %414, i8* %15, align 1
  %415 = load i8*, i8** %10, align 8
  %416 = load i32, i32* %9, align 4
  %417 = zext i32 %416 to i64
  %418 = getelementptr inbounds i8, i8* %415, i64 %417
  %419 = load i8, i8* %418, align 1
  store i8 %419, i8* %16, align 1
  %420 = load i8, i8* %15, align 1
  %421 = zext i8 %420 to i32
  %422 = load i8, i8* %16, align 1
  %423 = zext i8 %422 to i32
  %424 = icmp ne i32 %421, %423
  br i1 %424, label %425, label %433

425:                                              ; preds = %405
  %426 = load i8, i8* %15, align 1
  %427 = zext i8 %426 to i32
  %428 = load i8, i8* %16, align 1
  %429 = zext i8 %428 to i32
  %430 = icmp sgt i32 %427, %429
  %431 = zext i1 %430 to i32
  %432 = trunc i32 %431 to i8
  store i8 %432, i8* %7, align 1
  br label %799

433:                                              ; preds = %405
  %434 = load i16*, i16** %11, align 8
  %435 = load i32, i32* %8, align 4
  %436 = zext i32 %435 to i64
  %437 = getelementptr inbounds i16, i16* %434, i64 %436
  %438 = load i16, i16* %437, align 2
  store i16 %438, i16* %17, align 2
  %439 = load i16*, i16** %11, align 8
  %440 = load i32, i32* %9, align 4
  %441 = zext i32 %440 to i64
  %442 = getelementptr inbounds i16, i16* %439, i64 %441
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %18, align 2
  %444 = load i16, i16* %17, align 2
  %445 = zext i16 %444 to i32
  %446 = load i16, i16* %18, align 2
  %447 = zext i16 %446 to i32
  %448 = icmp ne i32 %445, %447
  br i1 %448, label %449, label %457

449:                                              ; preds = %433
  %450 = load i16, i16* %17, align 2
  %451 = zext i16 %450 to i32
  %452 = load i16, i16* %18, align 2
  %453 = zext i16 %452 to i32
  %454 = icmp sgt i32 %451, %453
  %455 = zext i1 %454 to i32
  %456 = trunc i32 %455 to i8
  store i8 %456, i8* %7, align 1
  br label %799

457:                                              ; preds = %433
  %458 = load i32, i32* %8, align 4
  %459 = add i32 %458, 1
  store i32 %459, i32* %8, align 4
  %460 = load i32, i32* %9, align 4
  %461 = add i32 %460, 1
  store i32 %461, i32* %9, align 4
  %462 = load i8*, i8** %10, align 8
  %463 = load i32, i32* %8, align 4
  %464 = zext i32 %463 to i64
  %465 = getelementptr inbounds i8, i8* %462, i64 %464
  %466 = load i8, i8* %465, align 1
  store i8 %466, i8* %15, align 1
  %467 = load i8*, i8** %10, align 8
  %468 = load i32, i32* %9, align 4
  %469 = zext i32 %468 to i64
  %470 = getelementptr inbounds i8, i8* %467, i64 %469
  %471 = load i8, i8* %470, align 1
  store i8 %471, i8* %16, align 1
  %472 = load i8, i8* %15, align 1
  %473 = zext i8 %472 to i32
  %474 = load i8, i8* %16, align 1
  %475 = zext i8 %474 to i32
  %476 = icmp ne i32 %473, %475
  br i1 %476, label %477, label %485

477:                                              ; preds = %457
  %478 = load i8, i8* %15, align 1
  %479 = zext i8 %478 to i32
  %480 = load i8, i8* %16, align 1
  %481 = zext i8 %480 to i32
  %482 = icmp sgt i32 %479, %481
  %483 = zext i1 %482 to i32
  %484 = trunc i32 %483 to i8
  store i8 %484, i8* %7, align 1
  br label %799

485:                                              ; preds = %457
  %486 = load i16*, i16** %11, align 8
  %487 = load i32, i32* %8, align 4
  %488 = zext i32 %487 to i64
  %489 = getelementptr inbounds i16, i16* %486, i64 %488
  %490 = load i16, i16* %489, align 2
  store i16 %490, i16* %17, align 2
  %491 = load i16*, i16** %11, align 8
  %492 = load i32, i32* %9, align 4
  %493 = zext i32 %492 to i64
  %494 = getelementptr inbounds i16, i16* %491, i64 %493
  %495 = load i16, i16* %494, align 2
  store i16 %495, i16* %18, align 2
  %496 = load i16, i16* %17, align 2
  %497 = zext i16 %496 to i32
  %498 = load i16, i16* %18, align 2
  %499 = zext i16 %498 to i32
  %500 = icmp ne i32 %497, %499
  br i1 %500, label %501, label %509

501:                                              ; preds = %485
  %502 = load i16, i16* %17, align 2
  %503 = zext i16 %502 to i32
  %504 = load i16, i16* %18, align 2
  %505 = zext i16 %504 to i32
  %506 = icmp sgt i32 %503, %505
  %507 = zext i1 %506 to i32
  %508 = trunc i32 %507 to i8
  store i8 %508, i8* %7, align 1
  br label %799

509:                                              ; preds = %485
  %510 = load i32, i32* %8, align 4
  %511 = add i32 %510, 1
  store i32 %511, i32* %8, align 4
  %512 = load i32, i32* %9, align 4
  %513 = add i32 %512, 1
  store i32 %513, i32* %9, align 4
  %514 = load i8*, i8** %10, align 8
  %515 = load i32, i32* %8, align 4
  %516 = zext i32 %515 to i64
  %517 = getelementptr inbounds i8, i8* %514, i64 %516
  %518 = load i8, i8* %517, align 1
  store i8 %518, i8* %15, align 1
  %519 = load i8*, i8** %10, align 8
  %520 = load i32, i32* %9, align 4
  %521 = zext i32 %520 to i64
  %522 = getelementptr inbounds i8, i8* %519, i64 %521
  %523 = load i8, i8* %522, align 1
  store i8 %523, i8* %16, align 1
  %524 = load i8, i8* %15, align 1
  %525 = zext i8 %524 to i32
  %526 = load i8, i8* %16, align 1
  %527 = zext i8 %526 to i32
  %528 = icmp ne i32 %525, %527
  br i1 %528, label %529, label %537

529:                                              ; preds = %509
  %530 = load i8, i8* %15, align 1
  %531 = zext i8 %530 to i32
  %532 = load i8, i8* %16, align 1
  %533 = zext i8 %532 to i32
  %534 = icmp sgt i32 %531, %533
  %535 = zext i1 %534 to i32
  %536 = trunc i32 %535 to i8
  store i8 %536, i8* %7, align 1
  br label %799

537:                                              ; preds = %509
  %538 = load i16*, i16** %11, align 8
  %539 = load i32, i32* %8, align 4
  %540 = zext i32 %539 to i64
  %541 = getelementptr inbounds i16, i16* %538, i64 %540
  %542 = load i16, i16* %541, align 2
  store i16 %542, i16* %17, align 2
  %543 = load i16*, i16** %11, align 8
  %544 = load i32, i32* %9, align 4
  %545 = zext i32 %544 to i64
  %546 = getelementptr inbounds i16, i16* %543, i64 %545
  %547 = load i16, i16* %546, align 2
  store i16 %547, i16* %18, align 2
  %548 = load i16, i16* %17, align 2
  %549 = zext i16 %548 to i32
  %550 = load i16, i16* %18, align 2
  %551 = zext i16 %550 to i32
  %552 = icmp ne i32 %549, %551
  br i1 %552, label %553, label %561

553:                                              ; preds = %537
  %554 = load i16, i16* %17, align 2
  %555 = zext i16 %554 to i32
  %556 = load i16, i16* %18, align 2
  %557 = zext i16 %556 to i32
  %558 = icmp sgt i32 %555, %557
  %559 = zext i1 %558 to i32
  %560 = trunc i32 %559 to i8
  store i8 %560, i8* %7, align 1
  br label %799

561:                                              ; preds = %537
  %562 = load i32, i32* %8, align 4
  %563 = add i32 %562, 1
  store i32 %563, i32* %8, align 4
  %564 = load i32, i32* %9, align 4
  %565 = add i32 %564, 1
  store i32 %565, i32* %9, align 4
  %566 = load i8*, i8** %10, align 8
  %567 = load i32, i32* %8, align 4
  %568 = zext i32 %567 to i64
  %569 = getelementptr inbounds i8, i8* %566, i64 %568
  %570 = load i8, i8* %569, align 1
  store i8 %570, i8* %15, align 1
  %571 = load i8*, i8** %10, align 8
  %572 = load i32, i32* %9, align 4
  %573 = zext i32 %572 to i64
  %574 = getelementptr inbounds i8, i8* %571, i64 %573
  %575 = load i8, i8* %574, align 1
  store i8 %575, i8* %16, align 1
  %576 = load i8, i8* %15, align 1
  %577 = zext i8 %576 to i32
  %578 = load i8, i8* %16, align 1
  %579 = zext i8 %578 to i32
  %580 = icmp ne i32 %577, %579
  br i1 %580, label %581, label %589

581:                                              ; preds = %561
  %582 = load i8, i8* %15, align 1
  %583 = zext i8 %582 to i32
  %584 = load i8, i8* %16, align 1
  %585 = zext i8 %584 to i32
  %586 = icmp sgt i32 %583, %585
  %587 = zext i1 %586 to i32
  %588 = trunc i32 %587 to i8
  store i8 %588, i8* %7, align 1
  br label %799

589:                                              ; preds = %561
  %590 = load i16*, i16** %11, align 8
  %591 = load i32, i32* %8, align 4
  %592 = zext i32 %591 to i64
  %593 = getelementptr inbounds i16, i16* %590, i64 %592
  %594 = load i16, i16* %593, align 2
  store i16 %594, i16* %17, align 2
  %595 = load i16*, i16** %11, align 8
  %596 = load i32, i32* %9, align 4
  %597 = zext i32 %596 to i64
  %598 = getelementptr inbounds i16, i16* %595, i64 %597
  %599 = load i16, i16* %598, align 2
  store i16 %599, i16* %18, align 2
  %600 = load i16, i16* %17, align 2
  %601 = zext i16 %600 to i32
  %602 = load i16, i16* %18, align 2
  %603 = zext i16 %602 to i32
  %604 = icmp ne i32 %601, %603
  br i1 %604, label %605, label %613

605:                                              ; preds = %589
  %606 = load i16, i16* %17, align 2
  %607 = zext i16 %606 to i32
  %608 = load i16, i16* %18, align 2
  %609 = zext i16 %608 to i32
  %610 = icmp sgt i32 %607, %609
  %611 = zext i1 %610 to i32
  %612 = trunc i32 %611 to i8
  store i8 %612, i8* %7, align 1
  br label %799

613:                                              ; preds = %589
  %614 = load i32, i32* %8, align 4
  %615 = add i32 %614, 1
  store i32 %615, i32* %8, align 4
  %616 = load i32, i32* %9, align 4
  %617 = add i32 %616, 1
  store i32 %617, i32* %9, align 4
  %618 = load i8*, i8** %10, align 8
  %619 = load i32, i32* %8, align 4
  %620 = zext i32 %619 to i64
  %621 = getelementptr inbounds i8, i8* %618, i64 %620
  %622 = load i8, i8* %621, align 1
  store i8 %622, i8* %15, align 1
  %623 = load i8*, i8** %10, align 8
  %624 = load i32, i32* %9, align 4
  %625 = zext i32 %624 to i64
  %626 = getelementptr inbounds i8, i8* %623, i64 %625
  %627 = load i8, i8* %626, align 1
  store i8 %627, i8* %16, align 1
  %628 = load i8, i8* %15, align 1
  %629 = zext i8 %628 to i32
  %630 = load i8, i8* %16, align 1
  %631 = zext i8 %630 to i32
  %632 = icmp ne i32 %629, %631
  br i1 %632, label %633, label %641

633:                                              ; preds = %613
  %634 = load i8, i8* %15, align 1
  %635 = zext i8 %634 to i32
  %636 = load i8, i8* %16, align 1
  %637 = zext i8 %636 to i32
  %638 = icmp sgt i32 %635, %637
  %639 = zext i1 %638 to i32
  %640 = trunc i32 %639 to i8
  store i8 %640, i8* %7, align 1
  br label %799

641:                                              ; preds = %613
  %642 = load i16*, i16** %11, align 8
  %643 = load i32, i32* %8, align 4
  %644 = zext i32 %643 to i64
  %645 = getelementptr inbounds i16, i16* %642, i64 %644
  %646 = load i16, i16* %645, align 2
  store i16 %646, i16* %17, align 2
  %647 = load i16*, i16** %11, align 8
  %648 = load i32, i32* %9, align 4
  %649 = zext i32 %648 to i64
  %650 = getelementptr inbounds i16, i16* %647, i64 %649
  %651 = load i16, i16* %650, align 2
  store i16 %651, i16* %18, align 2
  %652 = load i16, i16* %17, align 2
  %653 = zext i16 %652 to i32
  %654 = load i16, i16* %18, align 2
  %655 = zext i16 %654 to i32
  %656 = icmp ne i32 %653, %655
  br i1 %656, label %657, label %665

657:                                              ; preds = %641
  %658 = load i16, i16* %17, align 2
  %659 = zext i16 %658 to i32
  %660 = load i16, i16* %18, align 2
  %661 = zext i16 %660 to i32
  %662 = icmp sgt i32 %659, %661
  %663 = zext i1 %662 to i32
  %664 = trunc i32 %663 to i8
  store i8 %664, i8* %7, align 1
  br label %799

665:                                              ; preds = %641
  %666 = load i32, i32* %8, align 4
  %667 = add i32 %666, 1
  store i32 %667, i32* %8, align 4
  %668 = load i32, i32* %9, align 4
  %669 = add i32 %668, 1
  store i32 %669, i32* %9, align 4
  %670 = load i8*, i8** %10, align 8
  %671 = load i32, i32* %8, align 4
  %672 = zext i32 %671 to i64
  %673 = getelementptr inbounds i8, i8* %670, i64 %672
  %674 = load i8, i8* %673, align 1
  store i8 %674, i8* %15, align 1
  %675 = load i8*, i8** %10, align 8
  %676 = load i32, i32* %9, align 4
  %677 = zext i32 %676 to i64
  %678 = getelementptr inbounds i8, i8* %675, i64 %677
  %679 = load i8, i8* %678, align 1
  store i8 %679, i8* %16, align 1
  %680 = load i8, i8* %15, align 1
  %681 = zext i8 %680 to i32
  %682 = load i8, i8* %16, align 1
  %683 = zext i8 %682 to i32
  %684 = icmp ne i32 %681, %683
  br i1 %684, label %685, label %693

685:                                              ; preds = %665
  %686 = load i8, i8* %15, align 1
  %687 = zext i8 %686 to i32
  %688 = load i8, i8* %16, align 1
  %689 = zext i8 %688 to i32
  %690 = icmp sgt i32 %687, %689
  %691 = zext i1 %690 to i32
  %692 = trunc i32 %691 to i8
  store i8 %692, i8* %7, align 1
  br label %799

693:                                              ; preds = %665
  %694 = load i16*, i16** %11, align 8
  %695 = load i32, i32* %8, align 4
  %696 = zext i32 %695 to i64
  %697 = getelementptr inbounds i16, i16* %694, i64 %696
  %698 = load i16, i16* %697, align 2
  store i16 %698, i16* %17, align 2
  %699 = load i16*, i16** %11, align 8
  %700 = load i32, i32* %9, align 4
  %701 = zext i32 %700 to i64
  %702 = getelementptr inbounds i16, i16* %699, i64 %701
  %703 = load i16, i16* %702, align 2
  store i16 %703, i16* %18, align 2
  %704 = load i16, i16* %17, align 2
  %705 = zext i16 %704 to i32
  %706 = load i16, i16* %18, align 2
  %707 = zext i16 %706 to i32
  %708 = icmp ne i32 %705, %707
  br i1 %708, label %709, label %717

709:                                              ; preds = %693
  %710 = load i16, i16* %17, align 2
  %711 = zext i16 %710 to i32
  %712 = load i16, i16* %18, align 2
  %713 = zext i16 %712 to i32
  %714 = icmp sgt i32 %711, %713
  %715 = zext i1 %714 to i32
  %716 = trunc i32 %715 to i8
  store i8 %716, i8* %7, align 1
  br label %799

717:                                              ; preds = %693
  %718 = load i32, i32* %8, align 4
  %719 = add i32 %718, 1
  store i32 %719, i32* %8, align 4
  %720 = load i32, i32* %9, align 4
  %721 = add i32 %720, 1
  store i32 %721, i32* %9, align 4
  %722 = load i8*, i8** %10, align 8
  %723 = load i32, i32* %8, align 4
  %724 = zext i32 %723 to i64
  %725 = getelementptr inbounds i8, i8* %722, i64 %724
  %726 = load i8, i8* %725, align 1
  store i8 %726, i8* %15, align 1
  %727 = load i8*, i8** %10, align 8
  %728 = load i32, i32* %9, align 4
  %729 = zext i32 %728 to i64
  %730 = getelementptr inbounds i8, i8* %727, i64 %729
  %731 = load i8, i8* %730, align 1
  store i8 %731, i8* %16, align 1
  %732 = load i8, i8* %15, align 1
  %733 = zext i8 %732 to i32
  %734 = load i8, i8* %16, align 1
  %735 = zext i8 %734 to i32
  %736 = icmp ne i32 %733, %735
  br i1 %736, label %737, label %745

737:                                              ; preds = %717
  %738 = load i8, i8* %15, align 1
  %739 = zext i8 %738 to i32
  %740 = load i8, i8* %16, align 1
  %741 = zext i8 %740 to i32
  %742 = icmp sgt i32 %739, %741
  %743 = zext i1 %742 to i32
  %744 = trunc i32 %743 to i8
  store i8 %744, i8* %7, align 1
  br label %799

745:                                              ; preds = %717
  %746 = load i16*, i16** %11, align 8
  %747 = load i32, i32* %8, align 4
  %748 = zext i32 %747 to i64
  %749 = getelementptr inbounds i16, i16* %746, i64 %748
  %750 = load i16, i16* %749, align 2
  store i16 %750, i16* %17, align 2
  %751 = load i16*, i16** %11, align 8
  %752 = load i32, i32* %9, align 4
  %753 = zext i32 %752 to i64
  %754 = getelementptr inbounds i16, i16* %751, i64 %753
  %755 = load i16, i16* %754, align 2
  store i16 %755, i16* %18, align 2
  %756 = load i16, i16* %17, align 2
  %757 = zext i16 %756 to i32
  %758 = load i16, i16* %18, align 2
  %759 = zext i16 %758 to i32
  %760 = icmp ne i32 %757, %759
  br i1 %760, label %761, label %769

761:                                              ; preds = %745
  %762 = load i16, i16* %17, align 2
  %763 = zext i16 %762 to i32
  %764 = load i16, i16* %18, align 2
  %765 = zext i16 %764 to i32
  %766 = icmp sgt i32 %763, %765
  %767 = zext i1 %766 to i32
  %768 = trunc i32 %767 to i8
  store i8 %768, i8* %7, align 1
  br label %799

769:                                              ; preds = %745
  %770 = load i32, i32* %8, align 4
  %771 = add i32 %770, 1
  store i32 %771, i32* %8, align 4
  %772 = load i32, i32* %9, align 4
  %773 = add i32 %772, 1
  store i32 %773, i32* %9, align 4
  %774 = load i32, i32* %8, align 4
  %775 = load i32, i32* %12, align 4
  %776 = icmp uge i32 %774, %775
  br i1 %776, label %777, label %781

777:                                              ; preds = %769
  %778 = load i32, i32* %12, align 4
  %779 = load i32, i32* %8, align 4
  %780 = sub i32 %779, %778
  store i32 %780, i32* %8, align 4
  br label %781

781:                                              ; preds = %777, %769
  %782 = load i32, i32* %9, align 4
  %783 = load i32, i32* %12, align 4
  %784 = icmp uge i32 %782, %783
  br i1 %784, label %785, label %789

785:                                              ; preds = %781
  %786 = load i32, i32* %12, align 4
  %787 = load i32, i32* %9, align 4
  %788 = sub i32 %787, %786
  store i32 %788, i32* %9, align 4
  br label %789

789:                                              ; preds = %785, %781
  %790 = load i32, i32* %14, align 4
  %791 = sub nsw i32 %790, 8
  store i32 %791, i32* %14, align 4
  %792 = load i32*, i32** %13, align 8
  %793 = load i32, i32* %792, align 4
  %794 = add nsw i32 %793, -1
  store i32 %794, i32* %792, align 4
  br label %795

795:                                              ; preds = %789
  %796 = load i32, i32* %14, align 4
  %797 = icmp sge i32 %796, 0
  br i1 %797, label %357, label %798

798:                                              ; preds = %795
  store i8 0, i8* %7, align 1
  br label %799

799:                                              ; preds = %798, %761, %737, %709, %685, %657, %633, %605, %581, %553, %529, %501, %477, %449, %425, %397, %373, %342, %314, %286, %258, %230, %202, %174, %146, %118, %90, %62, %34
  %800 = load i8, i8* %7, align 1
  ret i8 %800
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @makeMaps_e(%struct.EState* %0) #0 {
  %2 = alloca %struct.EState*, align 8
  %3 = alloca i32, align 4
  store %struct.EState* %0, %struct.EState** %2, align 8
  %4 = load %struct.EState*, %struct.EState** %2, align 8
  %5 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 21
  store i32 0, i32* %5, align 4
  store i32 0, i32* %3, align 4
  br label %6

6:                                                ; preds = %32, %1
  %7 = load i32, i32* %3, align 4
  %8 = icmp slt i32 %7, 256
  br i1 %8, label %9, label %35

9:                                                ; preds = %6
  %10 = load %struct.EState*, %struct.EState** %2, align 8
  %11 = getelementptr inbounds %struct.EState, %struct.EState* %10, i32 0, i32 22
  %12 = load i32, i32* %3, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i64 0, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = icmp ne i8 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %9
  %18 = load %struct.EState*, %struct.EState** %2, align 8
  %19 = getelementptr inbounds %struct.EState, %struct.EState* %18, i32 0, i32 21
  %20 = load i32, i32* %19, align 4
  %21 = trunc i32 %20 to i8
  %22 = load %struct.EState*, %struct.EState** %2, align 8
  %23 = getelementptr inbounds %struct.EState, %struct.EState* %22, i32 0, i32 23
  %24 = load i32, i32* %3, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [256 x i8], [256 x i8]* %23, i64 0, i64 %25
  store i8 %21, i8* %26, align 1
  %27 = load %struct.EState*, %struct.EState** %2, align 8
  %28 = getelementptr inbounds %struct.EState, %struct.EState* %27, i32 0, i32 21
  %29 = load i32, i32* %28, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %28, align 4
  br label %31

31:                                               ; preds = %17, %9
  br label %32

32:                                               ; preds = %31
  %33 = load i32, i32* %3, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %3, align 4
  br label %6

35:                                               ; preds = %6
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @copy_output_until_stop(%struct.EState* %0) #0 {
  %2 = alloca %struct.EState*, align 8
  %3 = alloca i8, align 1
  store %struct.EState* %0, %struct.EState** %2, align 8
  store i8 0, i8* %3, align 1
  br label %4

4:                                                ; preds = %1, %71
  %5 = load %struct.EState*, %struct.EState** %2, align 8
  %6 = getelementptr inbounds %struct.EState, %struct.EState* %5, i32 0, i32 0
  %7 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %8 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %4
  br label %72

12:                                               ; preds = %4
  %13 = load %struct.EState*, %struct.EState** %2, align 8
  %14 = getelementptr inbounds %struct.EState, %struct.EState* %13, i32 0, i32 20
  %15 = load i32, i32* %14, align 8
  %16 = load %struct.EState*, %struct.EState** %2, align 8
  %17 = getelementptr inbounds %struct.EState, %struct.EState* %16, i32 0, i32 19
  %18 = load i32, i32* %17, align 4
  %19 = icmp sge i32 %15, %18
  br i1 %19, label %20, label %21

20:                                               ; preds = %12
  br label %72

21:                                               ; preds = %12
  store i8 1, i8* %3, align 1
  %22 = load %struct.EState*, %struct.EState** %2, align 8
  %23 = getelementptr inbounds %struct.EState, %struct.EState* %22, i32 0, i32 11
  %24 = load i8*, i8** %23, align 8
  %25 = load %struct.EState*, %struct.EState** %2, align 8
  %26 = getelementptr inbounds %struct.EState, %struct.EState* %25, i32 0, i32 20
  %27 = load i32, i32* %26, align 8
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %24, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = load %struct.EState*, %struct.EState** %2, align 8
  %32 = getelementptr inbounds %struct.EState, %struct.EState* %31, i32 0, i32 0
  %33 = load %struct.bz_stream*, %struct.bz_stream** %32, align 8
  %34 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %33, i32 0, i32 4
  %35 = load i8*, i8** %34, align 8
  store i8 %30, i8* %35, align 1
  %36 = load %struct.EState*, %struct.EState** %2, align 8
  %37 = getelementptr inbounds %struct.EState, %struct.EState* %36, i32 0, i32 20
  %38 = load i32, i32* %37, align 8
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %37, align 8
  %40 = load %struct.EState*, %struct.EState** %2, align 8
  %41 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 0
  %42 = load %struct.bz_stream*, %struct.bz_stream** %41, align 8
  %43 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %42, i32 0, i32 5
  %44 = load i32, i32* %43, align 8
  %45 = add i32 %44, -1
  store i32 %45, i32* %43, align 8
  %46 = load %struct.EState*, %struct.EState** %2, align 8
  %47 = getelementptr inbounds %struct.EState, %struct.EState* %46, i32 0, i32 0
  %48 = load %struct.bz_stream*, %struct.bz_stream** %47, align 8
  %49 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %48, i32 0, i32 4
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %51, i8** %49, align 8
  %52 = load %struct.EState*, %struct.EState** %2, align 8
  %53 = getelementptr inbounds %struct.EState, %struct.EState* %52, i32 0, i32 0
  %54 = load %struct.bz_stream*, %struct.bz_stream** %53, align 8
  %55 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %54, i32 0, i32 6
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %55, align 4
  %58 = load %struct.EState*, %struct.EState** %2, align 8
  %59 = getelementptr inbounds %struct.EState, %struct.EState* %58, i32 0, i32 0
  %60 = load %struct.bz_stream*, %struct.bz_stream** %59, align 8
  %61 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %60, i32 0, i32 6
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %71

64:                                               ; preds = %21
  %65 = load %struct.EState*, %struct.EState** %2, align 8
  %66 = getelementptr inbounds %struct.EState, %struct.EState* %65, i32 0, i32 0
  %67 = load %struct.bz_stream*, %struct.bz_stream** %66, align 8
  %68 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %67, i32 0, i32 7
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %69, 1
  store i32 %70, i32* %68, align 8
  br label %71

71:                                               ; preds = %64, %21
  br label %4

72:                                               ; preds = %20, %11
  %73 = load i8, i8* %3, align 1
  ret i8 %73
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @copy_input_until_stop(%struct.EState* %0) #0 {
  %2 = alloca %struct.EState*, align 8
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  store %struct.EState* %0, %struct.EState** %2, align 8
  store i8 0, i8* %3, align 1
  %8 = load %struct.EState*, %struct.EState** %2, align 8
  %9 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %12, label %157

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %155
  %14 = load %struct.EState*, %struct.EState** %2, align 8
  %15 = getelementptr inbounds %struct.EState, %struct.EState* %14, i32 0, i32 17
  %16 = load i32, i32* %15, align 4
  %17 = load %struct.EState*, %struct.EState** %2, align 8
  %18 = getelementptr inbounds %struct.EState, %struct.EState* %17, i32 0, i32 18
  %19 = load i32, i32* %18, align 8
  %20 = icmp sge i32 %16, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %13
  br label %156

22:                                               ; preds = %13
  %23 = load %struct.EState*, %struct.EState** %2, align 8
  %24 = getelementptr inbounds %struct.EState, %struct.EState* %23, i32 0, i32 0
  %25 = load %struct.bz_stream*, %struct.bz_stream** %24, align 8
  %26 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %25, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %22
  br label %156

30:                                               ; preds = %22
  store i8 1, i8* %3, align 1
  %31 = load %struct.EState*, %struct.EState** %2, align 8
  %32 = getelementptr inbounds %struct.EState, %struct.EState* %31, i32 0, i32 0
  %33 = load %struct.bz_stream*, %struct.bz_stream** %32, align 8
  %34 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %33, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  store i32 %37, i32* %4, align 4
  %38 = load i32, i32* %4, align 4
  %39 = load %struct.EState*, %struct.EState** %2, align 8
  %40 = getelementptr inbounds %struct.EState, %struct.EState* %39, i32 0, i32 13
  %41 = load i32, i32* %40, align 4
  %42 = icmp ne i32 %38, %41
  br i1 %42, label %43, label %93

43:                                               ; preds = %30
  %44 = load %struct.EState*, %struct.EState** %2, align 8
  %45 = getelementptr inbounds %struct.EState, %struct.EState* %44, i32 0, i32 14
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %93

48:                                               ; preds = %43
  %49 = load %struct.EState*, %struct.EState** %2, align 8
  %50 = getelementptr inbounds %struct.EState, %struct.EState* %49, i32 0, i32 13
  %51 = load i32, i32* %50, align 4
  %52 = trunc i32 %51 to i8
  store i8 %52, i8* %5, align 1
  %53 = load %struct.EState*, %struct.EState** %2, align 8
  %54 = getelementptr inbounds %struct.EState, %struct.EState* %53, i32 0, i32 26
  %55 = load i32, i32* %54, align 8
  %56 = shl i32 %55, 8
  %57 = load %struct.EState*, %struct.EState** %2, align 8
  %58 = getelementptr inbounds %struct.EState, %struct.EState* %57, i32 0, i32 26
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 24
  %61 = load i8, i8* %5, align 1
  %62 = zext i8 %61 to i32
  %63 = xor i32 %60, %62
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = xor i32 %56, %66
  %68 = load %struct.EState*, %struct.EState** %2, align 8
  %69 = getelementptr inbounds %struct.EState, %struct.EState* %68, i32 0, i32 26
  store i32 %67, i32* %69, align 8
  %70 = load %struct.EState*, %struct.EState** %2, align 8
  %71 = getelementptr inbounds %struct.EState, %struct.EState* %70, i32 0, i32 22
  %72 = load %struct.EState*, %struct.EState** %2, align 8
  %73 = getelementptr inbounds %struct.EState, %struct.EState* %72, i32 0, i32 13
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds [256 x i8], [256 x i8]* %71, i64 0, i64 %75
  store i8 1, i8* %76, align 1
  %77 = load i8, i8* %5, align 1
  %78 = load %struct.EState*, %struct.EState** %2, align 8
  %79 = getelementptr inbounds %struct.EState, %struct.EState* %78, i32 0, i32 9
  %80 = load i8*, i8** %79, align 8
  %81 = load %struct.EState*, %struct.EState** %2, align 8
  %82 = getelementptr inbounds %struct.EState, %struct.EState* %81, i32 0, i32 17
  %83 = load i32, i32* %82, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %80, i64 %84
  store i8 %77, i8* %85, align 1
  %86 = load %struct.EState*, %struct.EState** %2, align 8
  %87 = getelementptr inbounds %struct.EState, %struct.EState* %86, i32 0, i32 17
  %88 = load i32, i32* %87, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %87, align 4
  %90 = load i32, i32* %4, align 4
  %91 = load %struct.EState*, %struct.EState** %2, align 8
  %92 = getelementptr inbounds %struct.EState, %struct.EState* %91, i32 0, i32 13
  store i32 %90, i32* %92, align 4
  br label %123

93:                                               ; preds = %43, %30
  %94 = load i32, i32* %4, align 4
  %95 = load %struct.EState*, %struct.EState** %2, align 8
  %96 = getelementptr inbounds %struct.EState, %struct.EState* %95, i32 0, i32 13
  %97 = load i32, i32* %96, align 4
  %98 = icmp ne i32 %94, %97
  br i1 %98, label %104, label %99

99:                                               ; preds = %93
  %100 = load %struct.EState*, %struct.EState** %2, align 8
  %101 = getelementptr inbounds %struct.EState, %struct.EState* %100, i32 0, i32 14
  %102 = load i32, i32* %101, align 8
  %103 = icmp eq i32 %102, 255
  br i1 %103, label %104, label %117

104:                                              ; preds = %99, %93
  %105 = load %struct.EState*, %struct.EState** %2, align 8
  %106 = getelementptr inbounds %struct.EState, %struct.EState* %105, i32 0, i32 13
  %107 = load i32, i32* %106, align 4
  %108 = icmp ult i32 %107, 256
  br i1 %108, label %109, label %111

109:                                              ; preds = %104
  %110 = load %struct.EState*, %struct.EState** %2, align 8
  call void @add_pair_to_block(%struct.EState* %110)
  br label %111

111:                                              ; preds = %109, %104
  %112 = load i32, i32* %4, align 4
  %113 = load %struct.EState*, %struct.EState** %2, align 8
  %114 = getelementptr inbounds %struct.EState, %struct.EState* %113, i32 0, i32 13
  store i32 %112, i32* %114, align 4
  %115 = load %struct.EState*, %struct.EState** %2, align 8
  %116 = getelementptr inbounds %struct.EState, %struct.EState* %115, i32 0, i32 14
  store i32 1, i32* %116, align 8
  br label %122

117:                                              ; preds = %99
  %118 = load %struct.EState*, %struct.EState** %2, align 8
  %119 = getelementptr inbounds %struct.EState, %struct.EState* %118, i32 0, i32 14
  %120 = load i32, i32* %119, align 8
  %121 = add nsw i32 %120, 1
  store i32 %121, i32* %119, align 8
  br label %122

122:                                              ; preds = %117, %111
  br label %123

123:                                              ; preds = %122, %48
  %124 = load %struct.EState*, %struct.EState** %2, align 8
  %125 = getelementptr inbounds %struct.EState, %struct.EState* %124, i32 0, i32 0
  %126 = load %struct.bz_stream*, %struct.bz_stream** %125, align 8
  %127 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %126, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = getelementptr inbounds i8, i8* %128, i32 1
  store i8* %129, i8** %127, align 8
  %130 = load %struct.EState*, %struct.EState** %2, align 8
  %131 = getelementptr inbounds %struct.EState, %struct.EState* %130, i32 0, i32 0
  %132 = load %struct.bz_stream*, %struct.bz_stream** %131, align 8
  %133 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %132, i32 0, i32 1
  %134 = load i32, i32* %133, align 8
  %135 = add i32 %134, -1
  store i32 %135, i32* %133, align 8
  %136 = load %struct.EState*, %struct.EState** %2, align 8
  %137 = getelementptr inbounds %struct.EState, %struct.EState* %136, i32 0, i32 0
  %138 = load %struct.bz_stream*, %struct.bz_stream** %137, align 8
  %139 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %138, i32 0, i32 2
  %140 = load i32, i32* %139, align 4
  %141 = add i32 %140, 1
  store i32 %141, i32* %139, align 4
  %142 = load %struct.EState*, %struct.EState** %2, align 8
  %143 = getelementptr inbounds %struct.EState, %struct.EState* %142, i32 0, i32 0
  %144 = load %struct.bz_stream*, %struct.bz_stream** %143, align 8
  %145 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %144, i32 0, i32 2
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %155

148:                                              ; preds = %123
  %149 = load %struct.EState*, %struct.EState** %2, align 8
  %150 = getelementptr inbounds %struct.EState, %struct.EState* %149, i32 0, i32 0
  %151 = load %struct.bz_stream*, %struct.bz_stream** %150, align 8
  %152 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %151, i32 0, i32 3
  %153 = load i32, i32* %152, align 8
  %154 = add i32 %153, 1
  store i32 %154, i32* %152, align 8
  br label %155

155:                                              ; preds = %148, %123
  br label %13

156:                                              ; preds = %29, %21
  br label %312

157:                                              ; preds = %1
  br label %158

158:                                              ; preds = %157, %306
  %159 = load %struct.EState*, %struct.EState** %2, align 8
  %160 = getelementptr inbounds %struct.EState, %struct.EState* %159, i32 0, i32 17
  %161 = load i32, i32* %160, align 4
  %162 = load %struct.EState*, %struct.EState** %2, align 8
  %163 = getelementptr inbounds %struct.EState, %struct.EState* %162, i32 0, i32 18
  %164 = load i32, i32* %163, align 8
  %165 = icmp sge i32 %161, %164
  br i1 %165, label %166, label %167

166:                                              ; preds = %158
  br label %311

167:                                              ; preds = %158
  %168 = load %struct.EState*, %struct.EState** %2, align 8
  %169 = getelementptr inbounds %struct.EState, %struct.EState* %168, i32 0, i32 0
  %170 = load %struct.bz_stream*, %struct.bz_stream** %169, align 8
  %171 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %170, i32 0, i32 1
  %172 = load i32, i32* %171, align 8
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %167
  br label %311

175:                                              ; preds = %167
  %176 = load %struct.EState*, %struct.EState** %2, align 8
  %177 = getelementptr inbounds %struct.EState, %struct.EState* %176, i32 0, i32 3
  %178 = load i32, i32* %177, align 8
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %175
  br label %311

181:                                              ; preds = %175
  store i8 1, i8* %3, align 1
  %182 = load %struct.EState*, %struct.EState** %2, align 8
  %183 = getelementptr inbounds %struct.EState, %struct.EState* %182, i32 0, i32 0
  %184 = load %struct.bz_stream*, %struct.bz_stream** %183, align 8
  %185 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %184, i32 0, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  store i32 %188, i32* %6, align 4
  %189 = load i32, i32* %6, align 4
  %190 = load %struct.EState*, %struct.EState** %2, align 8
  %191 = getelementptr inbounds %struct.EState, %struct.EState* %190, i32 0, i32 13
  %192 = load i32, i32* %191, align 4
  %193 = icmp ne i32 %189, %192
  br i1 %193, label %194, label %244

194:                                              ; preds = %181
  %195 = load %struct.EState*, %struct.EState** %2, align 8
  %196 = getelementptr inbounds %struct.EState, %struct.EState* %195, i32 0, i32 14
  %197 = load i32, i32* %196, align 8
  %198 = icmp eq i32 %197, 1
  br i1 %198, label %199, label %244

199:                                              ; preds = %194
  %200 = load %struct.EState*, %struct.EState** %2, align 8
  %201 = getelementptr inbounds %struct.EState, %struct.EState* %200, i32 0, i32 13
  %202 = load i32, i32* %201, align 4
  %203 = trunc i32 %202 to i8
  store i8 %203, i8* %7, align 1
  %204 = load %struct.EState*, %struct.EState** %2, align 8
  %205 = getelementptr inbounds %struct.EState, %struct.EState* %204, i32 0, i32 26
  %206 = load i32, i32* %205, align 8
  %207 = shl i32 %206, 8
  %208 = load %struct.EState*, %struct.EState** %2, align 8
  %209 = getelementptr inbounds %struct.EState, %struct.EState* %208, i32 0, i32 26
  %210 = load i32, i32* %209, align 8
  %211 = lshr i32 %210, 24
  %212 = load i8, i8* %7, align 1
  %213 = zext i8 %212 to i32
  %214 = xor i32 %211, %213
  %215 = zext i32 %214 to i64
  %216 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %215
  %217 = load i32, i32* %216, align 4
  %218 = xor i32 %207, %217
  %219 = load %struct.EState*, %struct.EState** %2, align 8
  %220 = getelementptr inbounds %struct.EState, %struct.EState* %219, i32 0, i32 26
  store i32 %218, i32* %220, align 8
  %221 = load %struct.EState*, %struct.EState** %2, align 8
  %222 = getelementptr inbounds %struct.EState, %struct.EState* %221, i32 0, i32 22
  %223 = load %struct.EState*, %struct.EState** %2, align 8
  %224 = getelementptr inbounds %struct.EState, %struct.EState* %223, i32 0, i32 13
  %225 = load i32, i32* %224, align 4
  %226 = zext i32 %225 to i64
  %227 = getelementptr inbounds [256 x i8], [256 x i8]* %222, i64 0, i64 %226
  store i8 1, i8* %227, align 1
  %228 = load i8, i8* %7, align 1
  %229 = load %struct.EState*, %struct.EState** %2, align 8
  %230 = getelementptr inbounds %struct.EState, %struct.EState* %229, i32 0, i32 9
  %231 = load i8*, i8** %230, align 8
  %232 = load %struct.EState*, %struct.EState** %2, align 8
  %233 = getelementptr inbounds %struct.EState, %struct.EState* %232, i32 0, i32 17
  %234 = load i32, i32* %233, align 4
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds i8, i8* %231, i64 %235
  store i8 %228, i8* %236, align 1
  %237 = load %struct.EState*, %struct.EState** %2, align 8
  %238 = getelementptr inbounds %struct.EState, %struct.EState* %237, i32 0, i32 17
  %239 = load i32, i32* %238, align 4
  %240 = add nsw i32 %239, 1
  store i32 %240, i32* %238, align 4
  %241 = load i32, i32* %6, align 4
  %242 = load %struct.EState*, %struct.EState** %2, align 8
  %243 = getelementptr inbounds %struct.EState, %struct.EState* %242, i32 0, i32 13
  store i32 %241, i32* %243, align 4
  br label %274

244:                                              ; preds = %194, %181
  %245 = load i32, i32* %6, align 4
  %246 = load %struct.EState*, %struct.EState** %2, align 8
  %247 = getelementptr inbounds %struct.EState, %struct.EState* %246, i32 0, i32 13
  %248 = load i32, i32* %247, align 4
  %249 = icmp ne i32 %245, %248
  br i1 %249, label %255, label %250

250:                                              ; preds = %244
  %251 = load %struct.EState*, %struct.EState** %2, align 8
  %252 = getelementptr inbounds %struct.EState, %struct.EState* %251, i32 0, i32 14
  %253 = load i32, i32* %252, align 8
  %254 = icmp eq i32 %253, 255
  br i1 %254, label %255, label %268

255:                                              ; preds = %250, %244
  %256 = load %struct.EState*, %struct.EState** %2, align 8
  %257 = getelementptr inbounds %struct.EState, %struct.EState* %256, i32 0, i32 13
  %258 = load i32, i32* %257, align 4
  %259 = icmp ult i32 %258, 256
  br i1 %259, label %260, label %262

260:                                              ; preds = %255
  %261 = load %struct.EState*, %struct.EState** %2, align 8
  call void @add_pair_to_block(%struct.EState* %261)
  br label %262

262:                                              ; preds = %260, %255
  %263 = load i32, i32* %6, align 4
  %264 = load %struct.EState*, %struct.EState** %2, align 8
  %265 = getelementptr inbounds %struct.EState, %struct.EState* %264, i32 0, i32 13
  store i32 %263, i32* %265, align 4
  %266 = load %struct.EState*, %struct.EState** %2, align 8
  %267 = getelementptr inbounds %struct.EState, %struct.EState* %266, i32 0, i32 14
  store i32 1, i32* %267, align 8
  br label %273

268:                                              ; preds = %250
  %269 = load %struct.EState*, %struct.EState** %2, align 8
  %270 = getelementptr inbounds %struct.EState, %struct.EState* %269, i32 0, i32 14
  %271 = load i32, i32* %270, align 8
  %272 = add nsw i32 %271, 1
  store i32 %272, i32* %270, align 8
  br label %273

273:                                              ; preds = %268, %262
  br label %274

274:                                              ; preds = %273, %199
  %275 = load %struct.EState*, %struct.EState** %2, align 8
  %276 = getelementptr inbounds %struct.EState, %struct.EState* %275, i32 0, i32 0
  %277 = load %struct.bz_stream*, %struct.bz_stream** %276, align 8
  %278 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %277, i32 0, i32 0
  %279 = load i8*, i8** %278, align 8
  %280 = getelementptr inbounds i8, i8* %279, i32 1
  store i8* %280, i8** %278, align 8
  %281 = load %struct.EState*, %struct.EState** %2, align 8
  %282 = getelementptr inbounds %struct.EState, %struct.EState* %281, i32 0, i32 0
  %283 = load %struct.bz_stream*, %struct.bz_stream** %282, align 8
  %284 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %283, i32 0, i32 1
  %285 = load i32, i32* %284, align 8
  %286 = add i32 %285, -1
  store i32 %286, i32* %284, align 8
  %287 = load %struct.EState*, %struct.EState** %2, align 8
  %288 = getelementptr inbounds %struct.EState, %struct.EState* %287, i32 0, i32 0
  %289 = load %struct.bz_stream*, %struct.bz_stream** %288, align 8
  %290 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %289, i32 0, i32 2
  %291 = load i32, i32* %290, align 4
  %292 = add i32 %291, 1
  store i32 %292, i32* %290, align 4
  %293 = load %struct.EState*, %struct.EState** %2, align 8
  %294 = getelementptr inbounds %struct.EState, %struct.EState* %293, i32 0, i32 0
  %295 = load %struct.bz_stream*, %struct.bz_stream** %294, align 8
  %296 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %295, i32 0, i32 2
  %297 = load i32, i32* %296, align 4
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %306

299:                                              ; preds = %274
  %300 = load %struct.EState*, %struct.EState** %2, align 8
  %301 = getelementptr inbounds %struct.EState, %struct.EState* %300, i32 0, i32 0
  %302 = load %struct.bz_stream*, %struct.bz_stream** %301, align 8
  %303 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %302, i32 0, i32 3
  %304 = load i32, i32* %303, align 8
  %305 = add i32 %304, 1
  store i32 %305, i32* %303, align 8
  br label %306

306:                                              ; preds = %299, %274
  %307 = load %struct.EState*, %struct.EState** %2, align 8
  %308 = getelementptr inbounds %struct.EState, %struct.EState* %307, i32 0, i32 3
  %309 = load i32, i32* %308, align 8
  %310 = add i32 %309, -1
  store i32 %310, i32* %308, align 8
  br label %158

311:                                              ; preds = %180, %174, %166
  br label %312

312:                                              ; preds = %311, %156
  %313 = load i8, i8* %3, align 1
  ret i8 %313
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @flush_RL(%struct.EState* %0) #0 {
  %2 = alloca %struct.EState*, align 8
  store %struct.EState* %0, %struct.EState** %2, align 8
  %3 = load %struct.EState*, %struct.EState** %2, align 8
  %4 = getelementptr inbounds %struct.EState, %struct.EState* %3, i32 0, i32 13
  %5 = load i32, i32* %4, align 4
  %6 = icmp ult i32 %5, 256
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = load %struct.EState*, %struct.EState** %2, align 8
  call void @add_pair_to_block(%struct.EState* %8)
  br label %9

9:                                                ; preds = %7, %1
  %10 = load %struct.EState*, %struct.EState** %2, align 8
  call void @init_RL(%struct.EState* %10)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @add_pair_to_block(%struct.EState* %0) #0 {
  %2 = alloca %struct.EState*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  store %struct.EState* %0, %struct.EState** %2, align 8
  %5 = load %struct.EState*, %struct.EState** %2, align 8
  %6 = getelementptr inbounds %struct.EState, %struct.EState* %5, i32 0, i32 13
  %7 = load i32, i32* %6, align 4
  %8 = trunc i32 %7 to i8
  store i8 %8, i8* %4, align 1
  store i32 0, i32* %3, align 4
  br label %9

9:                                                ; preds = %33, %1
  %10 = load i32, i32* %3, align 4
  %11 = load %struct.EState*, %struct.EState** %2, align 8
  %12 = getelementptr inbounds %struct.EState, %struct.EState* %11, i32 0, i32 14
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %10, %13
  br i1 %14, label %15, label %36

15:                                               ; preds = %9
  %16 = load %struct.EState*, %struct.EState** %2, align 8
  %17 = getelementptr inbounds %struct.EState, %struct.EState* %16, i32 0, i32 26
  %18 = load i32, i32* %17, align 8
  %19 = shl i32 %18, 8
  %20 = load %struct.EState*, %struct.EState** %2, align 8
  %21 = getelementptr inbounds %struct.EState, %struct.EState* %20, i32 0, i32 26
  %22 = load i32, i32* %21, align 8
  %23 = lshr i32 %22, 24
  %24 = load i8, i8* %4, align 1
  %25 = zext i8 %24 to i32
  %26 = xor i32 %23, %25
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = xor i32 %19, %29
  %31 = load %struct.EState*, %struct.EState** %2, align 8
  %32 = getelementptr inbounds %struct.EState, %struct.EState* %31, i32 0, i32 26
  store i32 %30, i32* %32, align 8
  br label %33

33:                                               ; preds = %15
  %34 = load i32, i32* %3, align 4
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %3, align 4
  br label %9

36:                                               ; preds = %9
  %37 = load %struct.EState*, %struct.EState** %2, align 8
  %38 = getelementptr inbounds %struct.EState, %struct.EState* %37, i32 0, i32 22
  %39 = load %struct.EState*, %struct.EState** %2, align 8
  %40 = getelementptr inbounds %struct.EState, %struct.EState* %39, i32 0, i32 13
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds [256 x i8], [256 x i8]* %38, i64 0, i64 %42
  store i8 1, i8* %43, align 1
  %44 = load %struct.EState*, %struct.EState** %2, align 8
  %45 = getelementptr inbounds %struct.EState, %struct.EState* %44, i32 0, i32 14
  %46 = load i32, i32* %45, align 8
  switch i32 %46, label %128 [
    i32 1, label %47
    i32 2, label %61
    i32 3, label %88
  ]

47:                                               ; preds = %36
  %48 = load i8, i8* %4, align 1
  %49 = load %struct.EState*, %struct.EState** %2, align 8
  %50 = getelementptr inbounds %struct.EState, %struct.EState* %49, i32 0, i32 9
  %51 = load i8*, i8** %50, align 8
  %52 = load %struct.EState*, %struct.EState** %2, align 8
  %53 = getelementptr inbounds %struct.EState, %struct.EState* %52, i32 0, i32 17
  %54 = load i32, i32* %53, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %51, i64 %55
  store i8 %48, i8* %56, align 1
  %57 = load %struct.EState*, %struct.EState** %2, align 8
  %58 = getelementptr inbounds %struct.EState, %struct.EState* %57, i32 0, i32 17
  %59 = load i32, i32* %58, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %58, align 4
  br label %206

61:                                               ; preds = %36
  %62 = load i8, i8* %4, align 1
  %63 = load %struct.EState*, %struct.EState** %2, align 8
  %64 = getelementptr inbounds %struct.EState, %struct.EState* %63, i32 0, i32 9
  %65 = load i8*, i8** %64, align 8
  %66 = load %struct.EState*, %struct.EState** %2, align 8
  %67 = getelementptr inbounds %struct.EState, %struct.EState* %66, i32 0, i32 17
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* %65, i64 %69
  store i8 %62, i8* %70, align 1
  %71 = load %struct.EState*, %struct.EState** %2, align 8
  %72 = getelementptr inbounds %struct.EState, %struct.EState* %71, i32 0, i32 17
  %73 = load i32, i32* %72, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %72, align 4
  %75 = load i8, i8* %4, align 1
  %76 = load %struct.EState*, %struct.EState** %2, align 8
  %77 = getelementptr inbounds %struct.EState, %struct.EState* %76, i32 0, i32 9
  %78 = load i8*, i8** %77, align 8
  %79 = load %struct.EState*, %struct.EState** %2, align 8
  %80 = getelementptr inbounds %struct.EState, %struct.EState* %79, i32 0, i32 17
  %81 = load i32, i32* %80, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %78, i64 %82
  store i8 %75, i8* %83, align 1
  %84 = load %struct.EState*, %struct.EState** %2, align 8
  %85 = getelementptr inbounds %struct.EState, %struct.EState* %84, i32 0, i32 17
  %86 = load i32, i32* %85, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %85, align 4
  br label %206

88:                                               ; preds = %36
  %89 = load i8, i8* %4, align 1
  %90 = load %struct.EState*, %struct.EState** %2, align 8
  %91 = getelementptr inbounds %struct.EState, %struct.EState* %90, i32 0, i32 9
  %92 = load i8*, i8** %91, align 8
  %93 = load %struct.EState*, %struct.EState** %2, align 8
  %94 = getelementptr inbounds %struct.EState, %struct.EState* %93, i32 0, i32 17
  %95 = load i32, i32* %94, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %92, i64 %96
  store i8 %89, i8* %97, align 1
  %98 = load %struct.EState*, %struct.EState** %2, align 8
  %99 = getelementptr inbounds %struct.EState, %struct.EState* %98, i32 0, i32 17
  %100 = load i32, i32* %99, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %99, align 4
  %102 = load i8, i8* %4, align 1
  %103 = load %struct.EState*, %struct.EState** %2, align 8
  %104 = getelementptr inbounds %struct.EState, %struct.EState* %103, i32 0, i32 9
  %105 = load i8*, i8** %104, align 8
  %106 = load %struct.EState*, %struct.EState** %2, align 8
  %107 = getelementptr inbounds %struct.EState, %struct.EState* %106, i32 0, i32 17
  %108 = load i32, i32* %107, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds i8, i8* %105, i64 %109
  store i8 %102, i8* %110, align 1
  %111 = load %struct.EState*, %struct.EState** %2, align 8
  %112 = getelementptr inbounds %struct.EState, %struct.EState* %111, i32 0, i32 17
  %113 = load i32, i32* %112, align 4
  %114 = add nsw i32 %113, 1
  store i32 %114, i32* %112, align 4
  %115 = load i8, i8* %4, align 1
  %116 = load %struct.EState*, %struct.EState** %2, align 8
  %117 = getelementptr inbounds %struct.EState, %struct.EState* %116, i32 0, i32 9
  %118 = load i8*, i8** %117, align 8
  %119 = load %struct.EState*, %struct.EState** %2, align 8
  %120 = getelementptr inbounds %struct.EState, %struct.EState* %119, i32 0, i32 17
  %121 = load i32, i32* %120, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %118, i64 %122
  store i8 %115, i8* %123, align 1
  %124 = load %struct.EState*, %struct.EState** %2, align 8
  %125 = getelementptr inbounds %struct.EState, %struct.EState* %124, i32 0, i32 17
  %126 = load i32, i32* %125, align 4
  %127 = add nsw i32 %126, 1
  store i32 %127, i32* %125, align 4
  br label %206

128:                                              ; preds = %36
  %129 = load %struct.EState*, %struct.EState** %2, align 8
  %130 = getelementptr inbounds %struct.EState, %struct.EState* %129, i32 0, i32 22
  %131 = load %struct.EState*, %struct.EState** %2, align 8
  %132 = getelementptr inbounds %struct.EState, %struct.EState* %131, i32 0, i32 14
  %133 = load i32, i32* %132, align 8
  %134 = sub nsw i32 %133, 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [256 x i8], [256 x i8]* %130, i64 0, i64 %135
  store i8 1, i8* %136, align 1
  %137 = load i8, i8* %4, align 1
  %138 = load %struct.EState*, %struct.EState** %2, align 8
  %139 = getelementptr inbounds %struct.EState, %struct.EState* %138, i32 0, i32 9
  %140 = load i8*, i8** %139, align 8
  %141 = load %struct.EState*, %struct.EState** %2, align 8
  %142 = getelementptr inbounds %struct.EState, %struct.EState* %141, i32 0, i32 17
  %143 = load i32, i32* %142, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds i8, i8* %140, i64 %144
  store i8 %137, i8* %145, align 1
  %146 = load %struct.EState*, %struct.EState** %2, align 8
  %147 = getelementptr inbounds %struct.EState, %struct.EState* %146, i32 0, i32 17
  %148 = load i32, i32* %147, align 4
  %149 = add nsw i32 %148, 1
  store i32 %149, i32* %147, align 4
  %150 = load i8, i8* %4, align 1
  %151 = load %struct.EState*, %struct.EState** %2, align 8
  %152 = getelementptr inbounds %struct.EState, %struct.EState* %151, i32 0, i32 9
  %153 = load i8*, i8** %152, align 8
  %154 = load %struct.EState*, %struct.EState** %2, align 8
  %155 = getelementptr inbounds %struct.EState, %struct.EState* %154, i32 0, i32 17
  %156 = load i32, i32* %155, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i8, i8* %153, i64 %157
  store i8 %150, i8* %158, align 1
  %159 = load %struct.EState*, %struct.EState** %2, align 8
  %160 = getelementptr inbounds %struct.EState, %struct.EState* %159, i32 0, i32 17
  %161 = load i32, i32* %160, align 4
  %162 = add nsw i32 %161, 1
  store i32 %162, i32* %160, align 4
  %163 = load i8, i8* %4, align 1
  %164 = load %struct.EState*, %struct.EState** %2, align 8
  %165 = getelementptr inbounds %struct.EState, %struct.EState* %164, i32 0, i32 9
  %166 = load i8*, i8** %165, align 8
  %167 = load %struct.EState*, %struct.EState** %2, align 8
  %168 = getelementptr inbounds %struct.EState, %struct.EState* %167, i32 0, i32 17
  %169 = load i32, i32* %168, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i8, i8* %166, i64 %170
  store i8 %163, i8* %171, align 1
  %172 = load %struct.EState*, %struct.EState** %2, align 8
  %173 = getelementptr inbounds %struct.EState, %struct.EState* %172, i32 0, i32 17
  %174 = load i32, i32* %173, align 4
  %175 = add nsw i32 %174, 1
  store i32 %175, i32* %173, align 4
  %176 = load i8, i8* %4, align 1
  %177 = load %struct.EState*, %struct.EState** %2, align 8
  %178 = getelementptr inbounds %struct.EState, %struct.EState* %177, i32 0, i32 9
  %179 = load i8*, i8** %178, align 8
  %180 = load %struct.EState*, %struct.EState** %2, align 8
  %181 = getelementptr inbounds %struct.EState, %struct.EState* %180, i32 0, i32 17
  %182 = load i32, i32* %181, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds i8, i8* %179, i64 %183
  store i8 %176, i8* %184, align 1
  %185 = load %struct.EState*, %struct.EState** %2, align 8
  %186 = getelementptr inbounds %struct.EState, %struct.EState* %185, i32 0, i32 17
  %187 = load i32, i32* %186, align 4
  %188 = add nsw i32 %187, 1
  store i32 %188, i32* %186, align 4
  %189 = load %struct.EState*, %struct.EState** %2, align 8
  %190 = getelementptr inbounds %struct.EState, %struct.EState* %189, i32 0, i32 14
  %191 = load i32, i32* %190, align 8
  %192 = sub nsw i32 %191, 4
  %193 = trunc i32 %192 to i8
  %194 = load %struct.EState*, %struct.EState** %2, align 8
  %195 = getelementptr inbounds %struct.EState, %struct.EState* %194, i32 0, i32 9
  %196 = load i8*, i8** %195, align 8
  %197 = load %struct.EState*, %struct.EState** %2, align 8
  %198 = getelementptr inbounds %struct.EState, %struct.EState* %197, i32 0, i32 17
  %199 = load i32, i32* %198, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i8, i8* %196, i64 %200
  store i8 %193, i8* %201, align 1
  %202 = load %struct.EState*, %struct.EState** %2, align 8
  %203 = getelementptr inbounds %struct.EState, %struct.EState* %202, i32 0, i32 17
  %204 = load i32, i32* %203, align 4
  %205 = add nsw i32 %204, 1
  store i32 %205, i32* %203, align 4
  br label %206

206:                                              ; preds = %128, %88, %61, %47
  ret void
}

declare dso_local i32 @fgetc(%struct._IO_FILE*) #1

declare dso_local i32 @ungetc(i32, %struct._IO_FILE*) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #6

; Function Attrs: nounwind
declare dso_local i8* @strcat(i8*, i8*) #3

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @showFileNames() #0 {
  %1 = load i8, i8* @noisy, align 1
  %2 = icmp ne i8 %1, 0
  br i1 %2, label %3, label %6

3:                                                ; preds = %0
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  br label %6

6:                                                ; preds = %3, %0
  ret void
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @cleanUpAndFail(i32 %0) #7 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.stat, align 8
  store i32 %0, i32* %2, align 4
  %5 = load i32, i32* @srcMode, align 4
  %6 = icmp eq i32 %5, 3
  br i1 %6, label %7, label %54

7:                                                ; preds = %1
  %8 = load i32, i32* @opMode, align 4
  %9 = icmp ne i32 %8, 3
  br i1 %9, label %10, label %54

10:                                               ; preds = %7
  %11 = load i8, i8* @deleteOutputOnInterrupt, align 1
  %12 = zext i8 %11 to i32
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %54

14:                                               ; preds = %10
  %15 = call i32 @stat(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), %struct.stat* %4) #9
  store i32 %15, i32* %3, align 4
  %16 = load i32, i32* %3, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %40

18:                                               ; preds = %14
  %19 = load i8, i8* @noisy, align 1
  %20 = icmp ne i8 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %18
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %23 = load i8*, i8** @progName, align 8
  %24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.81, i64 0, i64 0), i8* %23, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  br label %25

25:                                               ; preds = %21, %18
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %27 = icmp ne %struct._IO_FILE* %26, null
  br i1 %27, label %28, label %31

28:                                               ; preds = %25
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %30 = call i32 @fclose(%struct._IO_FILE* %29)
  br label %31

31:                                               ; preds = %28, %25
  %32 = call i32 @remove(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0)) #9
  store i32 %32, i32* %3, align 4
  %33 = load i32, i32* %3, align 4
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %37 = load i8*, i8** @progName, align 8
  %38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.82, i64 0, i64 0), i8* %37)
  br label %39

39:                                               ; preds = %35, %31
  br label %53

40:                                               ; preds = %14
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %42 = load i8*, i8** @progName, align 8
  %43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.83, i64 0, i64 0), i8* %42)
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %45 = load i8*, i8** @progName, align 8
  %46 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.84, i64 0, i64 0), i8* %45)
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %48 = load i8*, i8** @progName, align 8
  %49 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %47, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.85, i64 0, i64 0), i8* %48, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0))
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %51 = load i8*, i8** @progName, align 8
  %52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %50, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.86, i64 0, i64 0), i8* %51)
  br label %53

53:                                               ; preds = %40, %39
  br label %54

54:                                               ; preds = %53, %10, %7, %1
  %55 = load i8, i8* @noisy, align 1
  %56 = zext i8 %55 to i32
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %74

58:                                               ; preds = %54
  %59 = load i32, i32* @numFileNames, align 4
  %60 = icmp sgt i32 %59, 0
  br i1 %60, label %61, label %74

61:                                               ; preds = %58
  %62 = load i32, i32* @numFilesProcessed, align 4
  %63 = load i32, i32* @numFileNames, align 4
  %64 = icmp slt i32 %62, %63
  br i1 %64, label %65, label %74

65:                                               ; preds = %61
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %67 = load i8*, i8** @progName, align 8
  %68 = load i8*, i8** @progName, align 8
  %69 = load i32, i32* @numFileNames, align 4
  %70 = load i32, i32* @numFileNames, align 4
  %71 = load i32, i32* @numFilesProcessed, align 4
  %72 = sub nsw i32 %70, %71
  %73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %66, i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.87, i64 0, i64 0), i8* %67, i8* %68, i32 %69, i32 %72)
  br label %74

74:                                               ; preds = %65, %61, %58, %54
  %75 = load i32, i32* %2, align 4
  call void @setExit(i32 %75)
  %76 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %76) #8
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cadvise() #0 {
  %1 = load i8, i8* @noisy, align 1
  %2 = icmp ne i8 %1, 0
  br i1 %2, label %3, label %6

3:                                                ; preds = %0
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([241 x i8], [241 x i8]* @.str.88, i64 0, i64 0))
  br label %6

6:                                                ; preds = %3, %0
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #3

; Function Attrs: nounwind
declare dso_local i32 @remove(i8*) #3

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #3

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.zzzz* @mkCell() #0 {
  %1 = alloca %struct.zzzz*, align 8
  %2 = call i8* @myMalloc(i32 16)
  %3 = bitcast i8* %2 to %struct.zzzz*
  store %struct.zzzz* %3, %struct.zzzz** %1, align 8
  %4 = load %struct.zzzz*, %struct.zzzz** %1, align 8
  %5 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4, i32 0, i32 0
  store i8* null, i8** %5, align 8
  %6 = load %struct.zzzz*, %struct.zzzz** %1, align 8
  %7 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %6, i32 0, i32 1
  store %struct.zzzz* null, %struct.zzzz** %7, align 8
  %8 = load %struct.zzzz*, %struct.zzzz** %1, align 8
  ret %struct.zzzz* %8
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @myMalloc(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  %4 = load i32, i32* %2, align 4
  %5 = sext i32 %4 to i64
  %6 = call noalias i8* @malloc(i64 %5) #9
  store i8* %6, i8** %3, align 8
  %7 = load i8*, i8** %3, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  call void @outOfMemory() #12
  unreachable

10:                                               ; preds = %1
  %11 = load i8*, i8** %3, align 8
  ret i8* %11
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #3

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @outOfMemory() #7 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = load i8*, i8** @progName, align 8
  %3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.90, i64 0, i64 0), i8* %2)
  call void @showFileNames()
  call void @cleanUpAndFail(i32 1) #12
  unreachable
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @panic(i8* %0) #7 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %4 = load i8*, i8** @progName, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.113, i64 0, i64 0), i8* %4, i8* %5)
  call void @showFileNames()
  call void @cleanUpAndFail(i32 3) #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @containsDubiousChars(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  ret i8 0
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @fileExists(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8, align 1
  store i8* %0, i8** %2, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = call %struct._IO_FILE* @fopen(i8* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i64 0, i64 0))
  store %struct._IO_FILE* %6, %struct._IO_FILE** %3, align 8
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %8 = icmp ne %struct._IO_FILE* %7, null
  %9 = zext i1 %8 to i32
  %10 = trunc i32 %9 to i8
  store i8 %10, i8* %4, align 1
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %12 = icmp ne %struct._IO_FILE* %11, null
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %15 = call i32 @fclose(%struct._IO_FILE* %14)
  br label %16

16:                                               ; preds = %13, %1
  %17 = load i8, i8* %4, align 1
  ret i8 %17
}

; Function Attrs: nounwind
declare dso_local i8* @strerror(i32) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #6

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @hasSuffix(i8* %0, i8* %1) #0 {
  %3 = alloca i8, align 1
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %8 = load i8*, i8** %4, align 8
  %9 = call i64 @strlen(i8* %8) #11
  %10 = trunc i64 %9 to i32
  store i32 %10, i32* %6, align 4
  %11 = load i8*, i8** %5, align 8
  %12 = call i64 @strlen(i8* %11) #11
  %13 = trunc i64 %12 to i32
  store i32 %13, i32* %7, align 4
  %14 = load i32, i32* %6, align 4
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  store i8 0, i8* %3, align 1
  br label %32

18:                                               ; preds = %2
  %19 = load i8*, i8** %4, align 8
  %20 = load i32, i32* %6, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %19, i64 %21
  %23 = load i32, i32* %7, align 4
  %24 = sext i32 %23 to i64
  %25 = sub i64 0, %24
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8*, i8** %5, align 8
  %28 = call i32 @strcmp(i8* %26, i8* %27) #11
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %18
  store i8 1, i8* %3, align 1
  br label %32

31:                                               ; preds = %18
  store i8 0, i8* %3, align 1
  br label %32

32:                                               ; preds = %31, %30, %17
  %33 = load i8, i8* %3, align 1
  ret i8 %33
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @notAStandardFile(i8* %0) #0 {
  %2 = alloca i8, align 1
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.stat, align 8
  store i8* %0, i8** %3, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = call i32 @lstat(i8* %6, %struct.stat* %5) #9
  store i32 %7, i32* %4, align 4
  %8 = load i32, i32* %4, align 4
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %1
  store i8 1, i8* %2, align 1
  br label %18

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 61440
  %15 = icmp eq i32 %14, 32768
  br i1 %15, label %16, label %17

16:                                               ; preds = %11
  store i8 0, i8* %2, align 1
  br label %18

17:                                               ; preds = %11
  store i8 1, i8* %2, align 1
  br label %18

18:                                               ; preds = %17, %16, %10
  %19 = load i8, i8* %2, align 1
  ret i8 %19
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @countHardLinks(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.stat, align 8
  store i8* %0, i8** %3, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = call i32 @lstat(i8* %6, %struct.stat* %5) #9
  store i32 %7, i32* %4, align 4
  %8 = load i32, i32* %4, align 4
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4
  br label %16

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %13, 1
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %2, align 4
  br label %16

16:                                               ; preds = %11, %10
  %17 = load i32, i32* %2, align 4
  ret i32 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @saveInputFileMetaInfo(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = call i32 @stat(i8* %4, %struct.stat* @fileMetaInfo) #9
  store i32 %5, i32* %3, align 4
  %6 = load i32, i32* %3, align 4
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  call void @ioError() #12
  unreachable

9:                                                ; preds = %1
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @isatty(i32) #3

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @pad(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = call i64 @strlen(i8* %4) #11
  %6 = trunc i64 %5 to i32
  %7 = load i32, i32* @longestFileName, align 4
  %8 = icmp sge i32 %6, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  br label %25

10:                                               ; preds = %1
  store i32 1, i32* %3, align 4
  br label %11

11:                                               ; preds = %22, %10
  %12 = load i32, i32* %3, align 4
  %13 = load i32, i32* @longestFileName, align 4
  %14 = load i8*, i8** %2, align 8
  %15 = call i64 @strlen(i8* %14) #11
  %16 = trunc i64 %15 to i32
  %17 = sub nsw i32 %13, %16
  %18 = icmp sle i32 %12, %17
  br i1 %18, label %19, label %25

19:                                               ; preds = %11
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.114, i64 0, i64 0))
  br label %22

22:                                               ; preds = %19
  %23 = load i32, i32* %3, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %3, align 4
  br label %11

25:                                               ; preds = %9, %11
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @compressStream(%struct._IO_FILE* %0, %struct._IO_FILE* %1) #0 {
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca [5000 x i8], align 16
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca [32 x i8], align 16
  %16 = alloca [32 x i8], align 16
  %17 = alloca %struct.UInt64, align 1
  %18 = alloca %struct.UInt64, align 1
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8
  store i8* null, i8** %5, align 8
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %22 = call i32 @ferror(%struct._IO_FILE* %21) #9
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %2
  br label %155

25:                                               ; preds = %2
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %27 = call i32 @ferror(%struct._IO_FILE* %26) #9
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  br label %155

30:                                               ; preds = %25
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %32 = load i32, i32* @blockSize100k, align 4
  %33 = load i32, i32* @verbosity, align 4
  %34 = load i32, i32* @workFactor, align 4
  %35 = call i8* @BZ2_bzWriteOpen(i32* %12, %struct._IO_FILE* %31, i32 %32, i32 %33, i32 %34)
  store i8* %35, i8** %5, align 8
  %36 = load i32, i32* %12, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %30
  br label %149

39:                                               ; preds = %30
  %40 = load i32, i32* @verbosity, align 4
  %41 = icmp sge i32 %40, 2
  br i1 %41, label %42, label %45

42:                                               ; preds = %39
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.59, i64 0, i64 0))
  br label %45

45:                                               ; preds = %42, %39
  br label %46

46:                                               ; preds = %45, %71
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %48 = call zeroext i8 @myfeof(%struct._IO_FILE* %47)
  %49 = icmp ne i8 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  br label %72

51:                                               ; preds = %46
  %52 = getelementptr inbounds [5000 x i8], [5000 x i8]* %6, i64 0, i64 0
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %54 = call i64 @fread(i8* %52, i64 1, i64 5000, %struct._IO_FILE* %53)
  %55 = trunc i64 %54 to i32
  store i32 %55, i32* %7, align 4
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %57 = call i32 @ferror(%struct._IO_FILE* %56) #9
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %51
  br label %155

60:                                               ; preds = %51
  %61 = load i32, i32* %7, align 4
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %67

63:                                               ; preds = %60
  %64 = load i8*, i8** %5, align 8
  %65 = getelementptr inbounds [5000 x i8], [5000 x i8]* %6, i64 0, i64 0
  %66 = load i32, i32* %7, align 4
  call void @BZ2_bzWrite(i32* %12, i8* %64, i8* %65, i32 %66)
  br label %67

67:                                               ; preds = %63, %60
  %68 = load i32, i32* %12, align 4
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  br label %149

71:                                               ; preds = %67
  br label %46

72:                                               ; preds = %50
  %73 = load i8*, i8** %5, align 8
  call void @BZ2_bzWriteClose64(i32* %12, i8* %73, i32 0, i32* %8, i32* %9, i32* %10, i32* %11)
  %74 = load i32, i32* %12, align 4
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %72
  br label %149

77:                                               ; preds = %72
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %79 = call i32 @ferror(%struct._IO_FILE* %78) #9
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %77
  br label %155

82:                                               ; preds = %77
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %84 = call i32 @fflush(%struct._IO_FILE* %83)
  store i32 %84, i32* %14, align 4
  %85 = load i32, i32* %14, align 4
  %86 = icmp eq i32 %85, -1
  br i1 %86, label %87, label %88

87:                                               ; preds = %82
  br label %155

88:                                               ; preds = %82
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %91 = icmp ne %struct._IO_FILE* %89, %90
  br i1 %91, label %92, label %99

92:                                               ; preds = %88
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %94 = call i32 @fclose(%struct._IO_FILE* %93)
  store i32 %94, i32* %14, align 4
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %95 = load i32, i32* %14, align 4
  %96 = icmp eq i32 %95, -1
  br i1 %96, label %97, label %98

97:                                               ; preds = %92
  br label %155

98:                                               ; preds = %92
  br label %99

99:                                               ; preds = %98, %88
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %101 = call i32 @ferror(%struct._IO_FILE* %100) #9
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %99
  br label %155

104:                                              ; preds = %99
  %105 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %106 = call i32 @fclose(%struct._IO_FILE* %105)
  store i32 %106, i32* %14, align 4
  %107 = load i32, i32* %14, align 4
  %108 = icmp eq i32 %107, -1
  br i1 %108, label %109, label %110

109:                                              ; preds = %104
  br label %155

110:                                              ; preds = %104
  %111 = load i32, i32* @verbosity, align 4
  %112 = icmp sge i32 %111, 1
  br i1 %112, label %113, label %148

113:                                              ; preds = %110
  %114 = load i32, i32* %8, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %122

116:                                              ; preds = %113
  %117 = load i32, i32* %9, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %116
  %120 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %121 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %120, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.115, i64 0, i64 0))
  br label %147

122:                                              ; preds = %116, %113
  %123 = load i32, i32* %8, align 4
  %124 = load i32, i32* %9, align 4
  call void @uInt64_from_UInt32s(%struct.UInt64* %17, i32 %123, i32 %124)
  %125 = load i32, i32* %10, align 4
  %126 = load i32, i32* %11, align 4
  call void @uInt64_from_UInt32s(%struct.UInt64* %18, i32 %125, i32 %126)
  %127 = call double @uInt64_to_double(%struct.UInt64* %17)
  store double %127, double* %19, align 8
  %128 = call double @uInt64_to_double(%struct.UInt64* %18)
  store double %128, double* %20, align 8
  %129 = getelementptr inbounds [32 x i8], [32 x i8]* %15, i64 0, i64 0
  call void @uInt64_toAscii(i8* %129, %struct.UInt64* %17)
  %130 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 0
  call void @uInt64_toAscii(i8* %130, %struct.UInt64* %18)
  %131 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %132 = load double, double* %19, align 8
  %133 = load double, double* %20, align 8
  %134 = fdiv double %132, %133
  %135 = load double, double* %20, align 8
  %136 = fmul double 8.000000e+00, %135
  %137 = load double, double* %19, align 8
  %138 = fdiv double %136, %137
  %139 = load double, double* %20, align 8
  %140 = load double, double* %19, align 8
  %141 = fdiv double %139, %140
  %142 = fsub double 1.000000e+00, %141
  %143 = fmul double 1.000000e+02, %142
  %144 = getelementptr inbounds [32 x i8], [32 x i8]* %15, i64 0, i64 0
  %145 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 0
  %146 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %131, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.116, i64 0, i64 0), double %134, double %138, double %143, i8* %144, i8* %145)
  br label %147

147:                                              ; preds = %122, %119
  br label %148

148:                                              ; preds = %147, %110
  ret void

149:                                              ; preds = %76, %70, %38
  %150 = load i8*, i8** %5, align 8
  call void @BZ2_bzWriteClose64(i32* %13, i8* %150, i32 1, i32* %8, i32* %9, i32* %10, i32* %11)
  %151 = load i32, i32* %12, align 4
  switch i32 %151, label %156 [
    i32 -9, label %152
    i32 -3, label %153
    i32 -6, label %154
  ]

152:                                              ; preds = %149
  call void @configError() #12
  unreachable

153:                                              ; preds = %149
  call void @outOfMemory() #12
  unreachable

154:                                              ; preds = %149
  br label %155

155:                                              ; preds = %154, %109, %103, %97, %87, %81, %59, %29, %24
  call void @ioError() #12
  unreachable

156:                                              ; preds = %149
  call void @panic(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.117, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @applySavedMetaInfoToOutputFile(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.utimbuf, align 8
  store i8* %0, i8** %2, align 8
  %5 = load i64, i64* getelementptr inbounds (%struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 11, i32 0), align 8
  %6 = getelementptr inbounds %struct.utimbuf, %struct.utimbuf* %4, i32 0, i32 0
  store i64 %5, i64* %6, align 8
  %7 = load i64, i64* getelementptr inbounds (%struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 12, i32 0), align 8
  %8 = getelementptr inbounds %struct.utimbuf, %struct.utimbuf* %4, i32 0, i32 1
  store i64 %7, i64* %8, align 8
  %9 = load i8*, i8** %2, align 8
  %10 = load i32, i32* getelementptr inbounds (%struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 3), align 8
  %11 = call i32 @chmod(i8* %9, i32 %10) #9
  store i32 %11, i32* %3, align 4
  %12 = load i32, i32* %3, align 4
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  call void @ioError() #12
  unreachable

15:                                               ; preds = %1
  %16 = load i8*, i8** %2, align 8
  %17 = call i32 @utime(i8* %16, %struct.utimbuf* %4) #9
  store i32 %17, i32* %3, align 4
  %18 = load i32, i32* %3, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @ioError() #12
  unreachable

21:                                               ; preds = %15
  %22 = load i8*, i8** %2, align 8
  %23 = load i32, i32* getelementptr inbounds (%struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 4), align 4
  %24 = load i32, i32* getelementptr inbounds (%struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 5), align 8
  %25 = call i32 @chown(i8* %22, i32 %23, i32 %24) #9
  store i32 %25, i32* %3, align 4
  ret void
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @ioError() #7 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = load i8*, i8** @progName, align 8
  %3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.119, i64 0, i64 0), i8* %2)
  %4 = load i8*, i8** @progName, align 8
  call void @perror(i8* %4)
  call void @showFileNames()
  call void @cleanUpAndFail(i32 1) #12
  unreachable
}

; Function Attrs: nounwind
declare dso_local i32 @lstat(i8*, %struct.stat*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @uInt64_from_UInt32s(%struct.UInt64* %0, i32 %1, i32 %2) #0 {
  %4 = alloca %struct.UInt64*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.UInt64* %0, %struct.UInt64** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load i32, i32* %6, align 4
  %8 = lshr i32 %7, 24
  %9 = and i32 %8, 255
  %10 = trunc i32 %9 to i8
  %11 = load %struct.UInt64*, %struct.UInt64** %4, align 8
  %12 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %11, i32 0, i32 0
  %13 = getelementptr inbounds [8 x i8], [8 x i8]* %12, i64 0, i64 7
  store i8 %10, i8* %13, align 1
  %14 = load i32, i32* %6, align 4
  %15 = lshr i32 %14, 16
  %16 = and i32 %15, 255
  %17 = trunc i32 %16 to i8
  %18 = load %struct.UInt64*, %struct.UInt64** %4, align 8
  %19 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %18, i32 0, i32 0
  %20 = getelementptr inbounds [8 x i8], [8 x i8]* %19, i64 0, i64 6
  store i8 %17, i8* %20, align 1
  %21 = load i32, i32* %6, align 4
  %22 = lshr i32 %21, 8
  %23 = and i32 %22, 255
  %24 = trunc i32 %23 to i8
  %25 = load %struct.UInt64*, %struct.UInt64** %4, align 8
  %26 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %25, i32 0, i32 0
  %27 = getelementptr inbounds [8 x i8], [8 x i8]* %26, i64 0, i64 5
  store i8 %24, i8* %27, align 1
  %28 = load i32, i32* %6, align 4
  %29 = and i32 %28, 255
  %30 = trunc i32 %29 to i8
  %31 = load %struct.UInt64*, %struct.UInt64** %4, align 8
  %32 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %31, i32 0, i32 0
  %33 = getelementptr inbounds [8 x i8], [8 x i8]* %32, i64 0, i64 4
  store i8 %30, i8* %33, align 1
  %34 = load i32, i32* %5, align 4
  %35 = lshr i32 %34, 24
  %36 = and i32 %35, 255
  %37 = trunc i32 %36 to i8
  %38 = load %struct.UInt64*, %struct.UInt64** %4, align 8
  %39 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %38, i32 0, i32 0
  %40 = getelementptr inbounds [8 x i8], [8 x i8]* %39, i64 0, i64 3
  store i8 %37, i8* %40, align 1
  %41 = load i32, i32* %5, align 4
  %42 = lshr i32 %41, 16
  %43 = and i32 %42, 255
  %44 = trunc i32 %43 to i8
  %45 = load %struct.UInt64*, %struct.UInt64** %4, align 8
  %46 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %45, i32 0, i32 0
  %47 = getelementptr inbounds [8 x i8], [8 x i8]* %46, i64 0, i64 2
  store i8 %44, i8* %47, align 1
  %48 = load i32, i32* %5, align 4
  %49 = lshr i32 %48, 8
  %50 = and i32 %49, 255
  %51 = trunc i32 %50 to i8
  %52 = load %struct.UInt64*, %struct.UInt64** %4, align 8
  %53 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %52, i32 0, i32 0
  %54 = getelementptr inbounds [8 x i8], [8 x i8]* %53, i64 0, i64 1
  store i8 %51, i8* %54, align 1
  %55 = load i32, i32* %5, align 4
  %56 = and i32 %55, 255
  %57 = trunc i32 %56 to i8
  %58 = load %struct.UInt64*, %struct.UInt64** %4, align 8
  %59 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %58, i32 0, i32 0
  %60 = getelementptr inbounds [8 x i8], [8 x i8]* %59, i64 0, i64 0
  store i8 %57, i8* %60, align 1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal double @uInt64_to_double(%struct.UInt64* %0) #0 {
  %2 = alloca %struct.UInt64*, align 8
  %3 = alloca i32, align 4
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  store %struct.UInt64* %0, %struct.UInt64** %2, align 8
  store double 1.000000e+00, double* %4, align 8
  store double 0.000000e+00, double* %5, align 8
  store i32 0, i32* %3, align 4
  br label %6

6:                                                ; preds = %23, %1
  %7 = load i32, i32* %3, align 4
  %8 = icmp slt i32 %7, 8
  br i1 %8, label %9, label %26

9:                                                ; preds = %6
  %10 = load double, double* %4, align 8
  %11 = load %struct.UInt64*, %struct.UInt64** %2, align 8
  %12 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %11, i32 0, i32 0
  %13 = load i32, i32* %3, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [8 x i8], [8 x i8]* %12, i64 0, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = uitofp i8 %16 to double
  %18 = fmul double %10, %17
  %19 = load double, double* %5, align 8
  %20 = fadd double %19, %18
  store double %20, double* %5, align 8
  %21 = load double, double* %4, align 8
  %22 = fmul double %21, 2.560000e+02
  store double %22, double* %4, align 8
  br label %23

23:                                               ; preds = %9
  %24 = load i32, i32* %3, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %3, align 4
  br label %6

26:                                               ; preds = %6
  %27 = load double, double* %5, align 8
  ret double %27
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @uInt64_toAscii(i8* %0, %struct.UInt64* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.UInt64*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [32 x i8], align 16
  %8 = alloca i32, align 4
  %9 = alloca %struct.UInt64, align 1
  store i8* %0, i8** %3, align 8
  store %struct.UInt64* %1, %struct.UInt64** %4, align 8
  store i32 0, i32* %8, align 4
  %10 = load %struct.UInt64*, %struct.UInt64** %4, align 8
  %11 = bitcast %struct.UInt64* %9 to i8*
  %12 = bitcast %struct.UInt64* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %12, i64 8, i1 false)
  br label %13

13:                                               ; preds = %23, %2
  %14 = call i32 @uInt64_qrm10(%struct.UInt64* %9)
  store i32 %14, i32* %6, align 4
  %15 = load i32, i32* %6, align 4
  %16 = add nsw i32 %15, 48
  %17 = trunc i32 %16 to i8
  %18 = load i32, i32* %8, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 %19
  store i8 %17, i8* %20, align 1
  %21 = load i32, i32* %8, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %8, align 4
  br label %23

23:                                               ; preds = %13
  %24 = call zeroext i8 @uInt64_isZero(%struct.UInt64* %9)
  %25 = icmp ne i8 %24, 0
  %26 = xor i1 %25, true
  br i1 %26, label %13, label %27

27:                                               ; preds = %23
  %28 = load i8*, i8** %3, align 8
  %29 = load i32, i32* %8, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %28, i64 %30
  store i8 0, i8* %31, align 1
  store i32 0, i32* %5, align 4
  br label %32

32:                                               ; preds = %48, %27
  %33 = load i32, i32* %5, align 4
  %34 = load i32, i32* %8, align 4
  %35 = icmp slt i32 %33, %34
  br i1 %35, label %36, label %51

36:                                               ; preds = %32
  %37 = load i32, i32* %8, align 4
  %38 = load i32, i32* %5, align 4
  %39 = sub nsw i32 %37, %38
  %40 = sub nsw i32 %39, 1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = load i8*, i8** %3, align 8
  %45 = load i32, i32* %5, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %44, i64 %46
  store i8 %43, i8* %47, align 1
  br label %48

48:                                               ; preds = %36
  %49 = load i32, i32* %5, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %5, align 4
  br label %32

51:                                               ; preds = %32
  ret void
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @configError() #7 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([236 x i8], [236 x i8]* @.str.118, i64 0, i64 0))
  call void @setExit(i32 3)
  %3 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %3) #8
  unreachable
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @uInt64_qrm10(%struct.UInt64* %0) #0 {
  %2 = alloca %struct.UInt64*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.UInt64* %0, %struct.UInt64** %2, align 8
  store i32 0, i32* %3, align 4
  store i32 7, i32* %5, align 4
  br label %6

6:                                                ; preds = %30, %1
  %7 = load i32, i32* %5, align 4
  %8 = icmp sge i32 %7, 0
  br i1 %8, label %9, label %33

9:                                                ; preds = %6
  %10 = load i32, i32* %3, align 4
  %11 = mul i32 %10, 256
  %12 = load %struct.UInt64*, %struct.UInt64** %2, align 8
  %13 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %12, i32 0, i32 0
  %14 = load i32, i32* %5, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [8 x i8], [8 x i8]* %13, i64 0, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = add i32 %11, %18
  store i32 %19, i32* %4, align 4
  %20 = load i32, i32* %4, align 4
  %21 = udiv i32 %20, 10
  %22 = trunc i32 %21 to i8
  %23 = load %struct.UInt64*, %struct.UInt64** %2, align 8
  %24 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %23, i32 0, i32 0
  %25 = load i32, i32* %5, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [8 x i8], [8 x i8]* %24, i64 0, i64 %26
  store i8 %22, i8* %27, align 1
  %28 = load i32, i32* %4, align 4
  %29 = urem i32 %28, 10
  store i32 %29, i32* %3, align 4
  br label %30

30:                                               ; preds = %9
  %31 = load i32, i32* %5, align 4
  %32 = add nsw i32 %31, -1
  store i32 %32, i32* %5, align 4
  br label %6

33:                                               ; preds = %6
  %34 = load i32, i32* %3, align 4
  ret i32 %34
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @uInt64_isZero(%struct.UInt64* %0) #0 {
  %2 = alloca i8, align 1
  %3 = alloca %struct.UInt64*, align 8
  %4 = alloca i32, align 4
  store %struct.UInt64* %0, %struct.UInt64** %3, align 8
  store i32 0, i32* %4, align 4
  br label %5

5:                                                ; preds = %19, %1
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 8
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = load %struct.UInt64*, %struct.UInt64** %3, align 8
  %10 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %9, i32 0, i32 0
  %11 = load i32, i32* %4, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [8 x i8], [8 x i8]* %10, i64 0, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %8
  store i8 0, i8* %2, align 1
  br label %23

18:                                               ; preds = %8
  br label %19

19:                                               ; preds = %18
  %20 = load i32, i32* %4, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %4, align 4
  br label %5

22:                                               ; preds = %5
  store i8 1, i8* %2, align 1
  br label %23

23:                                               ; preds = %22, %17
  %24 = load i8, i8* %2, align 1
  ret i8 %24
}

; Function Attrs: nounwind
declare dso_local i32 @chmod(i8*, i32) #3

; Function Attrs: nounwind
declare dso_local i32 @utime(i8*, %struct.utimbuf*) #3

; Function Attrs: nounwind
declare dso_local i32 @chown(i8*, i32, i32) #3

declare dso_local void @perror(i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @mapSuffix(i8* %0, i8* %1, i8* %2) #0 {
  %4 = alloca i8, align 1
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  %8 = load i8*, i8** %5, align 8
  %9 = load i8*, i8** %6, align 8
  %10 = call zeroext i8 @hasSuffix(i8* %8, i8* %9)
  %11 = icmp ne i8 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %3
  store i8 0, i8* %4, align 1
  br label %24

13:                                               ; preds = %3
  %14 = load i8*, i8** %5, align 8
  %15 = load i8*, i8** %5, align 8
  %16 = call i64 @strlen(i8* %15) #11
  %17 = load i8*, i8** %6, align 8
  %18 = call i64 @strlen(i8* %17) #11
  %19 = sub i64 %16, %18
  %20 = getelementptr inbounds i8, i8* %14, i64 %19
  store i8 0, i8* %20, align 1
  %21 = load i8*, i8** %5, align 8
  %22 = load i8*, i8** %7, align 8
  %23 = call i8* @strcat(i8* %21, i8* %22) #9
  store i8 1, i8* %4, align 1
  br label %24

24:                                               ; preds = %13, %12
  %25 = load i8, i8* %4, align 1
  ret i8 %25
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @uncompressStream(%struct._IO_FILE* %0, %struct._IO_FILE* %1) #0 {
  %3 = alloca i8, align 1
  %4 = alloca %struct._IO_FILE*, align 8
  %5 = alloca %struct._IO_FILE*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca [5000 x i8], align 16
  %14 = alloca [5000 x i8], align 16
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %4, align 8
  store %struct._IO_FILE* %1, %struct._IO_FILE** %5, align 8
  store i8* null, i8** %6, align 8
  store i32 0, i32* %15, align 4
  store i32 0, i32* %11, align 4
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %18 = call i32 @ferror(%struct._IO_FILE* %17) #9
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %2
  br label %198

21:                                               ; preds = %2
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %23 = call i32 @ferror(%struct._IO_FILE* %22) #9
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %21
  br label %198

26:                                               ; preds = %21
  br label %27

27:                                               ; preds = %26, %115
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %29 = load i32, i32* @verbosity, align 4
  %30 = load i8, i8* @smallMode, align 1
  %31 = zext i8 %30 to i32
  %32 = getelementptr inbounds [5000 x i8], [5000 x i8]* %14, i64 0, i64 0
  %33 = load i32, i32* %15, align 4
  %34 = call i8* @BZ2_bzReadOpen(i32* %7, %struct._IO_FILE* %28, i32 %29, i32 %31, i8* %32, i32 %33)
  store i8* %34, i8** %6, align 8
  %35 = load i8*, i8** %6, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %27
  %38 = load i32, i32* %7, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37, %27
  br label %193

41:                                               ; preds = %37
  %42 = load i32, i32* %11, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %11, align 4
  br label %44

44:                                               ; preds = %74, %41
  %45 = load i32, i32* %7, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %75

47:                                               ; preds = %44
  %48 = load i8*, i8** %6, align 8
  %49 = getelementptr inbounds [5000 x i8], [5000 x i8]* %13, i64 0, i64 0
  %50 = call i32 @BZ2_bzRead(i32* %7, i8* %48, i8* %49, i32 5000)
  store i32 %50, i32* %10, align 4
  %51 = load i32, i32* %7, align 4
  %52 = icmp eq i32 %51, -5
  br i1 %52, label %53, label %54

53:                                               ; preds = %47
  br label %157

54:                                               ; preds = %47
  %55 = load i32, i32* %7, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = load i32, i32* %7, align 4
  %59 = icmp eq i32 %58, 4
  br i1 %59, label %60, label %69

60:                                               ; preds = %57, %54
  %61 = load i32, i32* %10, align 4
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %69

63:                                               ; preds = %60
  %64 = getelementptr inbounds [5000 x i8], [5000 x i8]* %13, i64 0, i64 0
  %65 = load i32, i32* %10, align 4
  %66 = sext i32 %65 to i64
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %68 = call i64 @fwrite(i8* %64, i64 1, i64 %66, %struct._IO_FILE* %67)
  br label %69

69:                                               ; preds = %63, %60, %57
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %71 = call i32 @ferror(%struct._IO_FILE* %70) #9
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %69
  br label %198

74:                                               ; preds = %69
  br label %44

75:                                               ; preds = %44
  %76 = load i32, i32* %7, align 4
  %77 = icmp ne i32 %76, 4
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  br label %193

79:                                               ; preds = %75
  %80 = load i8*, i8** %6, align 8
  call void @BZ2_bzReadGetUnused(i32* %7, i8* %80, i8** %16, i32* %15)
  %81 = load i32, i32* %7, align 4
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %79
  call void @panic(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.129, i64 0, i64 0)) #12
  unreachable

84:                                               ; preds = %79
  store i32 0, i32* %12, align 4
  br label %85

85:                                               ; preds = %98, %84
  %86 = load i32, i32* %12, align 4
  %87 = load i32, i32* %15, align 4
  %88 = icmp slt i32 %86, %87
  br i1 %88, label %89, label %101

89:                                               ; preds = %85
  %90 = load i8*, i8** %16, align 8
  %91 = load i32, i32* %12, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %90, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = load i32, i32* %12, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [5000 x i8], [5000 x i8]* %14, i64 0, i64 %96
  store i8 %94, i8* %97, align 1
  br label %98

98:                                               ; preds = %89
  %99 = load i32, i32* %12, align 4
  %100 = add nsw i32 %99, 1
  store i32 %100, i32* %12, align 4
  br label %85

101:                                              ; preds = %85
  %102 = load i8*, i8** %6, align 8
  call void @BZ2_bzReadClose(i32* %7, i8* %102)
  %103 = load i32, i32* %7, align 4
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %101
  call void @panic(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.129, i64 0, i64 0)) #12
  unreachable

106:                                              ; preds = %101
  %107 = load i32, i32* %15, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %115

109:                                              ; preds = %106
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %111 = call zeroext i8 @myfeof(%struct._IO_FILE* %110)
  %112 = zext i8 %111 to i32
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %109
  br label %116

115:                                              ; preds = %109, %106
  br label %27

116:                                              ; preds = %114
  br label %117

117:                                              ; preds = %191, %116
  %118 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %119 = call i32 @ferror(%struct._IO_FILE* %118) #9
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %117
  br label %198

122:                                              ; preds = %117
  %123 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %124 = call i32 @fclose(%struct._IO_FILE* %123)
  store i32 %124, i32* %9, align 4
  %125 = load i32, i32* %9, align 4
  %126 = icmp eq i32 %125, -1
  br i1 %126, label %127, label %128

127:                                              ; preds = %122
  br label %198

128:                                              ; preds = %122
  %129 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %130 = call i32 @ferror(%struct._IO_FILE* %129) #9
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %128
  br label %198

133:                                              ; preds = %128
  %134 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %135 = call i32 @fflush(%struct._IO_FILE* %134)
  store i32 %135, i32* %9, align 4
  %136 = load i32, i32* %9, align 4
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %133
  br label %198

139:                                              ; preds = %133
  %140 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %141 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %142 = icmp ne %struct._IO_FILE* %140, %141
  br i1 %142, label %143, label %150

143:                                              ; preds = %139
  %144 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %145 = call i32 @fclose(%struct._IO_FILE* %144)
  store i32 %145, i32* %9, align 4
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %146 = load i32, i32* %9, align 4
  %147 = icmp eq i32 %146, -1
  br i1 %147, label %148, label %149

148:                                              ; preds = %143
  br label %198

149:                                              ; preds = %143
  br label %150

150:                                              ; preds = %149, %139
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %151 = load i32, i32* @verbosity, align 4
  %152 = icmp sge i32 %151, 2
  br i1 %152, label %153, label %156

153:                                              ; preds = %150
  %154 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %155 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %154, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.130, i64 0, i64 0))
  br label %156

156:                                              ; preds = %153, %150
  store i8 1, i8* %3, align 1
  br label %229

157:                                              ; preds = %53
  %158 = load i8, i8* @forceOverwrite, align 1
  %159 = icmp ne i8 %158, 0
  br i1 %159, label %160, label %192

160:                                              ; preds = %157
  %161 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  call void @rewind(%struct._IO_FILE* %161)
  br label %162

162:                                              ; preds = %160, %190
  %163 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %164 = call zeroext i8 @myfeof(%struct._IO_FILE* %163)
  %165 = icmp ne i8 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %162
  br label %191

167:                                              ; preds = %162
  %168 = getelementptr inbounds [5000 x i8], [5000 x i8]* %13, i64 0, i64 0
  %169 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %170 = call i64 @fread(i8* %168, i64 1, i64 5000, %struct._IO_FILE* %169)
  %171 = trunc i64 %170 to i32
  store i32 %171, i32* %10, align 4
  %172 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %173 = call i32 @ferror(%struct._IO_FILE* %172) #9
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %167
  br label %198

176:                                              ; preds = %167
  %177 = load i32, i32* %10, align 4
  %178 = icmp sgt i32 %177, 0
  br i1 %178, label %179, label %185

179:                                              ; preds = %176
  %180 = getelementptr inbounds [5000 x i8], [5000 x i8]* %13, i64 0, i64 0
  %181 = load i32, i32* %10, align 4
  %182 = sext i32 %181 to i64
  %183 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %184 = call i64 @fwrite(i8* %180, i64 1, i64 %182, %struct._IO_FILE* %183)
  br label %185

185:                                              ; preds = %179, %176
  %186 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %187 = call i32 @ferror(%struct._IO_FILE* %186) #9
  %188 = icmp ne i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %185
  br label %198

190:                                              ; preds = %185
  br label %162

191:                                              ; preds = %166
  br label %117

192:                                              ; preds = %157
  br label %193

193:                                              ; preds = %192, %78, %40
  %194 = load i8*, i8** %6, align 8
  call void @BZ2_bzReadClose(i32* %8, i8* %194)
  %195 = load i32, i32* %7, align 4
  switch i32 %195, label %228 [
    i32 -9, label %196
    i32 -6, label %197
    i32 -4, label %199
    i32 -3, label %200
    i32 -7, label %201
    i32 -5, label %202
  ]

196:                                              ; preds = %193
  call void @configError() #12
  unreachable

197:                                              ; preds = %193
  br label %198

198:                                              ; preds = %197, %189, %175, %148, %138, %132, %127, %121, %73, %25, %20
  call void @ioError() #12
  unreachable

199:                                              ; preds = %193
  call void @crcError() #12
  unreachable

200:                                              ; preds = %193
  call void @outOfMemory() #12
  unreachable

201:                                              ; preds = %193
  call void @compressedStreamEOF() #12
  unreachable

202:                                              ; preds = %193
  %203 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %204 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %205 = icmp ne %struct._IO_FILE* %203, %204
  br i1 %205, label %206, label %209

206:                                              ; preds = %202
  %207 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8
  %208 = call i32 @fclose(%struct._IO_FILE* %207)
  br label %209

209:                                              ; preds = %206, %202
  %210 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %211 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %212 = icmp ne %struct._IO_FILE* %210, %211
  br i1 %212, label %213, label %216

213:                                              ; preds = %209
  %214 = load %struct._IO_FILE*, %struct._IO_FILE** %5, align 8
  %215 = call i32 @fclose(%struct._IO_FILE* %214)
  br label %216

216:                                              ; preds = %213, %209
  %217 = load i32, i32* %11, align 4
  %218 = icmp eq i32 %217, 1
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  store i8 0, i8* %3, align 1
  br label %229

220:                                              ; preds = %216
  %221 = load i8, i8* @noisy, align 1
  %222 = icmp ne i8 %221, 0
  br i1 %222, label %223, label %227

223:                                              ; preds = %220
  %224 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %225 = load i8*, i8** @progName, align 8
  %226 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %224, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.131, i64 0, i64 0), i8* %225, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %227

227:                                              ; preds = %223, %220
  store i8 1, i8* %3, align 1
  br label %229

228:                                              ; preds = %193
  call void @panic(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.132, i64 0, i64 0)) #12
  unreachable

229:                                              ; preds = %227, %219, %156
  %230 = load i8, i8* %3, align 1
  ret i8 %230
}

declare dso_local void @rewind(%struct._IO_FILE*) #1

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @crcError() #7 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = load i8*, i8** @progName, align 8
  %3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.133, i64 0, i64 0), i8* %2)
  call void @showFileNames()
  call void @cadvise()
  call void @cleanUpAndFail(i32 2) #12
  unreachable
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @compressedStreamEOF() #7 {
  %1 = load i8, i8* @noisy, align 1
  %2 = icmp ne i8 %1, 0
  br i1 %2, label %3, label %8

3:                                                ; preds = %0
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %5 = load i8*, i8** @progName, align 8
  %6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.134, i64 0, i64 0), i8* %5)
  %7 = load i8*, i8** @progName, align 8
  call void @perror(i8* %7)
  call void @showFileNames()
  call void @cadvise()
  br label %8

8:                                                ; preds = %3, %0
  call void @cleanUpAndFail(i32 2) #12
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i8 @testStream(%struct._IO_FILE* %0) #0 {
  %2 = alloca i8, align 1
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [5000 x i8], align 16
  %12 = alloca [5000 x i8], align 16
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8
  store i8* null, i8** %4, align 8
  store i32 0, i32* %13, align 4
  store i32 0, i32* %9, align 4
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %16 = call i32 @ferror(%struct._IO_FILE* %15) #9
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %1
  br label %119

19:                                               ; preds = %1
  br label %20

20:                                               ; preds = %19, %88
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %22 = load i32, i32* @verbosity, align 4
  %23 = load i8, i8* @smallMode, align 1
  %24 = zext i8 %23 to i32
  %25 = getelementptr inbounds [5000 x i8], [5000 x i8]* %12, i64 0, i64 0
  %26 = load i32, i32* %13, align 4
  %27 = call i8* @BZ2_bzReadOpen(i32* %5, %struct._IO_FILE* %21, i32 %22, i32 %24, i8* %25, i32 %26)
  store i8* %27, i8** %4, align 8
  %28 = load i8*, i8** %4, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %20
  %31 = load i32, i32* %5, align 4
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30, %20
  br label %107

34:                                               ; preds = %30
  %35 = load i32, i32* %9, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %9, align 4
  br label %37

37:                                               ; preds = %47, %34
  %38 = load i32, i32* %5, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %48

40:                                               ; preds = %37
  %41 = load i8*, i8** %4, align 8
  %42 = getelementptr inbounds [5000 x i8], [5000 x i8]* %11, i64 0, i64 0
  %43 = call i32 @BZ2_bzRead(i32* %5, i8* %41, i8* %42, i32 5000)
  store i32 %43, i32* %8, align 4
  %44 = load i32, i32* %5, align 4
  %45 = icmp eq i32 %44, -5
  br i1 %45, label %46, label %47

46:                                               ; preds = %40
  br label %107

47:                                               ; preds = %40
  br label %37

48:                                               ; preds = %37
  %49 = load i32, i32* %5, align 4
  %50 = icmp ne i32 %49, 4
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  br label %107

52:                                               ; preds = %48
  %53 = load i8*, i8** %4, align 8
  call void @BZ2_bzReadGetUnused(i32* %5, i8* %53, i8** %14, i32* %13)
  %54 = load i32, i32* %5, align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %52
  call void @panic(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.139, i64 0, i64 0)) #12
  unreachable

57:                                               ; preds = %52
  store i32 0, i32* %10, align 4
  br label %58

58:                                               ; preds = %71, %57
  %59 = load i32, i32* %10, align 4
  %60 = load i32, i32* %13, align 4
  %61 = icmp slt i32 %59, %60
  br i1 %61, label %62, label %74

62:                                               ; preds = %58
  %63 = load i8*, i8** %14, align 8
  %64 = load i32, i32* %10, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %63, i64 %65
  %67 = load i8, i8* %66, align 1
  %68 = load i32, i32* %10, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [5000 x i8], [5000 x i8]* %12, i64 0, i64 %69
  store i8 %67, i8* %70, align 1
  br label %71

71:                                               ; preds = %62
  %72 = load i32, i32* %10, align 4
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %10, align 4
  br label %58

74:                                               ; preds = %58
  %75 = load i8*, i8** %4, align 8
  call void @BZ2_bzReadClose(i32* %5, i8* %75)
  %76 = load i32, i32* %5, align 4
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %74
  call void @panic(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.139, i64 0, i64 0)) #12
  unreachable

79:                                               ; preds = %74
  %80 = load i32, i32* %13, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %88

82:                                               ; preds = %79
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %84 = call zeroext i8 @myfeof(%struct._IO_FILE* %83)
  %85 = zext i8 %84 to i32
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %82
  br label %89

88:                                               ; preds = %82, %79
  br label %20

89:                                               ; preds = %87
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %91 = call i32 @ferror(%struct._IO_FILE* %90) #9
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %89
  br label %119

94:                                               ; preds = %89
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %96 = call i32 @fclose(%struct._IO_FILE* %95)
  store i32 %96, i32* %7, align 4
  %97 = load i32, i32* %7, align 4
  %98 = icmp eq i32 %97, -1
  br i1 %98, label %99, label %100

99:                                               ; preds = %94
  br label %119

100:                                              ; preds = %94
  %101 = load i32, i32* @verbosity, align 4
  %102 = icmp sge i32 %101, 2
  br i1 %102, label %103, label %106

103:                                              ; preds = %100
  %104 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %105 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %104, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.130, i64 0, i64 0))
  br label %106

106:                                              ; preds = %103, %100
  store i8 1, i8* %2, align 1
  br label %148

107:                                              ; preds = %51, %46, %33
  %108 = load i8*, i8** %4, align 8
  call void @BZ2_bzReadClose(i32* %6, i8* %108)
  %109 = load i32, i32* @verbosity, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %115

111:                                              ; preds = %107
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %113 = load i8*, i8** @progName, align 8
  %114 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %112, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.140, i64 0, i64 0), i8* %113, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0))
  br label %115

115:                                              ; preds = %111, %107
  %116 = load i32, i32* %5, align 4
  switch i32 %116, label %147 [
    i32 -9, label %117
    i32 -6, label %118
    i32 -4, label %120
    i32 -3, label %123
    i32 -7, label %124
    i32 -5, label %127
  ]

117:                                              ; preds = %115
  call void @configError() #12
  unreachable

118:                                              ; preds = %115
  br label %119

119:                                              ; preds = %118, %99, %93, %18
  call void @ioError() #12
  unreachable

120:                                              ; preds = %115
  %121 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %122 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %121, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.141, i64 0, i64 0))
  store i8 0, i8* %2, align 1
  br label %148

123:                                              ; preds = %115
  call void @outOfMemory() #12
  unreachable

124:                                              ; preds = %115
  %125 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %126 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %125, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.142, i64 0, i64 0))
  store i8 0, i8* %2, align 1
  br label %148

127:                                              ; preds = %115
  %128 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %129 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %130 = icmp ne %struct._IO_FILE* %128, %129
  br i1 %130, label %131, label %134

131:                                              ; preds = %127
  %132 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8
  %133 = call i32 @fclose(%struct._IO_FILE* %132)
  br label %134

134:                                              ; preds = %131, %127
  %135 = load i32, i32* %9, align 4
  %136 = icmp eq i32 %135, 1
  br i1 %136, label %137, label %140

137:                                              ; preds = %134
  %138 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %139 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %138, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.143, i64 0, i64 0))
  store i8 0, i8* %2, align 1
  br label %148

140:                                              ; preds = %134
  %141 = load i8, i8* @noisy, align 1
  %142 = icmp ne i8 %141, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %140
  %144 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %145 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %144, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.144, i64 0, i64 0))
  br label %146

146:                                              ; preds = %143, %140
  store i8 1, i8* %2, align 1
  br label %148

147:                                              ; preds = %115
  call void @panic(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.145, i64 0, i64 0)) #12
  unreachable

148:                                              ; preds = %146, %137, %124, %120, %106
  %149 = load i8, i8* %2, align 1
  ret i8 %149
}

;attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
;attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
;attributes #2 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
;attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
;attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
;attributes #5 = { argmemonly nounwind willreturn }
;attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
;attributes #7 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
;attributes #8 = { noreturn nounwind }
;attributes #9 = { nounwind }
;attributes #10 = { nounwind readnone }
;attributes #11 = { nounwind readonly }
;attributes #12 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
