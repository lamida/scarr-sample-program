digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x5578ccee7300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{entry:\l  %x.i = alloca i32, align 4\l  %retval = alloca i32, align 4\l  %a = alloca i32, align 4\l  %b = alloca i32, align 4\l  %z = alloca i32, align 4\l  %s = alloca i32, align 4\l  %t = alloca i64, align 8\l  %r = alloca i32, align 4\l  store i32 0, i32* %retval, align 4\l  store i32 1, i32* %a, align 4\l  store i32 2, i32* %b, align 4\l  %0 = load i32, i32* %a, align 4\l  %cmp = icmp eq i32 %0, 1\l  br i1 %cmp, label %if.then, label %if.else3\l|{<s0>T|<s1>F}}"];
	Node0x5578ccee7300:s0 -> Node0x5578ccee7b70;
	Node0x5578ccee7300:s1 -> Node0x5578ccee7be0;
	Node0x5578ccee7b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{if.then:                                          \l  %1 = bitcast i32* %x.i to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1)\l  store i32 10, i32* %x.i, align 4\l  %2 = load i32, i32* %x.i, align 4\l  %cmp.i = icmp eq i32 %2, 10\l  br i1 %cmp.i, label %if.then.i, label %if.else.i\l|{<s0>T|<s1>F}}"];
	Node0x5578ccee7b70:s0 -> Node0x5578ccee6b50;
	Node0x5578ccee7b70:s1 -> Node0x5578ccee68d0;
	Node0x5578ccee6b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{if.then.i:                                        \l  %call.i = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8],\l... [30 x i8]* @.str, i64 0, i64 0))\l  br label %b1.exit\l}"];
	Node0x5578ccee6b50 -> Node0x5578ccf28270;
	Node0x5578ccee68d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{if.else.i:                                        \l  %call1.i = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x\l... i8], [31 x i8]* @.str.1, i64 0, i64 0))\l  br label %b1.exit\l}"];
	Node0x5578ccee68d0 -> Node0x5578ccf28270;
	Node0x5578ccf28270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{b1.exit:                                          \l  %3 = bitcast i32* %x.i to i8*\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3)\l  %4 = load i32, i32* %b, align 4\l  %cmp1 = icmp eq i32 %4, 1\l  br i1 %cmp1, label %if.then2, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x5578ccf28270:s0 -> Node0x5578ccee7f00;
	Node0x5578ccf28270:s1 -> Node0x5578ccee8120;
	Node0x5578ccee7f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{if.then2:                                         \l  %call.i1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x\l... i8], [13 x i8]* @.str.3, i64 0, i64 0))\l  br label %if.end\l}"];
	Node0x5578ccee7f00 -> Node0x5578ccee8310;
	Node0x5578ccee8120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{if.else:                                          \l  %call.i2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x\l... i8], [13 x i8]* @.str.5, i64 0, i64 0))\l  %call.i.i = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x\l... i8], [13 x i8]* @.str.4, i64 0, i64 0))\l  br label %if.end\l}"];
	Node0x5578ccee8120 -> Node0x5578ccee8310;
	Node0x5578ccee8310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{if.end:                                           \l  br label %if.end4\l}"];
	Node0x5578ccee8310 -> Node0x5578ccee8530;
	Node0x5578ccee7be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{if.else3:                                         \l  %call.i3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x\l... i8], [14 x i8]* @.str.2, i64 0, i64 0))\l  br label %if.end4\l}"];
	Node0x5578ccee7be0 -> Node0x5578ccee8530;
	Node0x5578ccee8530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{if.end4:                                          \l  store i32 10, i32* %z, align 4\l  br label %while.cond\l}"];
	Node0x5578ccee8530 -> Node0x5578ccee87e0;
	Node0x5578ccee87e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.cond:                                       \l  %5 = load i32, i32* %z, align 4\l  %cmp5 = icmp sgt i32 %5, 0\l  br i1 %cmp5, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x5578ccee87e0:s0 -> Node0x5578ccee8a00;
	Node0x5578ccee87e0:s1 -> Node0x5578ccee8a80;
	Node0x5578ccee8a00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.body:                                       \l  %call.i4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x\l... i8], [13 x i8]* @.str.6, i64 0, i64 0))\l  %6 = load i32, i32* %z, align 4\l  %dec = add nsw i32 %6, -1\l  store i32 %dec, i32* %z, align 4\l  br label %while.cond\l}"];
	Node0x5578ccee8a00 -> Node0x5578ccee87e0;
	Node0x5578ccee8a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{while.end:                                        \l  store i32 4, i32* %s, align 4\l  %7 = load i32, i32* %s, align 4\l  switch i32 %7, label %sw.default [\l    i32 1, label %sw.bb\l    i32 2, label %sw.bb6\l    i32 3, label %sw.bb7\l    i32 4, label %sw.bb8\l  ]\l|{<s0>def|<s1>1|<s2>2|<s3>3|<s4>4}}"];
	Node0x5578ccee8a80:s0 -> Node0x5578ccee9050;
	Node0x5578ccee8a80:s1 -> Node0x5578ccee90a0;
	Node0x5578ccee8a80:s2 -> Node0x5578ccee9110;
	Node0x5578ccee8a80:s3 -> Node0x5578ccee91b0;
	Node0x5578ccee8a80:s4 -> Node0x5578ccee95a0;
	Node0x5578ccee90a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{sw.bb:                                            \l  %call.i5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x\l... i8], [14 x i8]* @.str.7, i64 0, i64 0))\l  br label %sw.epilog\l}"];
	Node0x5578ccee90a0 -> Node0x5578ccee98e0;
	Node0x5578ccee9110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{sw.bb6:                                           \l  %call.i6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x\l... i8], [14 x i8]* @.str.8, i64 0, i64 0))\l  br label %sw.epilog\l}"];
	Node0x5578ccee9110 -> Node0x5578ccee98e0;
	Node0x5578ccee91b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{sw.bb7:                                           \l  %call.i7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x\l... i8], [14 x i8]* @.str.9, i64 0, i64 0))\l  br label %sw.epilog\l}"];
	Node0x5578ccee91b0 -> Node0x5578ccee98e0;
	Node0x5578ccee95a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{sw.bb8:                                           \l  %call.i8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x\l... i8], [14 x i8]* @.str.10, i64 0, i64 0))\l  br label %sw.epilog\l}"];
	Node0x5578ccee95a0 -> Node0x5578ccee98e0;
	Node0x5578ccee9050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{sw.default:                                       \l  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8],\l... [13 x i8]* @.str.11, i64 0, i64 0))\l  br label %sw.epilog\l}"];
	Node0x5578ccee9050 -> Node0x5578ccee98e0;
	Node0x5578ccee98e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{sw.epilog:                                        \l  %call9 = call i64 @time(i64* %t)\l  %conv = trunc i64 %call9 to i32\l  call void @srand(i32 %conv)\l  %call10 = call i32 @rand()\l  %rem = srem i32 %call10, 4\l  %add = add nsw i32 1, %rem\l  store i32 %add, i32* %r, align 4\l  %8 = load i32, i32* %r, align 4\l  switch i32 %8, label %sw.default15 [\l    i32 1, label %sw.bb11\l    i32 2, label %sw.bb12\l    i32 3, label %sw.bb13\l    i32 4, label %sw.bb14\l  ]\l|{<s0>def|<s1>1|<s2>2|<s3>3|<s4>4}}"];
	Node0x5578ccee98e0:s0 -> Node0x5578cceeaba0;
	Node0x5578ccee98e0:s1 -> Node0x5578cceeac20;
	Node0x5578ccee98e0:s2 -> Node0x5578cceeac90;
	Node0x5578ccee98e0:s3 -> Node0x5578cceead60;
	Node0x5578ccee98e0:s4 -> Node0x5578cceeae30;
	Node0x5578cceeac20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{sw.bb11:                                          \l  %call.i9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x\l... i8], [14 x i8]* @.str.7, i64 0, i64 0))\l  br label %sw.epilog17\l}"];
	Node0x5578cceeac20 -> Node0x5578cceeb170;
	Node0x5578cceeac90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{sw.bb12:                                          \l  %call.i10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x\l... i8], [14 x i8]* @.str.8, i64 0, i64 0))\l  br label %sw.epilog17\l}"];
	Node0x5578cceeac90 -> Node0x5578cceeb170;
	Node0x5578cceead60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{sw.bb13:                                          \l  %call.i11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x\l... i8], [14 x i8]* @.str.9, i64 0, i64 0))\l  br label %sw.epilog17\l}"];
	Node0x5578cceead60 -> Node0x5578cceeb170;
	Node0x5578cceeae30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{sw.bb14:                                          \l  %call.i12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x\l... i8], [14 x i8]* @.str.10, i64 0, i64 0))\l  br label %sw.epilog17\l}"];
	Node0x5578cceeae30 -> Node0x5578cceeb170;
	Node0x5578cceeaba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{sw.default15:                                     \l  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8],\l... [13 x i8]* @.str.11, i64 0, i64 0))\l  br label %sw.epilog17\l}"];
	Node0x5578cceeaba0 -> Node0x5578cceeb170;
	Node0x5578cceeb170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{sw.epilog17:                                      \l  %9 = load i32, i32* %retval, align 4\l  ret i32 %9\l}"];
}
