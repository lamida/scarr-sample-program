digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x5645e0df7a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{entry:\l  %retval = alloca i32, align 4\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %k = alloca i32, align 4\l  store i32 0, i32* %retval, align 4\l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x5645e0df7a70 -> Node0x5645e0df84b0;
	Node0x5645e0df84b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond:                                         \l  %0 = load i32, i32* %i, align 4\l  %cmp = icmp slt i32 %0, 10\l  br i1 %cmp, label %for.body, label %for.end12\l|{<s0>T|<s1>F}}"];
	Node0x5645e0df84b0:s0 -> Node0x5645e0df8680;
	Node0x5645e0df84b0:s1 -> Node0x5645e0df8700;
	Node0x5645e0df8680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.body:                                         \l  store i32 0, i32* %j, align 4\l  br label %for.cond1\l}"];
	Node0x5645e0df8680 -> Node0x5645e0df8890;
	Node0x5645e0df8890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{for.cond1:                                        \l  %1 = load i32, i32* %j, align 4\l  %cmp2 = icmp slt i32 %1, 5\l  br i1 %cmp2, label %for.body3, label %for.end9\l|{<s0>T|<s1>F}}"];
	Node0x5645e0df8890:s0 -> Node0x5645e0df8a40;
	Node0x5645e0df8890:s1 -> Node0x5645e0df8ac0;
	Node0x5645e0df8a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.body3:                                        \l  store i32 0, i32* %k, align 4\l  br label %for.cond4\l}"];
	Node0x5645e0df8a40 -> Node0x5645e0df8df0;
	Node0x5645e0df8df0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.cond4:                                        \l  %2 = load i32, i32* %k, align 4\l  %cmp5 = icmp slt i32 %2, 100\l  br i1 %cmp5, label %for.body6, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5645e0df8df0:s0 -> Node0x5645e0df9040;
	Node0x5645e0df8df0:s1 -> Node0x5645e0df90c0;
	Node0x5645e0df9040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body6:                                        \l  %3 = load i32, i32* %i, align 4\l  %4 = load i32, i32* %j, align 4\l  %5 = load i32, i32* %k, align 4\l  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8],\l... [29 x i8]* @.str, i64 0, i64 0), i32 %3, i32 %4, i32 %5)\l  br label %for.inc\l}"];
	Node0x5645e0df9040 -> Node0x5645e0df98d0;
	Node0x5645e0df98d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc:                                          \l  %6 = load i32, i32* %k, align 4\l  %inc = add nsw i32 %6, 1\l  store i32 %inc, i32* %k, align 4\l  br label %for.cond4\l}"];
	Node0x5645e0df98d0 -> Node0x5645e0df8df0;
	Node0x5645e0df90c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.end:                                          \l  br label %for.inc7\l}"];
	Node0x5645e0df90c0 -> Node0x5645e0df9c30;
	Node0x5645e0df9c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{for.inc7:                                         \l  %7 = load i32, i32* %j, align 4\l  %inc8 = add nsw i32 %7, 1\l  store i32 %inc8, i32* %j, align 4\l  br label %for.cond1\l}"];
	Node0x5645e0df9c30 -> Node0x5645e0df8890;
	Node0x5645e0df8ac0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.end9:                                         \l  br label %for.inc10\l}"];
	Node0x5645e0df8ac0 -> Node0x5645e0df9f40;
	Node0x5645e0df9f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.inc10:                                        \l  %8 = load i32, i32* %i, align 4\l  %inc11 = add nsw i32 %8, 1\l  store i32 %inc11, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x5645e0df9f40 -> Node0x5645e0df84b0;
	Node0x5645e0df8700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{for.end12:                                        \l  %9 = load i32, i32* %retval, align 4\l  ret i32 %9\l}"];
}
