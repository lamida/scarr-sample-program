digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x55ce6735ec10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%0 ThreadStart:\l  %1 = alloca i32, align 4\l  %2 = alloca i32, align 4\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i64, align 8\l  %7 = alloca i32, align 4\l  store i32 0, i32* %1, align 4\l  store i32 1, i32* %2, align 4\l  store i32 2, i32* %3, align 4\l  %8 = load i32, i32* %2, align 4\l  %9 = icmp eq i32 %8, 1\l  br i1 %9, label %10, label %16\l|{<s0>T|<s1>F}}"];
	Node0x55ce6735ec10:s0 -> Node0x55ce6735ee70;
	Node0x55ce6735ec10:s1 -> Node0x55ce6735f380;
	Node0x55ce6735ee70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%10:\l10:                                               \l  call void @b1()\l  %11 = load i32, i32* %3, align 4\l  %12 = icmp eq i32 %11, 1\l  br i1 %12, label %13, label %14\l|{<s0>T|<s1>F}}"];
	Node0x55ce6735ee70:s0 -> Node0x55ce6735f650;
	Node0x55ce6735ee70:s1 -> Node0x55ce6735f6a0;
	Node0x55ce6735f650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%13:\l13:                                               \l  call void @c()\l  br label %15\l}"];
	Node0x55ce6735f650 -> Node0x55ce6735f8b0;
	Node0x55ce6735f6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%14:\l14:                                               \l  call void @d()\l  br label %15\l}"];
	Node0x55ce6735f6a0 -> Node0x55ce6735f8b0;
	Node0x55ce6735f8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%15:\l15:                                               \l  br label %17\l}"];
	Node0x55ce6735f8b0 -> Node0x55ce6735fab0;
	Node0x55ce6735f380 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%16:\l16:                                               \l  call void @b2()\l  br label %17\l}"];
	Node0x55ce6735f380 -> Node0x55ce6735fab0;
	Node0x55ce6735fab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%17:\l17:                                               \l  store i32 10, i32* %4, align 4\l  br label %18\l}"];
	Node0x55ce6735fab0 -> Node0x55ce6735fcb0;
	Node0x55ce6735fcb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%18 Virtual:\l18:                                               \l  %19 = load i32, i32* %4, align 4\l  %20 = icmp sgt i32 %19, 0\l  br i1 %20, label %21, label %24\l|{<s0>T|<s1>F}}"];
	Node0x55ce6735fcb0:s0 -> Node0x55ce6735fe70;
	Node0x55ce6735fcb0:s1 -> Node0x55ce6735fec0;
	Node0x55ce6735fe70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%21:\l21:                                               \l  call void @f()\l  %22 = load i32, i32* %4, align 4\l  %23 = add nsw i32 %22, -1\l  store i32 %23, i32* %4, align 4\l  br label %18\l}"];
	Node0x55ce6735fe70 -> Node0x55ce6735fcb0;
	Node0x55ce6735fec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%24:\l24:                                               \l  store i32 4, i32* %5, align 4\l  %25 = load i32, i32* %5, align 4\l  switch i32 %25, label %30 [\l    i32 1, label %26\l    i32 2, label %27\l    i32 3, label %28\l    i32 4, label %29\l  ]\l|{<s0>def|<s1>1|<s2>2|<s3>3|<s4>4}}"];
	Node0x55ce6735fec0:s0 -> Node0x55ce673603f0;
	Node0x55ce6735fec0:s1 -> Node0x55ce67360440;
	Node0x55ce6735fec0:s2 -> Node0x55ce67360490;
	Node0x55ce6735fec0:s3 -> Node0x55ce67360510;
	Node0x55ce6735fec0:s4 -> Node0x55ce673605a0;
	Node0x55ce67360440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%26:\l26:                                               \l  call void @g1()\l  br label %32\l}"];
	Node0x55ce67360440 -> Node0x55ce673608a0;
	Node0x55ce67360490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%27:\l27:                                               \l  call void @g2()\l  br label %32\l}"];
	Node0x55ce67360490 -> Node0x55ce673608a0;
	Node0x55ce67360510 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%28:\l28:                                               \l  call void @g3()\l  br label %32\l}"];
	Node0x55ce67360510 -> Node0x55ce673608a0;
	Node0x55ce673605a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%29:\l29:                                               \l  call void @g4()\l  br label %32\l}"];
	Node0x55ce673605a0 -> Node0x55ce673608a0;
	Node0x55ce673603f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%30 ExitPoint:\l30:                                               \l  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13\l... x i8]* @.str.11, i64 0, i64 0))\l  br label %32\l}"];
	Node0x55ce673603f0 -> Node0x55ce673608a0;
	Node0x55ce673608a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%32 ExitPoint:\l32:                                               \l  %33 = call i64 @time(i64* %6)\l  %34 = trunc i64 %33 to i32\l  call void @srand(i32 %34)\l  %35 = call i32 @rand()\l  %36 = srem i32 %35, 4\l  %37 = add nsw i32 1, %36\l  store i32 %37, i32* %7, align 4\l  %38 = load i32, i32* %7, align 4\l  switch i32 %38, label %43 [\l    i32 1, label %39\l    i32 2, label %40\l    i32 3, label %41\l    i32 4, label %42\l  ]\l|{<s0>def|<s1>1|<s2>2|<s3>3|<s4>4}}"];
	Node0x55ce673608a0:s0 -> Node0x55ce67361d20;
	Node0x55ce673608a0:s1 -> Node0x55ce67361d70;
	Node0x55ce673608a0:s2 -> Node0x55ce67361dc0;
	Node0x55ce673608a0:s3 -> Node0x55ce67361e10;
	Node0x55ce673608a0:s4 -> Node0x55ce67361e60;
	Node0x55ce67361d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%39:\l39:                                               \l  call void @g1()\l  br label %45\l}"];
	Node0x55ce67361d70 -> Node0x55ce67362120;
	Node0x55ce67361dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%40:\l40:                                               \l  call void @g2()\l  br label %45\l}"];
	Node0x55ce67361dc0 -> Node0x55ce67362120;
	Node0x55ce67361e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%41:\l41:                                               \l  call void @g3()\l  br label %45\l}"];
	Node0x55ce67361e10 -> Node0x55ce67362120;
	Node0x55ce67361e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%42:\l42:                                               \l  call void @g4()\l  br label %45\l}"];
	Node0x55ce67361e60 -> Node0x55ce67362120;
	Node0x55ce67361d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%43 ExitPoint:\l43:                                               \l  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13\l... x i8]* @.str.11, i64 0, i64 0))\l  br label %45\l}"];
	Node0x55ce67361d20 -> Node0x55ce67362120;
	Node0x55ce67362120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%45 ThreadEnd:\l45:                                               \l  %46 = load i32, i32* %1, align 4\l  ret i32 %46\l}"];
}
